{
  "name": "@project/shared",
  "version": "0.0.1",
  "private": true,
  "main": "lib/src/index.js",
  "typings": "lib/src/index.d.ts",
  "directories": {
    "lib": "lib"
  },
  "files": [
    "lib"
  ],
  "dependencies": {
    "csv-parse": {
      "_args": [
        [
          "csv-parse@4.8.5",
          "/path/to/project/packages/shared"
        ],
        [
          "csv-parse@4.8.5",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "csv-parse@4.8.5",
      "_id": "csv-parse@4.8.5",
      "_integrity": "sha512-rpsLmlLWJZifmLzZEVGbZ9phWnJyi+cCbCGYr4vX2NaHFtgbmQPFk+WmMkmMkQXgsIUn6CgnK9cTuUAfFjoXbA==",
      "_location": "/csv-parse",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "csv-parse@4.8.5",
        "name": "csv-parse",
        "escapedName": "csv-parse",
        "rawSpec": "4.8.5",
        "saveSpec": null,
        "fetchSpec": "4.8.5"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/csv-parse/-/csv-parse-4.8.5.tgz",
      "_spec": "4.8.5",
      "_where": "/path/to/project/packages/shared",
      "author": {
        "name": "David Worms",
        "email": "david@adaltas.com",
        "url": "https://www.adaltas.com"
      },
      "bugs": {
        "url": "https://github.com/wdavidw/node-csv-parse/issues"
      },
      "coffeelintConfig": {
        "indentation": {
          "level": "error",
          "value": 2
        },
        "line_endings": {
          "level": "error",
          "value": "unix"
        },
        "max_line_length": {
          "level": "ignore"
        }
      },
      "contributors": [
        {
          "name": "David Worms",
          "email": "david@adaltas.com",
          "url": "https://www.adaltas.com"
        },
        {
          "name": "Will White",
          "url": "https://github.com/willwhite"
        },
        {
          "name": "Justin Latimer",
          "url": "https://github.com/justinlatimer"
        },
        {
          "name": "jonseymour",
          "url": "https://github.com/jonseymour"
        },
        {
          "name": "pascalopitz",
          "url": "https://github.com/pascalopitz"
        },
        {
          "name": "Josh Pschorr",
          "url": "https://github.com/jpschorr"
        },
        {
          "name": "Elad Ben-Israel",
          "url": "https://github.com/eladb"
        },
        {
          "name": "Philippe Plantier",
          "url": "https://github.com/phipla"
        },
        {
          "name": "Tim Oxley",
          "url": "https://github.com/timoxley"
        },
        {
          "name": "Damon Oehlman",
          "url": "https://github.com/DamonOehlman"
        },
        {
          "name": "Alexandru Topliceanu",
          "url": "https://github.com/topliceanu"
        },
        {
          "name": "Visup",
          "url": "https://github.com/visup"
        },
        {
          "name": "Edmund von der Burg",
          "url": "https://github.com/evdb"
        },
        {
          "name": "Douglas Christopher Wilson",
          "url": "https://github.com/dougwilson"
        },
        {
          "name": "Joe Eaves",
          "url": "https://github.com/Joeasaurus"
        },
        {
          "name": "Mark Stosberg",
          "url": "https://github.com/markstos"
        }
      ],
      "dependencies": {},
      "description": "CSV parsing implementing the Node.js `stream.Transform` API",
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/preset-env": "^7.5.5",
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.6.9",
        "coffeescript": "^2.4.1",
        "csv-generate": "^3.2.3",
        "csv-spectrum": "^1.0.0",
        "each": "^1.2.1",
        "eslint": "^6.5.1",
        "mocha": "^6.2.0",
        "pad": "^3.2.0",
        "should": "^13.2.3",
        "stream-transform": "^2.0.1",
        "ts-node": "^8.3.0",
        "typescript": "^3.5.3"
      },
      "files": [
        "/lib"
      ],
      "homepage": "https://csv.js.org/parse/",
      "keywords": [
        "csv",
        "parse",
        "parser",
        "convert",
        "tsv",
        "stream"
      ],
      "license": "MIT",
      "main": "./lib",
      "name": "csv-parse",
      "optionalDependencies": {},
      "repository": {
        "type": "git",
        "url": "git+https://github.com/wdavidw/node-csv-parse.git"
      },
      "scripts": {
        "lint": "eslint lib/*.js",
        "major": "npm version major -m 'Bump to version %s'",
        "minor": "npm version minor -m 'Bump to version %s'",
        "patch": "npm version patch -m 'Bump to version %s'",
        "postversion": "git push && git push --tags && npm publish",
        "pretest": "cd lib && babel *.js  -d es5 && cd ..",
        "preversion": "grep '## Trunk' CHANGELOG.md && npm test && cp lib/*.ts lib/es5 && git add lib/es5/*.ts",
        "test": "npm run lint && TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\":true}' mocha test/**/*.{coffee,ts}",
        "version": "version=`grep '^  \"version\": ' package.json | sed 's/.*\"\\([0-9\\.]*\\)\".*/\\1/'` && sed -i \"s/## Trunk/## Version $version/\" CHANGELOG.md && git add CHANGELOG.md"
      },
      "types": "./lib/index.d.ts",
      "version": "4.8.5",
      "readme": "[![Build Status](https://api.travis-ci.org/adaltas/node-csv-parse.svg)](https://travis-ci.org/#!/adaltas/node-csv-parse)\n\nPart of the [CSV module](https://csv.js.org/), this project is a parser converting CSV text input into arrays or objects. It implements the Node.js [`stream.Transform` API](http://nodejs.org/api/stream.html#stream_class_stream_transform). It also provides a simple callback-based API for convenience. It is both extremely easy to use and powerful. It was first released in 2010 and is used against big data sets by a large community.\n\n## Documentation\n\n* [Project homepage](http://csv.js.org/parse/)\n* [API](http://csv.js.org/parse/api/)\n* [Options](http://csv.js.org/parse/options/)\n* [Info properties](http://csv.js.org/parse/info/)\n* [Common errors](http://csv.js.org/parse/errors/)\n* [Examples](http://csv.js.org/parse/examples/)\n\n## Features\n\n*   Follow the Node.js streaming API\n*   Simplicity with the optional callback API\n*   Support delimiters, quotes, escape characters and comments\n*   Line breaks discovery\n*   Support big datasets\n*   Complete test coverage and samples for inspiration\n*   No external dependencies\n*   Work nicely with the [csv-generate](https://csv.js.org/generate/), [stream-transform](https://csv.js.org/transform/) and [csv-stringify](https://csv.js.org/stringify/) packages\n*   MIT License\n",
      "readmeFilename": "README.md",
      "_dependencies": {},
      "path": "/path/to/project/packages/shared/node_modules/csv-parse",
      "error": "[Circular]",
      "extraneous": false
    },
    "got": {
      "_args": [
        [
          "got@10.6.0",
          "/path/to/project/packages/shared"
        ],
        [
          "got@10.6.0",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "got@10.6.0",
      "_id": "got@10.6.0",
      "_integrity": "sha512-3LIdJNTdCFbbJc+h/EH0V5lpNpbJ6Bfwykk21lcQvQsEcrzdi/ltCyQehFHLzJ/ka0UMH4Slg0hkYvAZN9qUDg==",
      "_location": "/got",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "got@10.6.0",
        "name": "got",
        "escapedName": "got",
        "rawSpec": "10.6.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "10.6.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/got/-/got-10.6.0.tgz",
      "_spec": "10.6.0",
      "_where": "/path/to/project/packages/shared",
      "ava": {
        "files": [
          "test/*"
        ],
        "timeout": "1m",
        "typescript": {
          "rewritePaths": {
            "test/": "dist/test/"
          }
        }
      },
      "browser": {
        "decompress-response": false,
        "electron": false
      },
      "bugs": {
        "url": "https://github.com/sindresorhus/got/issues"
      },
      "dependencies": {
        "@sindresorhus/is": {
          "_args": [
            [
              "@sindresorhus/is@2.1.0",
              "/path/to/project/packages/shared"
            ],
            [
              "@sindresorhus/is@2.1.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "@sindresorhus/is@2.1.0",
          "_id": "@sindresorhus/is@2.1.0",
          "_integrity": "sha512-lXKXfypKo644k4Da4yXkPCrwcvn6SlUW2X2zFbuflKHNjf0w9htru01bo26uMhleMXsDmnZ12eJLdrAZa9MANg==",
          "_location": "/@sindresorhus/is",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "@sindresorhus/is@2.1.0",
            "name": "@sindresorhus/is",
            "escapedName": "@sindresorhus%2fis",
            "scope": "@sindresorhus",
            "rawSpec": "2.1.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.1.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-2.1.0.tgz",
          "_spec": "2.1.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "ava": {
            "babel": false,
            "compileEnhancements": false,
            "extensions": [
              "ts"
            ],
            "require": [
              "ts-node/register"
            ]
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/is/issues"
          },
          "description": "Type check values",
          "devDependencies": {
            "@sindresorhus/tsconfig": "^0.7.0",
            "@types/jsdom": "^12.2.4",
            "@types/node": "^12.12.6",
            "@types/zen-observable": "^0.8.0",
            "@typescript-eslint/eslint-plugin": "^2.18.0",
            "@typescript-eslint/parser": "^2.18.0",
            "ava": "^2.1.0",
            "del-cli": "^2.0.0",
            "eslint-config-xo-typescript": "^0.24.1",
            "jsdom": "^16.0.1",
            "rxjs": "^6.4.0",
            "tempy": "^0.3.0",
            "ts-node": "^8.3.0",
            "typescript": "^3.7.5",
            "xo": "^0.25.3",
            "zen-observable": "^0.8.8"
          },
          "engines": {
            "node": ">=10"
          },
          "files": [
            "dist"
          ],
          "funding": "https://github.com/sindresorhus/is?sponsor=1",
          "homepage": "https://github.com/sindresorhus/is#readme",
          "keywords": [
            "type",
            "types",
            "is",
            "check",
            "checking",
            "validate",
            "validation",
            "utility",
            "util",
            "typeof",
            "instanceof",
            "object",
            "assert",
            "assertion",
            "test",
            "kind",
            "primitive",
            "verify",
            "compare",
            "typescript",
            "typeguards",
            "types"
          ],
          "license": "MIT",
          "main": "dist",
          "name": "@sindresorhus/is",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/is.git"
          },
          "scripts": {
            "build": "del dist && tsc",
            "prepublishOnly": "npm run build",
            "test": "xo && ava"
          },
          "sideEffects": false,
          "types": "dist",
          "version": "2.1.0",
          "xo": {
            "extends": "xo-typescript",
            "extensions": [
              "ts"
            ],
            "parserOptions": {
              "project": "./tsconfig.xo.json"
            },
            "globals": [
              "BigInt",
              "BigInt64Array",
              "BigUint64Array"
            ],
            "rules": {
              "@typescript-eslint/promise-function-async": "off",
              "@typescript-eslint/no-empty-function": "off",
              "@typescript-eslint/explicit-function-return-type": "off"
            }
          },
          "readme": "# is [![Build Status](https://travis-ci.org/sindresorhus/is.svg?branch=master)](https://travis-ci.org/sindresorhus/is)\n\n> Type check values\n\nFor example, `is.string('🦄') //=> true`\n\n<img src=\"header.gif\" width=\"182\" align=\"right\">\n\n## Highlights\n\n- Written in TypeScript\n- [Extensive use of type guards](#type-guards)\n- [Supports type assertions](#type-assertions)\n- [Aware of generic type parameters](#generic-type-parameters) (use with caution)\n- Actively maintained\n- 2 million weekly downloads\n\n## Install\n\n```\n$ npm install @sindresorhus/is\n```\n\n## Usage\n\n```js\nconst is = require('@sindresorhus/is');\n\nis('🦄');\n//=> 'string'\n\nis(new Map());\n//=> 'Map'\n\nis.number(6);\n//=> true\n```\n\n[Assertions](#type-assertions) perform the same type checks, but throw an error if the type does not match.\n\n```js\nconst {assert} = require('@sindresorhus/is');\n\nassert.string(2);\n//=> Error: Expected value which is `string`, received value of type `number`.\n```\n\nAnd with TypeScript:\n\n```ts\nimport {assert} from '@sindresorhus/is';\n\nassert.string(foo);\n// `foo` is now typed as a `string`.\n```\n\n## API\n\n### is(value)\n\nReturns the type of `value`.\n\nPrimitives are lowercase and object types are camelcase.\n\nExample:\n\n- `'undefined'`\n- `'null'`\n- `'string'`\n- `'symbol'`\n- `'Array'`\n- `'Function'`\n- `'Object'`\n\nNote: It will throw an error if you try to feed it object-wrapped primitives, as that's a bad practice. For example `new String('foo')`.\n\n### is.{method}\n\nAll the below methods accept a value and returns a boolean for whether the value is of the desired type.\n\n#### Primitives\n\n##### .undefined(value)\n##### .null(value)\n##### .string(value)\n##### .number(value)\n\nNote: `is.number(NaN)` returns `false`. This intentionally deviates from `typeof` behavior to increase user-friendliness of `is` type checks.\n\n##### .boolean(value)\n##### .symbol(value)\n##### .bigint(value)\n\n#### Built-in types\n\n##### .array(value)\n##### .function(value)\n##### .buffer(value)\n##### .object(value)\n\nKeep in mind that [functions are objects too](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions).\n\n##### .numericString(value)\n\nReturns `true` for a string that represents a number satisfying `is.number`, for example, `'42'` and `'-8.3'`.\n\nNote: `'NaN'` returns `false`, but `'Infinity'` and `'-Infinity'` return `true`.\n\n##### .regExp(value)\n##### .date(value)\n##### .error(value)\n##### .nativePromise(value)\n##### .promise(value)\n\nReturns `true` for any object with a `.then()` and `.catch()` method. Prefer this one over `.nativePromise()` as you usually want to allow userland promise implementations too.\n\n##### .generator(value)\n\nReturns `true` for any object that implements its own `.next()` and `.throw()` methods and has a function definition for `Symbol.iterator`.\n\n##### .generatorFunction(value)\n\n##### .asyncFunction(value)\n\nReturns `true` for any `async` function that can be called with the `await` operator.\n\n```js\nis.asyncFunction(async () => {});\n//=> true\n\nis.asyncFunction(() => {});\n//=> false\n```\n\n##### .asyncGenerator(value)\n\n```js\nis.asyncGenerator(\n\t(async function * () {\n\t\tyield 4;\n\t})()\n);\n//=> true\n\nis.asyncGenerator(\n\t(function * () {\n\t\tyield 4;\n\t})()\n);\n//=> false\n```\n\n##### .asyncGeneratorFunction(value)\n\n```js\nis.asyncGeneratorFunction(async function * () {\n\tyield 4;\n});\n//=> true\n\nis.asyncGeneratorFunction(function * () {\n\tyield 4;\n});\n//=> false\n```\n\n##### .boundFunction(value)\n\nReturns `true` for any `bound` function.\n\n```js\nis.boundFunction(() => {});\n//=> true\n\nis.boundFunction(function () {}.bind(null));\n//=> true\n\nis.boundFunction(function () {});\n//=> false\n```\n\n##### .map(value)\n##### .set(value)\n##### .weakMap(value)\n##### .weakSet(value)\n\n#### Typed arrays\n\n##### .int8Array(value)\n##### .uint8Array(value)\n##### .uint8ClampedArray(value)\n##### .int16Array(value)\n##### .uint16Array(value)\n##### .int32Array(value)\n##### .uint32Array(value)\n##### .float32Array(value)\n##### .float64Array(value)\n##### .bigInt64Array(value)\n##### .bigUint64Array(value)\n\n#### Structured data\n\n##### .arrayBuffer(value)\n##### .sharedArrayBuffer(value)\n##### .dataView(value)\n\n#### Emptiness\n\n##### .emptyString(value)\n\nReturns `true` if the value is a `string` and the `.length` is 0.\n\n##### .nonEmptyString(value)\n\nReturns `true` if the value is a `string` and the `.length` is more than 0.\n\n##### .emptyStringOrWhitespace(value)\n\nReturns `true` if `is.emptyString(value)` or if it's a `string` that is all whitespace.\n\n##### .emptyArray(value)\n\nReturns `true` if the value is an `Array` and the `.length` is 0.\n\n##### .nonEmptyArray(value)\n\nReturns `true` if the value is an `Array` and the `.length` is more than 0.\n\n##### .emptyObject(value)\n\nReturns `true` if the value is an `Object` and `Object.keys(value).length` is 0.\n\nPlease note that `Object.keys` returns only own enumerable properties. Hence something like this can happen:\n\n```js\nconst object1 = {};\n\nObject.defineProperty(object1, 'property1', {\n\tvalue: 42,\n\twritable: true,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nis.emptyObject(object1);\n//=> true\n```\n\n##### .nonEmptyObject(value)\n\nReturns `true` if the value is an `Object` and `Object.keys(value).length` is more than 0.\n\n##### .emptySet(value)\n\nReturns `true` if the value is a `Set` and the `.size` is 0.\n\n##### .nonEmptySet(Value)\n\nReturns `true` if the value is a `Set` and the `.size` is more than 0.\n\n##### .emptyMap(value)\n\nReturns `true` if the value is a `Map` and the `.size` is 0.\n\n##### .nonEmptyMap(value)\n\nReturns `true` if the value is a `Map` and the `.size` is more than 0.\n\n#### Miscellaneous\n\n##### .directInstanceOf(value, class)\n\nReturns `true` if `value` is a direct instance of `class`.\n\n```js\nis.directInstanceOf(new Error(), Error);\n//=> true\n\nclass UnicornError extends Error {}\n\nis.directInstanceOf(new UnicornError(), Error);\n//=> false\n```\n\n##### .urlInstance(value)\n\nReturns `true` if `value` is an instance of the [`URL` class](https://developer.mozilla.org/en-US/docs/Web/API/URL).\n\n```js\nconst url = new URL('https://example.com');\n\nis.urlInstance(url);\n//=> true\n```\n\n##### .urlString(value)\n\nReturns `true` if `value` is a URL string.\n\nNote: this only does basic checking using the [`URL` class](https://developer.mozilla.org/en-US/docs/Web/API/URL) constructor.\n\n```js\nconst url = 'https://example.com';\n\nis.urlString(url);\n//=> true\n\nis.urlString(new URL(url));\n//=> false\n```\n\n##### .truthy(value)\n\nReturns `true` for all values that evaluate to true in a boolean context:\n\n```js\nis.truthy('🦄');\n//=> true\n\nis.truthy(undefined);\n//=> false\n```\n\n##### .falsy(value)\n\nReturns `true` if `value` is one of: `false`, `0`, `''`, `null`, `undefined`, `NaN`.\n\n##### .nan(value)\n##### .nullOrUndefined(value)\n##### .primitive(value)\n\nJavaScript primitives are as follows: `null`, `undefined`, `string`, `number`, `boolean`, `symbol`.\n\n##### .integer(value)\n\n##### .safeInteger(value)\n\nReturns `true` if `value` is a [safe integer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger).\n\n##### .plainObject(value)\n\nAn object is plain if it's created by either `{}`, `new Object()`, or `Object.create(null)`.\n\n##### .iterable(value)\n##### .asyncIterable(value)\n##### .class(value)\n\nReturns `true` for instances created by a class.\n\n##### .typedArray(value)\n\n##### .arrayLike(value)\n\nA `value` is array-like if it is not a function and has a `value.length` that is a safe integer greater than or equal to 0.\n\n```js\nis.arrayLike(document.forms);\n//=> true\n\nfunction foo() {\n\tis.arrayLike(arguments);\n\t//=> true\n}\nfoo();\n```\n\n##### .inRange(value, range)\n\nCheck if `value` (number) is in the given `range`. The range is an array of two values, lower bound and upper bound, in no specific order.\n\n```js\nis.inRange(3, [0, 5]);\nis.inRange(3, [5, 0]);\nis.inRange(0, [-2, 2]);\n```\n\n##### .inRange(value, upperBound)\n\nCheck if `value` (number) is in the range of `0` to `upperBound`.\n\n```js\nis.inRange(3, 10);\n```\n\n##### .domElement(value)\n\nReturns `true` if `value` is a DOM Element.\n\n##### .nodeStream(value)\n\nReturns `true` if `value` is a Node.js [stream](https://nodejs.org/api/stream.html).\n\n```js\nconst fs = require('fs');\n\nis.nodeStream(fs.createReadStream('unicorn.png'));\n//=> true\n```\n\n##### .observable(value)\n\nReturns `true` if `value` is an `Observable`.\n\n```js\nconst {Observable} = require('rxjs');\n\nis.observable(new Observable());\n//=> true\n```\n\n##### .infinite(value)\n\nCheck if `value` is `Infinity` or `-Infinity`.\n\n##### .evenInteger(value)\n\nReturns `true` if `value` is an even integer.\n\n##### .oddInteger(value)\n\nReturns `true` if `value` is an odd integer.\n\n##### .any(predicate | predicate[], ...values)\n\nUsing a single `predicate` argument, returns `true` if **any** of the input `values` returns true in the `predicate`:\n\n```js\nis.any(is.string, {}, true, '🦄');\n//=> true\n\nis.any(is.boolean, 'unicorns', [], new Map());\n//=> false\n```\n\nUsing an array of `predicate[]`, returns `true` if **any** of the input `values` returns true for **any** of the `predicates` provided in an array:\n\n```js\nis.any([is.string, is.number], {}, true, '🦄');\n//=> true\n\nis.any([is.boolean, is.number], 'unicorns', [], new Map());\n//=> false\n```\n\n##### .all(predicate, ...values)\n\nReturns `true` if **all** of the input `values` returns true in the `predicate`:\n\n```js\nis.all(is.object, {}, new Map(), new Set());\n//=> true\n\nis.all(is.string, '🦄', [], 'unicorns');\n//=> false\n```\n\n## Type guards\n\nWhen using `is` together with TypeScript, [type guards](http://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types) are being used extensively to infer the correct type inside if-else statements.\n\n```ts\nimport is from '@sindresorhus/is';\n\nconst padLeft = (value: string, padding: string | number) => {\n\tif (is.number(padding)) {\n\t\t// `padding` is typed as `number`\n\t\treturn Array(padding + 1).join(' ') + value;\n\t}\n\n\tif (is.string(padding)) {\n\t\t// `padding` is typed as `string`\n\t\treturn padding + value;\n\t}\n\n\tthrow new TypeError(`Expected 'padding' to be of type 'string' or 'number', got '${is(padding)}'.`);\n}\n\npadLeft('🦄', 3);\n//=> '   🦄'\n\npadLeft('🦄', '🌈');\n//=> '🌈🦄'\n```\n\n## Type assertions\n\nThe type guards are also available as [type assertions](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions), which throw an error for unexpected types. It is a convenient one-line version of the often repetitive \"if-not-expected-type-throw\" pattern.\n\n```ts\nimport {assert} from '@sindresorhus/is';\n\nconst handleMovieRatingApiResponse = (response: unknown) => {\n\tassert.plainObject(response);\n\t// `response` is now typed as a plain `object` with `unknown` properties.\n\n\tassert.number(response.rating);\n\t// `response.rating` is now typed as a `number`.\n\n\tassert.string(response.title);\n\t// `response.title` is now typed as a `string`.\n\n\treturn `${response.title} (${response.rating * 10})`;\n};\n\nhandleMovieRatingApiResponse({rating: 0.87, title: 'The Matrix'});\n//=> 'The Matrix (8.7)'\n\n// This throws an error.\nhandleMovieRatingApiResponse({rating: '🦄'});\n```\n\n## Generic type parameters\n\nThe type guards and type assertions are aware of [generic type parameters](https://www.typescriptlang.org/docs/handbook/generics.html), such as `Promise<T>` and `Map<Key, Value>`. The default is `unknown` for most cases, since `is` cannot check them at runtime. If the generic type is known at compile-time, either implicitly (inferred) or explicitly (provided), `is` propagates the type so it can be used later.\n\nUse generic type parameters with caution. They are only checked by the TypeScript compiler, and not checked by `is` at runtime. This can lead to unexpected behavior, where the generic type is _assumed_ at compile-time, but actually is something completely different at runtime. It is best to use `unknown` (default) and type-check the value of the generic type parameter at runtime with `is` or `assert`.\n\n```ts\nimport {assert} from '@sindresorhus/is';\n\nasync function badNumberAssumption(input: unknown) {\n\t// Bad assumption about the generic type parameter fools the compile-time type system.\n\tassert.promise<number>(input);\n\t// `input` is a `Promise` but only assumed to be `Promise<number>`.\n\n\tconst resolved = await input;\n\t// `resolved` is typed as `number` but was not actually checked at runtime.\n\n\t// Multiplication will return NaN if the input promise did not actually contain a number.\n\treturn 2 * resolved;\n}\n\nasync function goodNumberAssertion(input: unknown) {\n\tassert.promise(input);\n\t// `input` is typed as `Promise<unknown>`\n\n\tconst resolved = await input;\n\t// `resolved` is typed as `unknown`\n\n\tassert.number(resolved);\n\t// `resolved` is typed as `number`\n\n\t// Uses runtime checks so only numbers will reach the multiplication.\n\treturn 2 * resolved;\n}\n\nbadNumberAssumption(Promise.resolve('An unexpected string'));\n//=> NaN\n\n// This correctly throws an error because of the unexpected string value.\ngoodNumberAssertion(Promise.resolve('An unexpected string'));\n```\n\n## FAQ\n\n### Why yet another type checking module?\n\nThere are hundreds of type checking modules on npm, unfortunately, I couldn't find any that fit my needs:\n\n- Includes both type methods and ability to get the type\n- Types of primitives returned as lowercase and object types as camelcase\n- Covers all built-ins\n- Unsurprising behavior\n- Well-maintained\n- Comprehensive test suite\n\nFor the ones I found, pick 3 of these.\n\nThe most common mistakes I noticed in these modules was using `instanceof` for type checking, forgetting that functions are objects, and omitting `symbol` as a primitive.\n\n## For enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of @sindresorhus/is and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-sindresorhus-is?utm_source=npm-sindresorhus-is&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [ow](https://github.com/sindresorhus/ow) - Function argument validation for humans\n- [is-stream](https://github.com/sindresorhus/is-stream) - Check if something is a Node.js stream\n- [is-observable](https://github.com/sindresorhus/is-observable) - Check if a value is an Observable\n- [file-type](https://github.com/sindresorhus/file-type) - Detect the file type of a Buffer/Uint8Array\n- [is-ip](https://github.com/sindresorhus/is-ip) - Check if a string is an IP address\n- [is-array-sorted](https://github.com/sindresorhus/is-array-sorted) - Check if an Array is sorted\n- [is-error-constructor](https://github.com/sindresorhus/is-error-constructor) - Check if a value is an error constructor\n- [is-empty-iterable](https://github.com/sindresorhus/is-empty-iterable) - Check if an Iterable is empty\n- [is-blob](https://github.com/sindresorhus/is-blob) - Check if a value is a Blob - File-like object of immutable, raw data\n- [has-emoji](https://github.com/sindresorhus/has-emoji) - Check whether a string has any emoji\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Giora Guttsait](https://github.com/gioragutt)\n- [Brandon Smith](https://github.com/brandon93s)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/@sindresorhus/is",
          "error": "[Circular]",
          "extraneous": false
        },
        "@szmarczak/http-timer": {
          "_args": [
            [
              "@szmarczak/http-timer@4.0.5",
              "/path/to/project/packages/shared"
            ],
            [
              "@szmarczak/http-timer@4.0.5",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "@szmarczak/http-timer@4.0.5",
          "_id": "@szmarczak/http-timer@4.0.5",
          "_integrity": "sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==",
          "_location": "/@szmarczak/http-timer",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "@szmarczak/http-timer@4.0.5",
            "name": "@szmarczak/http-timer",
            "escapedName": "@szmarczak%2fhttp-timer",
            "scope": "@szmarczak",
            "rawSpec": "4.0.5",
            "saveSpec": "[Circular]",
            "fetchSpec": "4.0.5"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.5.tgz",
          "_spec": "4.0.5",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Szymon Marczak"
          },
          "ava": {
            "typescript": {
              "rewritePaths": {
                "tests/": "dist/tests/"
              }
            }
          },
          "bugs": {
            "url": "https://github.com/szmarczak/http-timer/issues"
          },
          "dependencies": {
            "defer-to-connect": {
              "_args": [
                [
                  "defer-to-connect@2.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "defer-to-connect@2.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "defer-to-connect@2.0.0",
              "_id": "defer-to-connect@2.0.0",
              "_integrity": "sha512-bYL2d05vOSf1JEZNx5vSAtPuBMkX8K9EUutg7zlKvTqKXHt7RhWJFbmd7qakVuf13i+IkGmp6FwSsONOf6VYIg==",
              "_location": "/defer-to-connect",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "defer-to-connect@2.0.0",
                "name": "defer-to-connect",
                "escapedName": "defer-to-connect",
                "rawSpec": "2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.0"
              },
              "_requiredBy": [
                "/@szmarczak/http-timer"
              ],
              "_resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.0.tgz",
              "_spec": "2.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Szymon Marczak"
              },
              "ava": {
                "files": [
                  "!**/*.d.ts"
                ],
                "typescript": {
                  "rewritePaths": {
                    "tests/": "dist/tests/"
                  }
                }
              },
              "bugs": {
                "url": "https://github.com/szmarczak/defer-to-connect/issues"
              },
              "description": "The safe way to handle the `connect` socket event",
              "devDependencies": {
                "@ava/typescript": "^1.0.0",
                "@sindresorhus/tsconfig": "^0.7.0",
                "@types/node": "^13.5.0",
                "@typescript-eslint/eslint-plugin": "^2.18.0",
                "@typescript-eslint/parser": "^2.18.0",
                "ava": "^3.1.0",
                "coveralls": "^3.0.9",
                "create-cert": "^1.0.6",
                "del-cli": "^3.0.0",
                "eslint-config-xo-typescript": "^0.24.1",
                "nyc": "^15.0.0",
                "p-event": "^4.1.0",
                "typescript": "^3.7.5",
                "xo": "^0.25.3"
              },
              "engines": {
                "node": ">=10"
              },
              "files": [
                "dist/source"
              ],
              "homepage": "https://github.com/szmarczak/defer-to-connect#readme",
              "keywords": [
                "socket",
                "connect",
                "event"
              ],
              "license": "MIT",
              "main": "dist/source",
              "name": "defer-to-connect",
              "nyc": {
                "include": [
                  "dist/source"
                ],
                "extension": [
                  ".ts"
                ]
              },
              "repository": {
                "type": "git",
                "url": "git+https://github.com/szmarczak/defer-to-connect.git"
              },
              "scripts": {
                "build": "del-cli dist && tsc",
                "coveralls": "nyc report --reporter=text-lcov | coveralls",
                "prepare": "npm run build",
                "test": "xo && tsc --noEmit && nyc ava"
              },
              "types": "dist/source",
              "version": "2.0.0",
              "xo": {
                "extends": "xo-typescript",
                "extensions": [
                  "ts"
                ]
              },
              "readme": "# defer-to-connect\n\n> The safe way to handle the `connect` socket event\n\n[![Coverage Status](https://coveralls.io/repos/github/szmarczak/defer-to-connect/badge.svg?branch=master)](https://coveralls.io/github/szmarczak/defer-to-connect?branch=master)\n\nOnce you receive the socket, it may be already connected (or disconnected).<br>\nTo avoid checking that, use `defer-to-connect`. It'll do that for you.\n\n## Usage\n\n```js\nconst deferToConnect = require('defer-to-connect');\n\ndeferToConnect(socket, () => {\n    console.log('Connected!');\n});\n```\n\n## API\n\n### deferToConnect(socket, connectListener)\n\nCalls `connectListener()` when connected.\n\n### deferToConnect(socket, listeners)\n\n#### listeners\n\nAn object representing `connect`, `secureConnect` and `close` properties.\n\nCalls `connect()` when the socket is connected.<br>\nCalls `secureConnect()` when the socket is securely connected.<br>\nCalls `close()` when the socket is destroyed.\n\n## License\n\nMIT\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/defer-to-connect",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Timings for HTTP requests",
          "devDependencies": {
            "@ava/typescript": "^1.1.0",
            "@sindresorhus/tsconfig": "^0.7.0",
            "@types/node": "^13.5.1",
            "@typescript-eslint/eslint-plugin": "^2.18.0",
            "@typescript-eslint/parser": "^2.18.0",
            "ava": "^3.2.0",
            "coveralls": "^3.0.9",
            "del-cli": "^3.0.0",
            "eslint-config-xo-typescript": "^0.24.1",
            "nyc": "^15.0.0",
            "p-event": "^4.1.0",
            "typescript": "^3.7.5",
            "xo": "^0.25.3"
          },
          "engines": {
            "node": ">=10"
          },
          "files": [
            "dist/source"
          ],
          "homepage": "https://github.com/szmarczak/http-timer#readme",
          "keywords": [
            "http",
            "https",
            "timer",
            "timings"
          ],
          "license": "MIT",
          "main": "dist/source",
          "name": "@szmarczak/http-timer",
          "nyc": {
            "extension": [
              ".ts"
            ],
            "exclude": [
              "**/tests/**"
            ]
          },
          "repository": {
            "type": "git",
            "url": "git+https://github.com/szmarczak/http-timer.git"
          },
          "scripts": {
            "build": "del-cli dist && tsc",
            "coveralls": "nyc report --reporter=text-lcov | coveralls",
            "prepare": "npm run build",
            "test": "xo && tsc --noEmit && nyc ava"
          },
          "types": "dist/source",
          "version": "4.0.5",
          "xo": {
            "extends": "xo-typescript",
            "extensions": [
              "ts"
            ]
          },
          "readme": "# http-timer\n> Timings for HTTP requests\n\n[![Build Status](https://travis-ci.org/szmarczak/http-timer.svg?branch=master)](https://travis-ci.org/szmarczak/http-timer)\n[![Coverage Status](https://coveralls.io/repos/github/szmarczak/http-timer/badge.svg?branch=master)](https://coveralls.io/github/szmarczak/http-timer?branch=master)\n[![install size](https://packagephobia.now.sh/badge?p=@szmarczak/http-timer)](https://packagephobia.now.sh/result?p=@szmarczak/http-timer)\n\nInspired by the [`request` package](https://github.com/request/request).\n\n## Installation\n\nNPM:\n\n> `npm install @szmarczak/http-timer`\n\nYarn:\n\n> `yarn add @szmarczak/http-timer`\n\n## Usage\n```js\nconst https = require('https');\nconst timer = require('@szmarczak/http-timer');\n\nconst request = https.get('https://httpbin.org/anything');\ntimer(request);\n\nrequest.once('response', response => {\n\tresponse.resume();\n\tresponse.once('end', () => {\n\t\tconsole.log(response.timings); // You can use `request.timings` as well\n\t});\n});\n\n// {\n//   start: 1572712180361,\n//   socket: 1572712180362,\n//   lookup: 1572712180415,\n//   connect: 1572712180571,\n//   upload: 1572712180884,\n//   response: 1572712181037,\n//   end: 1572712181039,\n//   error: undefined,\n//   abort: undefined,\n//   phases: {\n//     wait: 1,\n//     dns: 53,\n//     tcp: 156,\n//     request: 313,\n//     firstByte: 153,\n//     download: 2,\n//     total: 678\n//   }\n// }\n```\n\n## API\n\n### timer(request)\n\nReturns: `Object`\n\n**Note**: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n\n- `start` - Time when the request started.\n- `socket` - Time when a socket was assigned to the request.\n- `lookup` - Time when the DNS lookup finished.\n- `connect` - Time when the socket successfully connected.\n- `secureConnect` - Time when the socket securely connected.\n- `upload` - Time when the request finished uploading.\n- `response` - Time when the request fired `response` event.\n- `end` - Time when the response fired `end` event.\n- `error` - Time when the request fired `error` event.\n- `abort` - Time when the request fired `abort` event.\n- `phases`\n\t- `wait` - `timings.socket - timings.start`\n\t- `dns` - `timings.lookup - timings.socket`\n\t- `tcp` - `timings.connect - timings.lookup`\n\t- `tls` - `timings.secureConnect - timings.connect`\n\t- `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n\t- `firstByte` - `timings.response - timings.upload`\n\t- `download` - `timings.end - timings.response`\n\t- `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n\nIf something has not been measured yet, it will be `undefined`.\n\n## License\n\nMIT\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "defer-to-connect": "^2.0.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/@szmarczak/http-timer",
          "error": "[Circular]",
          "extraneous": false
        },
        "@types/cacheable-request": {
          "_args": [
            [
              "@types/cacheable-request@6.0.1",
              "/path/to/project/packages/shared"
            ],
            [
              "@types/cacheable-request@6.0.1",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "@types/cacheable-request@6.0.1",
          "_id": "@types/cacheable-request@6.0.1",
          "_integrity": "sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==",
          "_location": "/@types/cacheable-request",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "@types/cacheable-request@6.0.1",
            "name": "@types/cacheable-request",
            "escapedName": "@types%2fcacheable-request",
            "scope": "@types",
            "rawSpec": "6.0.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "6.0.1"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.1.tgz",
          "_spec": "6.0.1",
          "_where": "/path/to/project/packages/shared",
          "bugs": {
            "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"
          },
          "contributors": [
            {
              "name": "BendingBender",
              "url": "https://github.com/BendingBender"
            },
            {
              "name": "Paul Melnikow",
              "url": "https://github.com/paulmelnikow"
            }
          ],
          "dependencies": {
            "@types/http-cache-semantics": {
              "_args": [
                [
                  "@types/http-cache-semantics@4.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "@types/http-cache-semantics@4.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "@types/http-cache-semantics@4.0.0",
              "_id": "@types/http-cache-semantics@4.0.0",
              "_integrity": "sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A==",
              "_location": "/@types/http-cache-semantics",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@types/http-cache-semantics@4.0.0",
                "name": "@types/http-cache-semantics",
                "escapedName": "@types%2fhttp-cache-semantics",
                "scope": "@types",
                "rawSpec": "4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.0.0"
              },
              "_requiredBy": [
                "/@types/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz",
              "_spec": "4.0.0",
              "_where": "/path/to/project/packages/shared",
              "bugs": {
                "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"
              },
              "contributors": [
                {
                  "name": "BendingBender",
                  "url": "https://github.com/BendingBender"
                }
              ],
              "dependencies": {},
              "description": "TypeScript definitions for http-cache-semantics",
              "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
              "license": "MIT",
              "main": "",
              "name": "@types/http-cache-semantics",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git"
              },
              "scripts": {},
              "typeScriptVersion": "2.0",
              "types": "index",
              "typesPublisherContentHash": "0f2f0f2e4444736e9747a8b7b3cd04c9064067e0181263cfb85337511ae13a35",
              "version": "4.0.0",
              "readme": "# Installation\r\n> `npm install --save @types/http-cache-semantics`\r\n\r\n# Summary\r\nThis package contains type definitions for http-cache-semantics ( https://github.com/kornelski/http-cache-semantics#readme ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/http-cache-semantics\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Jan 2019 18:47:31 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by BendingBender <https://github.com/BendingBender>.\r\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/@types/http-cache-semantics",
              "error": "[Circular]",
              "extraneous": false
            },
            "@types/keyv": {
              "_args": [
                [
                  "@types/keyv@3.1.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "@types/keyv@3.1.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "@types/keyv@3.1.1",
              "_id": "@types/keyv@3.1.1",
              "_integrity": "sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==",
              "_location": "/@types/keyv",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@types/keyv@3.1.1",
                "name": "@types/keyv",
                "escapedName": "@types%2fkeyv",
                "scope": "@types",
                "rawSpec": "3.1.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.1.1"
              },
              "_requiredBy": [
                "/@types/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.1.tgz",
              "_spec": "3.1.1",
              "_where": "/path/to/project/packages/shared",
              "bugs": {
                "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"
              },
              "contributors": [
                {
                  "name": "AryloYeung",
                  "url": "https://github.com/Arylo"
                },
                {
                  "name": "BendingBender",
                  "url": "https://github.com/BendingBender"
                }
              ],
              "dependencies": {
                "@types/node": {
                  "_args": [
                    [
                      "@types/node@13.7.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "@types/node@13.7.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "@types/node@13.7.1",
                  "_id": "@types/node@13.7.1",
                  "_integrity": "sha512-Zq8gcQGmn4txQEJeiXo/KiLpon8TzAl0kmKH4zdWctPj05nWwp1ClMdAVEloqrQKfaC48PNLdgN/aVaLqUrluA==",
                  "_location": "/@types/node",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "@types/node@13.7.1",
                    "name": "@types/node",
                    "escapedName": "@types%2fnode",
                    "scope": "@types",
                    "rawSpec": "13.7.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "13.7.1"
                  },
                  "_requiredBy": [
                    "/@types/cacheable-request",
                    "/@types/keyv",
                    "/@types/pino",
                    "/@types/responselike",
                    "/@types/sonic-boom"
                  ],
                  "_resolved": "https://registry.npmjs.org/@types/node/-/node-13.7.1.tgz",
                  "_spec": "13.7.1",
                  "_where": "/path/to/project/packages/shared",
                  "bugs": {
                    "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"
                  },
                  "contributors": [
                    {
                      "name": "Microsoft TypeScript",
                      "url": "https://github.com/Microsoft"
                    },
                    {
                      "name": "DefinitelyTyped",
                      "url": "https://github.com/DefinitelyTyped"
                    },
                    {
                      "name": "Alberto Schiabel",
                      "url": "https://github.com/jkomyno"
                    },
                    {
                      "name": "Alexander T.",
                      "url": "https://github.com/a-tarasyuk"
                    },
                    {
                      "name": "Alvis HT Tang",
                      "url": "https://github.com/alvis"
                    },
                    {
                      "name": "Andrew Makarov",
                      "url": "https://github.com/r3nya"
                    },
                    {
                      "name": "Benjamin Toueg",
                      "url": "https://github.com/btoueg"
                    },
                    {
                      "name": "Bruno Scheufler",
                      "url": "https://github.com/brunoscheufler"
                    },
                    {
                      "name": "Chigozirim C.",
                      "url": "https://github.com/smac89"
                    },
                    {
                      "name": "Christian Vaagland Tellnes",
                      "url": "https://github.com/tellnes"
                    },
                    {
                      "name": "David Junger",
                      "url": "https://github.com/touffy"
                    },
                    {
                      "name": "Deividas Bakanas",
                      "url": "https://github.com/DeividasBakanas"
                    },
                    {
                      "name": "Eugene Y. Q. Shen",
                      "url": "https://github.com/eyqs"
                    },
                    {
                      "name": "Flarna",
                      "url": "https://github.com/Flarna"
                    },
                    {
                      "name": "Hannes Magnusson",
                      "url": "https://github.com/Hannes-Magnusson-CK"
                    },
                    {
                      "name": "Hoàng Văn Khải",
                      "url": "https://github.com/KSXGitHub"
                    },
                    {
                      "name": "Huw",
                      "url": "https://github.com/hoo29"
                    },
                    {
                      "name": "Kelvin Jin",
                      "url": "https://github.com/kjin"
                    },
                    {
                      "name": "Klaus Meinhardt",
                      "url": "https://github.com/ajafff"
                    },
                    {
                      "name": "Lishude",
                      "url": "https://github.com/islishude"
                    },
                    {
                      "name": "Mariusz Wiktorczyk",
                      "url": "https://github.com/mwiktorczyk"
                    },
                    {
                      "name": "Mohsen Azimi",
                      "url": "https://github.com/mohsen1"
                    },
                    {
                      "name": "Nicolas Even",
                      "url": "https://github.com/n-e"
                    },
                    {
                      "name": "Nicolas Voigt",
                      "url": "https://github.com/octo-sniffle"
                    },
                    {
                      "name": "Nikita Galkin",
                      "url": "https://github.com/galkin"
                    },
                    {
                      "name": "Parambir Singh",
                      "url": "https://github.com/parambirs"
                    },
                    {
                      "name": "Sebastian Silbermann",
                      "url": "https://github.com/eps1lon"
                    },
                    {
                      "name": "Simon Schick",
                      "url": "https://github.com/SimonSchick"
                    },
                    {
                      "name": "Thomas den Hollander",
                      "url": "https://github.com/ThomasdenH"
                    },
                    {
                      "name": "Wilco Bakker",
                      "url": "https://github.com/WilcoBakker"
                    },
                    {
                      "name": "wwwy3y3",
                      "url": "https://github.com/wwwy3y3"
                    },
                    {
                      "name": "Zane Hannan AU",
                      "url": "https://github.com/ZaneHannanAU"
                    },
                    {
                      "name": "Samuel Ainsworth",
                      "url": "https://github.com/samuela"
                    },
                    {
                      "name": "Kyle Uehlein",
                      "url": "https://github.com/kuehlein"
                    },
                    {
                      "name": "Jordi Oliveras Rovira",
                      "url": "https://github.com/j-oliveras"
                    },
                    {
                      "name": "Thanik Bhongbhibhat",
                      "url": "https://github.com/bhongy"
                    },
                    {
                      "name": "Marcin Kopacz",
                      "url": "https://github.com/chyzwar"
                    },
                    {
                      "name": "Trivikram Kamat",
                      "url": "https://github.com/trivikr"
                    },
                    {
                      "name": "Minh Son Nguyen",
                      "url": "https://github.com/nguymin4"
                    },
                    {
                      "name": "Junxiao Shi",
                      "url": "https://github.com/yoursunny"
                    },
                    {
                      "name": "Ilia Baryshnikov",
                      "url": "https://github.com/qwelias"
                    }
                  ],
                  "dependencies": {},
                  "description": "TypeScript definitions for Node.js",
                  "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
                  "license": "MIT",
                  "main": "",
                  "name": "@types/node",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git",
                    "directory": "types/node"
                  },
                  "scripts": {},
                  "typeScriptVersion": "2.8",
                  "types": "index.d.ts",
                  "typesPublisherContentHash": "8b99aa0031fac941d520282519c47b0255109858a20251313b1210c28769f463",
                  "typesVersions": {
                    ">=3.5.0-0": {
                      "*": [
                        "ts3.5/*"
                      ]
                    }
                  },
                  "version": "13.7.1",
                  "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node.\r\n\r\n### Additional Details\r\n * Last updated: Tue, 11 Feb 2020 17:16:28 GMT\r\n * Dependencies: none\r\n * Global values: `Buffer`, `Symbol`, `__dirname`, `__filename`, `clearImmediate`, `clearInterval`, `clearTimeout`, `console`, `exports`, `global`, `module`, `process`, `queueMicrotask`, `require`, `setImmediate`, `setInterval`, `setTimeout`\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript (https://github.com/Microsoft), DefinitelyTyped (https://github.com/DefinitelyTyped), Alberto Schiabel (https://github.com/jkomyno), Alexander T. (https://github.com/a-tarasyuk), Alvis HT Tang (https://github.com/alvis), Andrew Makarov (https://github.com/r3nya), Benjamin Toueg (https://github.com/btoueg), Bruno Scheufler (https://github.com/brunoscheufler), Chigozirim C. (https://github.com/smac89), Christian Vaagland Tellnes (https://github.com/tellnes), David Junger (https://github.com/touffy), Deividas Bakanas (https://github.com/DeividasBakanas), Eugene Y. Q. Shen (https://github.com/eyqs), Flarna (https://github.com/Flarna), Hannes Magnusson (https://github.com/Hannes-Magnusson-CK), Hoàng Văn Khải (https://github.com/KSXGitHub), Huw (https://github.com/hoo29), Kelvin Jin (https://github.com/kjin), Klaus Meinhardt (https://github.com/ajafff), Lishude (https://github.com/islishude), Mariusz Wiktorczyk (https://github.com/mwiktorczyk), Mohsen Azimi (https://github.com/mohsen1), Nicolas Even (https://github.com/n-e), Nicolas Voigt (https://github.com/octo-sniffle), Nikita Galkin (https://github.com/galkin), Parambir Singh (https://github.com/parambirs), Sebastian Silbermann (https://github.com/eps1lon), Simon Schick (https://github.com/SimonSchick), Thomas den Hollander (https://github.com/ThomasdenH), Wilco Bakker (https://github.com/WilcoBakker), wwwy3y3 (https://github.com/wwwy3y3), Zane Hannan AU (https://github.com/ZaneHannanAU), Samuel Ainsworth (https://github.com/samuela), Kyle Uehlein (https://github.com/kuehlein), Jordi Oliveras Rovira (https://github.com/j-oliveras), Thanik Bhongbhibhat (https://github.com/bhongy), Marcin Kopacz (https://github.com/chyzwar), Trivikram Kamat (https://github.com/trivikr), Minh Son Nguyen (https://github.com/nguymin4), Junxiao Shi (https://github.com/yoursunny), and Ilia Baryshnikov (https://github.com/qwelias).\r\n",
                  "readmeFilename": "README.md",
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/@types/node",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "@types/node"
                }
              },
              "description": "TypeScript definitions for keyv",
              "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
              "license": "MIT",
              "main": "",
              "name": "@types/keyv",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git",
                "directory": "types/keyv"
              },
              "scripts": {},
              "typeScriptVersion": "2.8",
              "types": "index.d.ts",
              "typesPublisherContentHash": "883f9e92997b7991324e37284aa16e71d6f43731110ec0e7f62ccca68960aec3",
              "version": "3.1.1",
              "readme": "# Installation\r\n> `npm install --save @types/keyv`\r\n\r\n# Summary\r\nThis package contains type definitions for keyv (https://github.com/lukechilds/keyv).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/keyv.\r\n\r\n### Additional Details\r\n * Last updated: Mon, 23 Dec 2019 16:40:54 GMT\r\n * Dependencies: [@types/node](https://npmjs.com/package/@types/node)\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by AryloYeung (https://github.com/Arylo), and BendingBender (https://github.com/BendingBender).\r\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {
                "@types/node": "*"
              },
              "path": "/path/to/project/packages/shared/node_modules/@types/keyv",
              "error": "[Circular]",
              "extraneous": false
            },
            "@types/node": {
              "_args": "[Circular]",
              "_from": "@types/node@13.7.1",
              "_id": "@types/node@13.7.1",
              "_integrity": "sha512-Zq8gcQGmn4txQEJeiXo/KiLpon8TzAl0kmKH4zdWctPj05nWwp1ClMdAVEloqrQKfaC48PNLdgN/aVaLqUrluA==",
              "_location": "/@types/node",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@types/node@13.7.1",
                "name": "@types/node",
                "escapedName": "@types%2fnode",
                "scope": "@types",
                "rawSpec": "13.7.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "13.7.1"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/@types/node/-/node-13.7.1.tgz",
              "_spec": "13.7.1",
              "_where": "/path/to/project/packages/shared",
              "bugs": "[Circular]",
              "contributors": "[Circular]",
              "dependencies": {},
              "description": "TypeScript definitions for Node.js",
              "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
              "license": "MIT",
              "main": "",
              "name": "@types/node",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "typeScriptVersion": "2.8",
              "types": "index.d.ts",
              "typesPublisherContentHash": "8b99aa0031fac941d520282519c47b0255109858a20251313b1210c28769f463",
              "typesVersions": "[Circular]",
              "version": "13.7.1",
              "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node.\r\n\r\n### Additional Details\r\n * Last updated: Tue, 11 Feb 2020 17:16:28 GMT\r\n * Dependencies: none\r\n * Global values: `Buffer`, `Symbol`, `__dirname`, `__filename`, `clearImmediate`, `clearInterval`, `clearTimeout`, `console`, `exports`, `global`, `module`, `process`, `queueMicrotask`, `require`, `setImmediate`, `setInterval`, `setTimeout`\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript (https://github.com/Microsoft), DefinitelyTyped (https://github.com/DefinitelyTyped), Alberto Schiabel (https://github.com/jkomyno), Alexander T. (https://github.com/a-tarasyuk), Alvis HT Tang (https://github.com/alvis), Andrew Makarov (https://github.com/r3nya), Benjamin Toueg (https://github.com/btoueg), Bruno Scheufler (https://github.com/brunoscheufler), Chigozirim C. (https://github.com/smac89), Christian Vaagland Tellnes (https://github.com/tellnes), David Junger (https://github.com/touffy), Deividas Bakanas (https://github.com/DeividasBakanas), Eugene Y. Q. Shen (https://github.com/eyqs), Flarna (https://github.com/Flarna), Hannes Magnusson (https://github.com/Hannes-Magnusson-CK), Hoàng Văn Khải (https://github.com/KSXGitHub), Huw (https://github.com/hoo29), Kelvin Jin (https://github.com/kjin), Klaus Meinhardt (https://github.com/ajafff), Lishude (https://github.com/islishude), Mariusz Wiktorczyk (https://github.com/mwiktorczyk), Mohsen Azimi (https://github.com/mohsen1), Nicolas Even (https://github.com/n-e), Nicolas Voigt (https://github.com/octo-sniffle), Nikita Galkin (https://github.com/galkin), Parambir Singh (https://github.com/parambirs), Sebastian Silbermann (https://github.com/eps1lon), Simon Schick (https://github.com/SimonSchick), Thomas den Hollander (https://github.com/ThomasdenH), Wilco Bakker (https://github.com/WilcoBakker), wwwy3y3 (https://github.com/wwwy3y3), Zane Hannan AU (https://github.com/ZaneHannanAU), Samuel Ainsworth (https://github.com/samuela), Kyle Uehlein (https://github.com/kuehlein), Jordi Oliveras Rovira (https://github.com/j-oliveras), Thanik Bhongbhibhat (https://github.com/bhongy), Marcin Kopacz (https://github.com/chyzwar), Trivikram Kamat (https://github.com/trivikr), Minh Son Nguyen (https://github.com/nguymin4), Junxiao Shi (https://github.com/yoursunny), and Ilia Baryshnikov (https://github.com/qwelias).\r\n",
              "readmeFilename": "README.md",
              "devDependencies": "[Circular]",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/@types/node",
              "error": "[Circular]",
              "extraneous": false
            },
            "@types/responselike": {
              "_args": [
                [
                  "@types/responselike@1.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "@types/responselike@1.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "@types/responselike@1.0.0",
              "_id": "@types/responselike@1.0.0",
              "_integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
              "_location": "/@types/responselike",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@types/responselike@1.0.0",
                "name": "@types/responselike",
                "escapedName": "@types%2fresponselike",
                "scope": "@types",
                "rawSpec": "1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.0"
              },
              "_requiredBy": [
                "/@types/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
              "_spec": "1.0.0",
              "_where": "/path/to/project/packages/shared",
              "bugs": {
                "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"
              },
              "contributors": [
                {
                  "name": "BendingBender",
                  "url": "https://github.com/BendingBender"
                }
              ],
              "dependencies": {
                "@types/node": {
                  "_args": "[Circular]",
                  "_from": "@types/node@13.7.1",
                  "_id": "@types/node@13.7.1",
                  "_integrity": "sha512-Zq8gcQGmn4txQEJeiXo/KiLpon8TzAl0kmKH4zdWctPj05nWwp1ClMdAVEloqrQKfaC48PNLdgN/aVaLqUrluA==",
                  "_location": "/@types/node",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "@types/node@13.7.1",
                    "name": "@types/node",
                    "escapedName": "@types%2fnode",
                    "scope": "@types",
                    "rawSpec": "13.7.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "13.7.1"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/@types/node/-/node-13.7.1.tgz",
                  "_spec": "13.7.1",
                  "_where": "/path/to/project/packages/shared",
                  "bugs": "[Circular]",
                  "contributors": "[Circular]",
                  "dependencies": {},
                  "description": "TypeScript definitions for Node.js",
                  "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
                  "license": "MIT",
                  "main": "",
                  "name": "@types/node",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "typeScriptVersion": "2.8",
                  "types": "index.d.ts",
                  "typesPublisherContentHash": "8b99aa0031fac941d520282519c47b0255109858a20251313b1210c28769f463",
                  "typesVersions": "[Circular]",
                  "version": "13.7.1",
                  "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node.\r\n\r\n### Additional Details\r\n * Last updated: Tue, 11 Feb 2020 17:16:28 GMT\r\n * Dependencies: none\r\n * Global values: `Buffer`, `Symbol`, `__dirname`, `__filename`, `clearImmediate`, `clearInterval`, `clearTimeout`, `console`, `exports`, `global`, `module`, `process`, `queueMicrotask`, `require`, `setImmediate`, `setInterval`, `setTimeout`\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript (https://github.com/Microsoft), DefinitelyTyped (https://github.com/DefinitelyTyped), Alberto Schiabel (https://github.com/jkomyno), Alexander T. (https://github.com/a-tarasyuk), Alvis HT Tang (https://github.com/alvis), Andrew Makarov (https://github.com/r3nya), Benjamin Toueg (https://github.com/btoueg), Bruno Scheufler (https://github.com/brunoscheufler), Chigozirim C. (https://github.com/smac89), Christian Vaagland Tellnes (https://github.com/tellnes), David Junger (https://github.com/touffy), Deividas Bakanas (https://github.com/DeividasBakanas), Eugene Y. Q. Shen (https://github.com/eyqs), Flarna (https://github.com/Flarna), Hannes Magnusson (https://github.com/Hannes-Magnusson-CK), Hoàng Văn Khải (https://github.com/KSXGitHub), Huw (https://github.com/hoo29), Kelvin Jin (https://github.com/kjin), Klaus Meinhardt (https://github.com/ajafff), Lishude (https://github.com/islishude), Mariusz Wiktorczyk (https://github.com/mwiktorczyk), Mohsen Azimi (https://github.com/mohsen1), Nicolas Even (https://github.com/n-e), Nicolas Voigt (https://github.com/octo-sniffle), Nikita Galkin (https://github.com/galkin), Parambir Singh (https://github.com/parambirs), Sebastian Silbermann (https://github.com/eps1lon), Simon Schick (https://github.com/SimonSchick), Thomas den Hollander (https://github.com/ThomasdenH), Wilco Bakker (https://github.com/WilcoBakker), wwwy3y3 (https://github.com/wwwy3y3), Zane Hannan AU (https://github.com/ZaneHannanAU), Samuel Ainsworth (https://github.com/samuela), Kyle Uehlein (https://github.com/kuehlein), Jordi Oliveras Rovira (https://github.com/j-oliveras), Thanik Bhongbhibhat (https://github.com/bhongy), Marcin Kopacz (https://github.com/chyzwar), Trivikram Kamat (https://github.com/trivikr), Minh Son Nguyen (https://github.com/nguymin4), Junxiao Shi (https://github.com/yoursunny), and Ilia Baryshnikov (https://github.com/qwelias).\r\n",
                  "readmeFilename": "README.md",
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/@types/node",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "@types/node"
                }
              },
              "description": "TypeScript definitions for responselike",
              "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
              "license": "MIT",
              "main": "",
              "name": "@types/responselike",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git"
              },
              "scripts": {},
              "typeScriptVersion": "2.0",
              "types": "index",
              "typesPublisherContentHash": "38ee8db1511cdb4a9133ff67b8bc16901de733aa4dc1efffdb5064b7daaa3f21",
              "version": "1.0.0",
              "readme": "# Installation\r\n> `npm install --save @types/responselike`\r\n\r\n# Summary\r\nThis package contains type definitions for responselike ( https://github.com/lukechilds/responselike#readme ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/responselike\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Jan 2019 18:47:32 GMT\r\n * Dependencies: @types/node\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by BendingBender <https://github.com/BendingBender>.\r\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {
                "@types/node": "*"
              },
              "path": "/path/to/project/packages/shared/node_modules/@types/responselike",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "TypeScript definitions for cacheable-request",
          "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme",
          "license": "MIT",
          "main": "",
          "name": "@types/cacheable-request",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git",
            "directory": "types/cacheable-request"
          },
          "scripts": {},
          "typeScriptVersion": "2.3",
          "types": "index",
          "typesPublisherContentHash": "c6afce5b9ca6ee2952549da29e2d4af2bd367dbf44a175a005063192d46b7814",
          "version": "6.0.1",
          "readme": "# Installation\r\n> `npm install --save @types/cacheable-request`\r\n\r\n# Summary\r\nThis package contains type definitions for cacheable-request ( https://github.com/lukechilds/cacheable-request#readme ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cacheable-request\r\n\r\nAdditional Details\r\n * Last updated: Mon, 25 Mar 2019 16:32:10 GMT\r\n * Dependencies: @types/keyv, @types/http-cache-semantics, @types/responselike, @types/node\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by BendingBender <https://github.com/BendingBender>, Paul Melnikow <https://github.com/paulmelnikow>.\r\n",
          "readmeFilename": "README.md",
          "devDependencies": {},
          "optionalDependencies": {},
          "_dependencies": {
            "@types/http-cache-semantics": "*",
            "@types/keyv": "*",
            "@types/node": "*",
            "@types/responselike": "*"
          },
          "path": "/path/to/project/packages/shared/node_modules/@types/cacheable-request",
          "error": "[Circular]",
          "extraneous": false
        },
        "cacheable-lookup": {
          "_args": [
            [
              "cacheable-lookup@2.0.0",
              "/path/to/project/packages/shared"
            ],
            [
              "cacheable-lookup@2.0.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "cacheable-lookup@2.0.0",
          "_id": "cacheable-lookup@2.0.0",
          "_integrity": "sha512-s2piO6LvA7xnL1AR03wuEdSx3BZT3tIJpZ56/lcJwzO/6DTJZlTs7X3lrvPxk6d1PlDe6PrVe2TjlUIZNFglAQ==",
          "_location": "/cacheable-lookup",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "cacheable-lookup@2.0.0",
            "name": "cacheable-lookup",
            "escapedName": "cacheable-lookup",
            "rawSpec": "2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-2.0.0.tgz",
          "_spec": "2.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Szymon Marczak"
          },
          "bugs": {
            "url": "https://github.com/szmarczak/cacheable-lookup/issues"
          },
          "dependencies": {
            "keyv": {
              "_args": [
                [
                  "keyv@4.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "keyv@4.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "keyv@4.0.0",
              "_id": "keyv@4.0.0",
              "_integrity": "sha512-U7ioE8AimvRVLfw4LffyOIRhL2xVgmE8T22L6i0BucSnBUyv4w+I7VN/zVZwRKHOI6ZRUcdMdWHQ8KSUvGpEog==",
              "_location": "/keyv",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "keyv@4.0.0",
                "name": "keyv",
                "escapedName": "keyv",
                "rawSpec": "4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.0.0"
              },
              "_requiredBy": [
                "/cacheable-lookup",
                "/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/keyv/-/keyv-4.0.0.tgz",
              "_spec": "4.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Luke Childs",
                "email": "lukechilds123@gmail.com",
                "url": "http://lukechilds.co.uk"
              },
              "bugs": {
                "url": "https://github.com/lukechilds/keyv/issues"
              },
              "dependencies": {
                "json-buffer": {
                  "_args": [
                    [
                      "json-buffer@3.0.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "json-buffer@3.0.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "json-buffer@3.0.1",
                  "_id": "json-buffer@3.0.1",
                  "_integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
                  "_location": "/json-buffer",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "json-buffer@3.0.1",
                    "name": "json-buffer",
                    "escapedName": "json-buffer",
                    "rawSpec": "3.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.0.1"
                  },
                  "_requiredBy": [
                    "/keyv"
                  ],
                  "_resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
                  "_spec": "3.0.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Dominic Tarr",
                    "email": "dominic.tarr@gmail.com",
                    "url": "http://dominictarr.com"
                  },
                  "bugs": {
                    "url": "https://github.com/dominictarr/json-buffer/issues"
                  },
                  "description": "JSON parse & stringify that supports binary via bops & base64",
                  "devDependencies": {
                    "tape": "^4.6.3"
                  },
                  "homepage": "https://github.com/dominictarr/json-buffer",
                  "license": "MIT",
                  "name": "json-buffer",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/dominictarr/json-buffer.git"
                  },
                  "scripts": {
                    "test": "set -e; for t in test/*.js; do node $t; done"
                  },
                  "testling": {
                    "files": "test/*.js",
                    "browsers": [
                      "ie/8..latest",
                      "firefox/17..latest",
                      "firefox/nightly",
                      "chrome/22..latest",
                      "chrome/canary",
                      "opera/12..latest",
                      "opera/next",
                      "safari/5.1..latest",
                      "ipad/6.0..latest",
                      "iphone/6.0..latest",
                      "android-browser/4.2..latest"
                    ]
                  },
                  "version": "3.0.1",
                  "readme": "# json-buffer\n\nJSON functions that can convert buffers!\n\n[![build status](https://secure.travis-ci.org/dominictarr/json-buffer.png)](http://travis-ci.org/dominictarr/json-buffer)\n\n[![testling badge](https://ci.testling.com/dominictarr/json-buffer.png)](https://ci.testling.com/dominictarr/json-buffer)\n\nJSON mangles buffers by converting to an array...\nwhich isn't helpful. json-buffers converts to base64 instead,\nand deconverts base64 to a buffer.\n\n``` js\nvar JSONB = require('json-buffer')\nvar Buffer = require('buffer').Buffer\n\nvar str = JSONB.stringify(Buffer.from('hello there!'))\n\nconsole.log(JSONB.parse(str)) //GET a BUFFER back\n```\n\n## License\n\nMIT\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/json-buffer",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Simple key-value storage with support for multiple backends",
              "devDependencies": {
                "@keyv/mongo": "*",
                "@keyv/mysql": "*",
                "@keyv/postgres": "*",
                "@keyv/redis": "*",
                "@keyv/sqlite": "*",
                "@keyv/test-suite": "*",
                "ava": "^2.2.0",
                "coveralls": "^3.0.0",
                "eslint-config-xo-lukechilds": "^1.0.0",
                "nyc": "^14.1.1",
                "this": "^1.0.2",
                "timekeeper": "^2.0.0",
                "xo": "^0.24.0"
              },
              "homepage": "https://github.com/lukechilds/keyv",
              "keywords": [
                "key",
                "value",
                "store",
                "cache",
                "ttl"
              ],
              "license": "MIT",
              "main": "src/index.js",
              "name": "keyv",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lukechilds/keyv.git"
              },
              "scripts": {
                "coverage": "nyc report --reporter=text-lcov | coveralls",
                "test": "xo && nyc ava test/keyv.js",
                "test:full": "xo && nyc ava --serial"
              },
              "version": "4.0.0",
              "xo": {
                "extends": "xo-lukechilds"
              },
              "readme": "<h1 align=\"center\">\n\t<img width=\"250\" src=\"https://rawgit.com/lukechilds/keyv/master/media/logo.svg\" alt=\"keyv\">\n\t<br>\n\t<br>\n</h1>\n\n> Simple key-value storage with support for multiple backends\n\n[![Build Status](https://travis-ci.org/lukechilds/keyv.svg?branch=master)](https://travis-ci.org/lukechilds/keyv)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv?branch=master)\n[![npm](https://img.shields.io/npm/dm/keyv.svg)](https://www.npmjs.com/package/keyv)\n[![npm](https://img.shields.io/npm/v/keyv.svg)](https://www.npmjs.com/package/keyv)\n\nKeyv provides a consistent interface for key-value storage across multiple backends via storage adapters. It supports TTL based expiry, making it suitable as a cache or a persistent key-value store.\n\n## Features\n\nThere are a few existing modules similar to Keyv, however Keyv is different because it:\n\n- Isn't bloated\n- Has a simple Promise based API\n- Suitable as a TTL based cache or persistent key-value store\n- [Easily embeddable](#add-cache-support-to-your-module) inside another module\n- Works with any storage that implements the [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) API\n- Handles all JSON types plus `Buffer`\n- Supports namespaces\n- Wide range of [**efficient, well tested**](#official-storage-adapters) storage adapters\n- Connection errors are passed through (db failures won't kill your app)\n- Supports the current active LTS version of Node.js or higher\n\n## Usage\n\nInstall Keyv.\n\n```\nnpm install --save keyv\n```\n\nBy default everything is stored in memory, you can optionally also install a storage adapter.\n\n```\nnpm install --save @keyv/redis\nnpm install --save @keyv/mongo\nnpm install --save @keyv/sqlite\nnpm install --save @keyv/postgres\nnpm install --save @keyv/mysql\n```\n\nCreate a new Keyv instance, passing your connection string if applicable. Keyv will automatically load the correct storage adapter.\n\n```js\nconst Keyv = require('keyv');\n\n// One of the following\nconst keyv = new Keyv();\nconst keyv = new Keyv('redis://user:pass@localhost:6379');\nconst keyv = new Keyv('mongodb://user:pass@localhost:27017/dbname');\nconst keyv = new Keyv('sqlite://path/to/database.sqlite');\nconst keyv = new Keyv('postgresql://user:pass@localhost:5432/dbname');\nconst keyv = new Keyv('mysql://user:pass@localhost:3306/dbname');\n\n// Handle DB connection errors\nkeyv.on('error', err => console.log('Connection Error', err));\n\nawait keyv.set('foo', 'expires in 1 second', 1000); // true\nawait keyv.set('foo', 'never expires'); // true\nawait keyv.get('foo'); // 'never expires'\nawait keyv.delete('foo'); // true\nawait keyv.clear(); // undefined\n```\n\n### Namespaces\n\nYou can namespace your Keyv instance to avoid key collisions and allow you to clear only a certain namespace while using the same database.\n\n```js\nconst users = new Keyv('redis://user:pass@localhost:6379', { namespace: 'users' });\nconst cache = new Keyv('redis://user:pass@localhost:6379', { namespace: 'cache' });\n\nawait users.set('foo', 'users'); // true\nawait cache.set('foo', 'cache'); // true\nawait users.get('foo'); // 'users'\nawait cache.get('foo'); // 'cache'\nawait users.clear(); // undefined\nawait users.get('foo'); // undefined\nawait cache.get('foo'); // 'cache'\n```\n\n### Custom Serializers\n\nKeyv uses [`json-buffer`](https://github.com/dominictarr/json-buffer) for data serialization to ensure consistency across different backends.\n\nYou can optionally provide your own serialization functions to support extra data types or to serialize to something other than JSON.\n\n```js\nconst keyv = new Keyv({ serialize: JSON.stringify, deserialize: JSON.parse });\n```\n\n**Warning:** Using custom serializers means you lose any guarantee of data consistency. You should do extensive testing with your serialisation functions and chosen storage engine.\n\n## Official Storage Adapters\n\nThe official storage adapters are covered by [over 150 integration tests](https://travis-ci.org/lukechilds/keyv/jobs/260418145) to guarantee consistent behaviour. They are lightweight, efficient wrappers over the DB clients making use of indexes and native TTLs where available.\n\nDatabase | Adapter | Native TTL | Status\n---|---|---|---\nRedis | [@keyv/redis](https://github.com/lukechilds/keyv-redis) | Yes | [![Build Status](https://travis-ci.org/lukechilds/keyv-redis.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-redis) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-redis/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-redis?branch=master)\nMongoDB | [@keyv/mongo](https://github.com/lukechilds/keyv-mongo) | Yes | [![Build Status](https://travis-ci.org/lukechilds/keyv-mongo.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-mongo) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-mongo/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-mongo?branch=master)\nSQLite | [@keyv/sqlite](https://github.com/lukechilds/keyv-sqlite) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-sqlite.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-sqlite) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-sqlite/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-sqlite?branch=master)\nPostgreSQL | [@keyv/postgres](https://github.com/lukechilds/keyv-postgres) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-postgres.svg?branch=master)](https://travis-ci.org/lukechildskeyv-postgreskeyv) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-postgres/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-postgres?branch=master)\nMySQL | [@keyv/mysql](https://github.com/lukechilds/keyv-mysql) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-mysql.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-mysql) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-mysql/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-mysql?branch=master)\n\n## Third-party Storage Adapters\n\nYou can also use third-party storage adapters or build your own. Keyv will wrap these storage adapters in TTL functionality and handle complex types internally.\n\n```js\nconst Keyv = require('keyv');\nconst myAdapter = require('./my-storage-adapter');\n\nconst keyv = new Keyv({ store: myAdapter });\n```\n\nAny store that follows the [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) api will work.\n\n```js\nnew Keyv({ store: new Map() });\n```\n\nFor example, [`quick-lru`](https://github.com/sindresorhus/quick-lru) is a completely unrelated module that implements the Map API.\n\n```js\nconst Keyv = require('keyv');\nconst QuickLRU = require('quick-lru');\n\nconst lru = new QuickLRU({ maxSize: 1000 });\nconst keyv = new Keyv({ store: lru });\n```\n\nThe following are third-party storage adapters compatible with Keyv:\n\n- [quick-lru](https://github.com/sindresorhus/quick-lru) - Simple \"Least Recently Used\" (LRU) cache\n- [keyv-file](https://github.com/zaaack/keyv-file) - File system storage adapter for Keyv\n- [keyv-dynamodb](https://www.npmjs.com/package/keyv-dynamodb) - DynamoDB storage adapter for Keyv\n- [keyv-firestore ](https://github.com/goto-bus-stop/keyv-firestore) – Firebase Cloud Firestore adapter for Keyv\n- [keyv-mssql](https://github.com/pmorgan3/keyv-mssql) - Microsoft Sql Server adapter for Keyv\n- [keyv-memcache](https://github.com/jaredwray/keyv-memcache) - Memcache storage adapter for Keyv\n\n## Add Cache Support to your Module\n\nKeyv is designed to be easily embedded into other modules to add cache support. The recommended pattern is to expose a `cache` option in your modules options which is passed through to Keyv. Caching will work in memory by default and users have the option to also install a Keyv storage adapter and pass in a connection string, or any other storage that implements the `Map` API.\n\nYou should also set a namespace for your module so you can safely call `.clear()` without clearing unrelated app data.\n\nInside your module:\n\n```js\nclass AwesomeModule {\n\tconstructor(opts) {\n\t\tthis.cache = new Keyv({\n\t\t\turi: typeof opts.cache === 'string' && opts.cache,\n\t\t\tstore: typeof opts.cache !== 'string' && opts.cache,\n\t\t\tnamespace: 'awesome-module'\n\t\t});\n\t}\n}\n```\n\nNow it can be consumed like this:\n\n```js\nconst AwesomeModule = require('awesome-module');\n\n// Caches stuff in memory by default\nconst awesomeModule = new AwesomeModule();\n\n// After npm install --save keyv-redis\nconst awesomeModule = new AwesomeModule({ cache: 'redis://localhost' });\n\n// Some third-party module that implements the Map API\nconst awesomeModule = new AwesomeModule({ cache: some3rdPartyStore });\n```\n\n## API\n\n### new Keyv([uri], [options])\n\nReturns a new Keyv instance.\n\nThe Keyv instance is also an `EventEmitter` that will emit an `'error'` event if the storage adapter connection fails.\n\n### uri\n\nType: `String`<br>\nDefault: `undefined`\n\nThe connection string URI.\n\nMerged into the options object as options.uri.\n\n### options\n\nType: `Object`\n\nThe options object is also passed through to the storage adapter. Check your storage adapter docs for any extra options.\n\n#### options.namespace\n\nType: `String`<br>\nDefault: `'keyv'`\n\nNamespace for the current instance.\n\n#### options.ttl\n\nType: `Number`<br>\nDefault: `undefined`\n\nDefault TTL. Can be overridden by specififying a TTL on `.set()`.\n\n#### options.serialize\n\nType: `Function`<br>\nDefault: `JSONB.stringify`\n\nA custom serialization function.\n\n#### options.deserialize\n\nType: `Function`<br>\nDefault: `JSONB.parse`\n\nA custom deserialization function.\n\n#### options.store\n\nType: `Storage adapter instance`<br>\nDefault: `new Map()`\n\nThe storage adapter instance to be used by Keyv.\n\n#### options.adapter\n\nType: `String`<br>\nDefault: `undefined`\n\nSpecify an adapter to use. e.g `'redis'` or `'mongodb'`.\n\n### Instance\n\nKeys must always be strings. Values can be of any type.\n\n#### .set(key, value, [ttl])\n\nSet a value.\n\nBy default keys are persistent. You can set an expiry TTL in milliseconds.\n\nReturns a promise which resolves to `true`.\n\n#### .get(key, [options])\n\nReturns a promise which resolves to the retrieved value.\n\n##### options.raw\n\nType: `Boolean`<br>\nDefault: `false`\n\nIf set to true the raw DB object Keyv stores internally will be returned instead of just the value.\n\nThis contains the TTL timestamp.\n\n#### .delete(key)\n\nDeletes an entry.\n\nReturns a promise which resolves to `true` if the key existed, `false` if not.\n\n#### .clear()\n\nDelete all entries in the current namespace.\n\nReturns a promise which is resolved when the entries have been cleared.\n\n## License\n\nMIT © Luke Childs\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "json-buffer": "3.0.1"
              },
              "path": "/path/to/project/packages/shared/node_modules/keyv",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "A cacheable dns.lookup(…) that respects the TTL",
          "devDependencies": {
            "@types/keyv": "^3.1.1",
            "ava": "^3.1.0",
            "benchmark": "^2.1.4",
            "coveralls": "^3.0.9",
            "nyc": "^15.0.0",
            "proxyquire": "^2.1.3",
            "tsd": "^0.11.0",
            "xo": "^0.25.3"
          },
          "engines": {
            "node": ">=10"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/szmarczak/cacheable-lookup#readme",
          "keywords": [
            "dns",
            "lookup",
            "cacheable",
            "ttl"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "cacheable-lookup",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/szmarczak/cacheable-lookup.git"
          },
          "scripts": {
            "test": "xo && nyc ava && tsd"
          },
          "version": "2.0.0",
          "readme": "# cacheable-lookup\n\n> A cacheable [`dns.lookup(…)`](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback) that respects TTL :tada:\n\n[![Build Status](https://travis-ci.org/szmarczak/cacheable-lookup.svg?branch=master)](https://travis-ci.org/szmarczak/cacheable-lookup)\n[![Coverage Status](https://coveralls.io/repos/github/szmarczak/cacheable-lookup/badge.svg?branch=master)](https://coveralls.io/github/szmarczak/cacheable-lookup?branch=master)\n[![npm](https://img.shields.io/npm/dm/cacheable-lookup.svg)](https://www.npmjs.com/package/cacheable-lookup)\n[![install size](https://packagephobia.now.sh/badge?p=cacheable-lookup)](https://packagephobia.now.sh/result?p=cacheable-lookup)\n\nMaking lots of HTTP requests? You can save some time by caching DNS lookups.<br>\nDon't worry, this package respects TTL :smiley:\n\n## Usage\n\n### Using the `lookup` option\n\n```js\nconst http = require('http');\nconst CacheableLookup = require('cacheable-lookup');\nconst cacheable = new CacheableLookup();\n\nhttp.get('https://example.com', {lookup: cacheable.lookup}, response => {\n\t// Handle the response here\n});\n```\n\n### Attaching CacheableLookup to an Agent\n\n```js\nconst http = require('http');\nconst CacheableLookup = require('cacheable-lookup');\nconst cacheable = new CacheableLookup();\n\ncacheable.install(http.globalAgent);\n\nhttp.get('https://example.com', response => {\n\t// Handle the response here\n});\n```\n\n## API\n\n### new CacheableLookup(options)\n\nReturns a new instance of `CacheableLookup`.\n\n#### options\n\nType: `Object`<br>\nDefault: `{}`\n\nOptions used to cache the DNS lookups.\n\n##### options.cacheAdapter\n\nType: [Keyv adapter instance](https://github.com/lukechilds/keyv)<br>\nDefault: `new Map()`\n\nA Keyv adapter which stores the cache.\n\n##### options.maxTtl\n\nType: `number`<br>\nDefault: `Infinity`\n\nLimits the cache time (TTL in seconds).\n\nIf set to `0`, it will make a new DNS query each time.\n\n##### options.resolver\n\nType: `Function`<br>\nDefault: [`new dns.Resolver()`](https://nodejs.org/api/dns.html#dns_class_dns_resolver)\n\nAn instance of [DNS Resolver](https://nodejs.org/api/dns.html#dns_class_dns_resolver) used to make DNS queries.\n\n### Entry object\n\nType: `Object`\n\n#### address\n\nType: `string`\n\nThe IP address (can be an IPv4 or IPv6 address).\n\n#### family\n\nType: `number`\n\nThe IP family (`4` or `6`).\n\n##### expires\n\nType: `number`\n\n**Note**: This is not present when using the native `dns.lookup(...)`!\n\nThe timestamp (`Date.now() + ttl * 1000`) when the entry expires.\n\n#### ttl\n\n**Note**: This is not present when using the native `dns.lookup(...)`!\n\nThe time in seconds for its lifetime.\n\n### Entry object (callback-style)\n\nWhen `options.all` is `false`, then `callback(error, address, family, expires, ttl)` is called. <br>\nWhen `options.all` is `true`, then `callback(error, entries)` is called.\n\n### CacheableLookup instance\n\n#### servers\n\nType: `Array`\n\nDNS servers used to make the query. Can be overridden - then the new servers will be used.\n\n#### [lookup(hostname, options, callback)](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback)\n\n#### lookupAsync(hostname, options)\n\nThe asynchronous version of `dns.lookup(…)`.\n\nReturns an [entry object](#entry-object).<br>\nIf `options.all` is true, returns an array of entry objects.\n\n**Note**: If entry(ies) were not found, it will return `undefined`.\n\n##### hostname\n\nType: `string`\n\n##### options\n\nType: `Object`\n\nThe same as the [`dns.lookup(…)`](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback) options.\n\n##### options.throwNotFound\n\nType: `boolean`<br>\nDefault: `false`\n\nThrow when there's no match.\n\nIf set to `false` and it gets no match, it will return `undefined`.\n\n**Note**: This option is meant **only** for the asynchronous implementation! The synchronous version will always give an error if no match found.\n\n#### query(hostname, family)\n\nAn asynchronous function which returns cached DNS lookup entries. This is the base for `lookupAsync(hostname, options)` and `lookup(hostname, options, callback)`.\n\n**Note**: This function has no options.\n\nReturns an array of objects with `address`, `family`, `ttl` and `expires` properties.\n\n#### queryAndCache(hostname, family)\n\nAn asynchronous function which makes a new DNS lookup query and updates the database. This is used by `query(hostname, family)` if no entry in the database is present.\n\nReturns an array of objects with `address`, `family`, `ttl` and `expires` properties.\n\n#### updateInterfaceInfo()\n\nUpdates interface info. For example, you need to run this when you plug or unplug your WiFi driver.\n\n## High performance\n\nSee the benchmarks (queries `localhost`, performed on i7-7700k):\n\n```\nCacheableLookup#lookupAsync                x 265,390 ops/sec ±0.65%  (89 runs sampled)\nCacheableLookup#lookupAsync.all            x 119,187 ops/sec ±2.57%  (87 runs sampled)\nCacheableLookup#lookupAsync.all.ADDRCONFIG x 119,666 ops/sec ±0.75%  (89 runs sampled)\nCacheableLookup#lookup                     x 116,604 ops/sec ±0.68%  (88 runs sampled)\nCacheableLookup#lookup.all                 x 115,627 ops/sec ±0.72%  (89 runs sampled)\nCacheableLookup#lookup.all.ADDRCONFIG      x 115,578 ops/sec ±0.90%  (88 runs sampled)\nCacheableLookup#lookupAsync - zero TTL     x 60.83   ops/sec ±7.43%  (51 runs sampled)\nCacheableLookup#lookup      - zero TTL     x 49.22   ops/sec ±20.58% (49 runs sampled)\ndns#resolve4                               x 63.00   ops/sec ±5.88%  (51 runs sampled)\ndns#lookup                                 x 21,303  ops/sec ±29.06% (35 runs sampled)\ndns#lookup.all                             x 22,283  ops/sec ±21.96% (38 runs sampled)\ndns#lookup.all.ADDRCONFIG                  x 5,922   ops/sec ±10.18% (38 runs sampled)\nFastest is CacheableLookup#lookupAsync\n```\n\nThe package is based on [`dns.resolve4(…)`](https://nodejs.org/api/dns.html#dns_dns_resolve4_hostname_options_callback) and [`dns.resolve6(…)`](https://nodejs.org/api/dns.html#dns_dns_resolve6_hostname_options_callback).\n\n[Why not `dns.lookup(…)`?](https://github.com/nodejs/node/issues/25560#issuecomment-455596215)\n\n> It is not possible to use `dns.lookup(…)` because underlying calls like [getaddrinfo](http://man7.org/linux/man-pages/man3/getaddrinfo.3.html) have no concept of servers or TTL (caching is done on OS level instead).\n\n## Related\n\n - [cacheable-request](https://github.com/lukechilds/cacheable-request) - Wrap native HTTP requests with RFC compliant cache support\n\n## License\n\nMIT\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "keyv": "^4.0.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/cacheable-lookup",
          "error": "[Circular]",
          "extraneous": false
        },
        "cacheable-request": {
          "_args": [
            [
              "cacheable-request@7.0.1",
              "/path/to/project/packages/shared"
            ],
            [
              "cacheable-request@7.0.1",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "cacheable-request@7.0.1",
          "_id": "cacheable-request@7.0.1",
          "_integrity": "sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==",
          "_location": "/cacheable-request",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "cacheable-request@7.0.1",
            "name": "cacheable-request",
            "escapedName": "cacheable-request",
            "rawSpec": "7.0.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "7.0.1"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.1.tgz",
          "_spec": "7.0.1",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Luke Childs",
            "email": "lukechilds123@gmail.com",
            "url": "http://lukechilds.co.uk"
          },
          "bugs": {
            "url": "https://github.com/lukechilds/cacheable-request/issues"
          },
          "dependencies": {
            "clone-response": {
              "_args": [
                [
                  "clone-response@1.0.2",
                  "/path/to/project/packages/shared"
                ],
                [
                  "clone-response@1.0.2",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "clone-response@1.0.2",
              "_id": "clone-response@1.0.2",
              "_integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
              "_location": "/clone-response",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "clone-response@1.0.2",
                "name": "clone-response",
                "escapedName": "clone-response",
                "rawSpec": "1.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.2"
              },
              "_requiredBy": [
                "/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
              "_spec": "1.0.2",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Luke Childs",
                "email": "lukechilds123@gmail.com",
                "url": "http://lukechilds.co.uk"
              },
              "bugs": {
                "url": "https://github.com/lukechilds/clone-response/issues"
              },
              "dependencies": {
                "mimic-response": {
                  "_args": [
                    [
                      "mimic-response@1.0.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "mimic-response@1.0.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "mimic-response@1.0.1",
                  "_id": "mimic-response@1.0.1",
                  "_integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
                  "_location": "/clone-response/mimic-response",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "mimic-response@1.0.1",
                    "name": "mimic-response",
                    "escapedName": "mimic-response",
                    "rawSpec": "1.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.1"
                  },
                  "_requiredBy": [
                    "/clone-response"
                  ],
                  "_resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
                  "_spec": "1.0.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/mimic-response/issues"
                  },
                  "description": "Mimic a Node.js HTTP response stream",
                  "devDependencies": {
                    "ava": "*",
                    "create-test-server": "^0.1.0",
                    "pify": "^3.0.0",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=4"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/mimic-response#readme",
                  "keywords": [
                    "mimic",
                    "response",
                    "stream",
                    "http",
                    "https",
                    "request",
                    "get",
                    "core"
                  ],
                  "license": "MIT",
                  "name": "mimic-response",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/mimic-response.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "1.0.1",
                  "readme": "# mimic-response [![Build Status](https://travis-ci.org/sindresorhus/mimic-response.svg?branch=master)](https://travis-ci.org/sindresorhus/mimic-response)\n\n> Mimic a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n\n## Install\n\n```\n$ npm install mimic-response\n```\n\n\n## Usage\n\n```js\nconst stream = require('stream');\nconst mimicResponse = require('mimic-response');\n\nconst responseStream = getHttpResponseStream();\nconst myStream = new stream.PassThrough();\n\nmimicResponse(responseStream, myStream);\n\nconsole.log(myStream.statusCode);\n//=> 200\n```\n\n\n## API\n\n### mimicResponse(from, to)\n\n#### from\n\nType: `Stream`\n\n[Node.js HTTP response stream.](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n#### to\n\nType: `Stream`\n\nAny stream.\n\n\n## Related\n\n- [mimic-fn](https://github.com/sindresorhus/mimic-fn) - Make a function mimic another one\n- [clone-response](https://github.com/lukechilds/clone-response) - Clone a Node.js response stream\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/clone-response/node_modules/mimic-response",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Clone a Node.js HTTP response stream",
              "devDependencies": {
                "ava": "^0.22.0",
                "coveralls": "^2.13.1",
                "create-test-server": "^2.0.1",
                "eslint-config-xo-lukechilds": "^1.0.0",
                "get-stream": "^3.0.0",
                "nyc": "^11.0.2",
                "pify": "^3.0.0",
                "xo": "^0.19.0"
              },
              "homepage": "https://github.com/lukechilds/clone-response",
              "keywords": [
                "clone",
                "duplicate",
                "copy",
                "response",
                "HTTP",
                "stream"
              ],
              "license": "MIT",
              "main": "src/index.js",
              "name": "clone-response",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lukechilds/clone-response.git"
              },
              "scripts": {
                "coverage": "nyc report --reporter=text-lcov | coveralls",
                "test": "xo && nyc ava"
              },
              "version": "1.0.2",
              "xo": {
                "extends": "xo-lukechilds"
              },
              "readme": "# clone-response\n\n> Clone a Node.js HTTP response stream\n\n[![Build Status](https://travis-ci.org/lukechilds/clone-response.svg?branch=master)](https://travis-ci.org/lukechilds/clone-response)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/clone-response/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/clone-response?branch=master)\n[![npm](https://img.shields.io/npm/dm/clone-response.svg)](https://www.npmjs.com/package/clone-response)\n[![npm](https://img.shields.io/npm/v/clone-response.svg)](https://www.npmjs.com/package/clone-response)\n\nReturns a new stream and copies over all properties and methods from the original response giving you a complete duplicate.\n\nThis is useful in situations where you need to consume the response stream but also want to pass an unconsumed stream somewhere else to be consumed later.\n\n## Install\n\n```shell\nnpm install --save clone-response\n```\n\n## Usage\n\n```js\nconst http = require('http');\nconst cloneResponse = require('clone-response');\n\nhttp.get('http://example.com', response => {\n  const clonedResponse = cloneResponse(response);\n  response.pipe(process.stdout);\n\n  setImmediate(() => {\n    // The response stream has already been consumed by the time this executes,\n    // however the cloned response stream is still available.\n    doSomethingWithResponse(clonedResponse);\n  });\n});\n```\n\nPlease bear in mind that the process of cloning a stream consumes it. However, you can consume a stream multiple times in the same tick, therefore allowing you to create multiple clones. e.g:\n\n```js\nconst clone1 = cloneResponse(response);\nconst clone2 = cloneResponse(response);\n// response can still be consumed in this tick but cannot be consumed if passed\n// into any async callbacks. clone1 and clone2 can be passed around and be\n// consumed in the future.\n```\n\n## API\n\n### cloneResponse(response)\n\nReturns a clone of the passed in response.\n\n#### response\n\nType: `stream`\n\nA [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage) to clone.\n\n## License\n\nMIT © Luke Childs\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "mimic-response": "^1.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/clone-response",
              "error": "[Circular]",
              "extraneous": false
            },
            "get-stream": {
              "_args": [
                [
                  "get-stream@5.1.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "get-stream@5.1.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "get-stream@5.1.0",
              "_id": "get-stream@5.1.0",
              "_integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
              "_location": "/get-stream",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "get-stream@5.1.0",
                "name": "get-stream",
                "escapedName": "get-stream",
                "rawSpec": "5.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "5.1.0"
              },
              "_requiredBy": [
                "/cacheable-request",
                "/got"
              ],
              "_resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
              "_spec": "5.1.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/get-stream/issues"
              },
              "dependencies": {},
              "description": "Get a stream as a string, buffer, or array",
              "devDependencies": {
                "@types/node": "^11.13.0",
                "ava": "^1.4.1",
                "into-stream": "^5.0.0",
                "tsd": "^0.7.2",
                "xo": "^0.24.0"
              },
              "engines": {
                "node": ">=8"
              },
              "files": [
                "index.js",
                "index.d.ts",
                "buffer-stream.js"
              ],
              "homepage": "https://github.com/sindresorhus/get-stream#readme",
              "keywords": [
                "get",
                "stream",
                "promise",
                "concat",
                "string",
                "text",
                "buffer",
                "read",
                "data",
                "consume",
                "readable",
                "readablestream",
                "array",
                "object"
              ],
              "license": "MIT",
              "name": "get-stream",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/get-stream.git"
              },
              "scripts": {
                "test": "xo && ava && tsd"
              },
              "version": "5.1.0",
              "readme": "# get-stream [![Build Status](https://travis-ci.org/sindresorhus/get-stream.svg?branch=master)](https://travis-ci.org/sindresorhus/get-stream)\n\n> Get a stream as a string, buffer, or array\n\n\n## Install\n\n```\n$ npm install get-stream\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst getStream = require('get-stream');\n\n(async () => {\n\tconst stream = fs.createReadStream('unicorn.txt');\n\n\tconsole.log(await getStream(stream));\n\t/*\n\t              ,,))))))));,\n\t           __)))))))))))))),\n\t\\|/       -\\(((((''''((((((((.\n\t-*-==//////((''  .     `)))))),\n\t/|\\      ))| o    ;-.    '(((((                                  ,(,\n\t         ( `|    /  )    ;))))'                               ,_))^;(~\n\t            |   |   |   ,))((((_     _____------~~~-.        %,;(;(>';'~\n\t            o_);   ;    )))(((` ~---~  `::           \\      %%~~)(v;(`('~\n\t                  ;    ''''````         `:       `:::|\\,__,%%    );`'; ~\n\t                 |   _                )     /      `:|`----'     `-'\n\t           ______/\\/~    |                 /        /\n\t         /~;;.____/;;'  /          ___--,-(   `;;;/\n\t        / //  _;______;'------~~~~~    /;;/\\    /\n\t       //  | |                        / ;   \\;;,\\\n\t      (<_  | ;                      /',/-----'  _>\n\t       \\_| ||_                     //~;~~~~~~~~~\n\t           `\\_|                   (,~~\n\t                                   \\~\\\n\t                                    ~~\n\t*/\n})();\n```\n\n\n## API\n\nThe methods returns a promise that resolves when the `end` event fires on the stream, indicating that there is no more data to be read. The stream is switched to flowing mode.\n\n### getStream(stream, [options])\n\nGet the `stream` as a string.\n\n#### options\n\nType: `Object`\n\n##### encoding\n\nType: `string`<br>\nDefault: `utf8`\n\n[Encoding](https://nodejs.org/api/buffer.html#buffer_buffer) of the incoming stream.\n\n##### maxBuffer\n\nType: `number`<br>\nDefault: `Infinity`\n\nMaximum length of the returned string. If it exceeds this value before the stream ends, the promise will be rejected with a `getStream.MaxBufferError` error.\n\n### getStream.buffer(stream, [options])\n\nGet the `stream` as a buffer.\n\nIt honors the `maxBuffer` option as above, but it refers to byte length rather than string length.\n\n### getStream.array(stream, [options])\n\nGet the `stream` as an array of values.\n\nIt honors both the `maxBuffer` and `encoding` options. The behavior changes slightly based on the encoding chosen:\n\n- When `encoding` is unset, it assumes an [object mode stream](https://nodesource.com/blog/understanding-object-streams/) and collects values emitted from `stream` unmodified. In this case `maxBuffer` refers to the number of items in the array (not the sum of their sizes).\n\n- When `encoding` is set to `buffer`, it collects an array of buffers. `maxBuffer` refers to the summed byte lengths of every buffer in the array.\n\n- When `encoding` is set to anything else, it collects an array of strings. `maxBuffer` refers to the summed character lengths of every string in the array.\n\n\n## Errors\n\nIf the input stream emits an `error` event, the promise will be rejected with the error. The buffered data will be attached to the `bufferedData` property of the error.\n\n```js\n(async () => {\n\ttry {\n\t\tawait getStream(streamThatErrorsAtTheEnd('unicorn'));\n\t} catch (error) {\n\t\tconsole.log(error.bufferedData);\n\t\t//=> 'unicorn'\n\t}\n})()\n```\n\n\n## FAQ\n\n### How is this different from [`concat-stream`](https://github.com/maxogden/concat-stream)?\n\nThis module accepts a stream instead of being one and returns a promise instead of using a callback. The API is simpler and it only supports returning a string, buffer, or array. It doesn't have a fragile type inference. You explicitly choose what you want. And it doesn't depend on the huge `readable-stream` package.\n\n\n## Related\n\n- [get-stdin](https://github.com/sindresorhus/get-stdin) - Get stdin as a string or buffer\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "pump": "^3.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/get-stream",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "get-stream"
            },
            "http-cache-semantics": {
              "_args": [
                [
                  "http-cache-semantics@4.1.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "http-cache-semantics@4.1.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "http-cache-semantics@4.1.0",
              "_id": "http-cache-semantics@4.1.0",
              "_integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
              "_location": "/http-cache-semantics",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "http-cache-semantics@4.1.0",
                "name": "http-cache-semantics",
                "escapedName": "http-cache-semantics",
                "rawSpec": "4.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.1.0"
              },
              "_requiredBy": [
                "/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
              "_spec": "4.1.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Kornel Lesiński",
                "email": "kornel@geekhood.net",
                "url": "https://kornel.ski/"
              },
              "bugs": {
                "url": "https://github.com/kornelski/http-cache-semantics/issues"
              },
              "description": "Parses Cache-Control and other headers. Helps building correct HTTP caches and proxies",
              "devDependencies": {
                "eslint": "^5.13.0",
                "eslint-plugin-prettier": "^3.0.1",
                "husky": "^0.14.3",
                "lint-staged": "^8.1.3",
                "mocha": "^5.1.0",
                "prettier": "^1.14.3",
                "prettier-eslint-cli": "^4.7.1"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/kornelski/http-cache-semantics#readme",
              "license": "BSD-2-Clause",
              "main": "index.js",
              "name": "http-cache-semantics",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/kornelski/http-cache-semantics.git"
              },
              "scripts": {
                "test": "mocha"
              },
              "version": "4.1.0",
              "readme": "# Can I cache this? [![Build Status](https://travis-ci.org/kornelski/http-cache-semantics.svg?branch=master)](https://travis-ci.org/kornelski/http-cache-semantics)\n\n`CachePolicy` tells when responses can be reused from a cache, taking into account [HTTP RFC 7234](http://httpwg.org/specs/rfc7234.html) rules for user agents and shared caches.\nIt also implements [RFC 5861](https://tools.ietf.org/html/rfc5861), implementing `stale-if-error` and `stale-while-revalidate`.\nIt's aware of many tricky details such as the `Vary` header, proxy revalidation, and authenticated responses.\n\n## Usage\n\nCacheability of an HTTP response depends on how it was requested, so both `request` and `response` are required to create the policy.\n\n```js\nconst policy = new CachePolicy(request, response, options);\n\nif (!policy.storable()) {\n    // throw the response away, it's not usable at all\n    return;\n}\n\n// Cache the data AND the policy object in your cache\n// (this is pseudocode, roll your own cache (lru-cache package works))\nletsPretendThisIsSomeCache.set(\n    request.url,\n    { policy, response },\n    policy.timeToLive()\n);\n```\n\n```js\n// And later, when you receive a new request:\nconst { policy, response } = letsPretendThisIsSomeCache.get(newRequest.url);\n\n// It's not enough that it exists in the cache, it has to match the new request, too:\nif (policy && policy.satisfiesWithoutRevalidation(newRequest)) {\n    // OK, the previous response can be used to respond to the `newRequest`.\n    // Response headers have to be updated, e.g. to add Age and remove uncacheable headers.\n    response.headers = policy.responseHeaders();\n    return response;\n}\n```\n\nIt may be surprising, but it's not enough for an HTTP response to be [fresh](#yo-fresh) to satisfy a request. It may need to match request headers specified in `Vary`. Even a matching fresh response may still not be usable if the new request restricted cacheability, etc.\n\nThe key method is `satisfiesWithoutRevalidation(newRequest)`, which checks whether the `newRequest` is compatible with the original request and whether all caching conditions are met.\n\n### Constructor options\n\nRequest and response must have a `headers` property with all header names in lower case. `url`, `status` and `method` are optional (defaults are any URL, status `200`, and `GET` method).\n\n```js\nconst request = {\n    url: '/',\n    method: 'GET',\n    headers: {\n        accept: '*/*',\n    },\n};\n\nconst response = {\n    status: 200,\n    headers: {\n        'cache-control': 'public, max-age=7234',\n    },\n};\n\nconst options = {\n    shared: true,\n    cacheHeuristic: 0.1,\n    immutableMinTimeToLive: 24 * 3600 * 1000, // 24h\n    ignoreCargoCult: false,\n};\n```\n\nIf `options.shared` is `true` (default), then the response is evaluated from a perspective of a shared cache (i.e. `private` is not cacheable and `s-maxage` is respected). If `options.shared` is `false`, then the response is evaluated from a perspective of a single-user cache (i.e. `private` is cacheable and `s-maxage` is ignored). `shared: true` is recommended for HTTP clients.\n\n`options.cacheHeuristic` is a fraction of response's age that is used as a fallback cache duration. The default is 0.1 (10%), e.g. if a file hasn't been modified for 100 days, it'll be cached for 100\\*0.1 = 10 days.\n\n`options.immutableMinTimeToLive` is a number of milliseconds to assume as the default time to cache responses with `Cache-Control: immutable`. Note that [per RFC](http://httpwg.org/http-extensions/immutable.html) these can become stale, so `max-age` still overrides the default.\n\nIf `options.ignoreCargoCult` is true, common anti-cache directives will be completely ignored if the non-standard `pre-check` and `post-check` directives are present. These two useless directives are most commonly found in bad StackOverflow answers and PHP's \"session limiter\" defaults.\n\n### `storable()`\n\nReturns `true` if the response can be stored in a cache. If it's `false` then you MUST NOT store either the request or the response.\n\n### `satisfiesWithoutRevalidation(newRequest)`\n\nThis is the most important method. Use this method to check whether the cached response is still fresh in the context of the new request.\n\nIf it returns `true`, then the given `request` matches the original response this cache policy has been created with, and the response can be reused without contacting the server. Note that the old response can't be returned without being updated, see `responseHeaders()`.\n\nIf it returns `false`, then the response may not be matching at all (e.g. it's for a different URL or method), or may require to be refreshed first (see `revalidationHeaders()`).\n\n### `responseHeaders()`\n\nReturns updated, filtered set of response headers to return to clients receiving the cached response. This function is necessary, because proxies MUST always remove hop-by-hop headers (such as `TE` and `Connection`) and update response's `Age` to avoid doubling cache time.\n\n```js\ncachedResponse.headers = cachePolicy.responseHeaders(cachedResponse);\n```\n\n### `timeToLive()`\n\nReturns approximate time in _milliseconds_ until the response becomes stale (i.e. not fresh).\n\nAfter that time (when `timeToLive() <= 0`) the response might not be usable without revalidation. However, there are exceptions, e.g. a client can explicitly allow stale responses, so always check with `satisfiesWithoutRevalidation()`.\n`stale-if-error` and `stale-while-revalidate` extend the time to live of the cache, that can still be used if stale.\n\n### `toObject()`/`fromObject(json)`\n\nChances are you'll want to store the `CachePolicy` object along with the cached response. `obj = policy.toObject()` gives a plain JSON-serializable object. `policy = CachePolicy.fromObject(obj)` creates an instance from it.\n\n### Refreshing stale cache (revalidation)\n\nWhen a cached response has expired, it can be made fresh again by making a request to the origin server. The server may respond with status 304 (Not Modified) without sending the response body again, saving bandwidth.\n\nThe following methods help perform the update efficiently and correctly.\n\n#### `revalidationHeaders(newRequest)`\n\nReturns updated, filtered set of request headers to send to the origin server to check if the cached response can be reused. These headers allow the origin server to return status 304 indicating the response is still fresh. All headers unrelated to caching are passed through as-is.\n\nUse this method when updating cache from the origin server.\n\n```js\nupdateRequest.headers = cachePolicy.revalidationHeaders(updateRequest);\n```\n\n#### `revalidatedPolicy(revalidationRequest, revalidationResponse)`\n\nUse this method to update the cache after receiving a new response from the origin server. It returns an object with two keys:\n\n-   `policy` — A new `CachePolicy` with HTTP headers updated from `revalidationResponse`. You can always replace the old cached `CachePolicy` with the new one.\n-   `modified` — Boolean indicating whether the response body has changed.\n    -   If `false`, then a valid 304 Not Modified response has been received, and you can reuse the old cached response body. This is also affected by `stale-if-error`.\n    -   If `true`, you should use new response's body (if present), or make another request to the origin server without any conditional headers (i.e. don't use `revalidationHeaders()` this time) to get the new resource.\n\n```js\n// When serving requests from cache:\nconst { oldPolicy, oldResponse } = letsPretendThisIsSomeCache.get(\n    newRequest.url\n);\n\nif (!oldPolicy.satisfiesWithoutRevalidation(newRequest)) {\n    // Change the request to ask the origin server if the cached response can be used\n    newRequest.headers = oldPolicy.revalidationHeaders(newRequest);\n\n    // Send request to the origin server. The server may respond with status 304\n    const newResponse = await makeRequest(newRequest);\n\n    // Create updated policy and combined response from the old and new data\n    const { policy, modified } = oldPolicy.revalidatedPolicy(\n        newRequest,\n        newResponse\n    );\n    const response = modified ? newResponse : oldResponse;\n\n    // Update the cache with the newer/fresher response\n    letsPretendThisIsSomeCache.set(\n        newRequest.url,\n        { policy, response },\n        policy.timeToLive()\n    );\n\n    // And proceed returning cached response as usual\n    response.headers = policy.responseHeaders();\n    return response;\n}\n```\n\n# Yo, FRESH\n\n![satisfiesWithoutRevalidation](fresh.jpg)\n\n## Used by\n\n-   [ImageOptim API](https://imageoptim.com/api), [make-fetch-happen](https://github.com/zkat/make-fetch-happen), [cacheable-request](https://www.npmjs.com/package/cacheable-request) ([got](https://www.npmjs.com/package/got)), [npm/registry-fetch](https://github.com/npm/registry-fetch), [etc.](https://github.com/kornelski/http-cache-semantics/network/dependents)\n\n## Implemented\n\n-   `Cache-Control` response header with all the quirks.\n-   `Expires` with check for bad clocks.\n-   `Pragma` response header.\n-   `Age` response header.\n-   `Vary` response header.\n-   Default cacheability of statuses and methods.\n-   Requests for stale data.\n-   Filtering of hop-by-hop headers.\n-   Basic revalidation request\n-   `stale-if-error`\n\n## Unimplemented\n\n-   Merging of range requests, `If-Range` (but correctly supports them as non-cacheable)\n-   Revalidation of multiple representations\n\n### Trusting server `Date`\n\nPer the RFC, the cache should take into account the time between server-supplied `Date` and the time it received the response. The RFC-mandated behavior creates two problems:\n\n * Servers with incorrectly set timezone may add several hours to cache age (or more, if the clock is completely wrong).\n * Even reasonably correct clocks may be off by a couple of seconds, breaking `max-age=1` trick (which is useful for reverse proxies on high-traffic servers).\n\nPrevious versions of this library had an option to ignore the server date if it was \"too inaccurate\". To support the `max-age=1` trick the library also has to ignore dates that pretty accurate. There's no point of having an option to trust dates that are only a bit inaccurate, so this library won't trust any server dates. `max-age` will be interpreted from the time the response has been received, not from when it has been sent. This will affect only [RFC 1149 networks](https://tools.ietf.org/html/rfc1149).\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/http-cache-semantics",
              "error": "[Circular]",
              "extraneous": false
            },
            "keyv": {
              "_args": "[Circular]",
              "_from": "keyv@4.0.0",
              "_id": "keyv@4.0.0",
              "_integrity": "sha512-U7ioE8AimvRVLfw4LffyOIRhL2xVgmE8T22L6i0BucSnBUyv4w+I7VN/zVZwRKHOI6ZRUcdMdWHQ8KSUvGpEog==",
              "_location": "/keyv",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "keyv@4.0.0",
                "name": "keyv",
                "escapedName": "keyv",
                "rawSpec": "4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.0.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/keyv/-/keyv-4.0.0.tgz",
              "_spec": "4.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {},
              "description": "Simple key-value storage with support for multiple backends",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/lukechilds/keyv",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "src/index.js",
              "name": "keyv",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "4.0.0",
              "xo": "[Circular]",
              "readme": "<h1 align=\"center\">\n\t<img width=\"250\" src=\"https://rawgit.com/lukechilds/keyv/master/media/logo.svg\" alt=\"keyv\">\n\t<br>\n\t<br>\n</h1>\n\n> Simple key-value storage with support for multiple backends\n\n[![Build Status](https://travis-ci.org/lukechilds/keyv.svg?branch=master)](https://travis-ci.org/lukechilds/keyv)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv?branch=master)\n[![npm](https://img.shields.io/npm/dm/keyv.svg)](https://www.npmjs.com/package/keyv)\n[![npm](https://img.shields.io/npm/v/keyv.svg)](https://www.npmjs.com/package/keyv)\n\nKeyv provides a consistent interface for key-value storage across multiple backends via storage adapters. It supports TTL based expiry, making it suitable as a cache or a persistent key-value store.\n\n## Features\n\nThere are a few existing modules similar to Keyv, however Keyv is different because it:\n\n- Isn't bloated\n- Has a simple Promise based API\n- Suitable as a TTL based cache or persistent key-value store\n- [Easily embeddable](#add-cache-support-to-your-module) inside another module\n- Works with any storage that implements the [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) API\n- Handles all JSON types plus `Buffer`\n- Supports namespaces\n- Wide range of [**efficient, well tested**](#official-storage-adapters) storage adapters\n- Connection errors are passed through (db failures won't kill your app)\n- Supports the current active LTS version of Node.js or higher\n\n## Usage\n\nInstall Keyv.\n\n```\nnpm install --save keyv\n```\n\nBy default everything is stored in memory, you can optionally also install a storage adapter.\n\n```\nnpm install --save @keyv/redis\nnpm install --save @keyv/mongo\nnpm install --save @keyv/sqlite\nnpm install --save @keyv/postgres\nnpm install --save @keyv/mysql\n```\n\nCreate a new Keyv instance, passing your connection string if applicable. Keyv will automatically load the correct storage adapter.\n\n```js\nconst Keyv = require('keyv');\n\n// One of the following\nconst keyv = new Keyv();\nconst keyv = new Keyv('redis://user:pass@localhost:6379');\nconst keyv = new Keyv('mongodb://user:pass@localhost:27017/dbname');\nconst keyv = new Keyv('sqlite://path/to/database.sqlite');\nconst keyv = new Keyv('postgresql://user:pass@localhost:5432/dbname');\nconst keyv = new Keyv('mysql://user:pass@localhost:3306/dbname');\n\n// Handle DB connection errors\nkeyv.on('error', err => console.log('Connection Error', err));\n\nawait keyv.set('foo', 'expires in 1 second', 1000); // true\nawait keyv.set('foo', 'never expires'); // true\nawait keyv.get('foo'); // 'never expires'\nawait keyv.delete('foo'); // true\nawait keyv.clear(); // undefined\n```\n\n### Namespaces\n\nYou can namespace your Keyv instance to avoid key collisions and allow you to clear only a certain namespace while using the same database.\n\n```js\nconst users = new Keyv('redis://user:pass@localhost:6379', { namespace: 'users' });\nconst cache = new Keyv('redis://user:pass@localhost:6379', { namespace: 'cache' });\n\nawait users.set('foo', 'users'); // true\nawait cache.set('foo', 'cache'); // true\nawait users.get('foo'); // 'users'\nawait cache.get('foo'); // 'cache'\nawait users.clear(); // undefined\nawait users.get('foo'); // undefined\nawait cache.get('foo'); // 'cache'\n```\n\n### Custom Serializers\n\nKeyv uses [`json-buffer`](https://github.com/dominictarr/json-buffer) for data serialization to ensure consistency across different backends.\n\nYou can optionally provide your own serialization functions to support extra data types or to serialize to something other than JSON.\n\n```js\nconst keyv = new Keyv({ serialize: JSON.stringify, deserialize: JSON.parse });\n```\n\n**Warning:** Using custom serializers means you lose any guarantee of data consistency. You should do extensive testing with your serialisation functions and chosen storage engine.\n\n## Official Storage Adapters\n\nThe official storage adapters are covered by [over 150 integration tests](https://travis-ci.org/lukechilds/keyv/jobs/260418145) to guarantee consistent behaviour. They are lightweight, efficient wrappers over the DB clients making use of indexes and native TTLs where available.\n\nDatabase | Adapter | Native TTL | Status\n---|---|---|---\nRedis | [@keyv/redis](https://github.com/lukechilds/keyv-redis) | Yes | [![Build Status](https://travis-ci.org/lukechilds/keyv-redis.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-redis) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-redis/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-redis?branch=master)\nMongoDB | [@keyv/mongo](https://github.com/lukechilds/keyv-mongo) | Yes | [![Build Status](https://travis-ci.org/lukechilds/keyv-mongo.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-mongo) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-mongo/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-mongo?branch=master)\nSQLite | [@keyv/sqlite](https://github.com/lukechilds/keyv-sqlite) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-sqlite.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-sqlite) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-sqlite/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-sqlite?branch=master)\nPostgreSQL | [@keyv/postgres](https://github.com/lukechilds/keyv-postgres) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-postgres.svg?branch=master)](https://travis-ci.org/lukechildskeyv-postgreskeyv) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-postgres/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-postgres?branch=master)\nMySQL | [@keyv/mysql](https://github.com/lukechilds/keyv-mysql) | No | [![Build Status](https://travis-ci.org/lukechilds/keyv-mysql.svg?branch=master)](https://travis-ci.org/lukechilds/keyv-mysql) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/keyv-mysql/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/keyv-mysql?branch=master)\n\n## Third-party Storage Adapters\n\nYou can also use third-party storage adapters or build your own. Keyv will wrap these storage adapters in TTL functionality and handle complex types internally.\n\n```js\nconst Keyv = require('keyv');\nconst myAdapter = require('./my-storage-adapter');\n\nconst keyv = new Keyv({ store: myAdapter });\n```\n\nAny store that follows the [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) api will work.\n\n```js\nnew Keyv({ store: new Map() });\n```\n\nFor example, [`quick-lru`](https://github.com/sindresorhus/quick-lru) is a completely unrelated module that implements the Map API.\n\n```js\nconst Keyv = require('keyv');\nconst QuickLRU = require('quick-lru');\n\nconst lru = new QuickLRU({ maxSize: 1000 });\nconst keyv = new Keyv({ store: lru });\n```\n\nThe following are third-party storage adapters compatible with Keyv:\n\n- [quick-lru](https://github.com/sindresorhus/quick-lru) - Simple \"Least Recently Used\" (LRU) cache\n- [keyv-file](https://github.com/zaaack/keyv-file) - File system storage adapter for Keyv\n- [keyv-dynamodb](https://www.npmjs.com/package/keyv-dynamodb) - DynamoDB storage adapter for Keyv\n- [keyv-firestore ](https://github.com/goto-bus-stop/keyv-firestore) – Firebase Cloud Firestore adapter for Keyv\n- [keyv-mssql](https://github.com/pmorgan3/keyv-mssql) - Microsoft Sql Server adapter for Keyv\n- [keyv-memcache](https://github.com/jaredwray/keyv-memcache) - Memcache storage adapter for Keyv\n\n## Add Cache Support to your Module\n\nKeyv is designed to be easily embedded into other modules to add cache support. The recommended pattern is to expose a `cache` option in your modules options which is passed through to Keyv. Caching will work in memory by default and users have the option to also install a Keyv storage adapter and pass in a connection string, or any other storage that implements the `Map` API.\n\nYou should also set a namespace for your module so you can safely call `.clear()` without clearing unrelated app data.\n\nInside your module:\n\n```js\nclass AwesomeModule {\n\tconstructor(opts) {\n\t\tthis.cache = new Keyv({\n\t\t\turi: typeof opts.cache === 'string' && opts.cache,\n\t\t\tstore: typeof opts.cache !== 'string' && opts.cache,\n\t\t\tnamespace: 'awesome-module'\n\t\t});\n\t}\n}\n```\n\nNow it can be consumed like this:\n\n```js\nconst AwesomeModule = require('awesome-module');\n\n// Caches stuff in memory by default\nconst awesomeModule = new AwesomeModule();\n\n// After npm install --save keyv-redis\nconst awesomeModule = new AwesomeModule({ cache: 'redis://localhost' });\n\n// Some third-party module that implements the Map API\nconst awesomeModule = new AwesomeModule({ cache: some3rdPartyStore });\n```\n\n## API\n\n### new Keyv([uri], [options])\n\nReturns a new Keyv instance.\n\nThe Keyv instance is also an `EventEmitter` that will emit an `'error'` event if the storage adapter connection fails.\n\n### uri\n\nType: `String`<br>\nDefault: `undefined`\n\nThe connection string URI.\n\nMerged into the options object as options.uri.\n\n### options\n\nType: `Object`\n\nThe options object is also passed through to the storage adapter. Check your storage adapter docs for any extra options.\n\n#### options.namespace\n\nType: `String`<br>\nDefault: `'keyv'`\n\nNamespace for the current instance.\n\n#### options.ttl\n\nType: `Number`<br>\nDefault: `undefined`\n\nDefault TTL. Can be overridden by specififying a TTL on `.set()`.\n\n#### options.serialize\n\nType: `Function`<br>\nDefault: `JSONB.stringify`\n\nA custom serialization function.\n\n#### options.deserialize\n\nType: `Function`<br>\nDefault: `JSONB.parse`\n\nA custom deserialization function.\n\n#### options.store\n\nType: `Storage adapter instance`<br>\nDefault: `new Map()`\n\nThe storage adapter instance to be used by Keyv.\n\n#### options.adapter\n\nType: `String`<br>\nDefault: `undefined`\n\nSpecify an adapter to use. e.g `'redis'` or `'mongodb'`.\n\n### Instance\n\nKeys must always be strings. Values can be of any type.\n\n#### .set(key, value, [ttl])\n\nSet a value.\n\nBy default keys are persistent. You can set an expiry TTL in milliseconds.\n\nReturns a promise which resolves to `true`.\n\n#### .get(key, [options])\n\nReturns a promise which resolves to the retrieved value.\n\n##### options.raw\n\nType: `Boolean`<br>\nDefault: `false`\n\nIf set to true the raw DB object Keyv stores internally will be returned instead of just the value.\n\nThis contains the TTL timestamp.\n\n#### .delete(key)\n\nDeletes an entry.\n\nReturns a promise which resolves to `true` if the key existed, `false` if not.\n\n#### .clear()\n\nDelete all entries in the current namespace.\n\nReturns a promise which is resolved when the entries have been cleared.\n\n## License\n\nMIT © Luke Childs\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/keyv",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "keyv"
            },
            "lowercase-keys": {
              "_args": [
                [
                  "lowercase-keys@2.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "lowercase-keys@2.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "lowercase-keys@2.0.0",
              "_id": "lowercase-keys@2.0.0",
              "_integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
              "_location": "/lowercase-keys",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "lowercase-keys@2.0.0",
                "name": "lowercase-keys",
                "escapedName": "lowercase-keys",
                "rawSpec": "2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.0"
              },
              "_requiredBy": [
                "/cacheable-request",
                "/got",
                "/responselike"
              ],
              "_resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
              "_spec": "2.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/lowercase-keys/issues"
              },
              "description": "Lowercase the keys of an object",
              "devDependencies": {
                "ava": "^1.4.1",
                "tsd": "^0.7.2",
                "xo": "^0.24.0"
              },
              "engines": {
                "node": ">=8"
              },
              "files": [
                "index.js",
                "index.d.ts"
              ],
              "homepage": "https://github.com/sindresorhus/lowercase-keys#readme",
              "keywords": [
                "object",
                "assign",
                "extend",
                "properties",
                "lowercase",
                "lower-case",
                "case",
                "keys",
                "key"
              ],
              "license": "MIT",
              "name": "lowercase-keys",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/lowercase-keys.git"
              },
              "scripts": {
                "test": "xo && ava && tsd"
              },
              "version": "2.0.0",
              "readme": "# lowercase-keys [![Build Status](https://travis-ci.org/sindresorhus/lowercase-keys.svg?branch=master)](https://travis-ci.org/sindresorhus/lowercase-keys)\n\n> Lowercase the keys of an object\n\n\n## Install\n\n```\n$ npm install lowercase-keys\n```\n\n\n## Usage\n\n```js\nconst lowercaseKeys = require('lowercase-keys');\n\nlowercaseKeys({FOO: true, bAr: false});\n//=> {foo: true, bar: false}\n```\n\n\n## API\n\n### lowercaseKeys(object)\n\nReturns a new object with the keys lowercased.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/lowercase-keys",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "lowercase-keys"
            },
            "normalize-url": {
              "_args": [
                [
                  "normalize-url@4.5.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "normalize-url@4.5.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "normalize-url@4.5.0",
              "_id": "normalize-url@4.5.0",
              "_integrity": "sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==",
              "_location": "/normalize-url",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "normalize-url@4.5.0",
                "name": "normalize-url",
                "escapedName": "normalize-url",
                "rawSpec": "4.5.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.5.0"
              },
              "_requiredBy": [
                "/cacheable-request"
              ],
              "_resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.0.tgz",
              "_spec": "4.5.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/normalize-url/issues"
              },
              "description": "Normalize a URL",
              "devDependencies": {
                "ava": "^2.4.0",
                "coveralls": "^3.0.6",
                "nyc": "^14.1.1",
                "tsd": "^0.8.0",
                "xo": "^0.24.0"
              },
              "engines": {
                "node": ">=8"
              },
              "files": [
                "index.js",
                "index.d.ts"
              ],
              "homepage": "https://github.com/sindresorhus/normalize-url#readme",
              "keywords": [
                "normalize",
                "url",
                "uri",
                "address",
                "string",
                "normalization",
                "normalisation",
                "query",
                "querystring",
                "simplify",
                "strip",
                "trim",
                "canonical"
              ],
              "license": "MIT",
              "name": "normalize-url",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/normalize-url.git"
              },
              "scripts": {
                "test": "xo && nyc ava && tsd"
              },
              "version": "4.5.0",
              "readme": "# normalize-url [![Build Status](https://travis-ci.org/sindresorhus/normalize-url.svg?branch=master)](https://travis-ci.org/sindresorhus/normalize-url) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/normalize-url/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/normalize-url?branch=master)\n\n> [Normalize](https://en.wikipedia.org/wiki/URL_normalization) a URL\n\nUseful when you need to display, store, deduplicate, sort, compare, etc, URLs.\n\n\n## Install\n\n```\n$ npm install normalize-url\n```\n\n\n## Usage\n\n```js\nconst normalizeUrl = require('normalize-url');\n\nnormalizeUrl('sindresorhus.com');\n//=> 'http://sindresorhus.com'\n\nnormalizeUrl('HTTP://xn--xample-hva.com:80/?b=bar&a=foo');\n//=> 'http://êxample.com/?a=foo&b=bar'\n```\n\n\n## API\n\n### normalizeUrl(url, options?)\n\n#### url\n\nType: `string`\n\nURL to normalize, including [data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs).\n\n#### options\n\nType: `object`\n\n##### defaultProtocol\n\nType: `string`<br>\nDefault: `http:`\n\n##### normalizeProtocol\n\nType: `boolean`<br>\nDefault: `true`\n\nPrepend `defaultProtocol` to the URL if it's protocol-relative.\n\n```js\nnormalizeUrl('//sindresorhus.com:80/');\n//=> 'http://sindresorhus.com'\n\nnormalizeUrl('//sindresorhus.com:80/', {normalizeProtocol: false});\n//=> '//sindresorhus.com'\n```\n\n##### forceHttp\n\nType: `boolean`<br>\nDefault: `false`\n\nNormalize `https:` to `http:`.\n\n```js\nnormalizeUrl('https://sindresorhus.com:80/');\n//=> 'https://sindresorhus.com'\n\nnormalizeUrl('https://sindresorhus.com:80/', {forceHttp: true});\n//=> 'http://sindresorhus.com'\n```\n\n##### forceHttps\n\nType: `boolean`<br>\nDefault: `false`\n\nNormalize `http:` to `https:`.\n\n```js\nnormalizeUrl('https://sindresorhus.com:80/');\n//=> 'https://sindresorhus.com'\n\nnormalizeUrl('http://sindresorhus.com:80/', {forceHttps: true});\n//=> 'https://sindresorhus.com'\n```\n\nThis option can't be used with the `forceHttp` option at the same time.\n\n##### stripAuthentication\n\nType: `boolean`<br>\nDefault: `true`\n\nStrip the [authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) part of the URL.\n\n```js\nnormalizeUrl('user:password@sindresorhus.com');\n//=> 'https://sindresorhus.com'\n\nnormalizeUrl('user:password@sindresorhus.com', {stripAuthentication: false});\n//=> 'https://user:password@sindresorhus.com'\n```\n\n##### stripHash\n\nType: `boolean`<br>\nDefault: `false`\n\nStrip the hash part of the URL.\n\n```js\nnormalizeUrl('sindresorhus.com/about.html#contact');\n//=> 'http://sindresorhus.com/about.html#contact'\n\nnormalizeUrl('sindresorhus.com/about.html#contact', {stripHash: true});\n//=> 'http://sindresorhus.com/about.html'\n```\n\n##### stripProtocol\n\nType: `boolean`<br>\nDefault: `false`\n\nRemove HTTP(S) protocol from the URL: `http://sindresorhus.com` → `sindresorhus.com`.\n\n```js\nnormalizeUrl('https://sindresorhus.com');\n//=> 'https://sindresorhus.com'\n\nnormalizeUrl('sindresorhus.com', {stripProtocol: true});\n//=> 'sindresorhus.com'\n```\n\n##### stripWWW\n\nType: `boolean`<br>\nDefault: `true`\n\nRemove `www.` from the URL.\n\n```js\nnormalizeUrl('http://www.sindresorhus.com');\n//=> 'http://sindresorhus.com'\n\nnormalizeUrl('http://www.sindresorhus.com', {stripWWW: false});\n//=> 'http://www.sindresorhus.com'\n```\n\n##### removeQueryParameters\n\nType: `Array<RegExp | string>`<br>\nDefault: `[/^utm_\\w+/i]`\n\nRemove query parameters that matches any of the provided strings or regexes.\n\n```js\nnormalizeUrl('www.sindresorhus.com?foo=bar&ref=test_ref', {\n\tremoveQueryParameters: ['ref']\n});\n//=> 'http://sindresorhus.com/?foo=bar'\n```\n\n##### removeTrailingSlash\n\nType: `boolean`<br>\nDefault: `true`\n\nRemove trailing slash.\n\n**Note:** Trailing slash is always removed if the URL doesn't have a pathname.\n\n```js\nnormalizeUrl('http://sindresorhus.com/redirect/');\n//=> 'http://sindresorhus.com/redirect'\n\nnormalizeUrl('http://sindresorhus.com/redirect/', {removeTrailingSlash: false});\n//=> 'http://sindresorhus.com/redirect/'\n\nnormalizeUrl('http://sindresorhus.com/', {removeTrailingSlash: false});\n//=> 'http://sindresorhus.com'\n```\n\n##### removeDirectoryIndex\n\nType: `boolean | Array<RegExp | string>`<br>\nDefault: `false`\n\nRemoves the default directory index file from path that matches any of the provided strings or regexes. When `true`, the regex `/^index\\.[a-z]+$/` is used.\n\n```js\nnormalizeUrl('www.sindresorhus.com/foo/default.php', {\n\tremoveDirectoryIndex: [/^default\\.[a-z]+$/]\n});\n//=> 'http://sindresorhus.com/foo'\n```\n\n##### sortQueryParameters\n\nType: `boolean`<br>\nDefault: `true`\n\nSorts the query parameters alphabetically by key.\n\n```js\nnormalizeUrl('www.sindresorhus.com?b=two&a=one&c=three', {\n\tsortQueryParameters: false\n});\n//=> 'http://sindresorhus.com/?b=two&a=one&c=three'\n```\n\n\n## Related\n\n- [compare-urls](https://github.com/sindresorhus/compare-urls) - Compare URLs by first normalizing them\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-normalize-url?utm_source=npm-normalize-url&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/normalize-url",
              "error": "[Circular]",
              "extraneous": false
            },
            "responselike": {
              "_args": [
                [
                  "responselike@2.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "responselike@2.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "responselike@2.0.0",
              "_id": "responselike@2.0.0",
              "_integrity": "sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==",
              "_location": "/responselike",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "responselike@2.0.0",
                "name": "responselike",
                "escapedName": "responselike",
                "rawSpec": "2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.0"
              },
              "_requiredBy": [
                "/cacheable-request",
                "/got"
              ],
              "_resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.0.tgz",
              "_spec": "2.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "lukechilds"
              },
              "bugs": {
                "url": "https://github.com/lukechilds/responselike/issues"
              },
              "dependencies": {},
              "description": "A response-like object for mocking a Node.js HTTP response stream",
              "devDependencies": {
                "ava": "^0.25.0",
                "coveralls": "^3.0.0",
                "eslint-config-xo-lukechilds": "^1.0.0",
                "get-stream": "^3.0.0",
                "nyc": "^11.8.0",
                "xo": "^0.19.0"
              },
              "homepage": "https://github.com/lukechilds/responselike#readme",
              "keywords": [
                "http",
                "https",
                "response",
                "mock",
                "request",
                "responselike"
              ],
              "license": "MIT",
              "main": "src/index.js",
              "name": "responselike",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lukechilds/responselike.git"
              },
              "scripts": {
                "coverage": "nyc report --reporter=text-lcov | coveralls",
                "test": "xo && nyc ava"
              },
              "version": "2.0.0",
              "xo": {
                "extends": "xo-lukechilds"
              },
              "readme": "# responselike\n\n> A response-like object for mocking a Node.js HTTP response stream\n\n[![Build Status](https://travis-ci.org/lukechilds/responselike.svg?branch=master)](https://travis-ci.org/lukechilds/responselike)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/responselike/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/responselike?branch=master)\n[![npm](https://img.shields.io/npm/dm/responselike.svg)](https://www.npmjs.com/package/responselike)\n[![npm](https://img.shields.io/npm/v/responselike.svg)](https://www.npmjs.com/package/responselike)\n\nReturns a streamable response object similar to a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage). Useful for formatting cached responses so they can be consumed by code expecting a real response.\n\n## Install\n\n```shell\nnpm install --save responselike\n```\n\nOr if you're just using for testing you'll want:\n\n```shell\nnpm install --save-dev responselike\n```\n\n## Usage\n\n```js\nconst Response = require('responselike');\n\nconst response = new Response(200, { foo: 'bar' }, Buffer.from('Hi!'), 'https://example.com');\n\nresponse.statusCode;\n// 200\nresponse.headers;\n// { foo: 'bar' }\nresponse.body;\n// <Buffer 48 69 21>\nresponse.url;\n// 'https://example.com'\n\nresponse.pipe(process.stdout);\n// Hi!\n```\n\n\n## API\n\n### new Response(statusCode, headers, body, url)\n\nReturns a streamable response object similar to a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n#### statusCode\n\nType: `number`\n\nHTTP response status code.\n\n#### headers\n\nType: `object`\n\nHTTP headers object. Keys will be automatically lowercased.\n\n#### body\n\nType: `buffer`\n\nA Buffer containing the response body. The Buffer contents will be streamable but is also exposed directly as `response.body`.\n\n#### url\n\nType: `string`\n\nRequest URL string.\n\n## License\n\nMIT © Luke Childs\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "lowercase-keys": "^2.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/responselike",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "responselike"
            }
          },
          "description": "Wrap native HTTP requests with RFC compliant cache support",
          "devDependencies": {
            "@keyv/sqlite": "^2.0.0",
            "ava": "^1.1.0",
            "coveralls": "^3.0.0",
            "create-test-server": "3.0.0",
            "delay": "^4.0.0",
            "eslint-config-xo-lukechilds": "^1.0.0",
            "nyc": "^14.1.1",
            "pify": "^4.0.0",
            "sqlite3": "^4.0.2",
            "this": "^1.0.2",
            "xo": "^0.23.0"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "src"
          ],
          "homepage": "https://github.com/lukechilds/cacheable-request#readme",
          "keywords": [
            "HTTP",
            "HTTPS",
            "cache",
            "caching",
            "layer",
            "cacheable",
            "RFC 7234",
            "RFC",
            "7234",
            "compliant"
          ],
          "license": "MIT",
          "main": "src/index.js",
          "name": "cacheable-request",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/lukechilds/cacheable-request.git"
          },
          "scripts": {
            "coverage": "nyc report --reporter=text-lcov | coveralls",
            "test": "xo && nyc ava"
          },
          "version": "7.0.1",
          "xo": {
            "extends": "xo-lukechilds"
          },
          "readme": "# cacheable-request\n\n> Wrap native HTTP requests with RFC compliant cache support\n\n[![Build Status](https://travis-ci.org/lukechilds/cacheable-request.svg?branch=master)](https://travis-ci.org/lukechilds/cacheable-request)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/cacheable-request/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/cacheable-request?branch=master)\n[![npm](https://img.shields.io/npm/dm/cacheable-request.svg)](https://www.npmjs.com/package/cacheable-request)\n[![npm](https://img.shields.io/npm/v/cacheable-request.svg)](https://www.npmjs.com/package/cacheable-request)\n\n[RFC 7234](http://httpwg.org/specs/rfc7234.html) compliant HTTP caching for native Node.js HTTP/HTTPS requests. Caching works out of the box in memory or is easily pluggable with a wide range of storage adapters.\n\n**Note:** This is a low level wrapper around the core HTTP modules, it's not a high level request library.\n\n## Features\n\n- Only stores cacheable responses as defined by RFC 7234\n- Fresh cache entries are served directly from cache\n- Stale cache entries are revalidated with `If-None-Match`/`If-Modified-Since` headers\n- 304 responses from revalidation requests use cached body\n- Updates `Age` header on cached responses\n- Can completely bypass cache on a per request basis\n- In memory cache by default\n- Official support for Redis, MongoDB, SQLite, PostgreSQL and MySQL storage adapters\n- Easily plug in your own or third-party storage adapters\n- If DB connection fails, cache is automatically bypassed ([disabled by default](#optsautomaticfailover))\n- Adds cache support to any existing HTTP code with minimal changes\n- Uses [http-cache-semantics](https://github.com/pornel/http-cache-semantics) internally for HTTP RFC 7234 compliance\n\n## Install\n\n```shell\nnpm install cacheable-request\n```\n\n## Usage\n\n```js\nconst http = require('http');\nconst CacheableRequest = require('cacheable-request');\n\n// Then instead of\nconst req = http.request('http://example.com', cb);\nreq.end();\n\n// You can do\nconst cacheableRequest = new CacheableRequest(http.request);\nconst cacheReq = cacheableRequest('http://example.com', cb);\ncacheReq.on('request', req => req.end());\n// Future requests to 'example.com' will be returned from cache if still valid\n\n// You pass in any other http.request API compatible method to be wrapped with cache support:\nconst cacheableRequest = new CacheableRequest(https.request);\nconst cacheableRequest = new CacheableRequest(electron.net);\n```\n\n## Storage Adapters\n\n`cacheable-request` uses [Keyv](https://github.com/lukechilds/keyv) to support a wide range of storage adapters.\n\nFor example, to use Redis as a cache backend, you just need to install the official Redis Keyv storage adapter:\n\n```\nnpm install @keyv/redis\n```\n\nAnd then you can pass `CacheableRequest` your connection string:\n\n```js\nconst cacheableRequest = new CacheableRequest(http.request, 'redis://user:pass@localhost:6379');\n```\n\n[View all official Keyv storage adapters.](https://github.com/lukechilds/keyv#official-storage-adapters)\n\nKeyv also supports anything that follows the Map API so it's easy to write your own storage adapter or use a third-party solution.\n\ne.g The following are all valid storage adapters\n\n```js\nconst storageAdapter = new Map();\n// or\nconst storageAdapter = require('./my-storage-adapter');\n// or\nconst QuickLRU = require('quick-lru');\nconst storageAdapter = new QuickLRU({ maxSize: 1000 });\n\nconst cacheableRequest = new CacheableRequest(http.request, storageAdapter);\n```\n\nView the [Keyv docs](https://github.com/lukechilds/keyv) for more information on how to use storage adapters.\n\n## API\n\n### new cacheableRequest(request, [storageAdapter])\n\nReturns the provided request function wrapped with cache support.\n\n#### request\n\nType: `function`\n\nRequest function to wrap with cache support. Should be [`http.request`](https://nodejs.org/api/http.html#http_http_request_options_callback) or a similar API compatible request function.\n\n#### storageAdapter\n\nType: `Keyv storage adapter`<br>\nDefault: `new Map()`\n\nA [Keyv](https://github.com/lukechilds/keyv) storage adapter instance, or connection string if using with an official Keyv storage adapter.\n\n### Instance\n\n#### cacheableRequest(opts, [cb])\n\nReturns an event emitter.\n\n##### opts\n\nType: `object`, `string`\n\n- Any of the default request functions options.\n- Any [`http-cache-semantics`](https://github.com/kornelski/http-cache-semantics#constructor-options) options.\n- Any of the following:\n\n###### opts.cache\n\nType: `boolean`<br>\nDefault: `true`\n\nIf the cache should be used. Setting this to false will completely bypass the cache for the current request.\n\n###### opts.strictTtl\n\nType: `boolean`<br>\nDefault: `false`\n\nIf set to `true` once a cached resource has expired it is deleted and will have to be re-requested.\n\nIf set to `false` (default), after a cached resource's TTL expires it is kept in the cache and will be revalidated on the next request with `If-None-Match`/`If-Modified-Since` headers.\n\n###### opts.maxTtl\n\nType: `number`<br>\nDefault: `undefined`\n\nLimits TTL. The `number` represents milliseconds.\n\n###### opts.automaticFailover\n\nType: `boolean`<br>\nDefault: `false`\n\nWhen set to `true`, if the DB connection fails we will automatically fallback to a network request. DB errors will still be emitted to notify you of the problem even though the request callback may succeed.\n\n###### opts.forceRefresh\n\nType: `boolean`<br>\nDefault: `false`\n\nForces refreshing the cache. If the response could be retrieved from the cache, it will perform a new request and override the cache instead.\n\n##### cb\n\nType: `function`\n\nThe callback function which will receive the response as an argument.\n\nThe response can be either a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage) or a [responselike object](https://github.com/lukechilds/responselike). The response will also have a `fromCache` property set with a boolean value.\n\n##### .on('request', request)\n\n`request` event to get the request object of the request.\n\n**Note:** This event will only fire if an HTTP request is actually made, not when a response is retrieved from cache. However, you should always handle the `request` event to end the request and handle any potential request errors.\n\n##### .on('response', response)\n\n`response` event to get the response object from the HTTP request or cache.\n\n##### .on('error', error)\n\n`error` event emitted in case of an error with the cache.\n\nErrors emitted here will be an instance of `CacheableRequest.RequestError` or `CacheableRequest.CacheError`. You will only ever receive a `RequestError` if the request function throws (normally caused by invalid user input). Normal request errors should be handled inside the `request` event.\n\nTo properly handle all error scenarios you should use the following pattern:\n\n```js\ncacheableRequest('example.com', cb)\n  .on('error', err => {\n    if (err instanceof CacheableRequest.CacheError) {\n      handleCacheError(err); // Cache error\n    } else if (err instanceof CacheableRequest.RequestError) {\n      handleRequestError(err); // Request function thrown\n    }\n  })\n  .on('request', req => {\n    req.on('error', handleRequestError); // Request error emitted\n    req.end();\n  });\n```\n\n**Note:** Database connection errors are emitted here, however `cacheable-request` will attempt to re-request the resource and bypass the cache on a connection error. Therefore a database connection error doesn't necessarily mean the request won't be fulfilled.\n\n## License\n\nMIT © Luke Childs\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "clone-response": "^1.0.2",
            "get-stream": "^5.1.0",
            "http-cache-semantics": "^4.0.0",
            "keyv": "^4.0.0",
            "lowercase-keys": "^2.0.0",
            "normalize-url": "^4.1.0",
            "responselike": "^2.0.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/cacheable-request",
          "error": "[Circular]",
          "extraneous": false
        },
        "decompress-response": {
          "_args": [
            [
              "decompress-response@5.0.0",
              "/path/to/project/packages/shared"
            ],
            [
              "decompress-response@5.0.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "decompress-response@5.0.0",
          "_id": "decompress-response@5.0.0",
          "_integrity": "sha512-TLZWWybuxWgoW7Lykv+gq9xvzOsUjQ9tF09Tj6NSTYGMTCHNXzrPnD6Hi+TgZq19PyTAGH4Ll/NIM/eTGglnMw==",
          "_location": "/decompress-response",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "decompress-response@5.0.0",
            "name": "decompress-response",
            "escapedName": "decompress-response",
            "rawSpec": "5.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "5.0.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-5.0.0.tgz",
          "_spec": "5.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/decompress-response/issues"
          },
          "dependencies": {
            "mimic-response": {
              "_args": [
                [
                  "mimic-response@2.1.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "mimic-response@2.1.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "mimic-response@2.1.0",
              "_id": "mimic-response@2.1.0",
              "_integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
              "_location": "/mimic-response",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "mimic-response@2.1.0",
                "name": "mimic-response",
                "escapedName": "mimic-response",
                "rawSpec": "2.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.1.0"
              },
              "_requiredBy": [
                "/decompress-response",
                "/got"
              ],
              "_resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
              "_spec": "2.1.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "https://sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/mimic-response/issues"
              },
              "description": "Mimic a Node.js HTTP response stream",
              "devDependencies": {
                "@sindresorhus/tsconfig": "^0.3.0",
                "@types/node": "^12.0.0",
                "ava": "^1.1.0",
                "create-test-server": "^2.4.0",
                "pify": "^4.0.1",
                "tsd": "^0.7.3",
                "xo": "^0.24.0"
              },
              "engines": {
                "node": ">=8"
              },
              "files": [
                "index.d.ts",
                "index.js"
              ],
              "funding": "https://github.com/sponsors/sindresorhus",
              "homepage": "https://github.com/sindresorhus/mimic-response#readme",
              "keywords": [
                "mimic",
                "response",
                "stream",
                "http",
                "https",
                "request",
                "get",
                "core"
              ],
              "license": "MIT",
              "name": "mimic-response",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/mimic-response.git"
              },
              "scripts": {
                "test": "xo && ava && tsd"
              },
              "version": "2.1.0",
              "readme": "# mimic-response [![Build Status](https://travis-ci.org/sindresorhus/mimic-response.svg?branch=master)](https://travis-ci.org/sindresorhus/mimic-response)\n\n> Mimic a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n## Install\n\n```\n$ npm install mimic-response\n```\n\n## Usage\n\n```js\nconst stream = require('stream');\nconst mimicResponse = require('mimic-response');\n\nconst responseStream = getHttpResponseStream();\nconst myStream = new stream.PassThrough();\n\nmimicResponse(responseStream, myStream);\n\nconsole.log(myStream.statusCode);\n//=> 200\n```\n\n## API\n\n### mimicResponse(from, to)\n\n#### from\n\nType: `Stream`\n\n[Node.js HTTP response stream.](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n#### to\n\nType: `Stream`\n\nAny stream.\n\n## Related\n\n- [mimic-fn](https://github.com/sindresorhus/mimic-fn) - Make a function mimic another one\n- [clone-response](https://github.com/lukechilds/clone-response) - Clone a Node.js response stream\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-mimic-response?utm_source=npm-mimic-response&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/mimic-response",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "mimic-response"
            }
          },
          "description": "Decompress a HTTP response if needed",
          "devDependencies": {
            "@types/node": "^12.7.1",
            "ava": "^2.2.0",
            "get-stream": "^5.0.0",
            "pify": "^4.0.1",
            "tsd": "^0.10.0",
            "xo": "^0.25.3"
          },
          "engines": {
            "node": ">=10"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/sindresorhus/decompress-response#readme",
          "keywords": [
            "decompress",
            "response",
            "http",
            "https",
            "zlib",
            "gzip",
            "zip",
            "deflate",
            "unzip",
            "ungzip",
            "incoming",
            "message",
            "stream",
            "compressed",
            "brotli"
          ],
          "license": "MIT",
          "name": "decompress-response",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/decompress-response.git"
          },
          "scripts": {
            "test": "xo && ava && tsd"
          },
          "version": "5.0.0",
          "readme": "# decompress-response [![Build Status](https://travis-ci.org/sindresorhus/decompress-response.svg?branch=master)](https://travis-ci.org/sindresorhus/decompress-response)\n\n> Decompress a HTTP response if needed\n\nDecompresses the [response](https://nodejs.org/api/http.html#http_class_http_incomingmessage) from [`http.request`](https://nodejs.org/api/http.html#http_http_request_options_callback) if it's gzipped, deflated or compressed with Brotli, otherwise just passes it through.\n\nUsed by [`got`](https://github.com/sindresorhus/got).\n\n\n## Install\n\n```\n$ npm install decompress-response\n```\n\n\n## Usage\n\n```js\nconst http = require('http');\nconst decompressResponse = require('decompress-response');\n\nhttp.get('https://sindresorhus.com', response => {\n\tresponse = decompressResponse(response);\n});\n```\n\n\n## API\n\n### decompressResponse(response)\n\nReturns the decompressed HTTP response stream.\n\n#### response\n\nType: [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\nThe HTTP incoming stream with compressed data.\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-decompress-response?utm_source=npm-decompress-response&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "mimic-response": "^2.0.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/decompress-response",
          "error": "[Circular]",
          "extraneous": false
        },
        "duplexer3": {
          "_args": [
            [
              "duplexer3@0.1.4",
              "/path/to/project/packages/shared"
            ],
            [
              "duplexer3@0.1.4",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "duplexer3@0.1.4",
          "_id": "duplexer3@0.1.4",
          "_integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=",
          "_location": "/duplexer3",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "duplexer3@0.1.4",
            "name": "duplexer3",
            "escapedName": "duplexer3",
            "rawSpec": "0.1.4",
            "saveSpec": "[Circular]",
            "fetchSpec": "0.1.4"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
          "_spec": "0.1.4",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Conrad Pankoff",
            "email": "deoxxa@fknsrs.biz",
            "url": "http://www.fknsrs.biz/"
          },
          "bugs": {
            "url": "https://github.com/floatdrop/duplexer3/issues"
          },
          "description": "Like duplexer but using streams3",
          "devDependencies": {
            "mocha": "^2.2.5"
          },
          "engine": {
            "node": ">=4"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/floatdrop/duplexer3#readme",
          "keywords": [
            "duplex",
            "duplexer",
            "stream",
            "stream3",
            "join",
            "combine"
          ],
          "license": "BSD-3-Clause",
          "name": "duplexer3",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/floatdrop/duplexer3.git"
          },
          "scripts": {
            "test": "mocha -R tap"
          },
          "version": "0.1.4",
          "readme": "# duplexer3 [![Build Status](https://travis-ci.org/floatdrop/duplexer3.svg?branch=master)](https://travis-ci.org/floatdrop/duplexer3) [![Coverage Status](https://coveralls.io/repos/floatdrop/duplexer3/badge.svg?branch=master&service=github)](https://coveralls.io/github/floatdrop/duplexer3?branch=master)\n\nLike [duplexer2](https://github.com/deoxxa/duplexer2) but using Streams3 without readable-stream dependency\n\n```javascript\nvar stream = require(\"stream\");\n\nvar duplexer3 = require(\"duplexer3\");\n\nvar writable = new stream.Writable({objectMode: true}),\n    readable = new stream.Readable({objectMode: true});\n\nwritable._write = function _write(input, encoding, done) {\n  if (readable.push(input)) {\n    return done();\n  } else {\n    readable.once(\"drain\", done);\n  }\n};\n\nreadable._read = function _read(n) {\n  // no-op\n};\n\n// simulate the readable thing closing after a bit\nwritable.once(\"finish\", function() {\n  setTimeout(function() {\n    readable.push(null);\n  }, 500);\n});\n\nvar duplex = duplexer3(writable, readable);\n\nduplex.on(\"data\", function(e) {\n  console.log(\"got data\", JSON.stringify(e));\n});\n\nduplex.on(\"finish\", function() {\n  console.log(\"got finish event\");\n});\n\nduplex.on(\"end\", function() {\n  console.log(\"got end event\");\n});\n\nduplex.write(\"oh, hi there\", function() {\n  console.log(\"finished writing\");\n});\n\nduplex.end(function() {\n  console.log(\"finished ending\");\n});\n```\n\n```\ngot data \"oh, hi there\"\nfinished writing\ngot finish event\nfinished ending\ngot end event\n```\n\n## Overview\n\nThis is a reimplementation of [duplexer](https://www.npmjs.com/package/duplexer) using the\nStreams3 API which is standard in Node as of v4. Everything largely\nworks the same.\n\n\n\n## Installation\n\n[Available via `npm`](https://docs.npmjs.com/cli/install):\n\n```\n$ npm i duplexer3\n```\n\n## API\n\n### duplexer3\n\nCreates a new `DuplexWrapper` object, which is the actual class that implements\nmost of the fun stuff. All that fun stuff is hidden. DON'T LOOK.\n\n```javascript\nduplexer3([options], writable, readable)\n```\n\n```javascript\nconst duplex = duplexer3(new stream.Writable(), new stream.Readable());\n```\n\nArguments\n\n* __options__ - an object specifying the regular `stream.Duplex` options, as\n  well as the properties described below.\n* __writable__ - a writable stream\n* __readable__ - a readable stream\n\nOptions\n\n* __bubbleErrors__ - a boolean value that specifies whether to bubble errors\n  from the underlying readable/writable streams. Default is `true`.\n\n\n## License\n\n3-clause BSD. [A copy](./LICENSE) is included with the source.\n\n## Contact\n\n* GitHub ([deoxxa](http://github.com/deoxxa))\n* Twitter ([@deoxxa](http://twitter.com/deoxxa))\n* Email ([deoxxa@fknsrs.biz](mailto:deoxxa@fknsrs.biz))\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/duplexer3",
          "error": "[Circular]",
          "extraneous": false
        },
        "get-stream": {
          "_args": "[Circular]",
          "_from": "get-stream@5.1.0",
          "_id": "get-stream@5.1.0",
          "_integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
          "_location": "/get-stream",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "get-stream@5.1.0",
            "name": "get-stream",
            "escapedName": "get-stream",
            "rawSpec": "5.1.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "5.1.0"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
          "_spec": "5.1.0",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "dependencies": {
            "pump": {
              "_args": [
                [
                  "pump@3.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "pump@3.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "pump@3.0.0",
              "_id": "pump@3.0.0",
              "_integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
              "_location": "/pump",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "pump@3.0.0",
                "name": "pump",
                "escapedName": "pump",
                "rawSpec": "3.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.0.0"
              },
              "_requiredBy": [
                "/get-stream",
                "/pino-pretty"
              ],
              "_resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
              "_spec": "3.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Mathias Buus Madsen",
                "email": "mathiasbuus@gmail.com"
              },
              "browser": {
                "fs": false
              },
              "bugs": {
                "url": "https://github.com/mafintosh/pump/issues"
              },
              "dependencies": {},
              "description": "pipe streams together and close all of them if one of them closes",
              "homepage": "https://github.com/mafintosh/pump#readme",
              "keywords": [
                "streams",
                "pipe",
                "destroy",
                "callback"
              ],
              "license": "MIT",
              "name": "pump",
              "repository": {
                "type": "git",
                "url": "git://github.com/mafintosh/pump.git"
              },
              "scripts": {
                "test": "node test-browser.js && node test-node.js"
              },
              "version": "3.0.0",
              "readme": "# pump\n\npump is a small node module that pipes streams together and destroys all of them if one of them closes.\n\n```\nnpm install pump\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/pump.svg?style=flat)](http://travis-ci.org/mafintosh/pump)\n\n## What problem does it solve?\n\nWhen using standard `source.pipe(dest)` source will _not_ be destroyed if dest emits close or an error.\nYou are also not able to provide a callback to tell when then pipe has finished.\n\npump does these two things for you\n\n## Usage\n\nSimply pass the streams you want to pipe together to pump and add an optional callback\n\n``` js\nvar pump = require('pump')\nvar fs = require('fs')\n\nvar source = fs.createReadStream('/dev/random')\nvar dest = fs.createWriteStream('/dev/null')\n\npump(source, dest, function(err) {\n  console.log('pipe finished', err)\n})\n\nsetTimeout(function() {\n  dest.destroy() // when dest is closed pump will destroy source\n}, 1000)\n```\n\nYou can use pump to pipe more than two streams together as well\n\n``` js\nvar transform = someTransformStream()\n\npump(source, transform, anotherTransform, dest, function(err) {\n  console.log('pipe finished', err)\n})\n```\n\nIf `source`, `transform`, `anotherTransform` or `dest` closes all of them will be destroyed.\n\nSimilarly to `stream.pipe()`, `pump()` returns the last stream passed in, so you can do:\n\n```\nreturn pump(s1, s2) // returns s2\n```\n\nIf you want to return a stream that combines *both* s1 and s2 to a single stream use\n[pumpify](https://github.com/mafintosh/pumpify) instead.\n\n## License\n\nMIT\n\n## Related\n\n`pump` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {
                "end-of-stream": "^1.1.0",
                "once": "^1.3.1"
              },
              "path": "/path/to/project/packages/shared/node_modules/pump",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "pump"
            }
          },
          "description": "Get a stream as a string, buffer, or array",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/sindresorhus/get-stream#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "get-stream",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "5.1.0",
          "readme": "# get-stream [![Build Status](https://travis-ci.org/sindresorhus/get-stream.svg?branch=master)](https://travis-ci.org/sindresorhus/get-stream)\n\n> Get a stream as a string, buffer, or array\n\n\n## Install\n\n```\n$ npm install get-stream\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst getStream = require('get-stream');\n\n(async () => {\n\tconst stream = fs.createReadStream('unicorn.txt');\n\n\tconsole.log(await getStream(stream));\n\t/*\n\t              ,,))))))));,\n\t           __)))))))))))))),\n\t\\|/       -\\(((((''''((((((((.\n\t-*-==//////((''  .     `)))))),\n\t/|\\      ))| o    ;-.    '(((((                                  ,(,\n\t         ( `|    /  )    ;))))'                               ,_))^;(~\n\t            |   |   |   ,))((((_     _____------~~~-.        %,;(;(>';'~\n\t            o_);   ;    )))(((` ~---~  `::           \\      %%~~)(v;(`('~\n\t                  ;    ''''````         `:       `:::|\\,__,%%    );`'; ~\n\t                 |   _                )     /      `:|`----'     `-'\n\t           ______/\\/~    |                 /        /\n\t         /~;;.____/;;'  /          ___--,-(   `;;;/\n\t        / //  _;______;'------~~~~~    /;;/\\    /\n\t       //  | |                        / ;   \\;;,\\\n\t      (<_  | ;                      /',/-----'  _>\n\t       \\_| ||_                     //~;~~~~~~~~~\n\t           `\\_|                   (,~~\n\t                                   \\~\\\n\t                                    ~~\n\t*/\n})();\n```\n\n\n## API\n\nThe methods returns a promise that resolves when the `end` event fires on the stream, indicating that there is no more data to be read. The stream is switched to flowing mode.\n\n### getStream(stream, [options])\n\nGet the `stream` as a string.\n\n#### options\n\nType: `Object`\n\n##### encoding\n\nType: `string`<br>\nDefault: `utf8`\n\n[Encoding](https://nodejs.org/api/buffer.html#buffer_buffer) of the incoming stream.\n\n##### maxBuffer\n\nType: `number`<br>\nDefault: `Infinity`\n\nMaximum length of the returned string. If it exceeds this value before the stream ends, the promise will be rejected with a `getStream.MaxBufferError` error.\n\n### getStream.buffer(stream, [options])\n\nGet the `stream` as a buffer.\n\nIt honors the `maxBuffer` option as above, but it refers to byte length rather than string length.\n\n### getStream.array(stream, [options])\n\nGet the `stream` as an array of values.\n\nIt honors both the `maxBuffer` and `encoding` options. The behavior changes slightly based on the encoding chosen:\n\n- When `encoding` is unset, it assumes an [object mode stream](https://nodesource.com/blog/understanding-object-streams/) and collects values emitted from `stream` unmodified. In this case `maxBuffer` refers to the number of items in the array (not the sum of their sizes).\n\n- When `encoding` is set to `buffer`, it collects an array of buffers. `maxBuffer` refers to the summed byte lengths of every buffer in the array.\n\n- When `encoding` is set to anything else, it collects an array of strings. `maxBuffer` refers to the summed character lengths of every string in the array.\n\n\n## Errors\n\nIf the input stream emits an `error` event, the promise will be rejected with the error. The buffered data will be attached to the `bufferedData` property of the error.\n\n```js\n(async () => {\n\ttry {\n\t\tawait getStream(streamThatErrorsAtTheEnd('unicorn'));\n\t} catch (error) {\n\t\tconsole.log(error.bufferedData);\n\t\t//=> 'unicorn'\n\t}\n})()\n```\n\n\n## FAQ\n\n### How is this different from [`concat-stream`](https://github.com/maxogden/concat-stream)?\n\nThis module accepts a stream instead of being one and returns a promise instead of using a callback. The API is simpler and it only supports returning a string, buffer, or array. It doesn't have a fragile type inference. You explicitly choose what you want. And it doesn't depend on the huge `readable-stream` package.\n\n\n## Related\n\n- [get-stdin](https://github.com/sindresorhus/get-stdin) - Get stdin as a string or buffer\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/get-stream",
          "error": "[Circular]",
          "extraneous": false
        },
        "lowercase-keys": {
          "_args": "[Circular]",
          "_from": "lowercase-keys@2.0.0",
          "_id": "lowercase-keys@2.0.0",
          "_integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
          "_location": "/lowercase-keys",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "lowercase-keys@2.0.0",
            "name": "lowercase-keys",
            "escapedName": "lowercase-keys",
            "rawSpec": "2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.0"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "_spec": "2.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "description": "Lowercase the keys of an object",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/sindresorhus/lowercase-keys#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "lowercase-keys",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "2.0.0",
          "readme": "# lowercase-keys [![Build Status](https://travis-ci.org/sindresorhus/lowercase-keys.svg?branch=master)](https://travis-ci.org/sindresorhus/lowercase-keys)\n\n> Lowercase the keys of an object\n\n\n## Install\n\n```\n$ npm install lowercase-keys\n```\n\n\n## Usage\n\n```js\nconst lowercaseKeys = require('lowercase-keys');\n\nlowercaseKeys({FOO: true, bAr: false});\n//=> {foo: true, bar: false}\n```\n\n\n## API\n\n### lowercaseKeys(object)\n\nReturns a new object with the keys lowercased.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/lowercase-keys",
          "error": "[Circular]",
          "extraneous": false
        },
        "mimic-response": {
          "_args": "[Circular]",
          "_from": "mimic-response@2.1.0",
          "_id": "mimic-response@2.1.0",
          "_integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
          "_location": "/mimic-response",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "mimic-response@2.1.0",
            "name": "mimic-response",
            "escapedName": "mimic-response",
            "rawSpec": "2.1.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.1.0"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
          "_spec": "2.1.0",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "description": "Mimic a Node.js HTTP response stream",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "funding": "https://github.com/sponsors/sindresorhus",
          "homepage": "https://github.com/sindresorhus/mimic-response#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "mimic-response",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "2.1.0",
          "readme": "# mimic-response [![Build Status](https://travis-ci.org/sindresorhus/mimic-response.svg?branch=master)](https://travis-ci.org/sindresorhus/mimic-response)\n\n> Mimic a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n## Install\n\n```\n$ npm install mimic-response\n```\n\n## Usage\n\n```js\nconst stream = require('stream');\nconst mimicResponse = require('mimic-response');\n\nconst responseStream = getHttpResponseStream();\nconst myStream = new stream.PassThrough();\n\nmimicResponse(responseStream, myStream);\n\nconsole.log(myStream.statusCode);\n//=> 200\n```\n\n## API\n\n### mimicResponse(from, to)\n\n#### from\n\nType: `Stream`\n\n[Node.js HTTP response stream.](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n\n#### to\n\nType: `Stream`\n\nAny stream.\n\n## Related\n\n- [mimic-fn](https://github.com/sindresorhus/mimic-fn) - Make a function mimic another one\n- [clone-response](https://github.com/lukechilds/clone-response) - Clone a Node.js response stream\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-mimic-response?utm_source=npm-mimic-response&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/mimic-response",
          "error": "[Circular]",
          "extraneous": false
        },
        "p-cancelable": {
          "_args": [
            [
              "p-cancelable@2.0.0",
              "/path/to/project/packages/shared"
            ],
            [
              "p-cancelable@2.0.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "p-cancelable@2.0.0",
          "_id": "p-cancelable@2.0.0",
          "_integrity": "sha512-wvPXDmbMmu2ksjkB4Z3nZWTSkJEb9lqVdMaCKpZUGJG9TMiNp9XcbG3fn9fPKjem04fJMJnXoyFPk2FmgiaiNg==",
          "_location": "/p-cancelable",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "p-cancelable@2.0.0",
            "name": "p-cancelable",
            "escapedName": "p-cancelable",
            "rawSpec": "2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.0.0.tgz",
          "_spec": "2.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/p-cancelable/issues"
          },
          "description": "Create a promise that can be canceled",
          "devDependencies": {
            "ava": "^1.4.1",
            "delay": "^4.1.0",
            "promise.prototype.finally": "^3.1.0",
            "tsd": "^0.7.1",
            "xo": "^0.24.0"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/sindresorhus/p-cancelable#readme",
          "keywords": [
            "promise",
            "cancelable",
            "cancel",
            "canceled",
            "canceling",
            "cancellable",
            "cancellation",
            "abort",
            "abortable",
            "aborting",
            "cleanup",
            "task",
            "token",
            "async",
            "function",
            "await",
            "promises",
            "bluebird"
          ],
          "license": "MIT",
          "name": "p-cancelable",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/p-cancelable.git"
          },
          "scripts": {
            "test": "xo && ava && tsd"
          },
          "version": "2.0.0",
          "readme": "# p-cancelable [![Build Status](https://travis-ci.org/sindresorhus/p-cancelable.svg?branch=master)](https://travis-ci.org/sindresorhus/p-cancelable)\n\n> Create a promise that can be canceled\n\nUseful for animation, loading resources, long-running async computations, async iteration, etc.\n\n\n## Install\n\n```\n$ npm install p-cancelable\n```\n\n\n## Usage\n\n```js\nconst PCancelable = require('p-cancelable');\n\nconst cancelablePromise = new PCancelable((resolve, reject, onCancel) => {\n\tconst worker = new SomeLongRunningOperation();\n\n\tonCancel(() => {\n\t\tworker.close();\n\t});\n\n\tworker.on('finish', resolve);\n\tworker.on('error', reject);\n});\n\n(async () => {\n\ttry {\n\t\tconsole.log('Operation finished successfully:', await cancelablePromise);\n\t} catch (error) {\n\t\tif (cancelablePromise.isCanceled) {\n\t\t\t// Handle the cancelation here\n\t\t\tconsole.log('Operation was canceled');\n\t\t\treturn;\n\t\t}\n\n\t\tthrow error;\n\t}\n})();\n\n// Cancel the operation after 10 seconds\nsetTimeout(() => {\n\tcancelablePromise.cancel('Unicorn has changed its color');\n}, 10000);\n```\n\n\n## API\n\n### new PCancelable(executor)\n\nSame as the [`Promise` constructor](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise), but with an appended `onCancel` parameter in `executor`.<br>\nCancelling will reject the promise with `PCancelable.CancelError`. To avoid that, set `onCancel.shouldReject` to `false`.\n\n```js\nconst PCancelable = require('p-cancelable');\n\nconst cancelablePromise = new PCancelable((resolve, reject, onCancel) => {\n\tconst job = new Job();\n\n\tonCancel.shouldReject = false;\n\tonCancel(() => {\n\t\tjob.stop();\n\t});\n\n\tjob.on('finish', resolve);\n});\n\ncancelablePromise.cancel(); // Doesn't throw an error\n```\n\n`PCancelable` is a subclass of `Promise`.\n\n#### onCanceled(fn)\n\nType: `Function`\n\nAccepts a function that is called when the promise is canceled.\n\nYou're not required to call this function. You can call this function multiple times to add multiple cancel handlers.\n\n### PCancelable#cancel([reason])\n\nType: `Function`\n\nCancel the promise and optionally provide a reason.\n\nThe cancellation is synchronous. Calling it after the promise has settled or multiple times does nothing.\n\n### PCancelable#isCanceled\n\nType: `boolean`\n\nWhether the promise is canceled.\n\n### PCancelable.CancelError\n\nType: `Error`\n\nRejection reason when `.cancel()` is called.\n\nIt includes a `.isCanceled` property for convenience.\n\n### PCancelable.fn(fn)\n\nConvenience method to make your promise-returning or async function cancelable.\n\nThe function you specify will have `onCancel` appended to its parameters.\n\n```js\nconst PCancelable = require('p-cancelable');\n\nconst fn = PCancelable.fn((input, onCancel) => {\n\tconst job = new Job();\n\n\tonCancel(() => {\n\t\tjob.cleanup();\n\t});\n\n\treturn job.start(); //=> Promise\n});\n\nconst cancelablePromise = fn('input'); //=> PCancelable\n\n// …\n\ncancelablePromise.cancel();\n```\n\n\n## FAQ\n\n### Cancelable vs. Cancellable\n\n[In American English, the verb cancel is usually inflected canceled and canceling—with one l.](http://grammarist.com/spelling/cancel/)<br>Both a [browser API](https://developer.mozilla.org/en-US/docs/Web/API/Event/cancelable) and the [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises) use this spelling.\n\n### What about the official [Cancelable Promises proposal](https://github.com/tc39/proposal-cancelable-promises)?\n\n~~It's still an early draft and I don't really like its current direction. It complicates everything and will require deep changes in the ecosystem to adapt to it. And the way you have to use cancel tokens is verbose and convoluted. I much prefer the more pragmatic and less invasive approach in this module.~~ The proposal was withdrawn.\n\n\n## Related\n\n- [p-progress](https://github.com/sindresorhus/p-progress) - Create a promise that reports progress\n- [p-lazy](https://github.com/sindresorhus/p-lazy) - Create a lazy promise that defers execution until `.then()` or `.catch()` is called\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/p-cancelable",
          "error": "[Circular]",
          "extraneous": false
        },
        "p-event": {
          "_args": [
            [
              "p-event@4.1.0",
              "/path/to/project/packages/shared"
            ],
            [
              "p-event@4.1.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "p-event@4.1.0",
          "_id": "p-event@4.1.0",
          "_integrity": "sha512-4vAd06GCsgflX4wHN1JqrMzBh/8QZ4j+rzp0cd2scXRwuBEv+QR3wrVA5aLhWDLw4y2WgDKvzWF3CCLmVM1UgA==",
          "_location": "/p-event",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "p-event@4.1.0",
            "name": "p-event",
            "escapedName": "p-event",
            "rawSpec": "4.1.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "4.1.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/p-event/-/p-event-4.1.0.tgz",
          "_spec": "4.1.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/p-event/issues"
          },
          "dependencies": {
            "p-timeout": {
              "_args": [
                [
                  "p-timeout@2.0.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "p-timeout@2.0.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "p-timeout@2.0.1",
              "_id": "p-timeout@2.0.1",
              "_integrity": "sha512-88em58dDVB/KzPEx1X0N3LwFfYZPyDc4B6eF38M1rk9VTZMbxXXgjugz8mmwpS9Ox4BDZ+t6t3QP5+/gazweIA==",
              "_location": "/p-timeout",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "p-timeout@2.0.1",
                "name": "p-timeout",
                "escapedName": "p-timeout",
                "rawSpec": "2.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.1"
              },
              "_requiredBy": [
                "/p-event"
              ],
              "_resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-2.0.1.tgz",
              "_spec": "2.0.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/p-timeout/issues"
              },
              "dependencies": {
                "p-finally": {
                  "_args": [
                    [
                      "p-finally@1.0.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "p-finally@1.0.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "p-finally@1.0.0",
                  "_id": "p-finally@1.0.0",
                  "_integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
                  "_location": "/p-finally",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "p-finally@1.0.0",
                    "name": "p-finally",
                    "escapedName": "p-finally",
                    "rawSpec": "1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.0"
                  },
                  "_requiredBy": [
                    "/p-timeout"
                  ],
                  "_resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
                  "_spec": "1.0.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/p-finally/issues"
                  },
                  "description": "`Promise#finally()` ponyfill - Invoked when the promise is settled regardless of outcome",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=4"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/p-finally#readme",
                  "keywords": [
                    "promise",
                    "finally",
                    "handler",
                    "function",
                    "async",
                    "await",
                    "promises",
                    "settled",
                    "ponyfill",
                    "polyfill",
                    "shim",
                    "bluebird"
                  ],
                  "license": "MIT",
                  "name": "p-finally",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/p-finally.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "1.0.0",
                  "xo": {
                    "esnext": true
                  },
                  "readme": "# p-finally [![Build Status](https://travis-ci.org/sindresorhus/p-finally.svg?branch=master)](https://travis-ci.org/sindresorhus/p-finally)\n\n> [`Promise#finally()`](https://github.com/tc39/proposal-promise-finally) [ponyfill](https://ponyfill.com) - Invoked when the promise is settled regardless of outcome\n\nUseful for cleanup.\n\n\n## Install\n\n```\n$ npm install --save p-finally\n```\n\n\n## Usage\n\n```js\nconst pFinally = require('p-finally');\n\nconst dir = createTempDir();\n\npFinally(write(dir), () => cleanup(dir));\n```\n\n\n## API\n\n### pFinally(promise, [onFinally])\n\nReturns a `Promise`.\n\n#### onFinally\n\nType: `Function`\n\nNote: Throwing or returning a rejected promise will reject `promise` with the rejection reason.\n\n\n## Related\n\n- [p-try](https://github.com/sindresorhus/p-try) - `Promise#try()` ponyfill - Starts a promise chain\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/p-finally",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Timeout a promise after a specified amount of time",
              "devDependencies": {
                "ava": "*",
                "delay": "^2.0.0",
                "p-cancelable": "^0.3.0",
                "xo": "*"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/p-timeout#readme",
              "keywords": [
                "promise",
                "timeout",
                "error",
                "invalidate",
                "async",
                "await",
                "promises",
                "time",
                "out",
                "cancel",
                "bluebird"
              ],
              "license": "MIT",
              "name": "p-timeout",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/p-timeout.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "2.0.1",
              "readme": "# p-timeout [![Build Status](https://travis-ci.org/sindresorhus/p-timeout.svg?branch=master)](https://travis-ci.org/sindresorhus/p-timeout)\n\n> Timeout a promise after a specified amount of time\n\n\n## Install\n\n```\n$ npm install p-timeout\n```\n\n\n## Usage\n\n```js\nconst delay = require('delay');\nconst pTimeout = require('p-timeout');\n\nconst delayedPromise = delay(200);\n\npTimeout(delayedPromise, 50).then(() => 'foo');\n//=> [TimeoutError: Promise timed out after 50 milliseconds]\n```\n\n\n## API\n\n### pTimeout(input, ms, [message | fallback])\n\nReturns a decorated `input` that times out after `ms` time.\n\nIf you pass in a cancelable promise, specifically a promise with a `.cancel()` method, that method will be called when the `pTimeout` promise times out.\n\n#### input\n\nType: `Promise`\n\nPromise to decorate.\n\n#### ms\n\nType: `number`\n\nMilliseconds before timing out.\n\n#### message\n\nType: `string` `Error`<br>\nDefault: `'Promise timed out after 50 milliseconds'`\n\nSpecify a custom error message or error.\n\nIf you do a custom error, it's recommended to sub-class `pTimeout.TimeoutError`.\n\n#### fallback\n\nType: `Function`\n\nDo something other than rejecting with an error on timeout.\n\nYou could for example retry:\n\n```js\nconst delay = require('delay');\nconst pTimeout = require('p-timeout');\n\nconst delayedPromise = () => delay(200);\n\npTimeout(delayedPromise(), 50, () => {\n\treturn pTimeout(delayedPromise(), 300);\n});\n```\n\n### pTimeout.TimeoutError\n\nExposed for instance checking and sub-classing.\n\n\n## Related\n\n- [delay](https://github.com/sindresorhus/delay) - Delay a promise a specified amount of time\n- [p-min-delay](https://github.com/sindresorhus/p-min-delay) - Delay a promise a minimum amount of time\n- [p-retry](https://github.com/sindresorhus/p-retry) - Retry a promise-returning function\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "p-finally": "^1.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/p-timeout",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Promisify an event by waiting for it to be emitted",
          "devDependencies": {
            "@types/node": "^11.13.0",
            "ava": "^1.4.1",
            "delay": "^4.1.0",
            "tsd": "^0.7.2",
            "xo": "^0.24.0"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/sindresorhus/p-event#readme",
          "keywords": [
            "promise",
            "events",
            "event",
            "emitter",
            "eventemitter",
            "event-emitter",
            "emit",
            "emits",
            "listener",
            "promisify",
            "addlistener",
            "addeventlistener",
            "wait",
            "waits",
            "on",
            "browser",
            "dom",
            "async",
            "await",
            "promises",
            "bluebird"
          ],
          "license": "MIT",
          "name": "p-event",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/p-event.git"
          },
          "scripts": {
            "test": "xo && ava && tsd"
          },
          "version": "4.1.0",
          "readme": "# p-event [![Build Status](https://travis-ci.org/sindresorhus/p-event.svg?branch=master)](https://travis-ci.org/sindresorhus/p-event)\n\n> Promisify an event by waiting for it to be emitted\n\nUseful when you need only one event emission and want to use it with promises or await it in an async function.\n\nIt's works with any event API in Node.js and the browser (using a bundler).\n\nIf you want multiple individual events as they are emitted, you can use the `pEvent.iterator()` method. [Observables](https://medium.com/@benlesh/learning-observable-by-building-observable-d5da57405d87) can be useful too.\n\n\n## Install\n\n```\n$ npm install p-event\n```\n\n\n## Usage\n\nIn Node.js:\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\n(async () => {\n\ttry {\n\t\tconst result = await pEvent(emitter, 'finish');\n\n\t\t// `emitter` emitted a `finish` event\n\t\tconsole.log(result);\n\t} catch (error) {\n\t\t// `emitter` emitted an `error` event\n\t\tconsole.error(error);\n\t}\n})();\n```\n\nIn the browser:\n\n```js\nconst pEvent = require('p-event');\n\n(async () => {\n\tawait pEvent(document, 'DOMContentLoaded');\n\tconsole.log('😎');\n})();\n```\n\nAsync iteration:\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\n(async () => {\n\tconst asyncIterator = pEvent.iterator(emitter, 'data', {\n\t\tresolutionEvents: ['finish']\n\t});\n\n\tfor await (const event of asyncIterator) {\n\t\tconsole.log(event);\n\t}\n})();\n```\n\n\n## API\n\n### pEvent(emitter, event, [options])\n### pEvent(emitter, event, filter)\n\nReturns a `Promise` that is fulfilled when `emitter` emits an event matching `event`, or rejects if `emitter` emits any of the events defined in the `rejectionEvents` option.\n\n**Note**: `event` is a string for a single event type, for example, `'data'`. To listen on multiple\nevents, pass an array of strings, such as `['started', 'stopped']`.\n\nThe returned promise has a `.cancel()` method, which when called, removes the event listeners and causes the promise to never be settled.\n\n#### emitter\n\nType: `Object`\n\nEvent emitter object.\n\nShould have either a `.on()`/`.addListener()`/`.addEventListener()` and `.off()`/`.removeListener()`/`.removeEventListener()` method, like the [Node.js `EventEmitter`](https://nodejs.org/api/events.html) and [DOM events](https://developer.mozilla.org/en-US/docs/Web/Events).\n\n#### event\n\nType: `string | string[]`\n\nName of the event or events to listen to.\n\nIf the same event is defined both here and in `rejectionEvents`, this one takes priority.\n\n#### options\n\nType: `Object`\n\n##### rejectionEvents\n\nType: `string[]`<br>\nDefault: `['error']`\n\nEvents that will reject the promise.\n\n##### multiArgs\n\nType: `boolean`<br>\nDefault: `false`\n\nBy default, the promisified function will only return the first argument from the event callback, which works fine for most APIs. This option can be useful for APIs that return multiple arguments in the callback. Turning this on will make it return an array of all arguments from the callback, instead of just the first argument. This also applies to rejections.\n\nExample:\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\n(async () => {\n\tconst [foo, bar] = await pEvent(emitter, 'finish', {multiArgs: true});\n})();\n```\n\n##### timeout\n\nType: `number`<br>\nDefault: `Infinity`\n\nTime in milliseconds before timing out.\n\n##### filter\n\nType: `Function`\n\nFilter function for accepting an event.\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\n(async () => {\n\tconst result = await pEvent(emitter, '🦄', value => value > 3);\n\t// Do something with first 🦄 event with a value greater than 3\n})();\n```\n\n### pEvent.multiple(emitter, event, options)\n\nWait for multiple event emissions. Returns an array.\n\nThis method has the same arguments and options as `pEvent()` with the addition of the following options:\n\n#### options\n\nType: `Object`\n\n##### count\n\n*Required*<br>\nType: `number`\n\nThe number of times the event needs to be emitted before the promise resolves.\n\n##### resolveImmediately\n\nType: `boolean`<br>\nDefault: `false`\n\nWhether to resolve the promise immediately. Emitting one of the `rejectionEvents` won't throw an error.\n\n**Note**: The returned array will be mutated when an event is emitted.\n\nExample:\n\n```js\nconst pEvent = require('p-event');\n\nconst emitter = new EventEmitter();\n\nconst promise = pEvent.multiple(emitter, 'hello', {\n\tresolveImmediately: true,\n\tcount: Infinity\n});\n\nconst result = await promise;\nconsole.log(result);\n//=> []\n\nemitter.emit('hello', 'Jack');\nconsole.log(result);\n//=> ['Jack']\n\nemitter.emit('hello', 'Mark');\nconsole.log(result);\n//=> ['Jack', 'Mark']\n\n// Stops listening\nemitter.emit('error', new Error('😿'));\n\nemitter.emit('hello', 'John');\nconsole.log(result);\n//=> ['Jack', 'Mark']\n```\n\n### pEvent.iterator(emitter, event, [options])\n### pEvent.iterator(emitter, event, filter)\n\nReturns an [async iterator](http://2ality.com/2016/10/asynchronous-iteration.html) that lets you asynchronously iterate over events of `event` emitted from `emitter`. The iterator ends when `emitter` emits an event matching any of the events defined in `resolutionEvents`, or rejects if `emitter` emits any of the events defined in the `rejectionEvents` option.\n\nThis method has the same arguments and options as `pEvent()` with the addition of the following options:\n\n#### options\n\nType: `Object`\n\n##### limit\n\nType: `number` *(non-negative integer)*<br>\nDefault: `Infinity`\n\nMaximum number of events for the iterator before it ends. When the limit is reached, the iterator will be marked as `done`. This option is useful to paginate events, for example, fetching 10 events per page.\n\n##### resolutionEvents\n\nType: `string[]`<br>\nDefault: `[]`\n\nEvents that will end the iterator.\n\n\n## Before and after\n\n```js\nconst fs = require('fs');\n\nfunction getOpenReadStream(file, callback) {\n\tconst stream = fs.createReadStream(file);\n\n\tstream.on('open', () => {\n\t\tcallback(null, stream);\n\t});\n\n\tstream.on('error', error => {\n\t\tcallback(error);\n\t});\n}\n\ngetOpenReadStream('unicorn.txt', (error, stream) => {\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn;\n\t}\n\n\tconsole.log('File descriptor:', stream.fd);\n\tstream.pipe(process.stdout);\n});\n```\n\n```js\nconst fs = require('fs');\nconst pEvent = require('p-event');\n\nasync function getOpenReadStream(file) {\n\tconst stream = fs.createReadStream(file);\n\tawait pEvent(stream, 'open');\n\treturn stream;\n}\n\n(async () => {\n\tconst stream = await getOpenReadStream('unicorn.txt');\n\tconsole.log('File descriptor:', stream.fd);\n\tstream.pipe(process.stdout);\n})().catch(console.error);\n```\n\n\n## Tip\n\n### Dealing with calls that resolve with an error code\n\nSome functions might use a single event for success and for certain errors. Promises make it easy to have combined error handler for both error events and successes containing values which represent errors.\n\n```js\nconst pEvent = require('p-event');\nconst emitter = require('./some-event-emitter');\n\n(async () => {\n\ttry {\n\t\tconst result = await pEvent(emitter, 'finish');\n\n\t\tif (result === 'unwanted result') {\n\t\t\tthrow new Error('Emitter finished with an error');\n\t\t}\n\n\t\t// `emitter` emitted a `finish` event with an acceptable value\n\t\tconsole.log(result);\n\t} catch (error) {\n\t\t// `emitter` emitted an `error` event or\n\t\t// emitted a `finish` with 'unwanted result'\n\t\tconsole.error(error);\n\t}\n})();\n```\n\n\n## Related\n\n- [pify](https://github.com/sindresorhus/pify) - Promisify a callback-style function\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "p-timeout": "^2.0.1"
          },
          "path": "/path/to/project/packages/shared/node_modules/p-event",
          "error": "[Circular]",
          "extraneous": false
        },
        "responselike": {
          "_args": "[Circular]",
          "_from": "responselike@2.0.0",
          "_id": "responselike@2.0.0",
          "_integrity": "sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==",
          "_location": "/responselike",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "responselike@2.0.0",
            "name": "responselike",
            "escapedName": "responselike",
            "rawSpec": "2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.0"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.0.tgz",
          "_spec": "2.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "dependencies": {
            "lowercase-keys": {
              "_args": "[Circular]",
              "_from": "lowercase-keys@2.0.0",
              "_id": "lowercase-keys@2.0.0",
              "_integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
              "_location": "/lowercase-keys",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "lowercase-keys@2.0.0",
                "name": "lowercase-keys",
                "escapedName": "lowercase-keys",
                "rawSpec": "2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
              "_spec": "2.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "description": "Lowercase the keys of an object",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/sindresorhus/lowercase-keys#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "lowercase-keys",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "2.0.0",
              "readme": "# lowercase-keys [![Build Status](https://travis-ci.org/sindresorhus/lowercase-keys.svg?branch=master)](https://travis-ci.org/sindresorhus/lowercase-keys)\n\n> Lowercase the keys of an object\n\n\n## Install\n\n```\n$ npm install lowercase-keys\n```\n\n\n## Usage\n\n```js\nconst lowercaseKeys = require('lowercase-keys');\n\nlowercaseKeys({FOO: true, bAr: false});\n//=> {foo: true, bar: false}\n```\n\n\n## API\n\n### lowercaseKeys(object)\n\nReturns a new object with the keys lowercased.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/lowercase-keys",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "lowercase-keys"
            }
          },
          "description": "A response-like object for mocking a Node.js HTTP response stream",
          "devDependencies": "[Circular]",
          "homepage": "https://github.com/lukechilds/responselike#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "src/index.js",
          "name": "responselike",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "2.0.0",
          "xo": "[Circular]",
          "readme": "# responselike\n\n> A response-like object for mocking a Node.js HTTP response stream\n\n[![Build Status](https://travis-ci.org/lukechilds/responselike.svg?branch=master)](https://travis-ci.org/lukechilds/responselike)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/responselike/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/responselike?branch=master)\n[![npm](https://img.shields.io/npm/dm/responselike.svg)](https://www.npmjs.com/package/responselike)\n[![npm](https://img.shields.io/npm/v/responselike.svg)](https://www.npmjs.com/package/responselike)\n\nReturns a streamable response object similar to a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage). Useful for formatting cached responses so they can be consumed by code expecting a real response.\n\n## Install\n\n```shell\nnpm install --save responselike\n```\n\nOr if you're just using for testing you'll want:\n\n```shell\nnpm install --save-dev responselike\n```\n\n## Usage\n\n```js\nconst Response = require('responselike');\n\nconst response = new Response(200, { foo: 'bar' }, Buffer.from('Hi!'), 'https://example.com');\n\nresponse.statusCode;\n// 200\nresponse.headers;\n// { foo: 'bar' }\nresponse.body;\n// <Buffer 48 69 21>\nresponse.url;\n// 'https://example.com'\n\nresponse.pipe(process.stdout);\n// Hi!\n```\n\n\n## API\n\n### new Response(statusCode, headers, body, url)\n\nReturns a streamable response object similar to a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n#### statusCode\n\nType: `number`\n\nHTTP response status code.\n\n#### headers\n\nType: `object`\n\nHTTP headers object. Keys will be automatically lowercased.\n\n#### body\n\nType: `buffer`\n\nA Buffer containing the response body. The Buffer contents will be streamable but is also exposed directly as `response.body`.\n\n#### url\n\nType: `string`\n\nRequest URL string.\n\n## License\n\nMIT © Luke Childs\n",
          "readmeFilename": "README.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/responselike",
          "error": "[Circular]",
          "extraneous": false
        },
        "to-readable-stream": {
          "_args": [
            [
              "to-readable-stream@2.1.0",
              "/path/to/project/packages/shared"
            ],
            [
              "to-readable-stream@2.1.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "to-readable-stream@2.1.0",
          "_id": "to-readable-stream@2.1.0",
          "_integrity": "sha512-o3Qa6DGg1CEXshSdvWNX2sN4QHqg03SPq7U6jPXRahlQdl5dK8oXjkU/2/sGrnOZKeGV1zLSO8qPwyKklPPE7w==",
          "_location": "/to-readable-stream",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "to-readable-stream@2.1.0",
            "name": "to-readable-stream",
            "escapedName": "to-readable-stream",
            "rawSpec": "2.1.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.1.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-2.1.0.tgz",
          "_spec": "2.1.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/to-readable-stream/issues"
          },
          "description": "Convert a string/Buffer/Uint8Array to a readable stream",
          "devDependencies": {
            "ava": "^1.4.1",
            "get-stream": "^5.0.0",
            "tsd": "^0.7.2",
            "xo": "^0.24.0"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/sindresorhus/to-readable-stream#readme",
          "keywords": [
            "stream",
            "readablestream",
            "string",
            "buffer",
            "uint8array",
            "from",
            "into",
            "to",
            "transform",
            "convert",
            "readable",
            "pull"
          ],
          "license": "MIT",
          "name": "to-readable-stream",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/to-readable-stream.git"
          },
          "scripts": {
            "test": "xo && ava && tsd"
          },
          "version": "2.1.0",
          "readme": "# to-readable-stream [![Build Status](https://travis-ci.org/sindresorhus/to-readable-stream.svg?branch=master)](https://travis-ci.org/sindresorhus/to-readable-stream)\n\n> Convert a string/Buffer/Uint8Array to a [readable stream](https://nodejs.org/api/stream.html#stream_readable_streams)\n\n\n## Install\n\n```\n$ npm install to-readable-stream\n```\n\n\n## Usage\n\n```js\nconst toReadableStream = require('to-readable-stream');\n\ntoReadableStream('🦄🌈').pipe(process.stdout);\n```\n\n\n## API\n\n### toReadableStream(input)\n\nReturns a [`stream.Readable`](https://nodejs.org/api/stream.html#stream_readable_streams).\n\n#### input\n\nType: `string` `Buffer` `Uint8Array`\n\nValue to convert to a stream.\n\n\n## Related\n\n- [into-stream](https://github.com/sindresorhus/into-stream) - More advanced version of this module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/to-readable-stream",
          "error": "[Circular]",
          "extraneous": false
        },
        "type-fest": {
          "_args": [
            [
              "type-fest@0.10.0",
              "/path/to/project/packages/shared"
            ],
            [
              "type-fest@0.10.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "type-fest@0.10.0",
          "_id": "type-fest@0.10.0",
          "_integrity": "sha512-EUV9jo4sffrwlg8s0zDhP0T2WD3pru5Xi0+HTE3zTUmBaZNhfkite9PdSJwdXLwPVW0jnAHT56pZHIOYckPEiw==",
          "_location": "/type-fest",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "type-fest@0.10.0",
            "name": "type-fest",
            "escapedName": "type-fest",
            "rawSpec": "0.10.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "0.10.0"
          },
          "_requiredBy": [
            "/got"
          ],
          "_resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.10.0.tgz",
          "_spec": "0.10.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/type-fest/issues"
          },
          "description": "A collection of essential TypeScript types",
          "devDependencies": {
            "@sindresorhus/tsconfig": "^0.7.0",
            "@typescript-eslint/eslint-plugin": "2.17.0",
            "@typescript-eslint/parser": "2.17.0",
            "eslint-config-xo-typescript": "^0.24.1",
            "tsd": "^0.7.3",
            "typescript": "3.7.5",
            "xo": "^0.25.3"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "index.d.ts",
            "source"
          ],
          "funding": "https://github.com/sponsors/sindresorhus",
          "homepage": "https://github.com/sindresorhus/type-fest#readme",
          "keywords": [
            "typescript",
            "ts",
            "types",
            "utility",
            "util",
            "utilities",
            "omit",
            "merge",
            "json"
          ],
          "license": "(MIT OR CC0-1.0)",
          "name": "type-fest",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/type-fest.git"
          },
          "scripts": {
            "test": "xo && tsd"
          },
          "version": "0.10.0",
          "xo": {
            "extends": "xo-typescript",
            "extensions": [
              "ts"
            ],
            "rules": {
              "import/no-unresolved": "off",
              "@typescript-eslint/indent": "off"
            }
          },
          "readme": "<div align=\"center\">\n\t<br>\n\t<br>\n\t<img src=\"media/logo.svg\" alt=\"type-fest\" height=\"300\">\n\t<br>\n\t<br>\n\t<b>A collection of essential TypeScript types</b>\n\t<br>\n\t<hr>\n</div>\n<br>\n<br>\n\n[![Build Status](https://travis-ci.com/sindresorhus/type-fest.svg?branch=master)](https://travis-ci.com/sindresorhus/type-fest)\n[![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n<!-- Commented out until they actually show anything\n[![npm dependents](https://badgen.net/npm/dependents/type-fest)](https://www.npmjs.com/package/type-fest?activeTab=dependents) [![npm downloads](https://badgen.net/npm/dt/type-fest)](https://www.npmjs.com/package/type-fest)\n-->\n\nMany of the types here should have been built-in. You can help by suggesting some of them to the [TypeScript project](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\n\nEither add this package as a dependency or copy-paste the needed types. No credit required. 👌\n\nPR welcome for additional commonly needed types and docs improvements. Read the [contributing guidelines](.github/contributing.md) first.\n\n## Install\n\n```\n$ npm install type-fest\n```\n\n*Requires TypeScript >=3.2*\n\n## Usage\n\n```ts\nimport {Except} from 'type-fest';\n\ntype Foo = {\n\tunicorn: string;\n\trainbow: boolean;\n};\n\ntype FooWithoutRainbow = Except<Foo, 'rainbow'>;\n//=> {unicorn: string}\n```\n\n## API\n\nClick the type names for complete docs.\n\n### Basic\n\n- [`Primitive`](source/basic.d.ts) - Matches any [primitive value](https://developer.mozilla.org/en-US/docs/Glossary/Primitive).\n- [`Class`](source/basic.d.ts) - Matches a [`class` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes).\n- [`TypedArray`](source/basic.d.ts) - Matches any [typed array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray), like `Uint8Array` or `Float64Array`.\n- [`JsonObject`](source/basic.d.ts) - Matches a JSON object.\n- [`JsonArray`](source/basic.d.ts) - Matches a JSON array.\n- [`JsonValue`](source/basic.d.ts) - Matches any valid JSON value.\n- [`ObservableLike`](source/basic.d.ts) - Matches a value that is like an [Observable](https://github.com/tc39/proposal-observable).\n\n### Utilities\n\n- [`Except`](source/except.d.ts) - Create a type from an object type without certain keys. This is a stricter version of [`Omit`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-5.html#the-omit-helper-type).\n- [`Mutable`](source/mutable.d.ts) - Convert an object with `readonly` keys into a mutable object. The inverse of `Readonly<T>`.\n- [`Merge`](source/merge.d.ts) - Merge two types into a new type. Keys of the second type overrides keys of the first type.\n- [`MergeExclusive`](source/merge-exclusive.d.ts) - Create a type that has mutually exclusive keys.\n- [`RequireAtLeastOne`](source/require-at-least-one.d.ts) - Create a type that requires at least one of the given keys.\n- [`RequireExactlyOne`](source/require-exactly-one.d.ts) - Create a type that requires exactly a single key of the given keys and disallows more.\n- [`PartialDeep`](source/partial-deep.d.ts) - Create a deeply optional version of another type. Use [`Partial<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1401-L1406) if you only need one level deep.\n- [`ReadonlyDeep`](source/readonly-deep.d.ts) - Create a deeply immutable version of an `object`/`Map`/`Set`/`Array` type. Use [`Readonly<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1415-L1420) if you only need one level deep.\n- [`LiteralUnion`](source/literal-union.d.ts) - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for [Microsoft/TypeScript#29729](https://github.com/Microsoft/TypeScript/issues/29729).\n- [`Promisable`](source/promisable.d.ts) - Create a type that represents either the value or the value wrapped in `PromiseLike`.\n- [`Opaque`](source/opaque.d.ts) - Create an [opaque type](https://codemix.com/opaque-types-in-javascript/).\n- [`SetOptional`](source/set-optional.d.ts) - Create a type that makes the given keys optional.\n- [`SetRequired`](source/set-required.d.ts) - Create a type that makes the given keys required.\n\n### Miscellaneous\n\n- [`PackageJson`](source/package-json.d.ts) - Type for [npm's `package.json` file](https://docs.npmjs.com/creating-a-package-json-file).\n- [`TsConfigJson`](source/tsconfig-json.d.ts) - Type for [TypeScript's `tsconfig.json` file](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) (TypeScript 3.7).\n\n## Declined types\n\n*If we decline a type addition, we will make sure to document the better solution here.*\n\n- [`Diff` and `Spread`](https://github.com/sindresorhus/type-fest/pull/7) - The PR author didn't provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider.\n- [`Dictionary`](https://github.com/sindresorhus/type-fest/issues/33) - You only save a few characters (`Dictionary<number>` vs `Record<string, number>`) from [`Record`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1429-L1434), which is more flexible and well-known. Also, you shouldn't use an object as a dictionary. We have `Map` in JavaScript now.\n\n## Tips\n\n### Built-in types\n\nThere are many advanced types most users don't know about.\n\n- [`Partial<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1401-L1406) - Make all properties in `T` optional.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgHIHsAmEDC6QzADmyA3gLABQyycADnanALYQBcyAzmFKEQNxUaddFDAcQAV2YAjaIMoBfKlQQAbOJ05osEAIIMAQpOBrsUMkOR1eANziRkCfISKSoD4Pg4ZseAsTIALyW1DS0DEysHADkvvoMMQA0VsKi4sgAzAAMuVaKClY2wPaOknSYDrguADwA0sgQAB6QIJjaANYQAJ7oMDp+LsQAfAAUXd0cdUnI9mo+uv6uANp1ALoAlKHhyGAAFsCcAHTOAW4eYF4gyxNrwbNwago0ypRWp66jH8QcAApwYmAjxq8SWIy2FDCNDA3ToKFBQyIdR69wmfQG1TOhShyBgomQX3w3GQE2Q6IA8jIAFYQBBgI4TTiEs5bTQYsFInrLTbbHZOIlgZDlSqQABqj0kKBC3yINx6a2xfOQwH6o2FVXFaklwSCIUkbQghBAEEwENSfNOlykEGefNe5uhB2O6sgS3GPRmLogmslG1tLxUOKgEDA7hAuydtteryAA)\n\n\t```ts\n\tinterface NodeConfig {\n\t\t\tappName: string;\n\t\t\tport: number;\n\t}\n\n\tclass NodeAppBuilder {\n\t\t\tprivate configuration: NodeConfig = {\n\t\t\t\t\tappName: 'NodeApp',\n\t\t\t\t\tport: 3000\n\t\t\t};\n\n\t\t\tprivate updateConfig<Key extends keyof NodeConfig>(key: Key, value: NodeConfig[Key]) {\n\t\t\t\t\tthis.configuration[key] = value;\n\t\t\t}\n\n\t\t\tconfig(config: Partial<NodeConfig>) {\n\t\t\t\t\ttype NodeConfigKey = keyof NodeConfig;\n\n\t\t\t\t\tfor (const key of Object.keys(config) as NodeConfigKey[]) {\n\t\t\t\t\t\t\tconst updateValue = config[key];\n\n\t\t\t\t\t\t\tif (updateValue === undefined) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.updateConfig(key, updateValue);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t}\n\t}\n\n\t// `Partial<NodeConfig>`` allows us to provide only a part of the\n\t// NodeConfig interface.\n\tnew NodeAppBuilder().config({appName: 'ToDoApp'});\n\t```\n\t</details>\n\n- [`Required<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1408-L1413) - Make all properties in `T` required.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgGED21VQGJZwC2wA3gFCjXAzFJgA2A-AFzADOUckA5gNxUaIYjA4ckvGG07c+g6gF8KQkAgCuEFFDA5O6gEbEwUbLm2ESwABQIixACJIoSdgCUYAR3Vg4MACYAPGYuFvYAfACU5Ko0APRxwADKMBD+wFAAFuh2Vv7OSBlYGdmc8ABu8LHKsRyGxqY4oQT21pTCIHQMjOwA5DAAHgACxAAOjDAAdChYxL0ANLHUouKSMH0AEmAAhJhY6ozpAJ77GTCMjMCiV0ToSAb7UJPPC9WRgrEJwAAqR6MwSRQPFGUFocDgRHYxnEfGAowh-zgUCOwF6KwkUl6tXqJhCeEsxDaS1AXSYfUGI3GUxmc0WSneQA)\n\n\t```ts\n\tinterface ContactForm {\n\t\t\temail?: string;\n\t\t\tmessage?: string;\n\t}\n\n\tfunction submitContactForm(formData: Required<ContactForm>) {\n\t\t\t// Send the form data to the server.\n\t}\n\n\tsubmitContactForm({\n\t\t\temail: 'ex@mple.com',\n\t\t\tmessage: 'Hi! Could you tell me more about…',\n\t});\n\n\t// TypeScript error: missing property 'message'\n\tsubmitContactForm({\n\t\t\temail: 'ex@mple.com',\n\t});\n\t```\n\t</details>\n\n- [`Readonly<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1415-L1420) - Make all properties in `T` readonly.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4UwOwVwW2AZA9gc3mAbmANsA3gKFCOAHkAzMgGkOJABEwAjKZa2kAUQCcvEu32AMQCGAF2FYBIAL4BufDRABLCKLBcywgMZgEKZOoDCiCGSXI8i4hGEwwALmABnUVxXJ57YFgzZHSVF8sT1BpBSItLGEnJz1kAy5LLy0TM2RHACUwYQATEywATwAeAITjU3MAPnkrCJMXLigtUT4AClxgGztKbyDgaX99I1TzAEokr1BRAAslJwA6FIqLAF48TtswHp9MHDla9hJGACswZvmyLjAwAC8wVpm5xZHkUZDaMKIwqyWXYCW0oN4sNlsA1h0ug5gAByACyBQAggAHJHQ7ZBIFoXbzBjMCz7OoQP5YIaJNYQMAAdziCVaALGNSIAHomcAACoFJFgADKWjcSNEwG4vC4ji0wggEEQguiTnMEGALWAV1yAFp8gVgEjeFyuKICvMrCTgVxnst5jtsGC4ljsPNhXxGaAWcAAOq6YRXYDCRg+RWIcA5JSC+kWdCepQ+v3RYCU3RInzRMCGwlpC19NYBW1Ye08R1AA)\n\n\t```ts\n\tenum LogLevel {\n\t\t\tOff,\n\t\t\tDebug,\n\t\t\tError,\n\t\t\tFatal\n\t};\n\n\tinterface LoggerConfig {\n\t\t\tname: string;\n\t\t\tlevel: LogLevel;\n\t}\n\n\tclass Logger {\n\t\t\tconfig: Readonly<LoggerConfig>;\n\n\t\t\tconstructor({name, level}: LoggerConfig) {\n\t\t\t\t\tthis.config = {name, level};\n\t\t\t\t\tObject.freeze(this.config);\n\t\t\t}\n\t}\n\n\tconst config: LoggerConfig = {\n\t\tname: 'MyApp',\n\t\tlevel: LogLevel.Debug\n\t};\n\n\tconst logger = new Logger(config);\n\n\t// TypeScript Error: cannot assign to read-only property.\n\tlogger.config.level = LogLevel.Error;\n\n\t// We are able to edit config variable as we please.\n\tconfig.level = LogLevel.Error;\n\t```\n\t</details>\n\n- [`Pick<T, K>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1422-L1427) - From `T`, pick a set of properties whose keys are in the union `K`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgEE5TCgNugN4BQoZwOUBAXMAM5RyQDmA3KeSFABYCuAtgCMISMHloMmENh04oA9tBjQJjFuzIBfYrOAB6PcADCcGElh1gEGAHcKATwAO6ebyjB5CTNlwFwSxFR0BX5HeToYABNgBDh5fm8cfBg6AHIKG3ldA2BHOOcfFNpUygJ0pAhokr4hETFUgDpswywkggAFUwA3MFtgAF5gQgowKhhVKTYKGuFRcXo1aVZgbTIoJ3RW3xhOmB6+wfbcAGsAHi3kgBpgEtGy4AAfG54BWfqAPnZm4AAlZUj4MAkMA8GAGB4vEgfMlLLw6CwPBA8PYRmMgZVgAC6CgmI4cIommQELwICh8RBgKZKvALh1ur0bHQABR5PYMui0Wk7em2ADaAF0AJS0AASABUALIAGQAogR+Mp3CROCAFBBwVC2ikBpj5CgBIqGjizLA5TAFdAmalImAuqlBRoVQh5HBgEy1eDWfs7J5cjzGYKhroVfpDEhHM4MV6GRR5NN0JrtnRg6BVirTFBeHAKYmYY6QNpdB73LmCJZBlSAXAubtvczeSmQMNSuMbmKNgBlHFgPEUNwusBIPAAQlS1xetTmxT0SDoESgdD0C4aACtHMwxytLrohawgA)\n\n\t```ts\n\tinterface Article {\n\t\t\ttitle: string;\n\t\t\tthumbnail: string;\n\t\t\tcontent: string;\n\t}\n\n\t// Creates new type out of the `Article` interface composed\n\t// from the Articles' two properties: `title` and `thumbnail`.\n\t// `ArticlePreview = {title: string; thumbnail: string}`\n\ttype ArticlePreview = Pick<Article, 'title' | 'thumbnail'>;\n\n\t// Render a list of articles using only title and description.\n\tfunction renderArticlePreviews(previews: ArticlePreview[]): HTMLElement {\n\t\t\tconst articles = document.createElement('div');\n\n\t\t\tfor (const preview of previews) {\n\t\t\t\t\t// Append preview to the articles.\n\t\t\t}\n\n\t\t\treturn articles;\n\t}\n\n\tconst articles = renderArticlePreviews([\n\t\t\t{\n\t\t\t\ttitle: 'TypeScript tutorial!',\n\t\t\t\tthumbnail: '/assets/ts.jpg'\n\t\t\t}\n\t]);\n\t```\n\t</details>\n\n- [`Record<K, T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1429-L1434) - Construct a type with a set of properties `K` of type `T`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4ejYAUHsGcCWAXBMB2dgwGbAKYC2ADgDYwCeeemCaWArgE7ADGMxAhmuQHQBQoYEnJE8wALKEARnkaxEKdMAC8wAOS0kstGuAAfdQBM8ANzxlRjXQbVaWACwC0JPB0NqA3HwGgIwAJJoWozYHCxixnAsjAhStADmwESMMJYo1Fi4HMCIaPEu+MRklHj8gpqyoeHAAKJFFFTAAN4+giDYCIxwSAByHAR4AFw5SDF5Xm2gJBzdfQPD3WPxE5PAlBxdAPLYNQAelgh4aOHDaPQEMowrIAC+3oJ+AMKMrlrAXFhSAFZ4LEhC9g4-0BmA4JBISXgiCkBQABpILrJ5MhUGhYcATGD6Bk4Hh-jNgABrPDkOBlXyQAAq9ngYmJpOAAHcEOCRjAXqwYODfoo6DhakUSph+Uh7GI4P0xER4Cj0OSQGwMP8tP1hgAlX7swwAHgRl2RvIANALSA08ABtAC6AD4VM1Wm0Kow0MMrYaHYJjGYLLJXZb3at1HYnC43Go-QHQDcvA6-JsmEJXARgCDgMYWAhjIYhDAU+YiMAAFIwex0ZmilMITCGF79TLAGRsAgJYAAZRwSEZGzEABFTOZUrJ5Yn+jwnWgeER6HB7AAKJrADpdXqS4ZqYultTG6azVfqHswPBbtauLY7fayQ7HIbAAAMwBuAEoYw9IBq2Ixs9h2eFMOQYPQObALQKJgggABeYhghCIpikkKRpOQRIknAsZUiIeCttECBEP8NSMCkjDDAARMGziuIYxHwYOjDCMBmDNnAuTxA6irdCOBB1Lh5Dqpqn66tISIykawBnOCtqqC0gbjqc9DgpGkxegOliyfJDrRkAA)\n\n\t```ts\n\t// Positions of employees in our company.\n\ttype MemberPosition = 'intern' | 'developer' | 'tech-lead';\n\n\t// Interface describing properties of a single employee.\n\tinterface Employee {\n\t\t\tfirstName: string;\n\t\t\tlastName: string;\n\t\t\tyearsOfExperience: number;\n\t}\n\n\t// Create an object that has all possible `MemberPosition` values set as keys.\n\t// Those keys will store a collection of Employees of the same position.\n\tconst team: Record<MemberPosition, Employee[]> = {\n\t\t\tintern: [],\n\t\t\tdeveloper: [],\n\t\t\t'tech-lead': [],\n\t};\n\n\t// Our team has decided to help John with his dream of becoming Software Developer.\n\tteam.intern.push({\n\t\tfirstName: 'John',\n\t\tlastName: 'Doe',\n\t\tyearsOfExperience: 0\n\t});\n\n\t// `Record` forces you to initialize all of the property keys.\n\t// TypeScript Error: \"tech-lead\" property is missing\n\tconst teamEmpty: Record<MemberPosition, null> = {\n\t\t\tintern: null,\n\t\t\tdeveloper: null,\n\t};\n\t```\n\t</details>\n\n- [`Exclude<T, U>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1436-L1439) - Exclude from `T` those types that are assignable to `U`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgMrQG7QMIHsQzADmyA3gFDLIAOuUYAXMiAK4A2byAPsgM5hRQJHqwC2AI2gBucgF9y5MAE9qKAEoQAjiwj8AEnBAATNtGQBeZAAooWphu26wAGmS3e93bRC8IASgsAPmRDJRlyAHoI5ABRAA8ENhYjFFYOZGVVZBgoXFFkAAM0zh5+QRBhZhYJaAKAOkjogEkQZAQ4X2QAdwALCFbaemRgXmQtFjhOMFwq9K6ULuB0lk6U+HYwZAxJnQaYFhAEMGB8ZCIIMAAFOjAANR2IK0HGWISklIAedCgsKDwCYgAbQA5M9gQBdVzFQJ+JhiSRQMiUYYwayZCC4VHPCzmSzAspCYEBWxgFhQAZwKC+FpgJ43VwARgADH4ZFQSWSBjcZPJyPtDsdTvxKWBvr8rD1DCZoJ5HPopaYoK4EPhCEQmGKcKriLCtrhgEYkVQVT5Nr4fmZLLZtMBbFZgT0wGBqES6ghbHBIJqoBKFdBWQpjfh+DQbhY2tqiHVsbjLMVkAB+ZAAZiZaeQTHOVxu9ySjxNaujNwDVHNvzqbBGkBAdPoAfkQA)\n\n\t```ts\n\tinterface ServerConfig {\n\t\tport: null | string | number;\n\t}\n\n\ttype RequestHandler = (request: Request, response: Response) => void;\n\n\t// Exclude `null` type from `null | string | number`.\n\t// In case the port is equal to `null`, we will use default value.\n\tfunction getPortValue(port: Exclude<ServerConfig['port'], null>): number {\n\t\tif (typeof port === 'string') {\n\t\t\treturn parseInt(port, 10);\n\t\t}\n\n\t\treturn port;\n\t}\n\n\tfunction startServer(handler: RequestHandler, config: ServerConfig): void {\n\t\tconst server = require('http').createServer(handler);\n\n\t\tconst port = config.port === null ? 3000 : getPortValue(config.port);\n\t\tserver.listen(port);\n\t}\n\t```\n\t</details>\n\n- [`Extract<T, U>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1441-L1444) - Extract from `T` those types that are assignable to `U`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/CYUwxgNghgTiAEAzArgOzAFwJYHtXzSwEdkQBJYACgEoAueVZAWwCMQYBuAKDDwGcM8MgBF4AXngBlAJ6scESgHIRi6ty5ZUGdoihgEABXZ888AN5d48ANoiAuvUat23K6ihMQ9ATE0BzV3goPy8GZjZOLgBfLi4Aejj4AEEICBwAdz54MAALKFQQ+BxEeAAHY1NgKAwoIKy0grr4DByEUpgccpgMaXgAaxBerCzi+B9-ZulygDouFHRsU1z8kKMYE1RhaqgAHkt4AHkWACt4EAAPbVRgLLWNgBp9gGlBs8uQa6yAUUuYPQwdgNpKM7nh7mMML4CgA+R5WABqUAgpDeVxuhxO1he0jsXGh8EoOBO9COx3BQPo2PBADckaR6IjkSA6PBqTgsMBzPsicdrEC7OJWXSQNwYvFEgAVTS9JLXODpeDpKBZFg4GCoWa8VACIJykAKiQWKy2YQOAioYikCg0OEMDyhRSy4DyxS24KhAAMjyi6gS8AAwjh5OD0iBFHAkJoEOksC1mnkMJq8gUQKDNttKPlnfrwYp3J5XfBHXqoKpfYkAOI4ansTxaeDADmoRSCCBYAbxhC6TDx6rwYHIRX5bScjA4bLJwoDmDwDkfbA9JMrVMVdM1TN69LgkTgwgkchUahqIA)\n\n\t```ts\n\tdeclare function uniqueId(): number;\n\n\tconst ID = Symbol('ID');\n\n\tinterface Person {\n\t\t[ID]: number;\n\t\tname: string;\n\t\tage: number;\n\t}\n\n\t// Allows changing the person data as long as the property key is of string type.\n\tfunction changePersonData<\n\t\tObj extends Person,\n\t\tKey extends Extract<keyof Person, string>,\n\t\tValue extends Obj[Key]\n\t> (obj: Obj, key: Key, value: Value): void {\n\t\tobj[key] = value;\n\t}\n\n\t// Tiny Andrew was born.\n\tconst andrew = {\n\t\t[ID]: uniqueId(),\n\t\tname: 'Andrew',\n\t\tage: 0,\n\t};\n\n\t// Cool, we're fine with that.\n\tchangePersonData(andrew, 'name', 'Pony');\n\n\t// Goverment didn't like the fact that you wanted to change your identity.\n\tchangePersonData(andrew, ID, uniqueId());\n\t```\n\t</details>\n\n- [`NonNullable<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1446-L1449) - Exclude `null` and `undefined` from `T`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\tWorks with <code>strictNullChecks</code> set to <code>true</code>. (Read more <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html\">here</a>)\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/C4TwDgpgBACg9gJ2AOQK4FsBGEFQLxQDOwCAlgHYDmUAPlORtrnQwDasDcAUFwPQBU-WAEMkUOADMowqAGNWwwoSgATCBIqlgpOOSjAAFsOBRSy1IQgr9cKJlSlW1mZYQA3HFH68u8xcoBlHA8EACEHJ08Aby4oKDBUTFZSWXjEFEYcAEIALihkXTR2YSSIAB54JDQsHAA+blj4xOTUsHSACkMzPKD3HHDHNQQAGjSkPMqMmoQASh7g-oihqBi4uNIpdraxPAI2VhmVxrX9AzMAOm2ppnwoAA4ABifuE4BfKAhWSyOTuK7CS7pao3AhXF5rV48E4ICDAVAIPT-cGQyG+XTEIgLMJLTx7CAAdygvRCA0iCHaMwarhJOIQjUBSHaACJHk8mYdeLwxtdcVAAOSsh58+lXdr7Dlcq7A3n3J4PEUdADMcspUE53OluAIUGVTx46oAKuAIAFZGQwCYAKIIBCILjUxaDHAMnla+iodjcIA)\n\n\t```ts\n\ttype PortNumber = string | number | null;\n\n\t/** Part of a class definition that is used to build a server */\n\tclass ServerBuilder {\n\t\t\tportNumber!: NonNullable<PortNumber>;\n\n\t\t\tport(this: ServerBuilder, port: PortNumber): ServerBuilder {\n\t\t\t\t\tif (port == null) {\n\t\t\t\t\t\t\tthis.portNumber = 8000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.portNumber = port;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t}\n\t}\n\n\tconst serverBuilder = new ServerBuilder();\n\n\tserverBuilder\n\t\t\t.port('8000')   // portNumber = '8000'\n\t\t\t.port(null)     // portNumber =  8000\n\t\t\t.port(3000);    // portNumber =  3000\n\n\t// TypeScript error\n\tserverBuilder.portNumber = null;\n\t```\n\t</details>\n\n- [`Parameters<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1451-L1454) - Obtain the parameters of a function type in a tuple.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/GYVwdgxgLglg9mABAZwBYmMANgUwBQxgAOIUAXIgIZgCeA2gLoCUFAbnDACaIDeAUIkQB6IYgCypSlBxUATrMo1ECsJzgBbLEoipqAc0J7EMKMgDkiHLnU4wp46pwAPHMgB0fAL58+oSLARECEosLAA5ABUYG2QAHgAxJGdpVWREPDdMylk9ZApqemZEAF4APipacrw-CApEgBogkKwAYThwckQwEHUAIxxZJl4BYVEImiIZKF0oZRwiWVdbeygJmThgOYgcGFYcbhqApCJsyhtpWXcR1cnEePBoeDAABVPzgbTixFeFd8uEsClADcIxGiygIFkSEOT3SmTc2VydQeRx+ZxwF2QQ34gkEwDgsnSuFmMBKiAADEDjIhYk1Qm0OlSYABqZnYka4xA1DJZHJYkGc7yCbyeRA+CAIZCzNAYbA4CIAdxg2zJwVCkWirjwMswuEaACYmCCgA)\n\n\t```ts\n\tfunction shuffle(input: any[]): void {\n\t\t// Mutate array randomly changing its' elements indexes.\n\t}\n\n\tfunction callNTimes<Fn extends (...args: any[]) => any> (func: Fn, callCount: number) {\n\t\t// Type that represents the type of the received function parameters.\n\t\ttype FunctionParameters = Parameters<Fn>;\n\n\t\treturn function (...args: FunctionParameters) {\n\t\t\tfor (let i = 0; i < callCount; i++) {\n\t\t\t\tfunc(...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst shuffleTwice = callNTimes(shuffle, 2);\n\t```\n\t</details>\n\n- [`ConstructorParameters<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1456-L1459) - Obtain the parameters of a constructor function type in a tuple.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECCBOAXAlqApgWQPYBM0mgG8AoaaFRENALmgkXmQDsBzAblOmCycTV4D8teo1YdO3JiICuwRFngAKClWENmLAJRFOZRAAtkEAHQq00ALzlklNBzIBfYk+KhIMAJJTEYJsDQAwmDA+mgAPAAq0GgAHnxMODCKTGgA7tCKxllg8CwQtL4AngDaALraFgB80EWa1SRkAA6MAG5gfNAB4FABPDJyCrQR9tDNyG0dwMGhtBhgjWEiGgA00F70vv4RhY3hEZXVVinpc42KmuJkkv3y8Bly8EPaDWTkhiZd7r3e8LK3llwGCMXGQWGhEOsfH5zJlsrl8p0+gw-goAAo5MAAW3BaHgEEilU0tEhmzQ212BJ0ry4SOg+kg+gBBiMximIGA0nAfAQLGk2N4EAAEgzYcYcnkLsRdDTvNEYkYUKwSdCme9WdM0MYwYhFPSIPpJdTkAAzDKxBUaZX+aAAQgsVmkCTQxuYaBw2ng4Ok8CYcotSu8pMur09iG9vuObxZnx6SN+AyUWTF8MN0CcZE4Ywm5jZHK5aB5fP4iCFIqT4oRRTKRLo6lYVNeAHpG50wOzOe1zHr9NLQ+HoABybsD4HOKXXRA1JCoKhBELmI5pNaB6Fz0KKBAodDYPAgSUTmqYsAALx4m5nC6nW9nGq14KtaEUA9gR9PvuNCjQ9BgACNvcwNBtAcLiAA)\n\n\t```ts\n\tclass ArticleModel {\n\t\ttitle: string;\n\t\tcontent?: string;\n\n\t\tconstructor(title: string) {\n\t\t\tthis.title = title;\n\t\t}\n\t}\n\n\tclass InstanceCache<T extends (new (...args: any[]) => any)> {\n\t\tprivate ClassConstructor: T;\n\t\tprivate cache: Map<string, InstanceType<T>> = new Map();\n\n\t\tconstructor (ctr: T) {\n\t\t\tthis.ClassConstructor = ctr;\n\t\t}\n\n\t\tgetInstance (...args: ConstructorParameters<T>): InstanceType<T> {\n\t\t\tconst hash = this.calculateArgumentsHash(...args);\n\n\t\t\tconst existingInstance = this.cache.get(hash);\n\t\t\tif (existingInstance !== undefined) {\n\t\t\t\treturn existingInstance;\n\t\t\t}\n\n\t\t\treturn new this.ClassConstructor(...args);\n\t\t}\n\n\t\tprivate calculateArgumentsHash(...args: any[]): string {\n\t\t\t// Calculate hash.\n\t\t\treturn 'hash';\n\t\t}\n\t}\n\n\tconst articleCache = new InstanceCache(ArticleModel);\n\tconst amazonArticle = articleCache.getInstance('Amazon forests burining!');\n\t```\n\t</details>\n\n- [`ReturnType<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1461-L1464) – Obtain the return type of a function type.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA)\n\n\t```ts\n\t/** Provides every element of the iterable `iter` into the `callback` function and stores the results in an array. */\n\tfunction mapIter<\n\t\t\tElem,\n\t\t\tFunc extends (elem: Elem) => any,\n\t\t\tRet extends ReturnType<Func>\n\t>(iter: Iterable<Elem>, callback: Func): Ret[] {\n\t\t\tconst mapped: Ret[] = [];\n\n\t\t\tfor (const elem of iter) {\n\t\t\t\t\tmapped.push(callback(elem));\n\t\t\t}\n\n\t\t\treturn mapped;\n\t}\n\n\tconst setObject: Set<string> = new Set();\n\tconst mapObject: Map<number, string> = new Map();\n\n\tmapIter(setObject, (value: string) => value.indexOf('Foo')); // number[]\n\n\tmapIter(mapObject, ([key, value]: [number, string]) => {\n\t\t\treturn key % 2 === 0 ? value : 'Odd';\n\t}); // string[]\n\t```\n\t</details>\n\n- [`InstanceType<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1466-L1469) – Obtain the instance type of a constructor function type.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA)\n\n\t```ts\n\tclass IdleService {\n\t\t\tdoNothing (): void {}\n\t}\n\n\tclass News {\n\t\t\ttitle: string;\n\t\t\tcontent: string;\n\n\t\t\tconstructor(title: string, content: string) {\n\t\t\t\t\tthis.title = title;\n\t\t\t\t\tthis.content = content;\n\t\t\t}\n\t}\n\n\tconst instanceCounter: Map<Function, number> = new Map();\n\n\tinterface Constructor {\n\t\t\tnew(...args: any[]): any;\n\t}\n\n\t// Keep track how many instances of `Constr` constructor have been created.\n\tfunction getInstance<\n\t\t\tConstr extends Constructor,\n\t\t\tArgs extends ConstructorParameters<Constr>\n\t>(constructor: Constr, ...args: Args): InstanceType<Constr> {\n\t\t\tlet count = instanceCounter.get(constructor) || 0;\n\n\t\t\tconst instance = new constructor(...args);\n\n\t\t\tinstanceCounter.set(constructor, count + 1);\n\n\t\t\tconsole.log(`Created ${count + 1} instances of ${Constr.name} class`);\n\n\t\t\treturn instance;\n\t}\n\n\n\tconst idleService = getInstance(IdleService);\n\t// Will log: `Created 1 instances of IdleService class`\n\tconst newsEntry = getInstance(News, 'New ECMAScript proposals!', 'Last month...');\n\t// Will log: `Created 1 instances of News class`\n\t```\n\t</details>\n\n- [`Omit<T, K>`](https://github.com/microsoft/TypeScript/blob/71af02f7459dc812e85ac31365bfe23daf14b4e4/src/lib/es5.d.ts#L1446) – Constructs a type by picking all properties from T and then removing K.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgIImAWzgG2QbwChlks4BzCAVShwC5kBnMKUcgbmKYAcIFgIjBs1YgOXMpSFMWbANoBdTiW5woFddwAW0kfKWEAvoUIB6U8gDCUCHEiNkICAHdkYAJ69kz4GC3JcPG4oAHteKDABBxCYNAxsPFBIWEQUCAAPJG4wZABySUFcgJAAEzMLXNV1ck0dIuCw6EjBADpy5AB1FAQ4EGQAV0YUP2AHDy8wEOQbUugmBLwtEIA3OcmQnEjuZBgQqE7gAGtgZAhwKHdkHFGwNvGUdDIcAGUliIBJEF3kAF5kAHlML4ADyPBIAGjyBUYRQAPnkqho4NoYQA+TiEGD9EAISIhPozErQMG4AASK2gn2+AApek9pCSXm8wFSQooAJQMUkAFQAsgAZACiOAgmDOOSIJAQ+OYyGl4DgoDmf2QJRCCH6YvALQQNjsEGFovF1NyJWAy1y7OUyHMyE+yRAuFImG4Iq1YDswHxbRINjA-SgfXlHqVUE4xiAA)\n\n\t```ts\n\tinterface Animal {\n\t\t\timageUrl: string;\n\t\t\tspecies: string;\n\t\t\timages: string[];\n\t\t\tparagraphs: string[];\n\t}\n\n\t// Creates new type with all properties of the `Animal` interface\n\t// except 'images' and 'paragraphs' properties. We can use this\n\t// type to render small hover tooltip for a wiki entry list.\n\ttype AnimalShortInfo = Omit<Animal, 'images' | 'paragraphs'>;\n\n\tfunction renderAnimalHoverInfo (animals: AnimalShortInfo[]): HTMLElement {\n\t\t\tconst container =  document.createElement('div');\n\t\t\t// Internal implementation.\n\t\t\treturn container;\n\t}\n\t```\n\t</details>\n\nYou can find some examples in the [TypeScript docs](https://www.typescriptlang.org/docs/handbook/advanced-types.html#predefined-conditional-types).\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Jarek Radosz](https://github.com/CvX)\n- [Dimitri Benin](https://github.com/BendingBender)\n\n## License\n\n(MIT OR CC0-1.0)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-type-fest?utm_source=npm-type-fest&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/type-fest",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "description": "Human-friendly and powerful HTTP request library for Node.js",
      "devDependencies": {
        "@ava/typescript": "^1.1.1",
        "@sindresorhus/tsconfig": "^0.7.0",
        "@types/duplexer3": "^0.1.0",
        "@types/express": "^4.17.2",
        "@types/lolex": "^5.1.0",
        "@types/node": "13.1.2",
        "@types/proxyquire": "^1.3.28",
        "@types/sinon": "^7.0.13",
        "@types/tough-cookie": "^2.3.5",
        "@typescript-eslint/eslint-plugin": "^2.19.2",
        "@typescript-eslint/parser": "^2.19.2",
        "ava": "^3.3.0",
        "coveralls": "^3.0.4",
        "create-test-server": "^3.0.1",
        "del-cli": "^3.0.0",
        "delay": "^4.3.0",
        "eslint-config-xo-typescript": "^0.26.0",
        "express": "^4.17.1",
        "form-data": "^3.0.0",
        "get-port": "^5.0.0",
        "keyv": "^4.0.0",
        "lolex": "^6.0.0",
        "nock": "^12.0.0",
        "np": "^6.0.0",
        "nyc": "^15.0.0",
        "proxyquire": "^2.0.1",
        "sinon": "^8.1.1",
        "slow-stream": "0.0.4",
        "tempy": "^0.4.0",
        "tough-cookie": "^3.0.0",
        "typescript": "3.7.5",
        "xo": "^0.26.0"
      },
      "engines": {
        "node": ">=10"
      },
      "files": [
        "dist/source"
      ],
      "funding": "https://github.com/sindresorhus/got?sponsor=1",
      "homepage": "https://github.com/sindresorhus/got#readme",
      "keywords": [
        "http",
        "https",
        "http2",
        "get",
        "got",
        "url",
        "uri",
        "request",
        "simple",
        "curl",
        "wget",
        "fetch",
        "net",
        "network",
        "electron",
        "brotli",
        "requests",
        "human-friendly",
        "axios",
        "superagent"
      ],
      "license": "MIT",
      "main": "dist/source",
      "name": "got",
      "nyc": {
        "extension": [
          ".ts"
        ],
        "exclude": [
          "**/test/**"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/sindresorhus/got.git"
      },
      "scripts": {
        "build": "del-cli dist && tsc",
        "prepare": "npm run build",
        "release": "np",
        "test": "xo && tsc --noEmit && nyc ava"
      },
      "sideEffects": false,
      "types": "dist/source",
      "version": "10.6.0",
      "xo": {
        "extends": "xo-typescript",
        "extensions": [
          "ts"
        ],
        "ignores": [
          "documentation/examples/*"
        ],
        "rules": {
          "@typescript-eslint/no-empty-function": "off",
          "node/prefer-global/url": "off",
          "node/prefer-global/url-search-params": "off"
        }
      },
      "readme": "<div align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"360\" src=\"media/logo.svg\" alt=\"Got\">\n\t<br>\n\t<br>\n\t<br>\n\t<p align=\"center\">Huge thanks to <a href=\"https://moxy.studio\"><img src=\"https://sindresorhus.com/assets/thanks/moxy-logo.svg\" width=\"150\"></a> for sponsoring Sindre Sorhus!\n\t</p>\n\t<br>\n\t<br>\n</div>\n\n> Human-friendly and powerful HTTP request library for Node.js\n\n[![Build Status: Linux](https://travis-ci.org/sindresorhus/got.svg?branch=master)](https://travis-ci.org/sindresorhus/got)\n[![Coverage Status](https://coveralls.io/repos/github/sindresorhus/got/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/got?branch=master)\n[![Downloads](https://img.shields.io/npm/dm/got.svg)](https://npmjs.com/got)\n[![Install size](https://packagephobia.now.sh/badge?p=got)](https://packagephobia.now.sh/result?p=got)\n\n[Moving from Request?](documentation/migration-guides.md) [*(Note that Request is unmaintained)*](https://github.com/request/request/issues/3142)\n\n[See how Got compares to other HTTP libraries](#comparison)\n\nFor browser usage, we recommend [Ky](https://github.com/sindresorhus/ky) by the same people.\n\n## Highlights\n\n- [Promise API](#api)\n- [Stream API](#streams)\n- [Pagination API (experimental)](#pagination)\n- [Request cancelation](#aborting-the-request)\n- [RFC compliant caching](#cache-adapters)\n- [Follows redirects](#followredirect)\n- [Retries on failure](#retry)\n- [Progress events](#onuploadprogress-progress)\n- [Handles gzip/deflate/brotli](#decompress)\n- [Timeout handling](#timeout)\n- [Errors with metadata](#errors)\n- [JSON mode](#json-mode)\n- [WHATWG URL support](#url)\n- [Hooks](#hooks)\n- [Instances with custom defaults](#instances)\n- [Types](#types)\n- [Composable](documentation/advanced-creation.md#merging-instances)\n- [Plugins](documentation/lets-make-a-plugin.md)\n- [Used by 3000+ packages and 1.6M+ repos](https://github.com/sindresorhus/got/network/dependents)\n- Actively maintained\n\n## Install\n\n```\n$ npm install got\n```\n\n## Usage\n\n```js\nconst got = require('got');\n\n(async () => {\n\ttry {\n\t\tconst response = await got('https://sindresorhus.com');\n\t\tconsole.log(response.body);\n\t\t//=> '<!doctype html> ...'\n\t} catch (error) {\n\t\tconsole.log(error.response.body);\n\t\t//=> 'Internal server error ...'\n\t}\n})();\n```\n\n###### Streams\n\n```js\nconst stream = require('stream');\nconst {promisify} = require('util');\nconst fs = require('fs');\nconst got = require('got');\n\nconst pipeline = promisify(stream.pipeline);\n\n(async () => {\n    await pipeline(\n        got.stream('https://sindresorhus.com'),\n        fs.createWriteStream('index.html')\n    );\n\n    // For POST, PUT, and PATCH methods `got.stream` returns a `stream.Writable`\n    await pipeline(\n        fs.createReadStream('index.html'),\n        got.stream.post('https://sindresorhus.com')\n    );\n})();\n```\n\n**Tip:** Using `from.pipe(to)` doesn't forward errors. If you use it, switch to [`Stream.pipeline(from, ..., to, callback)`](https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback) instead (available from Node v10).\n\n### API\n\nIt's a `GET` request by default, but can be changed by using different methods or via `options.method`.\n\n**By default, Got will retry on failure. To disable this option, set [`options.retry`](#retry) to `0`.**\n\n#### got(url?, options?)\n\nReturns a Promise for a [`response` object](#response) or a [stream](#streams-1) if `options.isStream` is set to true.\n\n##### url\n\nType: `string | object`\n\nThe URL to request, as a string, a [`https.request` options object](https://nodejs.org/api/https.html#https_https_request_options_callback), or a [WHATWG `URL`](https://nodejs.org/api/url.html#url_class_url).\n\nProperties from `options` will override properties in the parsed `url`.\n\nIf no protocol is specified, it will throw a `TypeError`.\n\n**Note:** this can also be an option.\n\n##### options\n\nType: `object`\n\nAny of the [`https.request`](https://nodejs.org/api/https.html#https_https_request_options_callback) options.\n\n**Note:** Legacy URL support is disabled. `options.path` is supported only for backwards compatibility. Use `options.pathname` and `options.searchParams` instead. `options.auth` has been replaced with `options.username` & `options.password`.\n\n###### prefixUrl\n\nType: `string | URL`\n\nWhen specified, `prefixUrl` will be prepended to `url`. The prefix can be any valid URL, either relative or absolute. A trailing slash `/` is optional - one will be added automatically.\n\n**Note:** `prefixUrl` will be ignored if the `url` argument is a URL instance.\n\n**Note:** Leading slashes in `input` are disallowed when using this option to enforce consistency and avoid confusion. For example, when the prefix URL is `https://example.com/foo` and the input is `/bar`, there's ambiguity whether the resulting URL would become `https://example.com/foo/bar` or `https://example.com/bar`. The latter is used by browsers.\n\n**Tip:** Useful when used with [`got.extend()`](#custom-endpoints) to create niche-specific Got-instances.\n\n**Tip:** You can change `prefixUrl` using hooks as long as the URL still includes the `prefixUrl`. If the URL doesn't include it anymore, it will throw.\n\n```js\nconst got = require('got');\n\n(async () => {\n\tawait got('unicorn', {prefixUrl: 'https://cats.com'});\n\t//=> 'https://cats.com/unicorn'\n\n\tconst instance = got.extend({\n\t\tprefixUrl: 'https://google.com'\n\t});\n\n\tawait instance('unicorn', {\n\t\thooks: {\n\t\t\tbeforeRequest: [\n\t\t\t\toptions => {\n\t\t\t\t\toptions.prefixUrl = 'https://cats.com';\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\t//=> 'https://cats.com/unicorn'\n})();\n```\n\n###### headers\n\nType: `object`\\\nDefault: `{}`\n\nRequest headers.\n\nExisting headers will be overwritten. Headers set to `undefined` will be omitted.\n\n###### isStream\n\nType: `boolean`\\\nDefault: `false`\n\nReturns a `Stream` instead of a `Promise`. This is equivalent to calling `got.stream(url, options?)`.\n\n###### body\n\nType: `string | Buffer | stream.Readable` or [`form-data` instance](https://github.com/form-data/form-data)\n\n**Note #1:** The `body` option cannot be used with the `json` or `form` option.\n\n**Note #2:** If you provide this option, `got.stream()` will be read-only.\n\n**Note #3:** If you provide a payload with the `GET` or `HEAD` method, it will throw a `TypeError` unless the method is `GET` and the `allowGetBody` option is set to `true`.\n\nThe `content-length` header will be automatically set if `body` is a `string` / `Buffer` / `fs.createReadStream` instance / [`form-data` instance](https://github.com/form-data/form-data), and `content-length` and `transfer-encoding` are not manually set in `options.headers`.\n\n###### json\n\nType: `object | Array | number | string | boolean | null` *(JSON-serializable values)*\n\n**Note:** If you provide this option, `got.stream()` will be read-only.\n\nJSON body. If the `Content-Type` header is not set, it will be set to `application/json`.\n\n###### context\n\nType: `object`\n\nUser data. In contrast to other options, `context` is not enumerable.\n\n**Note:** The object is never merged, it's just passed through. Got will not modify the object in any way.\n\nIt's very useful for storing auth tokens:\n\n```js\nconst got = require('got');\n\nconst instance = got.extend({\n\thooks: {\n\t\tbeforeRequest: [\n\t\t\toptions => {\n\t\t\t\tif (!options.context && !options.context.token) {\n\t\t\t\t\tthrow new Error('Token required');\n\t\t\t\t}\n\n\t\t\t\toptions.headers.token = options.context.token;\n\t\t\t}\n\t\t]\n\t}\n});\n\n(async () => {\n\tconst context = {\n\t\ttoken: 'secret'\n\t};\n\n\tconst response = await instance('https://httpbin.org/headers', {context});\n\n\t// Let's see the headers\n\tconsole.log(response.body);\n})();\n```\n\n###### responseType\n\nType: `string`\\\nDefault: `'text'`\n\n**Note:** When using streams, this option is ignored.\n\nThe parsing method. Can be `'text'`, `'json'` or `'buffer'`.\n\nThe promise also has `.text()`, `.json()` and `.buffer()` methods which sets this and the `resolveBodyOnly` option automatically.\n\nExample:\n\n```js\n// This\nconst body = await got(url).json();\n\n// is the same as this\nconst body = await got(url, {responseType: 'json', resolveBodyOnly: true});\n```\n\n###### resolveBodyOnly\n\nType: `string`\\\nDefault: `false`\n\nWhen set to `true` the promise will return the [Response body](#body-1) instead of the [Response](#response) object.\n\n###### cookieJar\n\nType: `object` | [`tough.CookieJar` instance](https://github.com/salesforce/tough-cookie#cookiejar)\n\n**Note:** If you provide this option, `options.headers.cookie` will be overridden.\n\nCookie support. You don't have to care about parsing or how to store them. [Example](#cookies).\n\n###### cookieJar.setCookie\n\nType: `Function<Promise>`\n\nThe function takes two arguments: `rawCookie` (`string`) and `url` (`string`).\n\n###### cookieJar.getCookieString\n\nType: `Function<Promise>`\n\nThe function takes one argument: `url` (`string`).\n\n###### ignoreInvalidCookies\n\nType: `boolean`\\\nDefault: `false`\n\nIgnore invalid cookies instead of throwing an error. Only useful when the `cookieJar` option has been set. Not recommended.\n\n###### encoding\n\nType: `string`\\\nDefault: `'utf8'`\n\n[Encoding](https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings) to be used on `setEncoding` of the response data.\n\nTo get a [`Buffer`](https://nodejs.org/api/buffer.html), you need to set [`responseType`](#responseType) to `buffer` instead.\n\n###### form\n\nType: `object | true`\n\n**Note:** If you provide this option, `got.stream()` will be read-only.\n\nThe form body is converted to query string using [`(new URLSearchParams(object)).toString()`](https://nodejs.org/api/url.html#url_constructor_new_urlsearchparams_obj).\n\nIf set to `true` and the `Content-Type` header is not set, it will be set to `application/x-www-form-urlencoded`.\n\n###### searchParams\n\nType: `string | object<string, string | number> | URLSearchParams`\n\nQuery string that will be added to the request URL. This will override the query string in `url`.\n\nIf you need to pass in an array, you can do it using a `URLSearchParams` instance:\n\n```js\nconst got = require('got');\n\nconst searchParams = new URLSearchParams([['key', 'a'], ['key', 'b']]);\n\ngot('https://example.com', {searchParams});\n\nconsole.log(searchParams.toString());\n//=> 'key=a&key=b'\n```\n\nAnd if you need a different array format, you could use the [`query-string`](https://github.com/sindresorhus/query-string) package:\n\n```js\nconst got = require('got');\nconst queryString = require('query-string');\n\nconst searchParams = queryString.stringify({key: ['a', 'b']}, {arrayFormat: 'bracket'});\n\ngot('https://example.com', {searchParams});\n\nconsole.log(searchParams);\n//=> 'key[]=a&key[]=b'\n```\n\n###### timeout\n\nType: `number | object`\n\nMilliseconds to wait for the server to end the response before aborting the request with [`got.TimeoutError`](#gottimeouterror) error (a.k.a. `request` property). By default, there's no timeout.\n\nThis also accepts an `object` with the following fields to constrain the duration of each phase of the request lifecycle:\n\n- `lookup` starts when a socket is assigned and ends when the hostname has been resolved. Does not apply when using a Unix domain socket.\n- `connect` starts when `lookup` completes (or when the socket is assigned if lookup does not apply to the request) and ends when the socket is connected.\n- `secureConnect` starts when `connect` completes and ends when the handshaking process completes (HTTPS only).\n- `socket` starts when the socket is connected. See [request.setTimeout](https://nodejs.org/api/http.html#http_request_settimeout_timeout_callback).\n- `response` starts when the request has been written to the socket and ends when the response headers are received.\n- `send` starts when the socket is connected and ends with the request has been written to the socket.\n- `request` starts when the request is initiated and ends when the response's end event fires.\n\n###### retry\n\nType: `number | object`\\\nDefault:\n- limit: `2`\n- calculateDelay: `({attemptCount, retryOptions, error, computedValue}) => computedValue`\n- methods: `GET` `PUT` `HEAD` `DELETE` `OPTIONS` `TRACE`\n- statusCodes: [`408`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/408) [`413`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413) [`429`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429) [`500`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500) [`502`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502) [`503`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503) [`504`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) [`521`](https://support.cloudflare.com/hc/en-us/articles/115003011431#521error) [`522`](https://support.cloudflare.com/hc/en-us/articles/115003011431#522error) [`524`](https://support.cloudflare.com/hc/en-us/articles/115003011431#524error)\n- maxRetryAfter: `undefined`\n- errorCodes: `ETIMEDOUT` `ECONNRESET` `EADDRINUSE` `ECONNREFUSED` `EPIPE` `ENOTFOUND` `ENETUNREACH` `EAI_AGAIN`\n\nAn object representing `limit`, `calculateDelay`, `methods`, `statusCodes`, `maxRetryAfter` and `errorCodes` fields for maximum retry count, retry handler, allowed methods, allowed status codes, maximum [`Retry-After`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) time and allowed error codes.\n\n**Note:** When using streams, this option is ignored. If the connection is reset when downloading, you need to catch the error and clear the file you were writing into to prevent duplicated content.\n\nIf `maxRetryAfter` is set to `undefined`, it will use `options.timeout`.\\\nIf [`Retry-After`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) header is greater than `maxRetryAfter`, it will cancel the request.\n\nDelays between retries counts with function `1000 * Math.pow(2, retry) + Math.random() * 100`, where `retry` is attempt number (starts from 1).\n\nThe `calculateDelay` property is a `function` that receives an object with `attemptCount`, `retryOptions`, `error` and `computedValue` properties for current retry count, the retry options, error and default computed value. The function must return a delay in milliseconds (`0` return value cancels retry).\n\nBy default, it retries *only* on the specified methods, status codes, and on these network errors:\n- `ETIMEDOUT`: One of the [timeout](#timeout) limits were reached.\n- `ECONNRESET`: Connection was forcibly closed by a peer.\n- `EADDRINUSE`: Could not bind to any free port.\n- `ECONNREFUSED`: Connection was refused by the server.\n- `EPIPE`: The remote side of the stream being written has been closed.\n- `ENOTFOUND`: Couldn't resolve the hostname to an IP address.\n- `ENETUNREACH`: No internet connection.\n- `EAI_AGAIN`: DNS lookup timed out.\n\n###### followRedirect\n\nType: `boolean`\\\nDefault: `true`\n\nDefines if redirect responses should be followed automatically.\n\nNote that if a `303` is sent by the server in response to any request type (`POST`, `DELETE`, etc.), Got will automatically request the resource pointed to in the location header via `GET`. This is in accordance with [the spec](https://tools.ietf.org/html/rfc7231#section-6.4.4).\n\n###### methodRewriting\n\nType: `boolean`\\\nDefault: `true`\n\nBy default, redirects will use [method rewriting](https://tools.ietf.org/html/rfc7231#section-6.4). For example, when sending a POST request and receiving a `302`, it will resend the body to the new location using the same HTTP method (`POST` in this case).\n\n###### allowGetBody\n\nType: `boolean`\\\nDefault: `false`\n\n**Note:** The [RFC 7321](https://tools.ietf.org/html/rfc7231#section-4.3.1) doesn't specify any particular behavior for the GET method having a payload, therefore **it's considered an [anti-pattern](https://en.wikipedia.org/wiki/Anti-pattern)**.\n\nSet this to `true` to allow sending body for the `GET` method. However, the [HTTP/2 specification](https://tools.ietf.org/html/rfc7540#section-8.1.3) says that `An HTTP GET request includes request header fields and no payload body`, therefore when using the HTTP/2 protocol this option will have no effect. This option is only meant to interact with non-compliant servers when you have no other choice.\n\n###### maxRedirects\n\nType: `number`\\\nDefault: `10`\n\nIf exceeded, the request will be aborted and a `MaxRedirectsError` will be thrown.\n\n###### decompress\n\nType: `boolean`\\\nDefault: `true`\n\nDecompress the response automatically. This will set the `accept-encoding` header to `gzip, deflate, br` on Node.js 11.7.0+ or `gzip, deflate` for older Node.js versions, unless you set it yourself.\n\nBrotli (`br`) support requires Node.js 11.7.0 or later.\n\nIf this is disabled, a compressed response is returned as a `Buffer`. This may be useful if you want to handle decompression yourself or stream the raw compressed data.\n\n###### cache\n\nType: `object`\\\nDefault: `false`\n\n[Cache adapter instance](#cache-adapters) for storing cached response data.\n\n###### dnsCache\n\nType: `object`\\\nDefault: `false`\n\n[Cache adapter instance](#cache-adapters) for storing cached DNS data.\n\n###### request\n\nType: `Function`\\\nDefault: `http.request | https.request` *(Depending on the protocol)*\n\nCustom request function. The main purpose of this is to [support HTTP2 using a wrapper](#experimental-http2-support).\n\n###### useElectronNet\n\nType: `boolean`\\\nDefault: `false`\n\n[**Deprecated**](https://github.com/sindresorhus/got#electron-support-has-been-deprecated)\n\nWhen used in Electron, Got will use [`electron.net`](https://electronjs.org/docs/api/net/) instead of the Node.js `http` module. According to the Electron docs, it should be fully compatible, but it's not entirely. See [#443](https://github.com/sindresorhus/got/issues/443) and [#461](https://github.com/sindresorhus/got/issues/461).\n\n###### throwHttpErrors\n\nType: `boolean`\\\nDefault: `true`\n\nDetermines if a `got.HTTPError` is thrown for error responses (non-2xx status codes).\n\nIf this is disabled, requests that encounter an error status code will be resolved with the `response` instead of throwing. This may be useful if you are checking for resource availability and are expecting error responses.\n\n###### agent\n\nSame as the [`agent` option](https://nodejs.org/api/http.html#http_http_request_url_options_callback) for `http.request`, but with an extra feature:\n\nIf you require different agents for different protocols, you can pass a map of agents to the `agent` option. This is necessary because a request to one protocol might redirect to another. In such a scenario, Got will switch over to the right protocol agent for you.\n\n```js\nconst got = require('got');\nconst HttpAgent = require('agentkeepalive');\nconst {HttpsAgent} = HttpAgent;\n\ngot('https://sindresorhus.com', {\n\tagent: {\n\t\thttp: new HttpAgent(),\n\t\thttps: new HttpsAgent()\n\t}\n});\n```\n\n###### hooks\n\nType: `object<string, Function[]>`\n\nHooks allow modifications during the request lifecycle. Hook functions may be async and are run serially.\n\n###### hooks.init\n\nType: `Function[]`\\\nDefault: `[]`\n\nCalled with plain [request options](#options), right before their normalization. This is especially useful in conjunction with [`got.extend()`](#instances) when the input needs custom handling.\n\nSee the [Request migration guide](documentation/migration-guides.md#breaking-changes) for an example.\n\n**Note:** This hook must be synchronous!\n\n###### hooks.beforeRequest\n\nType: `Function[]`\\\nDefault: `[]`\n\nCalled with [normalized](source/normalize-arguments.ts) [request options](#options). Got will make no further changes to the request before it is sent (except the body serialization). This is especially useful in conjunction with [`got.extend()`](#instances) when you want to create an API client that, for example, uses HMAC-signing.\n\nSee the [AWS section](#aws) for an example.\n\n###### hooks.beforeRedirect\n\nType: `Function[]`\\\nDefault: `[]`\n\nCalled with [normalized](source/normalize-arguments.ts) [request options](#options) and the redirect [response](#response). Got will make no further changes to the request. This is especially useful when you want to avoid dead sites. Example:\n\n```js\nconst got = require('got');\n\ngot('https://example.com', {\n\thooks: {\n\t\tbeforeRedirect: [\n\t\t\t(options, response) => {\n\t\t\t\tif (options.hostname === 'deadSite') {\n\t\t\t\t\toptions.hostname = 'fallbackSite';\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n});\n```\n\n###### hooks.beforeRetry\n\nType: `Function[]`\\\nDefault: `[]`\n\n**Note:** When using streams, this hook is ignored.\n\nCalled with [normalized](source/normalize-arguments.ts) [request options](#options), the error and the retry count. Got will make no further changes to the request. This is especially useful when some extra work is required before the next try. Example:\n\n```js\nconst got = require('got');\n\ngot.post('https://example.com', {\n\thooks: {\n\t\tbeforeRetry: [\n\t\t\t(options, error, retryCount) => {\n\t\t\t\tif (error.statusCode === 413) { // Payload too large\n\t\t\t\t\toptions.body = getNewBody();\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n});\n```\n\n**Note:** When retrying in a `afterResponse` hook, all remaining `beforeRetry` hooks will be called without the `error` and `retryCount` arguments.\n\n###### hooks.afterResponse\n\nType: `Function[]`\\\nDefault: `[]`\n\n**Note:** When using streams, this hook is ignored.\n\nCalled with [response object](#response) and a retry function. Calling the retry function will trigger `beforeRetry` hooks.\n\nEach function should return the response. This is especially useful when you want to refresh an access token. Example:\n\n```js\nconst got = require('got');\n\nconst instance = got.extend({\n\thooks: {\n\t\tafterResponse: [\n\t\t\t(response, retryWithMergedOptions) => {\n\t\t\t\tif (response.statusCode === 401) { // Unauthorized\n\t\t\t\t\tconst updatedOptions = {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\ttoken: getNewToken() // Refresh the access token\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Save for further requests\n\t\t\t\t\tinstance.defaults.options = got.mergeOptions(instance.defaults.options, updatedOptions);\n\n\t\t\t\t\t// Make a new retry\n\t\t\t\t\treturn retryWithMergedOptions(updatedOptions);\n\t\t\t\t}\n\n\t\t\t\t// No changes otherwise\n\t\t\t\treturn response;\n\t\t\t}\n\t\t],\n\t\tbeforeRetry: [\n\t\t\t(options, error, retryCount) => {\n\t\t\t\t// This will be called on `retryWithMergedOptions(...)`\n\t\t\t}\n\t\t]\n\t},\n\tmutableDefaults: true\n});\n```\n\n###### hooks.beforeError\n\nType: `Function[]`\\\nDefault: `[]`\n\nCalled with an `Error` instance. The error is passed to the hook right before it's thrown. This is especially useful when you want to have more detailed errors.\n\n**Note:** Errors thrown while normalizing input options are thrown directly and not part of this hook.\n\n```js\nconst got = require('got');\n\ngot('https://api.github.com/some-endpoint', {\n\thooks: {\n\t\tbeforeError: [\n\t\t\terror => {\n\t\t\t\tconst {response} = error;\n \t\t\t\tif (response && response.body) {\n\t\t\t\t\terror.name = 'GitHubError';\n\t\t\t\t\terror.message = `${response.body.message} (${error.statusCode})`;\n\t\t\t\t}\n\n \t\t\t\treturn error;\n\t\t\t}\n\t\t]\n\t}\n});\n```\n\n##### \\_pagination\n\nType: `object`\n\n**Note:** This feature is marked as experimental as we're [looking for feedback](https://github.com/sindresorhus/got/issues/1052) on the API and how it works. The feature itself is stable, but the API may change based on feedback. So if you decide to try it out, we suggest locking down the `got` dependency semver range or use a lockfile.\n\n###### \\_pagination.transform\n\nType: `Function`\\\nDefault: `response => JSON.parse(response.body)`\n\nA function that transform [`Response`](#response) into an array of items. This is where you should do the parsing.\n\n###### \\_pagination.paginate\n\nType: `Function`\\\nDefault: [`Link` header logic](source/index.ts)\n\nA function that returns an object representing Got options pointing to the next page. If there are no more pages, `false` should be returned.\n\n###### \\_pagination.filter\n\nType: `Function`\\\nDefault: `(item, allItems) => true`\n\nChecks whether the item should be emitted or not.\n\n###### \\_pagination.shouldContinue\n\nType: `Function`\\\nDefault: `(item, allItems) => true`\n\nChecks whether the pagination should continue.\n\nFor example, if you need to stop **before** emitting an entry with some flag, you should use `(item, allItems) => !item.flag`. If you want to stop **after** emitting the entry, you should use `(item, allItems) => allItems.some(entry => entry.flag)` instead.\n\n###### \\_pagination.countLimit\n\nType: `number`\\\nDefault: `Infinity`\n\nThe maximum amount of items that should be emitted.\n\n#### Response\n\nThe response object will typically be a [Node.js HTTP response stream](https://nodejs.org/api/http.html#http_class_http_incomingmessage), however, if returned from the cache it will be a [response-like object](https://github.com/lukechilds/responselike) which behaves in the same way.\n\n##### request\n\nType: `object`\n\n**Note:** This is not a [http.ClientRequest](https://nodejs.org/api/http.html#http_class_http_clientrequest).\n\n- `options` - The Got options that were set on this request.\n\n##### body\n\nType: `string | object | Buffer` *(Depending on `options.responseType`)*\n\nThe result of the request.\n\n##### url\n\nType: `string`\n\nThe request URL or the final URL after redirects.\n\n##### ip\n\nType: `string`\n\nThe remote IP address.\n\n**Note:** Not available when the response is cached. This is hopefully a temporary limitation, see [lukechilds/cacheable-request#86](https://github.com/lukechilds/cacheable-request/issues/86).\n\n##### requestUrl\n\nType: `string`\n\nThe original request URL.\n\n##### timings\n\nType: `object`\n\nThe object contains the following properties:\n\n- `start` - Time when the request started.\n- `socket` - Time when a socket was assigned to the request.\n- `lookup` - Time when the DNS lookup finished.\n- `connect` - Time when the socket successfully connected.\n- `secureConnect` - Time when the socket securely connected.\n- `upload` - Time when the request finished uploading.\n- `response` - Time when the request fired `response` event.\n- `end` - Time when the response fired `end` event.\n- `error` - Time when the request fired `error` event.\n- `abort` - Time when the request fired `abort` event.\n- `phases`\n\t- `wait` - `timings.socket - timings.start`\n\t- `dns` - `timings.lookup - timings.socket`\n\t- `tcp` - `timings.connect - timings.lookup`\n\t- `tls` - `timings.secureConnect - timings.connect`\n\t- `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n\t- `firstByte` - `timings.response - timings.upload`\n\t- `download` - `timings.end - timings.response`\n\t- `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n\nIf something has not been measured yet, it will be `undefined`.\n\n**Note:** The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n\n##### isFromCache\n\nType: `boolean`\n\nWhether the response was retrieved from the cache.\n\n##### redirectUrls\n\nType: `string[]`\n\nThe redirect URLs.\n\n##### retryCount\n\nType: `number`\n\nThe number of times the request was retried.\n\n#### Streams\n\n**Note:** Progress events, redirect events and request/response events can also be used with promises.\n\n**Note:** To access `response.isFromCache` you need to use `got.stream(url, options).isFromCache`. The value will be undefined until the `response` event.\n\n#### got.stream(url, options?)\n\nSets `options.isStream` to `true`.\n\nReturns a [duplex stream](https://nodejs.org/api/stream.html#stream_class_stream_duplex) with additional events:\n\n##### .on('request', request)\n\n`request` event to get the request object of the request.\n\n**Tip:** You can use `request` event to abort request:\n\n```js\ngot.stream('https://github.com')\n\t.on('request', request => setTimeout(() => request.abort(), 50));\n```\n\n##### .on('response', response)\n\nThe `response` event to get the response object of the final request.\n\n##### .on('redirect', response, nextOptions)\n\nThe `redirect` event to get the response object of a redirect. The second argument is options for the next request to the redirect location.\n\n##### .on('uploadProgress', progress)\n##### .on('downloadProgress', progress)\n\nProgress events for uploading (sending a request) and downloading (receiving a response). The `progress` argument is an object like:\n\n```js\n{\n\tpercent: 0.1,\n\ttransferred: 1024,\n\ttotal: 10240\n}\n```\n\nIf the `content-length` header is missing, `total` will be `undefined`.\n\n```js\n(async () => {\n\tconst response = await got('https://sindresorhus.com')\n\t\t.on('downloadProgress', progress => {\n\t\t\t// Report download progress\n\t\t})\n\t\t.on('uploadProgress', progress => {\n\t\t\t// Report upload progress\n\t\t});\n\n\tconsole.log(response);\n})();\n```\n\n##### .on('error', error, body, response)\n\nThe `error` event emitted in case of a protocol error (like `ENOTFOUND` etc.) or status error (4xx or 5xx). The second argument is the body of the server response in case of status error. The third argument is a response object.\n\n#### Pagination\n\n#### got.paginate(url, options?)\n\nReturns an async iterator:\n\n```js\n(async () => {\n\tconst countLimit = 10;\n\n\tconst pagination = got.paginate('https://api.github.com/repos/sindresorhus/got/commits', {\n\t\t_pagination: {countLimit}\n\t});\n\n\tconsole.log(`Printing latest ${countLimit} Got commits (newest to oldest):`);\n\n\tfor await (const commitData of pagination) {\n\t\tconsole.log(commitData.commit.message);\n\t}\n})();\n```\n\nSee [`options._pagination`](#_pagination) for more pagination options.\n\n#### got.get(url, options?)\n#### got.post(url, options?)\n#### got.put(url, options?)\n#### got.patch(url, options?)\n#### got.head(url, options?)\n#### got.delete(url, options?)\n\nSets `options.method` to the method name and makes a request.\n\n### Instances\n\n#### got.extend(...options)\n\nConfigure a new `got` instance with default `options`. The `options` are merged with the parent instance's `defaults.options` using [`got.mergeOptions`](#gotmergeoptionsparentoptions-newoptions). You can access the resolved options with the `.defaults` property on the instance.\n\n```js\nconst client = got.extend({\n\tprefixUrl: 'https://example.com',\n\theaders: {\n\t\t'x-unicorn': 'rainbow'\n\t}\n});\n\nclient.get('demo');\n\n/* HTTP Request =>\n * GET /demo HTTP/1.1\n * Host: example.com\n * x-unicorn: rainbow\n */\n```\n\n```js\n(async () => {\n\tconst client = got.extend({\n\t\tprefixUrl: 'httpbin.org',\n\t\theaders: {\n\t\t\t'x-foo': 'bar'\n\t\t}\n\t});\n\tconst {headers} = await client.get('headers').json();\n\t//=> headers['x-foo'] === 'bar'\n\n\tconst jsonClient = client.extend({\n\t\tresponseType: 'json',\n\t\tresolveBodyOnly: true,\n\t\theaders: {\n\t\t\t'x-baz': 'qux'\n\t\t}\n\t});\n\tconst {headers: headers2} = await jsonClient.get('headers');\n\t//=> headers2['x-foo'] === 'bar'\n\t//=> headers2['x-baz'] === 'qux'\n})();\n```\n\nAdditionally, `got.extend()` accepts two properties from the `defaults` object: `mutableDefaults` and `handlers`. Example:\n\n```js\n// You can now modify `mutableGot.defaults.options`.\nconst mutableGot = got.extend({mutableDefaults: true});\n\nconst mergedHandlers = got.extend({\n\thandlers: [\n\t\t(options, next) => {\n\t\t\tdelete options.headers.referer;\n\n\t\t\treturn next(options);\n\t\t}\n\t]\n});\n```\n\n**Note:** Handlers can be asynchronous. The recommended approach is:\n\n```js\nconst handler = (options, next) => {\n\tif (options.stream) {\n\t\t// It's a Stream\n\t\treturn next(options);\n\t}\n\n\t// It's a Promise\n\treturn (async () => {\n\t\ttry {\n\t\t\tconst response = await next(options);\n\t\t\tresponse.yourOwnProperty = true;\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\t// Every error will be replaced by this one.\n\t\t\t// Before you receive any error here,\n\t\t\t// it will be passed to the `beforeError` hooks first.\n\t\t\t// Note: this one won't be passed to `beforeError` hook. It's final.\n\t\t\tthrow new Error('Your very own error.');\n\t\t}\n\t})();\n};\n\nconst instance = got.extend({handlers: [handler]});\n```\n\n#### got.extend(...instances)\n\nMerges many instances into a single one:\n- options are merged using [`got.mergeOptions()`](#gotmergeoptionsparentoptions-newoptions) (+ hooks are merged too),\n- handlers are stored in an array (you can access them through `instance.defaults.handlers`).\n\n#### got.extend(...options, ...instances, ...)\n\nIt's possible to combine options and instances.\\\nIt gives the same effect as `got.extend(...options).extend(...instances)`:\n\n```js\nconst a = {headers: {cat: 'meow'}};\nconst b = got.extend({\n\toptions: {\n\t\theaders: {\n\t\t\tcow: 'moo'\n\t\t}\n\t}\n});\n\n// The same as `got.extend(a).extend(b)`.\n// Note `a` is options and `b` is an instance.\ngot.extend(a, b);\n//=> {headers: {cat: 'meow', cow: 'moo'}}\n```\n\n#### got.mergeOptions(parentOptions, newOptions)\n\nExtends parent options. Avoid using [object spread](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals) as it doesn't work recursively:\n\n```js\nconst a = {headers: {cat: 'meow', wolf: ['bark', 'wrrr']}};\nconst b = {headers: {cow: 'moo', wolf: ['auuu']}};\n\n{...a, ...b}            // => {headers: {cow: 'moo', wolf: ['auuu']}}\ngot.mergeOptions(a, b)  // => {headers: {cat: 'meow', cow: 'moo', wolf: ['auuu']}}\n```\n\nOptions are deeply merged to a new object. The value of each key is determined as follows:\n\n- If the new property is set to `undefined`, it keeps the old one.\n- If both properties are an instances of `URLSearchParams`, a new URLSearchParams instance is created. The values are merged using [`urlSearchParams.append(key, value)`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/append).\n- If the parent property is an instance of `URL` and the new value is a `string` or `URL`, a new URL instance is created: [`new URL(new, parent)`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL#Syntax).\n- If the new property is a plain `object`:\n\t- If the parent property is a plain `object` too, both values are merged recursively into a new `object`.\n\t- Otherwise, only the new value is deeply cloned.\n- If the new property is an `Array`, it overwrites the old one with a deep clone of the new property.\n- Otherwise, the new value is assigned to the key.\n\n#### got.defaults\n\nType: `object`\n\nThe Got defaults used in that instance.\n\n##### [options](#options)\n\n##### handlers\n\nType: `Function[]`\\\nDefault: `[]`\n\nAn array of functions. You execute them directly by calling `got()`. They are some sort of \"global hooks\" - these functions are called first. The last handler (*it's hidden*) is either [`asPromise`](source/as-promise.ts) or [`asStream`](source/as-stream.ts), depending on the `options.isStream` property.\n\nEach handler takes two arguments:\n\n###### [options](#options)\n\n###### next()\n\nReturns a `Promise` or a `Stream` depending on [`options.isStream`](#isstream).\n\n```js\nconst settings = {\n\thandlers: [\n\t\t(options, next) => {\n\t\t\tif (options.isStream) {\n\t\t\t\t// It's a Stream, so we can perform stream-specific actions on it\n\t\t\t\treturn next(options)\n\t\t\t\t\t.on('request', request => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\trequest.abort();\n\t\t\t\t\t\t}, 50);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// It's a Promise\n\t\t\treturn next(options);\n\t\t}\n\t],\n\toptions: got.mergeOptions(got.defaults.options, {\n\t\tresponseType: 'json'\n\t})\n};\n\nconst jsonGot = got.extend(settings);\n```\n\n##### mutableDefaults\n\nType: `boolean`\\\nDefault: `false`\n\nA read-only boolean describing whether the defaults are mutable or not. If set to `true`, you can [update headers over time](#hooksafterresponse), for example, update an access token when it expires.\n\n## Types\n\nGot exports some handy TypeScript types and interfaces. See the type definition for all the exported types.\n\n### Got\n\nTypeScript will automatically infer types for Got instances, but in case you want to define something like dependencies, you can import the available types directly from Got.\n\n```ts\nimport {GotRequestMethod} from 'got';\n\ninterface Dependencies {\n\treadonly post: GotRequestMethod\n}\n```\n\n### Hooks\n\nWhen writing hooks, you can refer to their types to keep your interfaces consistent.\n\n```ts\nimport {BeforeRequestHook} from 'got';\n\nconst addAccessToken = (accessToken: string): BeforeRequestHook => options => {\n\toptions.path = `${options.path}?access_token=${accessToken}`;\n}\n```\n\n## Errors\n\nEach error contains an `options` property which are the options Got used to create a request - just to make debugging easier.\n\n#### got.CacheError\n\nWhen a cache method fails, for example, if the database goes down or there's a filesystem error.\n\n#### got.RequestError\n\nWhen a request fails. Contains a `code` property with error class code, like `ECONNREFUSED`.\n\n#### got.ReadError\n\nWhen reading from response stream fails.\n\n#### got.ParseError\n\nWhen server response code is 2xx, and parsing body fails. Includes a `response` property.\n\n#### got.HTTPError\n\nWhen the server response code is not 2xx. Includes a `response` property.\n\n#### got.MaxRedirectsError\n\nWhen the server redirects you more than ten times. Includes a `response` property.\n\n#### got.UnsupportedProtocolError\n\nWhen given an unsupported protocol.\n\n#### got.CancelError\n\nWhen the request is aborted with `.cancel()`.\n\n#### got.TimeoutError\n\nWhen the request is aborted due to a [timeout](#timeout). Includes an `event` and `timings` property.\n\n## Aborting the request\n\nThe promise returned by Got has a [`.cancel()`](https://github.com/sindresorhus/p-cancelable) method which when called, aborts the request.\n\n```js\n(async () => {\n\tconst request = got(url, options);\n\n\t// …\n\n\t// In another part of the code\n\tif (something) {\n\t\trequest.cancel();\n\t}\n\n\t// …\n\n\ttry {\n\t\tawait request;\n\t} catch (error) {\n\t\tif (request.isCanceled) { // Or `error instanceof got.CancelError`\n\t\t\t// Handle cancelation\n\t\t}\n\n\t\t// Handle other errors\n\t}\n})();\n```\n\nWhen using hooks, simply throw an error to abort the request.\n\n```js\nconst got = require('got');\n\n(async () => {\n\tconst request = got(url, {\n\t\thooks: {\n\t\t\tbeforeRequest: [\n\t\t\t\t() => {\n\t\t\t\t\tthrow new Error('Oops. Request canceled.');\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\n\ttry {\n\t\tawait request;\n\t} catch (error) {\n\t\t// …\n\t}\n})();\n```\n\n<a name=\"cache-adapters\"></a>\n## Cache\n\nGot implements [RFC 7234](http://httpwg.org/specs/rfc7234.html) compliant HTTP caching which works out of the box in-memory and is easily pluggable with a wide range of storage adapters. Fresh cache entries are served directly from the cache, and stale cache entries are revalidated with `If-None-Match`/`If-Modified-Since` headers. You can read more about the underlying cache behavior in the [`cacheable-request` documentation](https://github.com/lukechilds/cacheable-request). For DNS cache, Got uses [`cacheable-lookup`](https://github.com/szmarczak/cacheable-lookup).\n\nYou can use the JavaScript `Map` type as an in-memory cache:\n\n```js\nconst got = require('got');\n\nconst map = new Map();\n\n(async () => {\n\t\tlet response = await got('https://sindresorhus.com', {cache: map});\n\t\tconsole.log(response.isFromCache);\n\t\t//=> false\n\n\t\tresponse = await got('https://sindresorhus.com', {cache: map});\n\t\tconsole.log(response.isFromCache);\n\t\t//=> true\n})();\n```\n\nGot uses [Keyv](https://github.com/lukechilds/keyv) internally to support a wide range of storage adapters. For something more scalable you could use an [official Keyv storage adapter](https://github.com/lukechilds/keyv#official-storage-adapters):\n\n```\n$ npm install @keyv/redis\n```\n\n```js\nconst got = require('got');\nconst KeyvRedis = require('@keyv/redis');\n\nconst redis = new KeyvRedis('redis://user:pass@localhost:6379');\n\ngot('https://sindresorhus.com', {cache: redis});\n```\n\nGot supports anything that follows the Map API, so it's easy to write your own storage adapter or use a third-party solution.\n\nFor example, the following are all valid storage adapters:\n\n```js\nconst storageAdapter = new Map();\n// Or\nconst storageAdapter = require('./my-storage-adapter');\n// Or\nconst QuickLRU = require('quick-lru');\nconst storageAdapter = new QuickLRU({maxSize: 1000});\n\ngot('https://sindresorhus.com', {cache: storageAdapter});\n```\n\nView the [Keyv docs](https://github.com/lukechilds/keyv) for more information on how to use storage adapters.\n\n## Proxies\n\nYou can use the [`tunnel`](https://github.com/koichik/node-tunnel) package with the `agent` option to work with proxies:\n\n```js\nconst got = require('got');\nconst tunnel = require('tunnel');\n\ngot('https://sindresorhus.com', {\n\tagent: tunnel.httpOverHttp({\n\t\tproxy: {\n\t\t\thost: 'localhost'\n\t\t}\n\t})\n});\n```\n\nAlternatively, use [`global-agent`](https://github.com/gajus/global-agent) to configure a global proxy for all HTTP/HTTPS traffic in your program.\n\n## Cookies\n\nYou can use the [`tough-cookie`](https://github.com/salesforce/tough-cookie) package:\n\n```js\nconst {promisify} = require('util');\nconst got = require('got');\nconst {CookieJar} = require('tough-cookie');\n\n(async () => {\n\tconst cookieJar = new CookieJar();\n\tconst setCookie = promisify(cookieJar.setCookie.bind(cookieJar));\n\n\tawait setCookie('foo=bar', 'https://example.com');\n\tawait got('https://example.com', {cookieJar});\n})();\n```\n\n## Form data\n\nYou can use the [`form-data`](https://github.com/form-data/form-data) package to create POST request with form data:\n\n```js\nconst fs = require('fs');\nconst got = require('got');\nconst FormData = require('form-data');\n\nconst form = new FormData();\n\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n\ngot.post('https://example.com', {\n\tbody: form\n});\n```\n\n## OAuth\n\nYou can use the [`oauth-1.0a`](https://github.com/ddo/oauth-1.0a) package to create a signed OAuth request:\n\n```js\nconst got = require('got');\nconst crypto  = require('crypto');\nconst OAuth = require('oauth-1.0a');\n\nconst oauth = OAuth({\n\tconsumer: {\n\t\tkey: process.env.CONSUMER_KEY,\n\t\tsecret: process.env.CONSUMER_SECRET\n\t},\n\tsignature_method: 'HMAC-SHA1',\n\thash_function: (baseString, key) => crypto.createHmac('sha1', key).update(baseString).digest('base64')\n});\n\nconst token = {\n\tkey: process.env.ACCESS_TOKEN,\n\tsecret: process.env.ACCESS_TOKEN_SECRET\n};\n\nconst url = 'https://api.twitter.com/1.1/statuses/home_timeline.json';\n\ngot(url, {\n\theaders: oauth.toHeader(oauth.authorize({url, method: 'GET'}, token)),\n\tresponseType: 'json'\n});\n```\n\n## Unix Domain Sockets\n\nRequests can also be sent via [unix domain sockets](http://serverfault.com/questions/124517/whats-the-difference-between-unix-socket-and-tcp-ip-socket). Use the following URL scheme: `PROTOCOL://unix:SOCKET:PATH`.\n\n- `PROTOCOL` - `http` or `https` *(optional)*\n- `SOCKET` - Absolute path to a unix domain socket, for example: `/var/run/docker.sock`\n- `PATH` - Request path, for example: `/v2/keys`\n\n```js\nconst got = require('got');\n\ngot('http://unix:/var/run/docker.sock:/containers/json');\n\n// Or without protocol (HTTP by default)\ngot('unix:/var/run/docker.sock:/containers/json');\n```\n\n## AWS\n\nRequests to AWS services need to have their headers signed. This can be accomplished by using the [`aws4`](https://www.npmjs.com/package/aws4) package. This is an example for querying an [\"API Gateway\"](https://docs.aws.amazon.com/apigateway/api-reference/signing-requests/) with a signed request.\n\n```js\nconst got = require('got');\nconst AWS = require('aws-sdk');\nconst aws4 = require('aws4');\n\nconst chain = new AWS.CredentialProviderChain();\n\n// Create a Got instance to use relative paths and signed requests\nconst awsClient = got.extend({\n\tprefixUrl: 'https://<api-id>.execute-api.<api-region>.amazonaws.com/<stage>/',\n\thooks: {\n\t\tbeforeRequest: [\n\t\t\tasync options => {\n\t\t\t\tconst credentials = await chain.resolvePromise();\n\t\t\t\taws4.sign(options, credentials);\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst response = await awsClient('endpoint/path', {\n\t// Request-specific options\n});\n```\n\n## Testing\n\nYou can test your requests by using the [`nock`](https://github.com/node-nock/nock) package to mock an endpoint:\n\n```js\nconst got = require('got');\nconst nock = require('nock');\n\nnock('https://sindresorhus.com')\n\t.get('/')\n\t.reply(200, 'Hello world!');\n\n(async () => {\n\tconst response = await got('https://sindresorhus.com');\n\tconsole.log(response.body);\n\t//=> 'Hello world!'\n})();\n```\n\nFor real integration testing we recommend using [`ava`](https://github.com/avajs/ava) with [`create-test-server`](https://github.com/lukechilds/create-test-server). We're using a macro so we don't have to `server.listen()` and `server.close()` every test. Take a look at one of our tests:\n\n```js\ntest('retry function gets iteration count', withServer, async (t, server, got) => {\n\tlet knocks = 0;\n\tserver.get('/', (request, response) => {\n\t\tif (knocks++ === 1) {\n\t\t\tresponse.end('who`s there?');\n\t\t}\n\t});\n\n\tawait got({\n\t\tretry: {\n\t\t\tcalculateDelay: ({attemptCount}) => {\n\t\t\t\tt.true(is.number(attemptCount));\n\t\t\t\treturn attemptCount < 2 ? 1 : 0;\n\t\t\t}\n\t\t}\n\t});\n});\n```\n\n## Tips\n\n### JSON mode\n\nTo pass an object as the body, you need to use the `json` option. It will be stringified using `JSON.stringify`. Example:\n\n```js\nconst got = require('got');\n\n(async () => {\n\tconst {body} = await got.post('https://httpbin.org/anything', {\n\t\tjson: {\n\t\t\thello: 'world'\n\t\t},\n\t\tresponseType: 'json'\n\t});\n\n\tconsole.log(body.data);\n\t//=> '{\"hello\":\"world\"}'\n})();\n```\n\nTo receive a JSON body you can either set `responseType` option to `json` or use `promise.json()`. Example:\n\n```js\nconst got = require('got');\n\n(async () => {\n\tconst body = await got.post('https://httpbin.org/anything', {\n\t\tjson: {\n\t\t\thello: 'world'\n\t\t}\n\t}).json();\n\n\tconsole.log(body);\n\t//=> {…}\n})();\n```\n\n### User Agent\n\nIt's a good idea to set the `'user-agent'` header so the provider can more easily see how their resource is used. By default, it's the URL to this repo. You can omit this header by setting it to `undefined`.\n\n```js\nconst got = require('got');\nconst pkg = require('./package.json');\n\ngot('https://sindresorhus.com', {\n\theaders: {\n\t\t'user-agent': `my-package/${pkg.version} (https://github.com/username/my-package)`\n\t}\n});\n\ngot('https://sindresorhus.com', {\n\theaders: {\n\t\t'user-agent': undefined\n\t}\n});\n```\n\n### 304 Responses\n\nBear in mind; if you send an `if-modified-since` header and receive a `304 Not Modified` response, the body will be empty. It's your responsibility to cache and retrieve the body contents.\n\n### Custom endpoints\n\nUse `got.extend()` to make it nicer to work with REST APIs. Especially if you use the `prefixUrl` option.\n\n```js\nconst got = require('got');\nconst pkg = require('./package.json');\n\nconst custom = got.extend({\n\tprefixUrl: 'example.com',\n\tresponseType: 'json',\n\theaders: {\n\t\t'user-agent': `my-package/${pkg.version} (https://github.com/username/my-package)`\n\t}\n});\n\n// Use `custom` exactly how you use `got`\n(async () => {\n\tconst list = await custom('v1/users/list');\n})();\n```\n\n### Experimental HTTP2 support\n\nGot provides an experimental support for HTTP2 using the [`http2-wrapper`](https://github.com/szmarczak/http2-wrapper) package:\n\n```js\nconst got = require('got');\nconst {request} = require('http2-wrapper');\n\nconst h2got = got.extend({request});\n\n(async () => {\n\tconst {body} = await h2got('https://nghttp2.org/httpbin/headers');\n\tconsole.log(body);\n})();\n```\n\n## FAQ\n\n### Why yet another HTTP client?\n\nGot was created because the popular [`request`](https://github.com/request/request) package is bloated: [![Install size](https://packagephobia.now.sh/badge?p=request)](https://packagephobia.now.sh/result?p=request)\\\nFurthermore, Got is fully written in TypeScript.\n\n### Electron support has been deprecated\n\nSome of the Got features may not work properly. See [#899](https://github.com/sindresorhus/got/issues/899) for more info.\n\n## Comparison\n\n|                       | `got`              | [`request`][r0]    | [`node-fetch`][n0]   | [`ky`][k0]               | [`axios`][a0]      | [`superagent`][s0]     |\n|-----------------------|:------------------:|:------------------:|:--------------------:|:------------------------:|:------------------:|:----------------------:|\n| HTTP/2 support        | :grey_question:    | :x:                | :x:                  | :x:                      | :x:                | :heavy_check_mark:\\*\\* |\n| Browser support       | :x:                | :x:                | :heavy_check_mark:\\* | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| Promise API           | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:   | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| Stream API            | :heavy_check_mark: | :heavy_check_mark: | Node.js only         | :x:                      | :x:                | :heavy_check_mark:     |\n| Pagination API        | :sparkle:          | :x:                | :x:                  | :x:                      | :x:                | :x:                    |\n| Request cancelation   | :heavy_check_mark: | :x:                | :heavy_check_mark:   | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| RFC compliant caching | :heavy_check_mark: | :x:                | :x:                  | :x:                      | :x:                | :x:                    |\n| Cookies (out-of-box)  | :heavy_check_mark: | :heavy_check_mark: | :x:                  | :x:                      | :x:                | :x:                    |\n| Follows redirects     | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:   | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| Retries on failure    | :heavy_check_mark: | :x:                | :x:                  | :heavy_check_mark:       | :x:                | :heavy_check_mark:     |\n| Progress events       | :heavy_check_mark: | :x:                | :x:                  | :heavy_check_mark:\\*\\*\\* | Browser only       | :heavy_check_mark:     |\n| Handles gzip/deflate  | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:   | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| Advanced timeouts     | :heavy_check_mark: | :x:                | :x:                  | :x:                      | :x:                | :x:                    |\n| Timings               | :heavy_check_mark: | :heavy_check_mark: | :x:                  | :x:                      | :x:                | :x:                    |\n| Errors with metadata  | :heavy_check_mark: | :x:                | :x:                  | :heavy_check_mark:       | :heavy_check_mark: | :x:                    |\n| JSON mode             | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark:   | :heavy_check_mark:       | :heavy_check_mark: | :heavy_check_mark:     |\n| Custom defaults       | :heavy_check_mark: | :heavy_check_mark: | :x:                  | :heavy_check_mark:       | :heavy_check_mark: | :x:                    |\n| Composable            | :heavy_check_mark: | :x:                | :x:                  | :x:                      | :x:                | :heavy_check_mark:     |\n| Hooks                 | :heavy_check_mark: | :x:                | :x:                  | :heavy_check_mark:       | :heavy_check_mark: | :x:                    |\n| Issues open           | [![][gio]][g1]     | [![][rio]][r1]     | [![][nio]][n1]       | [![][kio]][k1]           | [![][aio]][a1]     | [![][sio]][s1]         |\n| Issues closed         | [![][gic]][g2]     | [![][ric]][r2]     | [![][nic]][n2]       | [![][kic]][k2]           | [![][aic]][a2]     | [![][sic]][s2]         |\n| Downloads             | [![][gd]][g3]      | [![][rd]][r3]      | [![][nd]][n3]        | [![][kd]][k3]            | [![][ad]][a3]      | [![][sd]][s3]          |\n| Coverage              | [![][gc]][g4]      | [![][rc]][r4]      | [![][nc]][n4]        | [![][kc]][k4]            | [![][ac]][a4]      | [![][sc]][s4]          |\n| Build                 | [![][gb]][g5]      | [![][rb]][r5]      | [![][nb]][n5]        | [![][kb]][k5]            | [![][ab]][a5]      | [![][sb]][s5]          |\n| Bugs                  | [![][gbg]][g6]     | [![][rbg]][r6]     | [![][nbg]][n6]       | [![][kbg]][k6]           | [![][abg]][a6]     | [![][sbg]][s6]         |\n| Dependents            | [![][gdp]][g7]     | [![][rdp]][r7]     | [![][ndp]][n7]       | [![][kdp]][k7]           | [![][adp]][a7]     | [![][sdp]][s7]         |\n| Install size          | [![][gis]][g8]     | [![][ris]][r8]     | [![][nis]][n8]       | [![][kis]][k8]           | [![][ais]][a8]     | [![][sis]][s8]         |\n\n\\* It's almost API compatible with the browser `fetch` API.\\\n\\*\\* Need to switch the protocol manually. Doesn't accept PUSH streams and doesn't reuse HTTP/2 sessions.\\\n\\*\\*\\* Currently, only `DownloadProgress` event is supported, `UploadProgress` event is not supported.\\\n:sparkle: Almost-stable feature, but the API may change. Don't hestitate to try it out!\\\n:grey_question: Feature in early stage of development. Very experimental.\n\n<!-- GITHUB -->\n[k0]: https://github.com/sindresorhus/ky\n[r0]: https://github.com/request/request\n[n0]: https://github.com/bitinn/node-fetch\n[a0]: https://github.com/axios/axios\n[s0]: https://github.com/visionmedia/superagent\n\n<!-- ISSUES OPEN -->\n[gio]: https://badgen.net/github/open-issues/sindresorhus/got?label\n[kio]: https://badgen.net/github/open-issues/sindresorhus/ky?label\n[rio]: https://badgen.net/github/open-issues/request/request?label\n[nio]: https://badgen.net/github/open-issues/bitinn/node-fetch?label\n[aio]: https://badgen.net/github/open-issues/axios/axios?label\n[sio]: https://badgen.net/github/open-issues/visionmedia/superagent?label\n\n[g1]: https://github.com/sindresorhus/got/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n[k1]: https://github.com/sindresorhus/ky/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n[r1]: https://github.com/request/request/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n[n1]: https://github.com/bitinn/node-fetch/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n[a1]: https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n[s1]: https://github.com/visionmedia/superagent/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc\n\n<!-- ISSUES CLOSED -->\n[gic]: https://badgen.net/github/closed-issues/sindresorhus/got?label\n[kic]: https://badgen.net/github/closed-issues/sindresorhus/ky?label\n[ric]: https://badgen.net/github/closed-issues/request/request?label\n[nic]: https://badgen.net/github/closed-issues/bitinn/node-fetch?label\n[aic]: https://badgen.net/github/closed-issues/axios/axios?label\n[sic]: https://badgen.net/github/closed-issues/visionmedia/superagent?label\n\n[g2]: https://github.com/sindresorhus/got/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n[k2]: https://github.com/sindresorhus/ky/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n[r2]: https://github.com/request/request/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n[n2]: https://github.com/bitinn/node-fetch/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n[a2]: https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n[s2]: https://github.com/visionmedia/superagent/issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc\n\n<!-- DOWNLOADS -->\n[gd]: https://badgen.net/npm/dm/got?label\n[kd]: https://badgen.net/npm/dm/ky?label\n[rd]: https://badgen.net/npm/dm/request?label\n[nd]: https://badgen.net/npm/dm/node-fetch?label\n[ad]: https://badgen.net/npm/dm/axios?label\n[sd]: https://badgen.net/npm/dm/superagent?label\n\n[g3]: https://www.npmjs.com/package/got\n[k3]: https://www.npmjs.com/package/ky\n[r3]: https://www.npmjs.com/package/request\n[n3]: https://www.npmjs.com/package/node-fetch\n[a3]: https://www.npmjs.com/package/axios\n[s3]: https://www.npmjs.com/package/superagent\n\n<!-- COVERAGE -->\n[gc]: https://badgen.net/coveralls/c/github/sindresorhus/got?label\n[kc]: https://badgen.net/codecov/c/github/sindresorhus/ky?label\n[rc]: https://badgen.net/coveralls/c/github/request/request?label\n[nc]: https://badgen.net/coveralls/c/github/bitinn/node-fetch?label\n[ac]: https://badgen.net/coveralls/c/github/mzabriskie/axios?label\n[sc]: https://badgen.net/codecov/c/github/visionmedia/superagent?label\n\n[g4]: https://coveralls.io/github/sindresorhus/got\n[k4]: https://codecov.io/gh/sindresorhus/ky\n[r4]: https://coveralls.io/github/request/request\n[n4]: https://coveralls.io/github/bitinn/node-fetch\n[a4]: https://coveralls.io/github/mzabriskie/axios\n[s4]: https://codecov.io/gh/visionmedia/superagent\n\n<!-- BUILD -->\n[gb]: https://badgen.net/travis/sindresorhus/got?label\n[kb]: https://badgen.net/travis/sindresorhus/ky?label\n[rb]: https://badgen.net/travis/request/request?label\n[nb]: https://badgen.net/travis/bitinn/node-fetch?label\n[ab]: https://badgen.net/travis/axios/axios?label\n[sb]: https://badgen.net/travis/visionmedia/superagent?label\n\n[g5]: https://travis-ci.org/sindresorhus/got\n[k5]: https://travis-ci.org/sindresorhus/ky\n[r5]: https://travis-ci.org/request/request\n[n5]: https://travis-ci.org/bitinn/node-fetch\n[a5]: https://travis-ci.org/axios/axios\n[s5]: https://travis-ci.org/visionmedia/superagent\n\n<!-- BUGS -->\n[gbg]: https://badgen.net/github/label-issues/sindresorhus/got/bug/open?label\n[kbg]: https://badgen.net/github/label-issues/sindresorhus/ky/bug/open?label\n[rbg]: https://badgen.net/github/label-issues/request/request/Needs%20investigation/open?label\n[nbg]: https://badgen.net/github/label-issues/bitinn/node-fetch/bug/open?label\n[abg]: https://badgen.net/github/label-issues/axios/axios/type:bug/open?label\n[sbg]: https://badgen.net/github/label-issues/visionmedia/superagent/Bug/open?label\n\n[g6]: https://github.com/sindresorhus/got/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Abug\n[k6]: https://github.com/sindresorhus/ky/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Abug\n[r6]: https://github.com/request/request/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A\"Needs+investigation\"\n[n6]: https://github.com/bitinn/node-fetch/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Abug\n[a6]: https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Atype:bug\n[s6]: https://github.com/visionmedia/superagent/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3ABug\n\n<!-- DEPENDENTS -->\n[gdp]: https://badgen.net/npm/dependents/got?label\n[kdp]: https://badgen.net/npm/dependents/ky?label\n[rdp]: https://badgen.net/npm/dependents/request?label\n[ndp]: https://badgen.net/npm/dependents/node-fetch?label\n[adp]: https://badgen.net/npm/dependents/axios?label\n[sdp]: https://badgen.net/npm/dependents/superagent?label\n\n[g7]: https://www.npmjs.com/package/got?activeTab=dependents\n[k7]: https://www.npmjs.com/package/ky?activeTab=dependents\n[r7]: https://www.npmjs.com/package/request?activeTab=dependents\n[n7]: https://www.npmjs.com/package/node-fetch?activeTab=dependents\n[a7]: https://www.npmjs.com/package/axios?activeTab=dependents\n[s7]: https://www.npmjs.com/package/visionmedia?activeTab=dependents\n\n<!-- INSTALL SIZE -->\n[gis]: https://badgen.net/packagephobia/install/got?label\n[kis]: https://badgen.net/packagephobia/install/ky?label\n[ris]: https://badgen.net/packagephobia/install/request?label\n[nis]: https://badgen.net/packagephobia/install/node-fetch?label\n[ais]: https://badgen.net/packagephobia/install/axios?label\n[sis]: https://badgen.net/packagephobia/install/superagent?label\n\n[g8]: https://packagephobia.now.sh/result?p=got\n[k8]: https://packagephobia.now.sh/result?p=ky\n[r8]: https://packagephobia.now.sh/result?p=request\n[n8]: https://packagephobia.now.sh/result?p=node-fetch\n[a8]: https://packagephobia.now.sh/result?p=axios\n[s8]: https://packagephobia.now.sh/result?p=superagent\n\n[Click here][InstallSizeOfTheDependencies] to see the install size of the Got dependencies.\n\n[InstallSizeOfTheDependencies]: https://packagephobia.now.sh/result?p=@sindresorhus/is@1.0.0,@szmarczak/http-timer@3.1.0,@types/cacheable-request@6.0.1,cacheable-lookup@0.2.1,cacheable-request@7.0.0,decompress-response@5.0.0,duplexer3@0.1.4,get-stream@5.0.0,lowercase-keys@2.0.0,mimic-response@2.0.0,p-cancelable@2.0.0,responselike@2.0.0,to-readable-stream@2.0.0,type-fest@0.8.0\n\n## Related\n\n- [gh-got](https://github.com/sindresorhus/gh-got) - Got convenience wrapper to interact with the GitHub API\n- [gl-got](https://github.com/singapore/gl-got) - Got convenience wrapper to interact with the GitLab API\n- [travis-got](https://github.com/samverschueren/travis-got) - Got convenience wrapper to interact with the Travis API\n- [graphql-got](https://github.com/kevva/graphql-got) - Got convenience wrapper to interact with GraphQL\n- [GotQL](https://github.com/khaosdoctor/gotql) - Got convenience wrapper to interact with GraphQL using JSON-parsed queries instead of strings\n- [got-fetch](https://github.com/alexghr/got-fetch) - Got with a `fetch` interface\n\n## Maintainers\n\n[![Sindre Sorhus](https://github.com/sindresorhus.png?size=100)](https://sindresorhus.com) | [![Szymon Marczak](https://github.com/szmarczak.png?size=100)](https://github.com/szmarczak)\n---|---\n[Sindre Sorhus](https://sindresorhus.com) | [Szymon Marczak](https://github.com/szmarczak)\n\n###### Former\n\n- [Vsevolod Strukchinsky](https://github.com/floatdrop)\n- [Alexander Tesfamichael](https://github.com/alextes)\n- [Brandon Smith](https://github.com/brandon93s)\n- [Luke Childs](https://github.com/lukechilds)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-got?utm_source=npm-got&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
      "readmeFilename": "readme.md",
      "optionalDependencies": {},
      "_dependencies": {
        "@sindresorhus/is": "^2.0.0",
        "@szmarczak/http-timer": "^4.0.0",
        "@types/cacheable-request": "^6.0.1",
        "cacheable-lookup": "^2.0.0",
        "cacheable-request": "^7.0.1",
        "decompress-response": "^5.0.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^5.0.0",
        "lowercase-keys": "^2.0.0",
        "mimic-response": "^2.1.0",
        "p-cancelable": "^2.0.0",
        "p-event": "^4.0.0",
        "responselike": "^2.0.0",
        "to-readable-stream": "^2.0.0",
        "type-fest": "^0.10.0"
      },
      "path": "/path/to/project/packages/shared/node_modules/got",
      "error": "[Circular]",
      "extraneous": false
    },
    "moment": {
      "_args": [
        [
          "moment@2.24.0",
          "/path/to/project/packages/shared"
        ],
        [
          "moment@2.24.0",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "moment@2.24.0",
      "_id": "moment@2.24.0",
      "_integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg==",
      "_location": "/moment",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "moment@2.24.0",
        "name": "moment",
        "escapedName": "moment",
        "rawSpec": "2.24.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "2.24.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
      "_spec": "2.24.0",
      "_where": "/path/to/project/packages/shared",
      "author": {
        "name": "Iskren Ivov Chernev",
        "email": "iskren.chernev@gmail.com",
        "url": "https://github.com/ichernev"
      },
      "bugs": {
        "url": "https://github.com/moment/moment/issues"
      },
      "contributors": [
        {
          "name": "Tim Wood",
          "email": "washwithcare@gmail.com",
          "url": "http://timwoodcreates.com/"
        },
        {
          "name": "Rocky Meza",
          "url": "http://rockymeza.com"
        },
        {
          "name": "Matt Johnson",
          "email": "mj1856@hotmail.com",
          "url": "http://codeofmatt.com"
        },
        {
          "name": "Isaac Cambron",
          "email": "isaac@isaaccambron.com",
          "url": "http://isaaccambron.com"
        },
        {
          "name": "Andre Polykanine",
          "email": "andre@oire.org",
          "url": "https://github.com/oire"
        }
      ],
      "description": "Parse, validate, manipulate, and display dates",
      "devDependencies": {
        "benchmark": "latest",
        "coveralls": "^3.0.2",
        "es6-promise": "latest",
        "grunt": "~0.4",
        "grunt-benchmark": "latest",
        "grunt-cli": "latest",
        "grunt-contrib-clean": "latest",
        "grunt-contrib-concat": "latest",
        "grunt-contrib-copy": "latest",
        "grunt-contrib-jshint": "latest",
        "grunt-contrib-uglify": "latest",
        "grunt-contrib-watch": "^1.1.0",
        "grunt-env": "latest",
        "grunt-exec": "latest",
        "grunt-jscs": "latest",
        "grunt-karma": "latest",
        "grunt-nuget": "latest",
        "grunt-string-replace": "latest",
        "karma": "latest",
        "karma-chrome-launcher": "latest",
        "karma-firefox-launcher": "latest",
        "karma-qunit": "latest",
        "karma-sauce-launcher": "latest",
        "load-grunt-tasks": "~3.5.2",
        "node-qunit": "^1.0.0",
        "nyc": "~11.9.0",
        "qunit": "^2.7.1",
        "rollup": "~0.67.4",
        "spacejam": "latest",
        "typescript": "^1.8.10",
        "uglify-js": "latest"
      },
      "dojoBuild": "package.js",
      "ender": "./ender.js",
      "engines": {
        "node": "*"
      },
      "homepage": "http://momentjs.com",
      "jsnext:main": "./src/moment.js",
      "jspm": {
        "files": [
          "moment.js",
          "moment.d.ts",
          "locale"
        ],
        "map": {
          "moment": "./moment"
        },
        "buildConfig": {
          "uglify": true
        }
      },
      "keywords": [
        "moment",
        "date",
        "time",
        "parse",
        "format",
        "validate",
        "i18n",
        "l10n",
        "ender"
      ],
      "license": "MIT",
      "main": "./moment.js",
      "name": "moment",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/moment/moment.git"
      },
      "scripts": {
        "coverage": "nyc npm test && nyc report",
        "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
        "test": "grunt test",
        "typescript-test": "tsc --project typing-tests"
      },
      "spm": {
        "main": "moment.js",
        "output": [
          "locale/*.js"
        ]
      },
      "typings": "./moment.d.ts",
      "version": "2.24.0",
      "readme": "[![Join the chat at https://gitter.im/moment/moment](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][downloads-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n[![Coverage Status](https://coveralls.io/repos/moment/moment/badge.svg?branch=develop)](https://coveralls.io/r/moment/moment?branch=develop)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield)\n[![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\n**[Documentation](http://momentjs.com/docs/)**\n\n## Port to ECMAScript 6 (version 2.10.0)\n\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside `src/`. Previously `moment.js`, `locale/*.js` and\n`test/moment/*.js`, `test/locale/*.js` contained the source of the project. Now\nthe source is in `src/`, temporary build (ECMAScript 5) files are placed under\n`build/umd/` (for running tests during development), and the `moment.js` and\n`locale/*.js` files are updated only on release.\n\nIf you want to use a particular revision of the code, make sure to run\n`grunt transpile update-index`, so `moment.js` and `locales/*.js` are synced\nwith `src/*`. We might place that in a commit hook in the future.\n\n## Upgrading to 2.0.0\n\nThere are a number of small backwards incompatible changes with version 2.0.0. [See the full descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\n * Changed language ordinal method to return the number + ordinal instead of just the ordinal.\n\n * Changed two digit year parsing cutoff to match strptime.\n\n * Removed `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\n * Removed `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\n * Removed the lang data objects from the top level namespace.\n\n * Duplicate `Date` passed to `moment()` instead of referencing it.\n\n## [Changelog](https://github.com/moment/moment/blob/develop/CHANGELOG.md)\n\n## [Contributing](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md) [![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to [ichernev](https://github.com/ichernev).\n\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to moment/moment on CodeTriage](https://www.codetriage.com/moment/moment).\n\n## License\n\nMoment.js is freely distributable under the terms of the [MIT license](https://github.com/moment/moment/blob/develop/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large)\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment\n[npm-version-image]: http://img.shields.io/npm/v/moment.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment.svg?style=flat\n[downloads-url]: https://npmcharts.com/compare/moment?minimal=true\n\n[travis-url]: http://travis-ci.org/moment/moment\n[travis-image]: http://img.shields.io/travis/moment/moment/develop.svg?style=flat\n",
      "readmeFilename": "README.md",
      "dependencies": {},
      "optionalDependencies": {},
      "_dependencies": {},
      "path": "/path/to/project/packages/shared/node_modules/moment",
      "error": "[Circular]",
      "extraneous": false
    },
    "pino": {
      "_args": [
        [
          "pino@5.16.0",
          "/path/to/project/packages/shared"
        ],
        [
          "pino@5.16.0",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "pino@5.16.0",
      "_id": "pino@5.16.0",
      "_integrity": "sha512-k9cDzHd9S/oYSQ9B9g9+7RXkfsZX78sQXERC8x4p2XArECZXULx9nqNwZvJHsLj779wPCt+ybN+dG8jFR70p6Q==",
      "_location": "/pino",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "pino@5.16.0",
        "name": "pino",
        "escapedName": "pino",
        "rawSpec": "5.16.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "5.16.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/pino/-/pino-5.16.0.tgz",
      "_spec": "5.16.0",
      "_where": "/path/to/project/packages/shared",
      "author": {
        "name": "Matteo Collina",
        "email": "hello@matteocollina.com"
      },
      "bin": {
        "pino": "bin.js"
      },
      "browser": "./browser.js",
      "bugs": {
        "url": "https://github.com/pinojs/pino/issues"
      },
      "contributors": [
        {
          "name": "David Mark Clements",
          "email": "huperekchuno@googlemail.com"
        },
        {
          "name": "James Sumners",
          "email": "james.sumners@gmail.com"
        },
        {
          "name": "Thomas Watson Steen",
          "email": "w@tson.dk",
          "url": "https://twitter.com/wa7son"
        }
      ],
      "dependencies": {
        "fast-redact": {
          "_args": [
            [
              "fast-redact@2.0.0",
              "/path/to/project/packages/shared"
            ],
            [
              "fast-redact@2.0.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "fast-redact@2.0.0",
          "_id": "fast-redact@2.0.0",
          "_integrity": "sha512-zxpkULI9W9MNTK2sJ3BpPQrTEXFNESd2X6O1tXMFpK/XM0G5c5Rll2EVYZH2TqI3xRGK/VaJ+eEOt7pnENJpeA==",
          "_location": "/fast-redact",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "fast-redact@2.0.0",
            "name": "fast-redact",
            "escapedName": "fast-redact",
            "rawSpec": "2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.0"
          },
          "_requiredBy": [
            "/pino"
          ],
          "_resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-2.0.0.tgz",
          "_spec": "2.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "David Mark Clements",
            "email": "david.clements@nearform.com"
          },
          "bugs": {
            "url": "https://github.com/davidmarkclements/fast-redact/issues"
          },
          "description": "very fast object redaction",
          "devDependencies": {
            "fastbench": "^1.0.1",
            "pino-noir": "^2.2.1",
            "snazzy": "^8.0.0",
            "standard": "^12.0.1",
            "tap": "^12.5.2"
          },
          "directories": {
            "example": "example",
            "lib": "lib",
            "test": "test"
          },
          "engines": {
            "node": ">=6"
          },
          "homepage": "https://github.com/davidmarkclements/fast-redact#readme",
          "keywords": [
            "redact",
            "censor",
            "performance",
            "performant",
            "gdpr",
            "fast",
            "speed",
            "serialize",
            "stringify"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "fast-redact",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/davidmarkclements/fast-redact.git"
          },
          "scripts": {
            "bench": "node benchmark",
            "ci": "tap --cov --100 test",
            "cov": "tap --cov test",
            "cov-ui": "tap --coverage-report=html test",
            "posttest": "standard index.js 'lib/*.js' 'example/*.js' benchmark/index.js test/index.js | snazzy",
            "test": "tap test"
          },
          "version": "2.0.0",
          "readme": "# fast-redact\n\nvery fast object redaction\n\n[![Build Status](https://travis-ci.org/davidmarkclements/fast-redact.svg?branch=master)](https://travis-ci.org/davidmarkclements/fast-redact)\n\n## Default Usage\n\nBy default, `fast-redact` serializes an object with `JSON.stringify`, censoring any \ndata at paths specified:\n\n```js\nconst fastRedact = require('fast-redact')\nconst fauxRequest = {\n  headers: {\n    host: 'http://example.com',\n    cookie: `oh oh we don't want this exposed in logs in etc.`,\n    referer: `if we're cool maybe we'll even redact this`\n  }\n}\nconst redact = fastRedact({\n  paths: ['headers.cookie', 'headers.referer']\n})\n\nconsole.log(redact(fauxRequest))\n// {\"headers\":{\"host\":\"http://example.com\",\"cookie\":\"[REDACTED]\",\"referer\":\"[REDACTED]\"}}\n```\n\n## API\n\n### `require('fast-redact')({paths, censor, serialize}) => Function`\n\nWhen called without any options, or with a zero length `paths` array, \n`fast-redact` will return  `JSON.stringify` or the `serialize` option, if set.\n\n#### `paths` – `Array`\n\nAn array of strings describing the nested location of a key in an object.\n\nThe syntax follows that of the EcmaScript specification, that is any JavaScript\npath is accepted – both bracket and dot notation is supported. For instance in \neach of the following cases, the `c` property will be redacted: `a.b.c`,`a['b'].c`, \n`a[\"b\"].c`, `a[``b``].c`. Since bracket notation is supported, array indices are also\nsupported `a[0].b` would redact the `b` key in the first object of the `a` array. \n\nLeading brackets are also allowed, for instance `[\"a\"].b.c` will work.\n\n##### Wildcards\n\nIn addition to static paths, asterisk wildcards are also supported.\n\nWhen an asterisk is place in the final position it will redact all keys within the\nparent object. For instance `a.b.*` will redact all keys in the `b` object. Similarly\nfor arrays `a.b[*]` will redact all elements of an array (in truth it actually doesn't matter \nwhether `b` is in an object or array in either case, both notation styles will work).\n\nWhen an asterisk is in an intermediate or first position, the paths following the asterisk will \nbe redacted for every object within the parent.\n\nFor example:\n\n```js\nconst fastRedact = require('fast-redact')\nconst redact = fastRedact({paths: ['*.c.d']})\nconst obj = {\n  x: {c: {d: 'hide me', e: 'leave me be'}},\n  y: {c: {d: 'and me', f: 'I want to live'}},\n  z: {c: {d: 'and also I', g: 'I want to run in a stream'}}\n}\nconsole.log(redact(obj)) \n// {\"x\":{\"c\":{\"d\":\"[REDACTED]\",\"e\":\"leave me be\"}},\"y\":{\"c\":{\"d\":\"[REDACTED]\",\"f\":\"I want to live\"}},\"z\":{\"c\":{\"d\":\"[REDACTED]\",\"g\":\"I want to run in a stream\"}}}\n```\n\nAnother example with a nested array:\n\n```js\nconst fastRedact = require('..')\nconst redact = fastRedact({paths: ['a[*].c.d']})\nconst obj = {\n  a: [\n    {c: {d: 'hide me', e: 'leave me be'}},\n    {c: {d: 'and me', f: 'I want to live'}},\n    {c: {d: 'and also I', g: 'I want to run in a stream'}}\n  ]\n}\nconsole.log(redact(obj)) \n// {\"a\":[{\"c\":{\"d\":\"[REDACTED]\",\"e\":\"leave me be\"}},{\"c\":{\"d\":\"[REDACTED]\",\"f\":\"I want to live\"}},{\"c\":{\"d\":\"[REDACTED]\",\"g\":\"I want to run in a stream\"}}]}\n```\n\n#### `remove` - `Boolean` - `[false]`\n\nThe `remove` option, when set to `true` will cause keys to be removed from the \nserialized output. \n\nSince the implementation exploits the fact that `undefined` keys are ignored\nby `JSON.stringify` the `remove` option may *only* be used when `JSON.stringify`\nis the serializer (this is the default) – otherwise `fast-redact` will throw. \n\nIf supplying a custom serializer that has the same behavior (removing keys \nwith `undefined` values), this restriction can be bypassed by explicitly setting \nthe `censor` to `undefined`.\n\n\n#### `censor` – `<Any type>` – `('[REDACTED]')`\n\nThis is the value which overwrites redacted properties. \n\nSetting `censor` to `undefined` will cause properties to removed as long as this is \nthe behavior of the `serializer` – which defaults to `JSON.stringify`, which does \nremove `undefined` properties.\n\nSetting `censor` to a function will cause `fast-redact` to invoke it with the original \nvalue. The output of the `censor` function sets the redacted value.\nPlease note that asynchronous functions are not supported. \n\n#### `serialize` – `Function | Boolean` – `(JSON.stringify)`\n\nThe `serialize` option may be a function of a boolean. If a function is supplied, this\nwill be used to `serialize` the redacted object. It's important to understand that for \nperformance reasons `fast-redact` *mutates* the original object, then serializes, then \nrestores the original values. So the object passed to the serializer is the exact same\nobject passed to the redacting function. \n\nThe `serialize` option as a function example:\n\n```js\nconst fastRedact = require('fast-redact')\nconst redact = fastRedact({\n  paths: ['a'], \n  serialize: (o) => JSON.stringify(o, 0, 2)\n})\nconsole.log(redact({a: 1, b: 2}))\n// {\n//   \"a\": \"[REDACTED]\",\n//   \"b\": 2\n// }\n```\n\nFor advanced usage the `serialize` option can be set to `false`. When `serialize` is set to `false`,\ninstead of the serialized object, the output of the redactor function will be the mutated object \nitself (this is the exact same as the object passed in). In addition a `restore` method is supplied\non the redactor function allowing the redacted keys to be restored with the original data. \n\n```js\nconst fastRedact = require('fast-redact')\nconst redact = fastRedact({\n  paths: ['a'], \n  serialize: false\n})\nconst o = {a: 1, b: 2}\nconsole.log(redact(o) === o) // true\nconsole.log(o) // { a: '[REDACTED]', b: 2 }\nconsole.log(redact.restore(o) === o) // true\nconsole.log(o) // { a: 1, b: 2 }\n```\n\n#### `strict` – `Boolean` - `[true]`\nThe `strict` option, when set to `true`, will cause the redactor function to throw if instead \nof an object it finds a primitive. When `strict` is set to `false`, the redactor function \nwill treat the primitive value as having already been redacted, and return it serialized (with\n`JSON.stringify` or the user's custom `serialize` function), or as-is if the `serialize` option\nwas set to false.\n\n## Approach\n\nIn order to achieve lowest cost/highest performance redaction `fast-redact`\ncreates and compiles a function (using the `Function` constructor) on initialization.\nIt's important to distinguish this from the dangers of a runtime eval, no user input \nis involved in creating the string that compiles into the function. This is as safe \nas writing code normally and having it compiled by V8 in the usual way.\n\nThanks to changes in V8 in recent years, state can be injected into compiled functions\nusing `bind` at very low cost (whereas `bind` used to be expensive, and getting state\ninto a compiled function by any means was difficult without a performance penalty).\n\nFor static paths, this function simply checks that the path exists and then overwrites\nwith the censor. Wildcard paths are processed with normal functions that iterate over \nthe object redacting values as necessary.\n\nIt's important to note, that the original object is mutated – for performance reasons\na copy is not made. See [rfdc](https://github.com/davidmarkclements/rfdc) (Really Fast \nDeep Clone) for the fastest known way to clone – it's not nearly close enough  in speed\nto editing the original object, serializing and then restoring values. \n\nA `restore` function is also created and compiled to put the original state back on\nto the object after redaction. This means that in the default usage case, the operation \nis essentially atomic - the object is mutated, serialized and restored internally which \navoids any state management issues.\n\n## Caveat\n\nAs mentioned in approach, the `paths` array input is dynamically compiled into a function\nat initialization time. While the `paths` array is vigourously tested for any developer \nerrors, it's strongly recommended against allowing user input to directly supply any \npaths to redact. It can't be guaranteed that allowing user input for `paths` couldn't\nfeasibly expose an attack vector.  \n\n## Benchmarks\n\nThe fastest known predecessor to `fast-redact` is the non-generic [`pino-noir`](http://npm.im/pino-noir) \nlibrary (which was also written by myself).\n\nIn the direct calling case, `fast-redact` is ~30x faster than `pino-noir`, however a more realistic\ncomparison is overhead on `JSON.stringify`. \n\nFor a static redaction case (no wildcards) `pino-noir` adds ~25% overhead on top of `JSON.stringify`\nwhereas `fast-redact` adds ~1% overhead.\n\nIn the basic last-position wildcard case,`fast-redact` is ~12% faster than `pino-noir`.\n\nThe `pino-noir` module does not support intermediate wildcards, but `fast-redact` does,\nthe cost of an intermediate wildcard that results in two keys over two nested objects \nbeing redacted is about 25% overhead on `JSON.stringify`. The cost of an intermediate \nwildcard that results in four keys across two objects being redacted is about 55% overhead \non `JSON.stringify` and ~50% more expensive that explicitly declaring the keys.  \n\n```sh\nnpm run bench \n```\n\n```\nbenchNoirV2*500: 59.108ms\nbenchFastRedact*500: 2.483ms\nbenchFastRedactRestore*500: 10.904ms\nbenchNoirV2Wild*500: 91.399ms\nbenchFastRedactWild*500: 21.200ms\nbenchFastRedactWildRestore*500: 27.304ms\nbenchFastRedactIntermediateWild*500: 92.304ms\nbenchFastRedactIntermediateWildRestore*500: 107.047ms\nbenchJSONStringify*500: 210.573ms\nbenchNoirV2Serialize*500: 281.148ms\nbenchFastRedactSerialize*500: 215.845ms\nbenchNoirV2WildSerialize*500: 281.168ms\nbenchFastRedactWildSerialize*500: 247.140ms\nbenchFastRedactIntermediateWildSerialize*500: 333.722ms\nbenchFastRedactIntermediateWildMatchWildOutcomeSerialize*500: 463.667ms\nbenchFastRedactStaticMatchWildOutcomeSerialize*500: 239.293ms\n```\n\n## Tests\n\n```\nnpm test  \n```\n\n```\n  224 passing (499.544ms)\n```\n\n### Coverage\n\n```\nnpm run cov \n```\n\n```\n-----------------|----------|----------|----------|----------|-------------------|\nFile             |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |\n-----------------|----------|----------|----------|----------|-------------------|\nAll files        |      100 |      100 |      100 |      100 |                   |\n fast-redact     |      100 |      100 |      100 |      100 |                   |\n  index.js       |      100 |      100 |      100 |      100 |                   |\n fast-redact/lib |      100 |      100 |      100 |      100 |                   |\n  modifiers.js   |      100 |      100 |      100 |      100 |                   |\n  parse.js       |      100 |      100 |      100 |      100 |                   |\n  redactor.js    |      100 |      100 |      100 |      100 |                   |\n  restorer.js    |      100 |      100 |      100 |      100 |                   |\n  rx.js          |      100 |      100 |      100 |      100 |                   |\n  state.js       |      100 |      100 |      100 |      100 |                   |\n  validator.js   |      100 |      100 |      100 |      100 |                   |\n-----------------|----------|----------|----------|----------|-------------------|\n```\n\n## License\n\nMIT\n\n## Acknowledgements\n\nSponsored by [nearForm](http://www.nearform.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/fast-redact",
          "error": "[Circular]",
          "extraneous": false
        },
        "fast-safe-stringify": {
          "_args": [
            [
              "fast-safe-stringify@2.0.7",
              "/path/to/project/packages/shared"
            ],
            [
              "fast-safe-stringify@2.0.7",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "fast-safe-stringify@2.0.7",
          "_id": "fast-safe-stringify@2.0.7",
          "_integrity": "sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA==",
          "_location": "/fast-safe-stringify",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "fast-safe-stringify@2.0.7",
            "name": "fast-safe-stringify",
            "escapedName": "fast-safe-stringify",
            "rawSpec": "2.0.7",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.7"
          },
          "_requiredBy": [
            "/pino",
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz",
          "_spec": "2.0.7",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "David Mark Clements"
          },
          "bugs": {
            "url": "https://github.com/davidmarkclements/fast-safe-stringify/issues"
          },
          "contributors": [
            {
              "name": "Ruben Bridgewater"
            },
            {
              "name": "Matteo Collina"
            },
            {
              "name": "Ben Gourley"
            },
            {
              "name": "Gabriel Lesperance"
            },
            {
              "name": "Alex Liu"
            },
            {
              "name": "Christoph Walcher"
            },
            {
              "name": "Nicholas Young"
            }
          ],
          "dependencies": {},
          "description": "Safely and quickly serialize JavaScript objects",
          "devDependencies": {
            "benchmark": "^2.1.4",
            "clone": "^2.1.0",
            "json-stringify-safe": "^5.0.1",
            "standard": "^11.0.0",
            "tap": "^12.0.0"
          },
          "homepage": "https://github.com/davidmarkclements/fast-safe-stringify#readme",
          "keywords": [
            "stable",
            "stringify",
            "JSON",
            "JSON.stringify",
            "safe",
            "serialize"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "fast-safe-stringify",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/davidmarkclements/fast-safe-stringify.git"
          },
          "scripts": {
            "benchmark": "node benchmark.js",
            "test": "standard && tap --no-esm test.js test-stable.js"
          },
          "typings": "index",
          "version": "2.0.7",
          "readme": "# fast-safe-stringify\n\nSafe and fast serialization alternative to [JSON.stringify][].\n\nGracefully handles circular structures instead of throwing.\n\nProvides a deterministic (\"stable\") version as well that will also gracefully\nhandle circular structures. See the example below for further information.\n\n## Usage\n\nThe same as [JSON.stringify][].\n\n`stringify(value[, replacer[, space]])`\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { a: 1 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"a\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n\nfunction replacer(key, value) {\n  console.log('Key:', JSON.stringify(key), 'Value:', JSON.stringify(value))\n  // Remove the circular structure\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\nconst serialized = safeStringify(o, replacer, 2)\n// Key: \"\" Value: {\"a\":1,\"o\":\"[Circular]\"}\n// Key: \"a\" Value: 1\n// Key: \"o\" Value: \"[Circular]\"\nconsole.log(serialized)\n// {\n//  \"a\": 1\n// }\n```\n\nUsing the deterministic version also works the same:\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { b: 1, a: 0 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"b\":1,\"a\":0,\"o\":\"[Circular]\"}'\nconsole.log(safeStringify.stableStringify(o))\n// '{\"a\":0,\"b\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n```\n\nA faster and side-effect free implementation is available in the\n[safe-stable-stringify][] module. However it is still considered experimental\ndue to a new and more complex implementation.\n\n## Differences to JSON.stringify\n\nIn general the behavior is identical to [JSON.stringify][]. The [`replacer`][]\nand [`space`][] options are also available.\n\nA few exceptions exist to [JSON.stringify][] while using [`toJSON`][] or\n[`replacer`][]:\n\n### Regular safe stringify\n\n- Manipulating a circular structure of the passed in value in a `toJSON` or the\n  `replacer` is not possible! It is possible for any other value and property.\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\n### Deterministic (\"stable\") safe stringify\n\n- Manipulating the input object either in a [`toJSON`][] or the [`replacer`][]\n  function will not have any effect on the output. The output entirely relies on\n  the shape the input value had at the point passed to the stringify function!\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\nA side effect free variation without these limitations can be found as well\n([`safe-stable-stringify`][]). It is also faster than the current\nimplementation. It is still considered experimental due to a new and more\ncomplex implementation.\n\n## Benchmarks\n\nAlthough not JSON, the Node.js `util.inspect` method can be used for similar\npurposes (e.g. logging) and also handles circular references.\n\nHere we compare `fast-safe-stringify` with some alternatives:\n(Lenovo T450s with a i7-5600U CPU using Node.js 8.9.4)\n\n```md\nfast-safe-stringify:   simple object x 1,121,497 ops/sec ±0.75% (97 runs sampled)\nfast-safe-stringify:   circular      x 560,126 ops/sec ±0.64% (96 runs sampled)\nfast-safe-stringify:   deep          x 32,472 ops/sec ±0.57% (95 runs sampled)\nfast-safe-stringify:   deep circular x 32,513 ops/sec ±0.80% (92 runs sampled)\n\nutil.inspect:          simple object x 272,837 ops/sec ±1.48% (90 runs sampled)\nutil.inspect:          circular      x 116,896 ops/sec ±1.19% (95 runs sampled)\nutil.inspect:          deep          x 19,382 ops/sec ±0.66% (92 runs sampled)\nutil.inspect:          deep circular x 18,717 ops/sec ±0.63% (96 runs sampled)\n\njson-stringify-safe:   simple object x 233,621 ops/sec ±0.97% (94 runs sampled)\njson-stringify-safe:   circular      x 110,409 ops/sec ±1.85% (95 runs sampled)\njson-stringify-safe:   deep          x 8,705 ops/sec ±0.87% (96 runs sampled)\njson-stringify-safe:   deep circular x 8,336 ops/sec ±2.20% (93 runs sampled)\n```\n\nFor stable stringify comparisons, see the performance benchmarks in the\n[`safe-stable-stringify`][] readme.\n\n## Protip\n\nWhether `fast-safe-stringify` or alternatives are used: if the use case\nconsists of deeply nested objects without circular references the following\npattern will give best results.\nShallow or one level nested objects on the other hand will slow down with it.\nIt is entirely dependant on the use case.\n\n```js\nconst stringify = require('fast-safe-stringify')\n\nfunction tryJSONStringify (obj) {\n  try { return JSON.stringify(obj) } catch (_) {}\n}\n\nconst serializedString = tryJSONStringify(deep) || stringify(deep)\n```\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\n## License\n\nMIT\n\n[`replacer`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20replacer%20parameter\n[`safe-stable-stringify`]: https://github.com/BridgeAR/safe-stable-stringify\n[`space`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20space%20argument\n[`toJSON`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior\n[benchmark]: https://github.com/epoberezkin/fast-json-stable-stringify/blob/67f688f7441010cfef91a6147280cc501701e83b/benchmark\n[JSON.stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/fast-safe-stringify",
          "error": "[Circular]",
          "extraneous": false
        },
        "flatstr": {
          "_args": [
            [
              "flatstr@1.0.12",
              "/path/to/project/packages/shared"
            ],
            [
              "flatstr@1.0.12",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "flatstr@1.0.12",
          "_id": "flatstr@1.0.12",
          "_integrity": "sha512-4zPxDyhCyiN2wIAtSLI6gc82/EjqZc1onI4Mz/l0pWrAlsSfYH/2ZIcU+e3oA2wDwbzIWNKwa23F8rh6+DRWkw==",
          "_location": "/flatstr",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "flatstr@1.0.12",
            "name": "flatstr",
            "escapedName": "flatstr",
            "rawSpec": "1.0.12",
            "saveSpec": "[Circular]",
            "fetchSpec": "1.0.12"
          },
          "_requiredBy": [
            "/pino",
            "/sonic-boom"
          ],
          "_resolved": "https://registry.npmjs.org/flatstr/-/flatstr-1.0.12.tgz",
          "_spec": "1.0.12",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "David Mark Clements"
          },
          "browser": {
            "v8": "./v8"
          },
          "bugs": {
            "url": "https://github.com/davidmarkclements/flatstr/issues"
          },
          "dependencies": {},
          "description": "Flattens the underlying C structures of a concatenated JavaScript string",
          "devDependencies": {
            "fastbench": "^1.0.1",
            "tap": "^12.0.1"
          },
          "homepage": "https://github.com/davidmarkclements/flatstr#readme",
          "license": "MIT",
          "main": "index.js",
          "name": "flatstr",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/davidmarkclements/flatstr.git"
          },
          "tags": [
            "perf",
            "performance",
            "strings",
            "concatenation"
          ],
          "version": "1.0.12",
          "readme": "# flatstr\n\nFlattens the underlying C structures of a concatenated JavaScript string\n\n## About\n\nIf you're doing lots of string concatenation and then writing that\nstring somewhere, you may find that passing your string through \n`flatstr` vastly improves performance.\n\n## Usage\n\n```js\nvar flatstr = require('flatstr')\nflatstr(someHeavilyConcatenatedString)\n```\n\n## Benchmarks\n\nBenchmarks test flat vs non-flat strings being written to \nan `fs.WriteStream`.\n\n```\nunflattenedManySmallConcats*10000: 147.540ms\nflattenedManySmallConcats*10000: 105.994ms\nunflattenedSeveralLargeConcats*10000: 287.901ms\nflattenedSeveralLargeConcats*10000: 226.121ms\nunflattenedExponentialSmallConcats*10000: 410.533ms\nflattenedExponentialSmallConcats*10000: 219.973ms\nunflattenedExponentialLargeConcats*10000: 2774.230ms\nflattenedExponentialLargeConcats*10000: 1862.815ms\n```\n\nIn each case, flattened strings win, \nhere's the performance gains from using `flatstr`\n\n```\nManySmallConcats: 28%\nSeveralLargeConcats: 21% \nExponentialSmallConcats: 46%\nExponentialLargeConcats: 33%\n```\n\n## How does it work\n\nIn the v8 C++ layer, JavaScript strings can be represented in two ways. \n\n1. As an array\n2. As a tree\n\nWhen JavaScript strings are concatenated, tree structures are used\nto represent them. For the concat operation, this is cheaper than\nreallocating a larger array. However, performing other operations \non the tree structures can become costly (particularly where lots of\nconcatenation has occurred). \n\nV8 has a a method called `String::Flatten`which converts the tree into a C array. This method is typically called before operations that walk through the bytes of the string (for instance, when testing against a regular expression). It may also be called if a string is accessed many times over, \nas an optimization on the string. However, strings aren't always flattened. One example is when we pass a string into a `WriteStream`, at some point the string will be converted to a buffer, and this may be expensive if the underlying representation is a tree. \n\n`String::Flatten` is not exposed as a JavaScript function, but it can be triggered as a side effect. \n\nThere are several ways to indirectly call `String::Flatten` (see `alt-benchmark.js`), \nbut coercion to a number appears to be (one of) the cheapest.\n\nHowever since Node 10 the V8 version has stopped using Flatten in all \nplaces identified. Thus the code has been updated to seamlessly \nuse the native runtime function `%FlattenString` without having to use \nthe `--allow-natives-syntax` flag directly. \n\nOne final note: calling flatstr too much can in fact negatively effect performance. For instance, don't call it every time you concat (if that\nwas performant, v8 wouldn't be using trees in the first place). The best\nplace to use flatstr is just prior to passing it to an API that eventually\nruns non-v8 code (such as `fs.WriteStream`, or perhaps `xhr` or DOM apis in the browser). \n\n\n## Acknowledgements\n\n* Sponsored by nearForm\n\n## License\n\nMIT\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/flatstr",
          "error": "[Circular]",
          "extraneous": false
        },
        "pino-std-serializers": {
          "_args": [
            [
              "pino-std-serializers@2.4.2",
              "/path/to/project/packages/shared"
            ],
            [
              "pino-std-serializers@2.4.2",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "pino-std-serializers@2.4.2",
          "_id": "pino-std-serializers@2.4.2",
          "_integrity": "sha512-WaL504dO8eGs+vrK+j4BuQQq6GLKeCCcHaMB2ItygzVURcL1CycwNEUHTD/lHFHs/NL5qAz2UKrjYWXKSf4aMQ==",
          "_location": "/pino-std-serializers",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "pino-std-serializers@2.4.2",
            "name": "pino-std-serializers",
            "escapedName": "pino-std-serializers",
            "rawSpec": "2.4.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.4.2"
          },
          "_requiredBy": [
            "/pino"
          ],
          "_resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-2.4.2.tgz",
          "_spec": "2.4.2",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "James Sumners",
            "email": "james.sumners@gmail.com"
          },
          "bugs": {
            "url": "https://github.com/pinojs/pino-std-serializers/issues"
          },
          "description": "A collection of standard object serializers for Pino",
          "devDependencies": {
            "pre-commit": "^1.2.2",
            "snazzy": "^7.0.0",
            "standard": "^11.0.0",
            "tap": "^12.0.0"
          },
          "homepage": "https://github.com/pinojs/pino-std-serializers#readme",
          "keywords": [
            "pino",
            "logging"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "pino-std-serializers",
          "precommit": [
            "lint",
            "test"
          ],
          "repository": {
            "type": "git",
            "url": "git+ssh://git@github.com/pinojs/pino-std-serializers.git"
          },
          "scripts": {
            "lint": "standard | snazzy",
            "lint-ci": "standard",
            "test": "tap --no-cov 'test/**/*.test.js'",
            "test-ci": "tap --cov --coverage-report=text 'test/**/*.test.js'"
          },
          "version": "2.4.2",
          "readme": "# pino-std-serializers&nbsp;&nbsp;[![Build Status](https://travis-ci.org/pinojs/pino-std-serializers.svg)](https://travis-ci.org/pinojs/pino-std-serializers)\n\nThis module provides a set of standard object serializers for the\n[Pino](https://getpino.io) logger.\n\n## Serializers\n\n### `exports.err(error)`\nSerializes an `Error` like object. Returns an object:\n\n```js\n{\n  type: 'string', // The name of the object's constructor.\n  message: 'string', // The supplied error message.\n  stack: 'string', // The stack when the error was generated.\n  raw: Error  // Non-enumerable, i.e. will not be in the output, original\n              // Error object. This is available for subsequent serializers\n              // to use.\n}\n```\n\nAny other extra properties, e.g. `statusCode`, that have been attached to the\nobject will also be present on the serialized object.\n\n### `exports.mapHttpResponse(response)`\nUsed internally by Pino for general response logging. Returns an object:\n\n```js\n{\n  res: {}\n}\n```\n\nWhere `res` is the `response` as serialized by the standard response serializer.\n\n### `exports.mapHttpRequest(request)`\nUsed internall by Pino for general request logging. Returns an object:\n\n```js\n{\n  req: {}\n}\n```\n\nWhere `req` is the `request` as serialized by the standard request serializer.\n\n### `exports.req(request)`\nThe default `request` serializer. Returns and object:\n\n```js\n{\n  id: 'string', // Defaults to `undefined`, unless there is an `id` property \n                // already attached to the `request` object or to the `request.info`\n                // object. Attach a synchronous function\n                // to the `request.id` that returns an identifier to have\n                // the value filled.\n  method: 'string',\n  url: 'string', // the request pathname (as per req.url in core HTTP)\n  headers: Object, // a reference to the `headers` object from the request\n                   // (as per req.headers in core HTTP)\n  remoteAddress: 'string',\n  remotePort: Number,\n  raw: Object // Non-enumerable, i.e. will not be in the output, original\n              // request object. This is available for subsequent serializers\n              // to use. In cases where the `request` input already has \n              // a `raw` property this will replace the original `request.raw`\n              // property\n}\n```\n\n### `exports.res(response)`\nThe default `response` serializer. Returns an object:\n\n```js\n{\n  statusCode: Number,\n  headers: Object, // The headers to be sent in the response.\n  raw: Object // Non-enumerable, i.e. will not be in the output, original\n              // response object. This is available for subsequent serializers\n              // to use.\n}\n```\n\n### `exports.wrapErrorSerializer(customSerializer)`\nA utility method for wrapping the default error serializer. This allows\ncustom serializers to work with the already serialized object.\n\nThe `customSerializer` accepts one parameter — the newly serialized error\nobject — and returns the new (or updated) error object.\n\n### `exports.wrapRequestSerializer(customSerializer)`\nA utility method for wrapping the default request serializer. This allows\ncustom serializers to work with the already serialized object.\n\nThe `customSerializer` accepts one parameter — the newly serialized request\nobject — and returns the new (or updated) request object.\n\n### `exports.wrapResponseSerializer(customSerializer)`\nA utility method for wrapping the default response serializer. This allows\ncustom serializers to work with the already serialized object.\n\nThe `customSerializer` accepts one parameter — the newly serialized response\nobject — and returns the new (or updated) response object.\n\n## License\n\nMIT License\n",
          "readmeFilename": "Readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/pino-std-serializers",
          "error": "[Circular]",
          "extraneous": false
        },
        "quick-format-unescaped": {
          "_args": [
            [
              "quick-format-unescaped@3.0.3",
              "/path/to/project/packages/shared"
            ],
            [
              "quick-format-unescaped@3.0.3",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "quick-format-unescaped@3.0.3",
          "_id": "quick-format-unescaped@3.0.3",
          "_integrity": "sha512-dy1yjycmn9blucmJLXOfZDx1ikZJUi6E8bBZLnhPG5gBrVhHXx2xVyqqgKBubVNEXmx51dBACMHpoMQK/N/AXQ==",
          "_location": "/quick-format-unescaped",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "quick-format-unescaped@3.0.3",
            "name": "quick-format-unescaped",
            "escapedName": "quick-format-unescaped",
            "rawSpec": "3.0.3",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.0.3"
          },
          "_requiredBy": [
            "/pino"
          ],
          "_resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-3.0.3.tgz",
          "_spec": "3.0.3",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "David Mark Clements"
          },
          "bugs": {
            "url": "https://github.com/davidmarkclements/quick-format/issues"
          },
          "dependencies": {},
          "description": "Solves a problem with util.format",
          "devDependencies": {
            "fastbench": "^1.0.1"
          },
          "directories": {
            "test": "test"
          },
          "homepage": "https://github.com/davidmarkclements/quick-format#readme",
          "keywords": [],
          "license": "MIT",
          "main": "index.js",
          "name": "quick-format-unescaped",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/davidmarkclements/quick-format.git"
          },
          "scripts": {
            "test": "node test"
          },
          "version": "3.0.3",
          "readme": "# quick-format-unescaped\n\n## unescaped ?\n\nSometimes you want to embed the results of quick-format into another string, \nand then escape the whole string. \n\n## usage\n\n```js\nvar format = require('quick-format-unescaped')\nformat('hello %s %j %d', ['world', [{obj: true}, 4, {another: 'obj'}]])\n```\n\n## format(fmt, parameters, [options])\n\n### fmt\n\nA `printf`-like format string. Example: `'hello %s %j %d'`\n\n### parameters\n\nArray of values to be inserted into the `format` string. Example: `['world', {obj:true}]`\n\n### options.stringify\n\nPassing an options object as the third parameter with a `stringify` will mean \nany objects will be passed to the supplied function instead of an the \ninternal `tryStringify` function. This can be useful when using augmented\ncapability serializers such as [`fast-safe-stringify`](http://github.com/davidmarkclements/fast-safe-stringify) or [`fast-redact`](http://github.com/davidmarkclements/fast-redact).  \n\n## caveats\n\nBy default `quick-format-unescaped` uses  `JSON.stringify` instead of `util.inspect`, this means functions *will not be serialized*.\n\n## Benchmarks\n\n### Node 8.11.2\n\n```\nutil*100000: 350.325ms\nquick*100000: 268.141ms\nutilWithTailObj*100000: 586.387ms\nquickWithTailObj*100000: 280.200ms\nutil*100000: 325.735ms\nquick*100000: 270.251ms\nutilWithTailObj*100000: 492.270ms\nquickWithTailObj*100000: 261.797ms\n```\n\n### Node 10.4.0\n\n```\nutil*100000: 301.035ms\nquick*100000: 217.005ms\nutilWithTailObj*100000: 404.778ms\nquickWithTailObj*100000: 236.176ms\nutil*100000: 286.349ms\nquick*100000: 214.646ms\nutilWithTailObj*100000: 388.574ms\nquickWithTailObj*100000: 226.036ms\n```\n\n## Acknowledgements\n\nSponsored by [nearForm](http://www.nearform.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/quick-format-unescaped",
          "error": "[Circular]",
          "extraneous": false
        },
        "sonic-boom": {
          "_args": [
            [
              "sonic-boom@0.7.6",
              "/path/to/project/packages/shared"
            ],
            [
              "sonic-boom@0.7.6",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "sonic-boom@0.7.6",
          "_id": "sonic-boom@0.7.6",
          "_integrity": "sha512-k9E2QQ4zxuVRLDW+ZW6ISzJs3wlEorVdmM7ApDgor7wsGKSDG5YGHsGmgLY4XYh4DMlr/2ap2BWAE7yTFJtWnQ==",
          "_location": "/sonic-boom",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "sonic-boom@0.7.6",
            "name": "sonic-boom",
            "escapedName": "sonic-boom",
            "rawSpec": "0.7.6",
            "saveSpec": "[Circular]",
            "fetchSpec": "0.7.6"
          },
          "_requiredBy": [
            "/pino"
          ],
          "_resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-0.7.6.tgz",
          "_spec": "0.7.6",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Matteo Collina",
            "email": "hello@matteocollina.com"
          },
          "bugs": {
            "url": "https://github.com/mcollina/sonic-boom/issues"
          },
          "dependencies": {
            "flatstr": {
              "_args": "[Circular]",
              "_from": "flatstr@1.0.12",
              "_id": "flatstr@1.0.12",
              "_integrity": "sha512-4zPxDyhCyiN2wIAtSLI6gc82/EjqZc1onI4Mz/l0pWrAlsSfYH/2ZIcU+e3oA2wDwbzIWNKwa23F8rh6+DRWkw==",
              "_location": "/flatstr",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "flatstr@1.0.12",
                "name": "flatstr",
                "escapedName": "flatstr",
                "rawSpec": "1.0.12",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.12"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/flatstr/-/flatstr-1.0.12.tgz",
              "_spec": "1.0.12",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "browser": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {},
              "description": "Flattens the underlying C structures of a concatenated JavaScript string",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/davidmarkclements/flatstr#readme",
              "license": "MIT",
              "main": "index.js",
              "name": "flatstr",
              "repository": "[Circular]",
              "tags": "[Circular]",
              "version": "1.0.12",
              "readme": "# flatstr\n\nFlattens the underlying C structures of a concatenated JavaScript string\n\n## About\n\nIf you're doing lots of string concatenation and then writing that\nstring somewhere, you may find that passing your string through \n`flatstr` vastly improves performance.\n\n## Usage\n\n```js\nvar flatstr = require('flatstr')\nflatstr(someHeavilyConcatenatedString)\n```\n\n## Benchmarks\n\nBenchmarks test flat vs non-flat strings being written to \nan `fs.WriteStream`.\n\n```\nunflattenedManySmallConcats*10000: 147.540ms\nflattenedManySmallConcats*10000: 105.994ms\nunflattenedSeveralLargeConcats*10000: 287.901ms\nflattenedSeveralLargeConcats*10000: 226.121ms\nunflattenedExponentialSmallConcats*10000: 410.533ms\nflattenedExponentialSmallConcats*10000: 219.973ms\nunflattenedExponentialLargeConcats*10000: 2774.230ms\nflattenedExponentialLargeConcats*10000: 1862.815ms\n```\n\nIn each case, flattened strings win, \nhere's the performance gains from using `flatstr`\n\n```\nManySmallConcats: 28%\nSeveralLargeConcats: 21% \nExponentialSmallConcats: 46%\nExponentialLargeConcats: 33%\n```\n\n## How does it work\n\nIn the v8 C++ layer, JavaScript strings can be represented in two ways. \n\n1. As an array\n2. As a tree\n\nWhen JavaScript strings are concatenated, tree structures are used\nto represent them. For the concat operation, this is cheaper than\nreallocating a larger array. However, performing other operations \non the tree structures can become costly (particularly where lots of\nconcatenation has occurred). \n\nV8 has a a method called `String::Flatten`which converts the tree into a C array. This method is typically called before operations that walk through the bytes of the string (for instance, when testing against a regular expression). It may also be called if a string is accessed many times over, \nas an optimization on the string. However, strings aren't always flattened. One example is when we pass a string into a `WriteStream`, at some point the string will be converted to a buffer, and this may be expensive if the underlying representation is a tree. \n\n`String::Flatten` is not exposed as a JavaScript function, but it can be triggered as a side effect. \n\nThere are several ways to indirectly call `String::Flatten` (see `alt-benchmark.js`), \nbut coercion to a number appears to be (one of) the cheapest.\n\nHowever since Node 10 the V8 version has stopped using Flatten in all \nplaces identified. Thus the code has been updated to seamlessly \nuse the native runtime function `%FlattenString` without having to use \nthe `--allow-natives-syntax` flag directly. \n\nOne final note: calling flatstr too much can in fact negatively effect performance. For instance, don't call it every time you concat (if that\nwas performant, v8 wouldn't be using trees in the first place). The best\nplace to use flatstr is just prior to passing it to an API that eventually\nruns non-v8 code (such as `fs.WriteStream`, or perhaps `xhr` or DOM apis in the browser). \n\n\n## Acknowledgements\n\n* Sponsored by nearForm\n\n## License\n\nMIT\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/flatstr",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "flatstr"
            }
          },
          "description": "Extremely fast utf8 only stream implementation",
          "devDependencies": {
            "fastbench": "^1.0.1",
            "pre-commit": "^1.2.2",
            "proxyquire": "^2.1.0",
            "snazzy": "^8.0.0",
            "standard": "^13.0.2",
            "tap": "^12.1.0"
          },
          "homepage": "https://github.com/mcollina/sonic-boom#readme",
          "keywords": [
            "stream",
            "fs",
            "net",
            "fd",
            "file",
            "descriptor",
            "fast"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "sonic-boom",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/mcollina/sonic-boom.git"
          },
          "scripts": {
            "test": "standard | snazzy && tap --no-esm -t 60 test.js"
          },
          "version": "0.7.6",
          "readme": "# sonic-boom&nbsp;&nbsp;[![Build Status](https://travis-ci.org/mcollina/sonic-boom.svg?branch=master)](https://travis-ci.org/mcollina/sonic-boom)\n\nExtremely fast utf8-only stream implementation to write to files and\nfile descriptors.\n\nThis implementation is partial, but support backpressure and `.pipe()` in is here.\nHowever, it is 2-3x faster than Node Core `fs.createWriteStream()`:\n\n```\nbenchSonic*1000: 2215.220ms\nbenchSonicSync*1000: 8315.173ms\nbenchSonic4k*1000: 2184.558ms\nbenchSonicSync4k*1000: 1733.582ms\nbenchCore*1000: 6513.752ms\n```\n\nNote that sync mode without buffering is _slower_ than a Node Core WritableStream, however\nthis mode matches the expected behavior of `console.log()`.\n\nNote that if this is used to log to a windows terminal (`cmd.exe` or\npowershell), it is needed to run `chcp 65001` in the terminal to\ncorrectly display utf-8 characters, see\n[chcp](https://ss64.com/nt/chcp.html) for more details.\n\n## Install\n\n```\nnpm i sonic-boom\n```\n\n## Example\n\n```js\n'use strict'\n\nconst SonicBoom = require('sonic-boom')\nconst sonic = new SonicBoom(process.stdout.fd) // or '/path/to/destination'\n\nfor (var i = 0; i < 10; i++) {\n  sonic.write('hello sonic\\n')\n}\n```\n\n## API\n\n### SonicBoom(String|Number, [minLength], [sync])\n\nCreates a new instance of SonicBoom.\n\nThe first argument can be:\n\n1. a string that is a path to a file to be written to (mode `'a'`)\n2. a file descriptor, something that is returned by `fs.open` or\n   `fs.openSync`.\n\nThe second argument is the minimum length of the internal buffer that is\nrequired before flushing.\n\nThe third argument is a flag that, when true, causes `SonicBoom` to perform synchronous writes.\n\nIt will emit the `'ready'` event when a file descriptor is available.\n\n### SonicBoom#write(string)\n\nWrites the string to the file.\nIt will return false to signal the producer to slow down.\n\n### SonicBoom#flush()\n\nWrites the current buffer to the file if a write was not in progress.\nDo nothing if `minLength` is zero or if it is already writing.\n\n### SonicBoom#reopen([file])\n\nReopen the file in place, useful for log rotation.\n\nExample:\n\n```js\nconst stream = new SonicBoom('./my.log')\nprocess.on('SIGUSR2', function () {\n  stream.reopen()\n})\n```\n\n### SonicBoom#flushSync()\n\nFlushes the buffered data synchronously. This is a costly operation.\n\n### SonicBoom#end()\n\nCloses the stream, the data will be flushed down asynchronously\n\n### SonicBook#destroy()\n\nCloses the stream immediately, the data is not flushed.\n\n## License\n\nMIT\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "flatstr": "^1.0.12"
          },
          "path": "/path/to/project/packages/shared/node_modules/sonic-boom",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "description": "super fast, all natural json logger",
      "devDependencies": {
        "airtap": "2.0.2",
        "benchmark": "^2.1.4",
        "bole": "^3.0.2",
        "bunyan": "^1.8.12",
        "cross-env": "^5.2.1",
        "docsify-cli": "^4.2.1",
        "execa": "^1.0.0",
        "fastbench": "^1.0.1",
        "flush-write-stream": "^2.0.0",
        "import-fresh": "^3.0.0",
        "log": "^5.0.0",
        "loglevel": "^1.6.4",
        "pino-pretty": "^2.6.1",
        "pre-commit": "^1.2.2",
        "proxyquire": "^2.1.3",
        "pump": "^3.0.0",
        "qodaa": "^1.0.1",
        "semver": "^6.3.0",
        "snazzy": "^8.0.0",
        "split2": "^3.1.1",
        "standard": "^14.2.0",
        "steed": "^1.1.3",
        "tap": "^12.7.0",
        "tape": "^4.11.0",
        "through2": "^3.0.1",
        "winston": "^3.2.1"
      },
      "files": [
        "pino.js",
        "bin.js",
        "browser.js",
        "pretty.js",
        "usage.txt",
        "test",
        "docs",
        "example.js",
        "lib"
      ],
      "homepage": "http://getpino.io",
      "keywords": [
        "fast",
        "logger",
        "stream",
        "json"
      ],
      "license": "MIT",
      "main": "pino.js",
      "name": "pino",
      "precommit": "test",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/pinojs/pino.git"
      },
      "scripts": {
        "bench": "node benchmarks/utils/runbench all",
        "bench-basic": "node benchmarks/utils/runbench basic",
        "bench-child": "node benchmarks/utils/runbench child",
        "bench-child-child": "node benchmarks/utils/runbench child-child",
        "bench-child-creation": "node benchmarks/utils/runbench child-creation",
        "bench-deep-object": "node benchmarks/utils/runbench deep-object",
        "bench-longs-tring": "node benchmarks/utils/runbench long-string",
        "bench-multi-arg": "node benchmarks/utils/runbench multi-arg",
        "bench-object": "node benchmarks/utils/runbench object",
        "browser-test": "airtap --local 8080 test/browser*test.js",
        "ci": "standard | snazzy && cross-env TAP_TIMEOUT=480000 NODE_OPTIONS=\"--no-warnings -r qodaa\" tap --no-esm -j 4 --100 test/*test.js",
        "cov-ci": "cross-env TAP_TIMEOUT=480000 NODE_OPTIONS=\"--no-warnings -r qodaa\" tap --no-esm -j 4 --100 --coverage-report=lcov test/*test.js",
        "cov-ui": "cross-env NODE_OPTIONS=\"--no-warnings -r qodaa\" tap --no-esm -j 4 --coverage-report=html test/*test.js",
        "docs": "docsify serve",
        "test": "standard | snazzy && cross-env NODE_OPTIONS=\"--no-warnings -r qodaa\" tap --no-esm -j 4 --no-cov test/*test.js",
        "update-bench-doc": "node benchmarks/utils/generate-benchmark-doc > docs/benchmarks.md"
      },
      "version": "5.16.0",
      "readme": "![banner](pino-banner.png)\n\n# pino&nbsp;&nbsp;[![Build Status](https://travis-ci.org/pinojs/pino.svg?branch=master)](https://travis-ci.org/pinojs/pino)&nbsp;[![Coverage Status](https://coveralls.io/repos/github/pinojs/pino/badge.svg?branch=master)](https://coveralls.io/github/pinojs/pino?branch=master) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/) [![TypeScript definitions on DefinitelyTyped](https://definitelytyped.org/badges/standard.svg)](https://definitelytyped.org)\n\n[Very low overhead](#low-overhead) Node.js logger, inspired by Bunyan.\n\n## Documentation\n\n* [Benchmarks ⇗](/docs/benchmarks.md)\n* [API ⇗](/docs/api.md)\n* [Browser API ⇗](/docs/browser.md)\n* [Redaction ⇗](/docs/redaction.md)\n* [Child Loggers ⇗](/docs/child-loggers.md)\n* [Transports ⇗](/docs/transports.md)\n* [Web Frameworks ⇗](/docs/web.md)\n* [Pretty Printing ⇗](/docs/pretty.md)\n* [Extreme Mode ⇗](/docs/extreme.md)\n* [Ecosystem ⇗](/docs/ecosystem.md)\n* [Legacy](/docs/legacy.md)\n* [Help ⇗](/docs/help.md)\n\n## Install\n\n```\n$ npm install pino\n```\n\n## Usage\n\n```js\nconst logger = require('pino')()\n\nlogger.info('hello world')\n\nconst child = logger.child({ a: 'property' })\nchild.info('hello child!')\n```\n\nThis produces:\n\n```\n{\"level\":30,\"time\":1531171074631,\"msg\":\"hello world\",\"pid\":657,\"hostname\":\"Davids-MBP-3.fritz.box\",\"v\":1}\n{\"level\":30,\"time\":1531171082399,\"msg\":\"hello child!\",\"pid\":657,\"hostname\":\"Davids-MBP-3.fritz.box\",\"a\":\"property\",\"v\":1}\n```\n\nFor using Pino with a web framework see:\n\n* [Pino with Fastify](docs/web.md#fastify)\n* [Pino with Express](docs/web.md#express)\n* [Pino with Hapi](docs/web.md#hapi)\n* [Pino with Restify](docs/web.md#restify)\n* [Pino with Koa](docs/web.md#koa)\n* [Pino with Node core `http`](docs/web.md#http)\n* [Pino with Nest](docs/web.md#nest)\n\n\n<a name=\"essentials\"></a>\n## Essentials\n\n### Development Formatting\n\nThe [`pino-pretty`](https://github.com/pinojs/pino-pretty) module can be used to\nformat logs during development:\n\n![pretty demo](pretty-demo.png)\n\n### Transports & Log Processing\n\nDue to Node's single-threaded event-loop, it's highly recommended that sending,\nalert triggering, reformatting and all forms of log processing\nis conducted in a separate process. In Pino parlance we call all log processors\n\"transports\", and recommend that the transports be run as separate\nprocesses, piping the stdout of the application to the stdin of the transport.\n\nFor more details see our [Transports⇗](docs/transports.md) document.\n\n### Low overhead\n\nUsing minimum resources for logging is very important. Log messages\ntend to get added over time and this can lead to a throttling effect\non applications – such as reduced requests per second.\n\nIn many cases, Pino is over 5x faster than alternatives.\n\nSee the [Benchmarks](docs/benchmarks.md) document for comparisons.\n\n<a name=\"team\"></a>\n## The Team\n\n### Matteo Collina\n\n<https://github.com/pinojs>\n\n<https://www.npmjs.com/~matteo.collina>\n\n<https://twitter.com/matteocollina>\n\n### David Mark Clements\n\n<https://github.com/davidmarkclements>\n\n<https://www.npmjs.com/~davidmarkclements>\n\n<https://twitter.com/davidmarkclem>\n\n### James Sumners\n\n<https://github.com/jsumners>\n\n<https://www.npmjs.com/~jsumners>\n\n<https://twitter.com/jsumners79>\n\n### Thomas Watson Steen\n\n<https://github.com/watson>\n\n<https://www.npmjs.com/~watson>\n\n<https://twitter.com/wa7son>\n\n## Communication\n\n### Chat on Gitter\n\n<https://gitter.im/pinojs/pino>\n\n### Chat on IRC\n\nYou'll find an active group of Pino users in the #pinojs channel on Freenode, including some of the contributors to this project.\n\n## Contributing\n\nPino is an **OPEN Open Source Project**. This means that:\n\n> Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\nSee the [CONTRIBUTING.md](https://github.com/pinojs/pino/blob/master/CONTRIBUTING.md) file for more details.\n\n<a name=\"acknowledgements\"></a>\n## Acknowledgements\n\nThis project was kindly sponsored by [nearForm](http://nearform.com).\n\nLogo and identity designed by Cosmic Fox Design: https://www.behance.net/cosmicfox.\n\n## License\n\nLicensed under [MIT](./LICENSE).\n\n[elasticsearch]: https://www.elastic.co/products/elasticsearch\n[kibana]: https://www.elastic.co/products/kibana\n",
      "readmeFilename": "README.md",
      "optionalDependencies": {},
      "_dependencies": {
        "fast-redact": "^2.0.0",
        "fast-safe-stringify": "^2.0.7",
        "flatstr": "^1.0.12",
        "pino-std-serializers": "^2.4.2",
        "quick-format-unescaped": "^3.0.3",
        "sonic-boom": "^0.7.5"
      },
      "path": "/path/to/project/packages/shared/node_modules/pino",
      "error": "[Circular]",
      "extraneous": false
    },
    "pino-pretty": {
      "_args": [
        [
          "pino-pretty@3.6.0",
          "/path/to/project/packages/shared"
        ],
        [
          "pino-pretty@3.6.0",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "pino-pretty@3.6.0",
      "_id": "pino-pretty@3.6.0",
      "_integrity": "sha512-gTVA+Kx4DoVQl+sXO4/HdLVaNgr281b+NDJWmXzreIoQ+3fd7xVyTg31c0hpzCUbheuW4TpzQOqDg9uOIsbw7Q==",
      "_location": "/pino-pretty",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "pino-pretty@3.6.0",
        "name": "pino-pretty",
        "escapedName": "pino-pretty",
        "rawSpec": "3.6.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "3.6.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/pino-pretty/-/pino-pretty-3.6.0.tgz",
      "_spec": "3.6.0",
      "_where": "/path/to/project/packages/shared",
      "author": {
        "name": "James Sumners",
        "email": "james.sumners@gmail.com"
      },
      "bin": {
        "pino-pretty": "bin.js"
      },
      "bugs": {
        "url": "https://github.com/pinojs/pino-pretty/issues"
      },
      "dependencies": {
        "@hapi/bourne": {
          "_args": [
            [
              "@hapi/bourne@1.3.2",
              "/path/to/project/packages/shared"
            ],
            [
              "@hapi/bourne@1.3.2",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "@hapi/bourne@1.3.2",
          "_id": "@hapi/bourne@1.3.2",
          "_integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA==",
          "_location": "/@hapi/bourne",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "@hapi/bourne@1.3.2",
            "name": "@hapi/bourne",
            "escapedName": "@hapi%2fbourne",
            "scope": "@hapi",
            "rawSpec": "1.3.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "1.3.2"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
          "_spec": "1.3.2",
          "_where": "/path/to/project/packages/shared",
          "bugs": {
            "url": "https://github.com/hapijs/bourne/issues"
          },
          "dependencies": {},
          "description": "JSON parse with prototype poisoning protection",
          "devDependencies": {
            "@hapi/code": "5.x.x",
            "@hapi/lab": "18.x.x",
            "benchmark": "^2.1.4"
          },
          "homepage": "https://github.com/hapijs/bourne#readme",
          "keywords": [
            "JSON",
            "parse",
            "safe",
            "prototype"
          ],
          "license": "BSD-3-Clause",
          "main": "lib/index.js",
          "name": "@hapi/bourne",
          "repository": {
            "type": "git",
            "url": "git://github.com/hapijs/bourne.git"
          },
          "scripts": {
            "test": "lab -a @hapi/code -t 100 -L",
            "test-cov-html": "lab -a @hapi/code -r html -o coverage.html"
          },
          "version": "1.3.2",
          "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# Bourne. JSON Bourne.\n\n`JSON.parse()` drop-in replacement with prototype poisoning protection\n\n[![Build Status](https://travis-ci.org/hapijs/bourne.svg)](https://travis-ci.org/hapijs/bourne)\n\n## Introduction\n\nConsider this:\n\n```\n> const a = '{\"__proto__\":{ \"b\":5}}';\n'{\"__proto__\":{ \"b\":5}}'\n\n> const b = JSON.parse(a);\n{ __proto__: { b: 5 } }\n\n> b.b;\nundefined\n\n> const c = Object.assign({}, b);\n{}\n\n> c.b\n5\n```\n\nThe problem is that `JSON.parse()` retains the `__proto__` property as a plain object key. By\nitself, this is not a security issue. However, as soon as that object is assigned to another or\niterated on and values copied, the `__proto__` property leaks and becomes the object's prototype.\n\n## API\n\n### `Bourne.parse(text, [reviver], [options])`\n\nParses a given JSON-formatted text into an object where:\n- `text` - the JSON text string.\n- `reviver` - the `JSON.parse()` optional `reviver` argument.\n- `options` - optional configuration object where:\n    - `protoAction` - optional string with one of:\n        - `'error'` - throw a `SyntaxError` when a `__proto__` key is found. This is the default value.\n        - `'remove'` - deletes any `__proto__` keys from the result object.\n        - `'ignore'` - skips all validation (same as calling `JSON.parse()` directly).\n\n### `Bourne.scan(obj, [options])`\n\nScans a given object for prototype properties where:\n- `obj` - the object being scanned.\n- `options` - optional configuration object where:\n    - `protoAction` - optional string with one of:\n        - `'error'` - throw a `SyntaxError` when a `__proto__` key is found. This is the default value.\n        - `'remove'` - deletes any `__proto__` keys from the input `obj`.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/@hapi/bourne",
          "error": "[Circular]",
          "extraneous": false
        },
        "args": {
          "_args": [
            [
              "args@5.0.1",
              "/path/to/project/packages/shared"
            ],
            [
              "args@5.0.1",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "args@5.0.1",
          "_id": "args@5.0.1",
          "_integrity": "sha512-1kqmFCFsPffavQFGt8OxJdIcETti99kySRUPMpOhaGjL6mRJn8HFU1OxKY5bMqfZKUwTQc1mZkAjmGYaVOHFtQ==",
          "_location": "/args",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "args@5.0.1",
            "name": "args",
            "escapedName": "args",
            "rawSpec": "5.0.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "5.0.1"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/args/-/args-5.0.1.tgz",
          "_spec": "5.0.1",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "leo"
          },
          "bugs": {
            "url": "https://github.com/leo/args/issues"
          },
          "dependencies": {
            "camelcase": {
              "_args": [
                [
                  "camelcase@5.0.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "camelcase@5.0.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "camelcase@5.0.0",
              "_id": "camelcase@5.0.0",
              "_integrity": "sha512-faqwZqnWxbxn+F1d399ygeamQNy3lPp/H9H6rNrqYh4FSVCtcY+3cub1MxA8o9mDd55mM8Aghuu/kuyYA6VTsA==",
              "_location": "/camelcase",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "camelcase@5.0.0",
                "name": "camelcase",
                "escapedName": "camelcase",
                "rawSpec": "5.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "5.0.0"
              },
              "_requiredBy": [
                "/args"
              ],
              "_resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
              "_spec": "5.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/camelcase/issues"
              },
              "description": "Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=6"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/camelcase#readme",
              "keywords": [
                "camelcase",
                "camel-case",
                "camel",
                "case",
                "dash",
                "hyphen",
                "dot",
                "underscore",
                "separator",
                "string",
                "text",
                "convert",
                "pascalcase",
                "pascal-case"
              ],
              "license": "MIT",
              "name": "camelcase",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/camelcase.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "5.0.0",
              "readme": "# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`\n\n\n## Install\n\n```\n$ npm install camelcase\n```\n\n\n## Usage\n\n```js\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar', {pascalCase: true});\n//=> 'FooBar'\n\ncamelCase('--foo.bar', {pascalCase: false});\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase(['foo', 'bar']);\n//=> 'fooBar'\n\ncamelCase(['__foo__', '--bar'], {pascalCase: true});\n//=> 'FooBar'\n```\n\n\n## API\n\n### camelCase(input, [options])\n\n#### input\n\nType: `string` `string[]`\n\nString to convert to camel case.\n\n#### options\n\nType: `Object`\n\n##### pascalCase\n\nType: `boolean`<br>\nDefault: `false`\n\nUppercase the first character: `foo-bar` → `FooBar`\n\n\n## Related\n\n- [decamelize](https://github.com/sindresorhus/decamelize) - The inverse of this module\n- [uppercamelcase](https://github.com/SamVerschueren/uppercamelcase) - Like this module, but to PascalCase instead of camelCase\n- [titleize](https://github.com/sindresorhus/titleize) - Capitalize every word in string\n- [humanize-string](https://github.com/sindresorhus/humanize-string) - Convert a camelized/dasherized/underscored string into a humanized one\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/camelcase",
              "error": "[Circular]",
              "extraneous": false
            },
            "chalk": {
              "_args": [
                [
                  "chalk@2.4.2",
                  "/path/to/project/packages/shared"
                ],
                [
                  "chalk@2.4.2",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "chalk@2.4.2",
              "_id": "chalk@2.4.2",
              "_integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
              "_location": "/chalk",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "chalk@2.4.2",
                "name": "chalk",
                "escapedName": "chalk",
                "rawSpec": "2.4.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.4.2"
              },
              "_requiredBy": [
                "/args",
                "/pino-pretty"
              ],
              "_resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
              "_spec": "2.4.2",
              "_where": "/path/to/project/packages/shared",
              "bugs": {
                "url": "https://github.com/chalk/chalk/issues"
              },
              "dependencies": {},
              "description": "Terminal string styling done right",
              "devDependencies": {
                "ava": "*",
                "coveralls": "^3.0.0",
                "execa": "^0.9.0",
                "flow-bin": "^0.68.0",
                "import-fresh": "^2.0.0",
                "matcha": "^0.7.0",
                "nyc": "^11.0.2",
                "resolve-from": "^4.0.0",
                "typescript": "^2.5.3",
                "xo": "*"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "index.js",
                "templates.js",
                "types/index.d.ts",
                "index.js.flow"
              ],
              "homepage": "https://github.com/chalk/chalk#readme",
              "keywords": [
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "string",
                "str",
                "ansi",
                "style",
                "styles",
                "tty",
                "formatting",
                "rgb",
                "256",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text"
              ],
              "license": "MIT",
              "name": "chalk",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/chalk.git"
              },
              "scripts": {
                "bench": "matcha benchmark.js",
                "coveralls": "nyc report --reporter=text-lcov | coveralls",
                "test": "xo && tsc --project types && flow --max-warnings=0 && nyc ava"
              },
              "types": "types/index.d.ts",
              "version": "2.4.2",
              "xo": {
                "envs": [
                  "node",
                  "mocha"
                ],
                "ignores": [
                  "test/_flow.js"
                ]
              },
              "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\n### [See what's new in Chalk 2](https://github.com/chalk/chalk/releases/tag/v2.0.0)\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" alt=\"\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~23,000 packages](https://www.npmjs.com/browse/depended/chalk) as of December 31, 2017\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n<a href=\"https://www.patreon.com/sindresorhus\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, as is the level (see `chalk.level`). However, if you'd like to simply enable/disable Chalk, you can do so via the `.enabled` property.\n\nChalk is enabled by default unless explicitly disabled via the constructor or `chalk.level` is `0`.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.level\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({level: 0});\n```\n\nLevels are as follows:\n\n0. All colors disabled\n1. Basic color support (16 colors)\n2. 256 color support\n3. Truecolor support (16 million colors)\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n- `visible` (Text is emitted only if enabled)\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(On Windows the bright version is used since normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n  There are {bold 5280 feet} in a mile.\n  In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model)  - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- `ansi16`\n- `ansi256`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://cmder.net/) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "ansi-styles": "^3.2.1",
                "escape-string-regexp": "^1.0.5",
                "supports-color": "^5.3.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/chalk",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "chalk"
            },
            "leven": {
              "_args": [
                [
                  "leven@2.1.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "leven@2.1.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "leven@2.1.0",
              "_id": "leven@2.1.0",
              "_integrity": "sha1-wuep93IJTe6dNCAq6KzORoeHVYA=",
              "_location": "/leven",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "leven@2.1.0",
                "name": "leven",
                "escapedName": "leven",
                "rawSpec": "2.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.1.0"
              },
              "_requiredBy": [
                "/args"
              ],
              "_resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",
              "_spec": "2.1.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/leven/issues"
              },
              "description": "Measure the difference between two strings using the fastest JS implementation of the Levenshtein distance algorithm",
              "devDependencies": {
                "ava": "^0.17.0",
                "fast-levenshtein": "^2.0.5",
                "ld": "^0.1.0",
                "levdist": "^2.0.0",
                "levenshtein": "^1.0.4",
                "levenshtein-component": "0.0.1",
                "levenshtein-edit-distance": "^2.0.0",
                "matcha": "^0.7.0",
                "natural": "^0.4.0",
                "talisman": "^0.18.0",
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/leven#readme",
              "keywords": [
                "leven",
                "levenshtein",
                "distance",
                "algorithm",
                "algo",
                "string",
                "difference",
                "diff",
                "fast",
                "fuzzy",
                "similar",
                "similarity",
                "compare",
                "comparison",
                "edit",
                "text",
                "match",
                "matching"
              ],
              "license": "MIT",
              "name": "leven",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/leven.git"
              },
              "scripts": {
                "bench": "matcha bench.js",
                "test": "xo && ava"
              },
              "version": "2.1.0",
              "readme": "# leven [![Build Status](https://travis-ci.org/sindresorhus/leven.svg?branch=master)](https://travis-ci.org/sindresorhus/leven)\n\n> Measure the difference between two strings<br>\n> The fastest JS implementation of the [Levenshtein distance](http://en.wikipedia.org/wiki/Levenshtein_distance) algorithm\n\n\n## Install\n\n```\n$ npm install --save leven\n```\n\n\n## Usage\n\n```js\nconst leven = require('leven');\n\nleven('cat', 'cow');\n//=> 2\n```\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n```\n         401,487 op/s » leven\n         371,707 op/s » talisman\n         264,191 op/s » levenshtein-edit-distance\n         152,923 op/s » fast-levenshtein\n          57,267 op/s » levenshtein-component\n          19,915 op/s » levdist\n          21,802 op/s » ld\n          18,079 op/s » natural\n          11,761 op/s » levenshtein\n```\n\n\n## Related\n\n- [leven-cli](https://github.com/sindresorhus/leven-cli) - CLI for this module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/leven",
              "error": "[Circular]",
              "extraneous": false
            },
            "mri": {
              "_args": [
                [
                  "mri@1.1.4",
                  "/path/to/project/packages/shared"
                ],
                [
                  "mri@1.1.4",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "mri@1.1.4",
              "_id": "mri@1.1.4",
              "_integrity": "sha512-6y7IjGPm8AzlvoUrwAaw1tLnUBudaS3752vcd8JtrpGGQn+rXIe63LFVHm/YMwtqAuh+LJPCFdlLYPWM1nYn6w==",
              "_location": "/mri",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "mri@1.1.4",
                "name": "mri",
                "escapedName": "mri",
                "rawSpec": "1.1.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.1.4"
              },
              "_requiredBy": [
                "/args"
              ],
              "_resolved": "https://registry.npmjs.org/mri/-/mri-1.1.4.tgz",
              "_spec": "1.1.4",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Luke Edwards",
                "email": "luke.edwards05@gmail.com",
                "url": "lukeed.com"
              },
              "bugs": {
                "url": "https://github.com/lukeed/mri/issues"
              },
              "description": "Quickly scan for CLI flags and arguments",
              "devDependencies": {
                "tap-spec": "^4.1.1",
                "tape": "^4.6.3"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://github.com/lukeed/mri#readme",
              "keywords": [
                "argv",
                "arguments",
                "cli",
                "minimist",
                "options",
                "optimist",
                "parser",
                "args"
              ],
              "license": "MIT",
              "main": "lib/index.js",
              "name": "mri",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lukeed/mri.git"
              },
              "scripts": {
                "bench": "node bench",
                "test": "tape test/*.js | tap-spec"
              },
              "version": "1.1.4",
              "readme": "# mri [![Build Status](https://travis-ci.org/lukeed/mri.svg?branch=master)](https://travis-ci.org/lukeed/mri)\n\n> Quickly scan for CLI flags and arguments\n\nThis is a [fast](#benchmarks) and lightweight alternative to [`minimist`](https://github.com/substack/minimist) and [`yargs-parser`](https://github.com/yargs/yargs-parser).\n\nIt only exists because I find that I usually don't need most of what `minimist` and `yargs-parser` have to offer. However, `mri` is similar _enough_ that it might function as a \"drop-in replacement\" for you, too!\n\nSee [Comparisons](#comparisons) for more info.\n\n## Install\n\n```sh\n$ npm install --save mri\n```\n\n## Usage\n\n```sh\n$ demo-cli --foo --bar=baz -mtv -- hello world\n```\n\n```js\nconst mri = require('mri');\n\nconst argv = process.argv.slice(2);\n\nmri(argv);\n//=> { _: ['hello', 'world'], foo:true, bar:'baz', m:true, t:true, v:true }\n\nmri(argv, { boolean:['bar'] });\n//=> { _: ['baz', 'hello', 'world'], foo:true, bar:true, m:true, t:true, v:true }\n\nmri(argv, {\n  alias: {\n    b: 'bar',\n    foo: ['f', 'fuz']\n  }\n});\n//=> { _: ['hello', 'world'], foo:true, f:true, fuz:true, b:'baz', bar:'baz', m:true, t:true, v:true }\n```\n\n## API\n\n### mri(args, options)\nReturn: `Object`\n\n#### args\nType: `Array`<br>\nDefault: `[]`\n\nAn array of arguments to parse. For CLI usage, send `process.argv.slice(2)`. See [`process.argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) for info.\n\n#### options.alias\nType: `Object`<br>\nDefault: `{}`\n\nAn object of keys whose values are `String`s or `Array<String>` of aliases. These will be added to the parsed output with matching values.\n\n#### options.boolean\nType: `Array|String`<br>\nDefault: `[]`\n\nA single key (or array of keys) that should be parsed as `Boolean`s.\n\n#### options.default\nType: `Object`<br>\nDefault: `{}`\n\nAn `key:value` object of defaults. If a default is provided for a key, its type (`typeof`) will be used to cast parsed arguments.\n\n```js\nmri(['--foo', 'bar']);\n//=> { _:[], foo:'bar' }\n\nmri(['--foo', 'bar'], {\n  default: { foo:true, baz:'hello', bat:42 }\n});\n//=> { _:['bar'], foo:true, baz:'hello', bat:42 }\n```\n\n> **Note:** Because `--foo` has a default of `true`, its output is cast to a Boolean. This means that `foo=true`, making `'bar'` an extra argument (`_` key).\n\n#### options.string\nType: `Array|String`<br>\nDefault: `[]`\n\nA single key (or array of keys) that should be parsed as `String`s.\n\n#### options.unknown\nType: `Function`<br>\nDefault: `undefined`\n\nCallback that is run when a parsed flag has not been defined as a known key or alias. Its only parameter is the unknown flag itself; eg `--foobar` or `-f`.\n\nOnce an unknown flag is encountered, parsing will terminate, regardless of your return value.\n\n> **Note:** `mri` _only_ checks for unknown flags if `options.unknown` **and** `options.alias` are populated. Otherwise, everything will be accepted.\n\n\n## Comparisons\n\n#### minimist\n\n- `mri` is 5x faster (see [benchmarks](#benchmarks))\n- Numerical values are cast as `Number`s when possible\n  - A key (and its aliases) will always honor `opts.boolean` or `opts.string`\n- Short flag groups are treated as `Boolean`s by default:\n    ```js\n    minimist(['-abc', 'hello']);\n    //=> { _:[], a:'', b:'', c:'hello' }\n\n    mri(['-abc', 'hello']);\n    //=> { _:[], a:true, b:true, c:'hello' }\n    ```\n- The `opts.unknown` behaves differently:\n  - Unlike `minimist`, `mri` will not continue continue parsing after encountering an unknown flag\n- Missing `options`:\n  - `opts.stopEarly`\n  - `opts['--']`\n- Ignores newlines (`\\n`) within args (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L69-L80))\n- Ignores slashBreaks within args (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L147-L157))\n- Ignores dot-nested flags (see [test](https://github.com/substack/minimist/blob/master/test/parse.js#L180-L197))\n\n#### yargs-parser\n\n- `mri` is 40x faster (see [benchmarks](#benchmarks))\n- Numerical values are cast as `Number`s when possible\n  - A key (and its aliases) will always honor `opts.boolean` or `opts.string`\n- Missing `options`:\n  - `opts.array`\n  - `opts.config`\n  - `opts.coerce`\n  - `opts.count`\n  - `opts.envPrefix`\n  - `opts.narg`\n  - `opts.normalize`\n  - `opts.configuration`\n  - `opts.number`\n  - `opts['--']`\n- Missing [`parser.detailed()`](https://github.com/yargs/yargs-parser#requireyargs-parserdetailedargs-opts) method\n- No [additional configuration](https://github.com/yargs/yargs-parser#configuration) object\n- Added [`options.unknown`](#optionsunknown) feature\n\n\n## Benchmarks\n\n```\n# Node v10.13.0\n\nminimist      x   324,469 ops/sec ±1.20% (96 runs sampled)\nmri           x 1,611,167 ops/sec ±0.22% (96 runs sampled)\nnopt          x   920,029 ops/sec ±1.13% (97 runs sampled)\nyargs-parser  x    39,542 ops/sec ±1.14% (95 runs sampled)\n```\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/mri",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Minimal toolkit for building CLIs",
          "devDependencies": {
            "ava": "1.2.1",
            "eslint-config-prettier": "4.1.0",
            "execa": "1.0.0",
            "husky": "1.3.1",
            "lint-staged": "8.1.5",
            "prettier": "1.16.4",
            "xo": "0.24.0"
          },
          "engines": {
            "node": ">= 6.0.0"
          },
          "files": [
            "lib"
          ],
          "homepage": "https://github.com/leo/args#readme",
          "keywords": [
            "cli",
            "command",
            "arguments",
            "util",
            "bin",
            "commander",
            "nanomist"
          ],
          "license": "MIT",
          "lint-staged": {
            "*.js": [
              "npm run lint",
              "prettier --single-quote --write --no-semi",
              "git add"
            ]
          },
          "main": "lib/index.js",
          "name": "args",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/leo/args.git"
          },
          "scripts": {
            "lint": "xo",
            "precommit": "lint-staged",
            "test": "npm run lint && ava"
          },
          "version": "5.0.1",
          "xo": {
            "extends": "prettier"
          },
          "readme": "# args\n\n[![Build Status](https://travis-ci.org/leo/args.svg?branch=master)](https://travis-ci.org/leo/args)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\nThis package makes creating command line interfaces a breeze.\n\n## Features\n\n- Git-style sub commands (e.g. `pizza cheese` executes the \"pizza-cheese\" binary)\n- Auto-generated usage information\n- Determines type of option by checking type of default value (e.g. `['hi']` => `<list>`)\n- Clean [syntax](#usage) for defining options and commands\n- Easily [retrieve](#usage) values of options\n- Automatically suggests a similar option, if the user entered an unknown one\n\n## Usage\n\nInstall the package (you'll need at least version 6.0.0 of [Node](https://nodejs.org/en/)):\n\n```bash\nnpm install --save args\n```\n\nOnce you're done, you can start using it within your binaries:\n\n```js\n#!/usr/bin/env node\n\nimport args from 'args'\n\nargs\n  .option('port', 'The port on which the app will be running', 3000)\n  .option('reload', 'Enable/disable livereloading')\n  .command('serve', 'Serve your static site', ['s'])\n\nconst flags = args.parse(process.argv)\n```\n\nThe upper code defines two options called \"port\" and \"reload\" for the current binary, as well as a new sub command named \"serve\". So if you want to check for the value of the \"port\" option, just do this:\n\n```js\n// This also works with \"flags.p\", because the short name of the \"port\" option is \"p\"\n\nif (flags.port) {\n  console.log(`I'll be running on port ${flags.port}`)\n}\n```\n\nIn turn, this is how the auto-generated usage information will look like:\n\n```\n\n  Usage: haha [options] [command]\n\n\n  Commands:\n\n    serve, s       Serve your static site\n    help           Display help\n\n  Options:\n\n    -v, --version  Output the version number\n    -r, --reload   Enable/disable livereloading\n    -h, --help     Output usage information\n    -p, --port     The port on which the app will be running\n\n```\n\n## API\n\n### .option(name, description, default, init)\n\nRegister a new option for the binary in which it's being called.\n\n- **name:** Takes a string which defines the name of the option. In this case, the first letter will be used as the short version (`port` => `-p, --port`). However, it can also be an array in which the first value defines the short version (`p` => `-p`) and the second one the long version (`packages` => `--packages`).\n- **description:** A short explanation of what the option shall be used for. Will be outputted along with help.\n- **default:** If it's defined, args will not only use it as a default value for the property, but it will also determine the type and append it to the usage info when the help gets outputted. For example: If the default param of an option named \"package\" contains an array, the usage information will look like this: `-p, --package <list>`.\n- **init:** A function through which the option's value will be passed when used. The first paramater within said function will contain the option's value. If the parameter \"default\" is defined, args will provide a default initializer depending on the type of its value. For example: If \"default\" contains an integer, \"init\" will be `parseInt`.\n\n### .options(list)\n\nTakes in an array of objects that are each defining an option that shall be registered. This is basically a minimalistic way to register a huge list of options at once. Here's what each option object needs to look like:\n\n```js\n{\n  name: 'port',\n  description: 'The port on which the app runs',\n  init: content => content,\n  defaultValue: 3000\n}\n```\n\nHowever, the keys `init` and `defaultValue` are not strictly required.\n\n### .command(name, description, init, aliases)\n\nRegister a new sub command. Args requires all binaries to be defined in the style of git's. That means each sub command should be a separate binary called \"&#60;parent-command&#62;-&#60;sub-command&#62;\".\n\nFor example: If your main binary is called \"muffin\", the binary of the subcommand \"muffin list\" should be called \"muffin-list\". And all of them should be defined as such in your [package.json](https://docs.npmjs.com/files/package.json#bin).\n\n- **name:** Takes a string which defines the name of the command. This value will be used when outputting the help.\n- **description:** A short explanation of what the command shall be used for. Will be outputted along with help.\n- **init:** If a function was passed through at this parameter, args will call it instead of running the binary related to that command. The function receives three arguments:\n\n  ```js\n  function aCommand (name, sub, options) {\n    name // The name of the command\n    sub // The output of .sub\n    options // An object containing the options that have been used\n  }\n  ```\n\n  Using an initializer is currently only recommended if your command doesn't need special/different options than the binary in which you're defining it. The reason for this is that the \"options\" argument of the upper function will contain the options registered within the current binary.\n\n- **aliases:** Takes in an array of aliases which can be used to run the command.\n\n### .example(usage, description)\n\nRegister an example which will be shown when calling `help`\n\n- **usage:** Takes a string which defines your usage example command\n- **description:** A short explanation of what the example shall be used for. Will be outputted along with help.\n\n### .examples(list)\nTakes in an array of objects that are each defining an example that shall be registered. This is basically a minimalistic way to register a huge list of examples at once. Here's what each option object needs to look like:\n\n```js\n{\n  usage: 'args command -d',\n  description: 'Run the args command with the option -d'\n}\n```\n\n### .parse(argv, options)\n\nThis method takes the process' command line arguments (command and options) and uses the internal methods to get their values and assign them to the current instance of args. It needs to be run after all of the `.option` and `.command` calls. If you run it before them, the method calls after it won't take effect.\n\nThe methods also returns all options that have been used and their respective values.\n\n- **argv:** Should be the process' argv: `process.argv`, for example.\n- **options:** This parameter accepts an object containing several [configuration options](#configuration).\n\n### .sub\n\nThis property exposes all sub arguments that have been parsed by [mri](https://npmjs.com/mri). This is useful when trying to get the value after the command, for example:\n\n```bash\npizza ./directory\n```\n\nThe upper path can now be loaded by doing:\n\n```js\n// Contains \"./directory\"\nconst path = args.sub[0]\n```\n\nThis also works completely fine with sub commands: After you've registered a new command using `.command()`, you can easily check the following sub argument within its binary like mentioned above:\n\n```bash\npizza eat ./directory\n```\n\n### .showHelp()\n\nOutputs the usage information based on the options and comments you've registered so far and exits, if configured to do so.\n\n### .showVersion()\n\nOutputs the version and exits, if configured to do so.\n\n## Configuration\n\nBy default, the module already registers some default options and commands (e.g. \"version\" and \"help\"). These things have been implemented to make creating CLIs easier for beginners. However, they can also be disabled by taking advantage of the following properties:\n\n| Property | Description | Default&nbsp;value | Type |\n| -------- | ----------- | ------------------ | ---- |\n| exit | Automatically exits when help or version is rendered  | `{ help: true, version: true }` | Object |\n| help | Automatically render the usage information when running `help`, `-h` or `--help` | true | Boolean |\n| name | The name of your program to display in help | Name of script file | String |\n| version | Outputs the version tag of your package.json | true | Boolean |\n| usageFilter | Allows you to specify a filter through which the usage information will be passed before it gets outputted | null | Function |\n| value | Suffix for the \"Usage\" section of the usage information ([example](https://github.com/leo/args/issues/13)) | null | String |\n| mri | Additional parsing options to pass to mri, see [mri docs](https://github.com/lukeed/mri) for details | undefined | Object |\n| mainColor | Specify the main color for the output when running the `help` command. See [chalk docs](https://github.com/chalk/chalk) for available colors / modifiers. You can specify multiple colors / modifiers with an array. For example: `{mainColor: ['red', 'bold', 'underline']}` | yellow | String[Array] |\n| subColor | Specify the sub color for the output when running the `help` command. See [chalk docs](https://github.com/chalk/chalk) for available colors / modifiers. You can specify multiple colors / modifiers with an array. For example: `{subColor: ['dim', 'blue']}` | dim | String[Array] |\n\nYou can pass the configuration object as the second paramater of [.parse()](#parseargv-options).\n\n## Contribute\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of args, just link it to the dependencies: `npm link args`. Instead of the default one from npm, node will now use your clone of args!\n\nAs always, you can run the [AVA](https://github.com/sindresorhus/ava) and [ESLint](http://eslint.org) tests using: `npm test`\n\n## Special thanks\n\n... to [Dmitry Smolin](https://github.com/dimsmol) who donated the package name. If you're looking for the old content (before I've added my stuff) of the package, you can find it [here](https://github.com/dimsmol/args).\n\n## Authors\n\n- Leo Lamprecht ([@notquiteleo](https://twitter.com/notquiteleo))\n- Marvin Mieth ([@ntwcklng](https://twitter.com/ntwcklng))\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "camelcase": "5.0.0",
            "chalk": "2.4.2",
            "leven": "2.1.0",
            "mri": "1.1.4"
          },
          "path": "/path/to/project/packages/shared/node_modules/args",
          "error": "[Circular]",
          "extraneous": false
        },
        "chalk": {
          "_args": "[Circular]",
          "_from": "chalk@2.4.2",
          "_id": "chalk@2.4.2",
          "_integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "_location": "/chalk",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "chalk@2.4.2",
            "name": "chalk",
            "escapedName": "chalk",
            "rawSpec": "2.4.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.4.2"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "_spec": "2.4.2",
          "_where": "/path/to/project/packages/shared",
          "bugs": "[Circular]",
          "dependencies": {
            "ansi-styles": {
              "_args": [
                [
                  "ansi-styles@3.2.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "ansi-styles@3.2.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "ansi-styles@3.2.1",
              "_id": "ansi-styles@3.2.1",
              "_integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
              "_location": "/ansi-styles",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "ansi-styles@3.2.1",
                "name": "ansi-styles",
                "escapedName": "ansi-styles",
                "rawSpec": "3.2.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.2.1"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
              "_spec": "3.2.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "ava": {
                "require": "babel-polyfill"
              },
              "bugs": {
                "url": "https://github.com/chalk/ansi-styles/issues"
              },
              "dependencies": {
                "color-convert": {
                  "_args": [
                    [
                      "color-convert@1.9.3",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "color-convert@1.9.3",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "color-convert@1.9.3",
                  "_id": "color-convert@1.9.3",
                  "_integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
                  "_location": "/color-convert",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "color-convert@1.9.3",
                    "name": "color-convert",
                    "escapedName": "color-convert",
                    "rawSpec": "1.9.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.9.3"
                  },
                  "_requiredBy": [
                    "/ansi-styles"
                  ],
                  "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
                  "_spec": "1.9.3",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Heather Arthur",
                    "email": "fayearthur@gmail.com"
                  },
                  "bugs": {
                    "url": "https://github.com/Qix-/color-convert/issues"
                  },
                  "dependencies": {
                    "color-name": {
                      "_args": [
                        [
                          "color-name@1.1.3",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "color-name@1.1.3",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "color-name@1.1.3",
                      "_id": "color-name@1.1.3",
                      "_integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
                      "_location": "/color-name",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "color-name@1.1.3",
                        "name": "color-name",
                        "escapedName": "color-name",
                        "rawSpec": "1.1.3",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.1.3"
                      },
                      "_requiredBy": [
                        "/color-convert"
                      ],
                      "_resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
                      "_spec": "1.1.3",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "DY",
                        "email": "dfcreative@gmail.com"
                      },
                      "bugs": {
                        "url": "https://github.com/dfcreative/color-name/issues"
                      },
                      "description": "A list of color names and its values",
                      "homepage": "https://github.com/dfcreative/color-name",
                      "keywords": [
                        "color-name",
                        "color",
                        "color-keyword",
                        "keyword"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "color-name",
                      "repository": {
                        "type": "git",
                        "url": "git+ssh://git@github.com/dfcreative/color-name.git"
                      },
                      "scripts": {
                        "test": "node test.js"
                      },
                      "version": "1.1.3",
                      "readme": "A JSON with color names and its values. Based on http://dev.w3.org/csswg/css-color/#named-colors.\r\n\r\n[![NPM](https://nodei.co/npm/color-name.png?mini=true)](https://nodei.co/npm/color-name/)\r\n\r\n\r\n```js\r\nvar colors = require('color-name');\r\ncolors.red //[255,0,0]\r\n```\r\n\r\n<a href=\"LICENSE\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0c/MIT_logo.svg\" width=\"120\"/></a>\r\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "devDependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/color-name",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Plain color conversion functions",
                  "devDependencies": {
                    "chalk": "1.1.1",
                    "xo": "0.11.2"
                  },
                  "files": [
                    "index.js",
                    "conversions.js",
                    "css-keywords.js",
                    "route.js"
                  ],
                  "homepage": "https://github.com/Qix-/color-convert#readme",
                  "keywords": [
                    "color",
                    "colour",
                    "convert",
                    "converter",
                    "conversion",
                    "rgb",
                    "hsl",
                    "hsv",
                    "hwb",
                    "cmyk",
                    "ansi",
                    "ansi16"
                  ],
                  "license": "MIT",
                  "name": "color-convert",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/Qix-/color-convert.git"
                  },
                  "scripts": {
                    "pretest": "xo",
                    "test": "node test/basic.js"
                  },
                  "version": "1.9.3",
                  "xo": {
                    "rules": {
                      "default-case": 0,
                      "no-inline-comments": 0,
                      "operator-linebreak": 0
                    }
                  },
                  "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100);             // [96, 48, 59]\nconvert.keyword.rgb('blue');                // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels;     // 3\nvar cmykChannels = convert.cmyk.channels;   // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF');         // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF');     // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4);     // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67);      // '7B2D43'\nconvert.rgb.hex([123, 45, 67]);    // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "color-name": "1.1.3"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/color-convert",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "ANSI escape codes for styling strings in the terminal",
              "devDependencies": {
                "ava": "*",
                "babel-polyfill": "^6.23.0",
                "svg-term-cli": "^2.1.1",
                "xo": "*"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/chalk/ansi-styles#readme",
              "keywords": [
                "ansi",
                "styles",
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "string",
                "tty",
                "escape",
                "formatting",
                "rgb",
                "256",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text"
              ],
              "license": "MIT",
              "name": "ansi-styles",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/ansi-styles.git"
              },
              "scripts": {
                "screenshot": "svg-term --command='node screenshot' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor",
                "test": "xo && ava"
              },
              "version": "3.2.1",
              "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n\n## Install\n\n```\n$ npm install ansi-styles\n```\n\n\n## Usage\n\n```js\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n//       may be degraded to fit that color palette. This means terminals\n//       that do not support 16 million colors will best-match the\n//       original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);\n```\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Advanced usage\n\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `style.modifier`\n- `style.color`\n- `style.bgColor`\n\n###### Example\n\n```js\nconsole.log(style.color.green.open);\n```\n\nRaw escape codes (i.e. without the CSI escape prefix `\\u001B[` and render mode postfix `m`) are available under `style.codes`, which returns a `Map` with the open codes as keys and close codes as values.\n\n###### Example\n\n```js\nconsole.log(style.codes.get(36));\n//=> 39\n```\n\n\n## [256 / 16 million (TrueColor) support](https://gist.github.com/XVilka/8346728)\n\n`ansi-styles` uses the [`color-convert`](https://github.com/Qix-/color-convert) package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\n\nTo use these, call the associated conversion function with the intended output, for example:\n\n```js\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code\n```\n\n\n## Related\n\n- [ansi-escapes](https://github.com/sindresorhus/ansi-escapes) - ANSI escape codes for manipulating the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "color-convert": "^1.9.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/ansi-styles",
              "error": "[Circular]",
              "extraneous": false
            },
            "escape-string-regexp": {
              "_args": [
                [
                  "escape-string-regexp@1.0.5",
                  "/path/to/project/packages/shared"
                ],
                [
                  "escape-string-regexp@1.0.5",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "escape-string-regexp@1.0.5",
              "_id": "escape-string-regexp@1.0.5",
              "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
              "_location": "/escape-string-regexp",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "escape-string-regexp@1.0.5",
                "name": "escape-string-regexp",
                "escapedName": "escape-string-regexp",
                "rawSpec": "1.0.5",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.5"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
              "_spec": "1.0.5",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/escape-string-regexp/issues"
              },
              "description": "Escape RegExp special characters",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.8.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme",
              "keywords": [
                "escape",
                "regex",
                "regexp",
                "re",
                "regular",
                "expression",
                "string",
                "str",
                "special",
                "characters"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Boy Nicolai Appelman",
                  "email": "joshua@jbna.nl",
                  "url": "jbna.nl"
                }
              ],
              "name": "escape-string-regexp",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/escape-string-regexp.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.5",
              "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/escape-string-regexp",
              "error": "[Circular]",
              "extraneous": false
            },
            "supports-color": {
              "_args": [
                [
                  "supports-color@5.5.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "supports-color@5.5.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "supports-color@5.5.0",
              "_id": "supports-color@5.5.0",
              "_integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
              "_location": "/supports-color",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "supports-color@5.5.0",
                "name": "supports-color",
                "escapedName": "supports-color",
                "rawSpec": "5.5.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "5.5.0"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
              "_spec": "5.5.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "browser": "browser.js",
              "bugs": {
                "url": "https://github.com/chalk/supports-color/issues"
              },
              "dependencies": {
                "has-flag": {
                  "_args": [
                    [
                      "has-flag@3.0.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "has-flag@3.0.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "has-flag@3.0.0",
                  "_id": "has-flag@3.0.0",
                  "_integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
                  "_location": "/has-flag",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "has-flag@3.0.0",
                    "name": "has-flag",
                    "escapedName": "has-flag",
                    "rawSpec": "3.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.0.0"
                  },
                  "_requiredBy": [
                    "/supports-color"
                  ],
                  "_resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
                  "_spec": "3.0.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/has-flag/issues"
                  },
                  "description": "Check if argv has a specific flag",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=4"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/has-flag#readme",
                  "keywords": [
                    "has",
                    "check",
                    "detect",
                    "contains",
                    "find",
                    "flag",
                    "cli",
                    "command-line",
                    "argv",
                    "process",
                    "arg",
                    "args",
                    "argument",
                    "arguments",
                    "getopt",
                    "minimist",
                    "optimist"
                  ],
                  "license": "MIT",
                  "name": "has-flag",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/has-flag.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "3.0.0",
                  "readme": "# has-flag [![Build Status](https://travis-ci.org/sindresorhus/has-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/has-flag)\n\n> Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag\n\nCorrectly stops looking after an `--` argument terminator.\n\n\n## Install\n\n```\n$ npm install has-flag\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n```\n\n```\n$ node foo.js -f --unicorn --foo=bar -- --rainbow\n```\n\n\n## API\n\n### hasFlag(flag, [argv])\n\nReturns a boolean for whether the flag exists.\n\n#### flag\n\nType: `string`\n\nCLI flag to look for. The `--` prefix is optional.\n\n#### argv\n\nType: `string[]`<br>\nDefault: `process.argv`\n\nCLI arguments.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/has-flag",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Detect whether a terminal supports color",
              "devDependencies": {
                "ava": "^0.25.0",
                "import-fresh": "^2.0.0",
                "xo": "^0.20.0"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "index.js",
                "browser.js"
              ],
              "homepage": "https://github.com/chalk/supports-color#readme",
              "keywords": [
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "ansi",
                "styles",
                "tty",
                "rgb",
                "256",
                "shell",
                "xterm",
                "command-line",
                "support",
                "supports",
                "capability",
                "detect",
                "truecolor",
                "16m"
              ],
              "license": "MIT",
              "name": "supports-color",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/supports-color.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "5.5.0",
              "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install supports-color\n```\n\n\n## Usage\n\n```js\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n\tconsole.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n\tconsole.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n\tconsole.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n```\n\n\n## API\n\nReturns an `Object` with a `stdout` and `stderr` property for testing either streams. Each property is an `Object`, or `false` if color is not supported.\n\nThe `stdout`/`stderr` objects specifies a level of support for color through a `.level` property and a corresponding flag:\n\n- `.level = 1` and `.hasBasic = true`: Basic color support (16 colors)\n- `.level = 2` and `.has256 = true`: 256 color support\n- `.level = 3` and `.has16m = true`: Truecolor support (16 million colors)\n\n\n## Info\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "has-flag": "^3.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/supports-color",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Terminal string styling done right",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/chalk/chalk#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "chalk",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "types": "types/index.d.ts",
          "version": "2.4.2",
          "xo": "[Circular]",
          "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\n### [See what's new in Chalk 2](https://github.com/chalk/chalk/releases/tag/v2.0.0)\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" alt=\"\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~23,000 packages](https://www.npmjs.com/browse/depended/chalk) as of December 31, 2017\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n<a href=\"https://www.patreon.com/sindresorhus\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, as is the level (see `chalk.level`). However, if you'd like to simply enable/disable Chalk, you can do so via the `.enabled` property.\n\nChalk is enabled by default unless explicitly disabled via the constructor or `chalk.level` is `0`.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.level\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({level: 0});\n```\n\nLevels are as follows:\n\n0. All colors disabled\n1. Basic color support (16 colors)\n2. 256 color support\n3. Truecolor support (16 million colors)\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n- `visible` (Text is emitted only if enabled)\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(On Windows the bright version is used since normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n  There are {bold 5280 feet} in a mile.\n  In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model)  - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- `ansi16`\n- `ansi256`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://cmder.net/) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/chalk",
          "error": "[Circular]",
          "extraneous": false
        },
        "dateformat": {
          "_args": [
            [
              "dateformat@3.0.3",
              "/path/to/project/packages/shared"
            ],
            [
              "dateformat@3.0.3",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "dateformat@3.0.3",
          "_id": "dateformat@3.0.3",
          "_integrity": "sha512-jyCETtSl3VMZMWeRo7iY1FL19ges1t55hMo5yaam4Jrsm5EPL89UQkoQRyiI+Yf4k8r2ZpdngkV8hr1lIdjb3Q==",
          "_location": "/dateformat",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "dateformat@3.0.3",
            "name": "dateformat",
            "escapedName": "dateformat",
            "rawSpec": "3.0.3",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.0.3"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/dateformat/-/dateformat-3.0.3.tgz",
          "_spec": "3.0.3",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Steven Levithan"
          },
          "bugs": {
            "url": "https://github.com/felixge/node-dateformat/issues"
          },
          "contributors": [
            {
              "name": "Steven Levithan"
            },
            {
              "name": "Felix Geisendörfer",
              "email": "felix@debuggable.com"
            },
            {
              "name": "Christoph Tavan",
              "email": "dev@tavan.de"
            },
            {
              "name": "Jon Schlinkert",
              "url": "https://github.com/jonschlinkert"
            }
          ],
          "description": "A node.js package for Steven Levithan's excellent dateFormat() function.",
          "devDependencies": {
            "mocha": "2.0.1",
            "underscore": "1.7.0"
          },
          "engines": {
            "node": "*"
          },
          "homepage": "https://github.com/felixge/node-dateformat",
          "license": "MIT",
          "main": "lib/dateformat",
          "maintainers": "Felix Geisendörfer <felix@debuggable.com>",
          "name": "dateformat",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/felixge/node-dateformat.git"
          },
          "scripts": {
            "test": "mocha"
          },
          "version": "3.0.3",
          "readme": "# dateformat\n\nA node.js package for Steven Levithan's excellent [dateFormat()][dateformat] function.\n\n[![Build Status](https://travis-ci.org/felixge/node-dateformat.svg)](https://travis-ci.org/felixge/node-dateformat)\n\n## Modifications\n\n* Removed the `Date.prototype.format` method. Sorry folks, but extending native prototypes is for suckers.\n* Added a `module.exports = dateFormat;` statement at the bottom\n* Added the placeholder `N` to get the ISO 8601 numeric representation of the day of the week\n\n## Installation\n\n```bash\n$ npm install dateformat\n$ dateformat --help\n```\n\n## Usage\n\nAs taken from Steven's post, modified to match the Modifications listed above:\n```js\nvar dateFormat = require('dateformat');\nvar now = new Date();\n\n// Basic usage\ndateFormat(now, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\n// Saturday, June 9th, 2007, 5:46:21 PM\n\n// You can use one of several named masks\ndateFormat(now, \"isoDateTime\");\n// 2007-06-09T17:46:21\n\n// ...Or add your own\ndateFormat.masks.hammerTime = 'HH:MM! \"Can\\'t touch this!\"';\ndateFormat(now, \"hammerTime\");\n// 17:46! Can't touch this!\n\n// You can also provide the date as a string\ndateFormat(\"Jun 9 2007\", \"fullDate\");\n// Saturday, June 9, 2007\n\n// Note that if you don't include the mask argument,\n// dateFormat.masks.default is used\ndateFormat(now);\n// Sat Jun 09 2007 17:46:21\n\n// And if you don't include the date argument,\n// the current date and time is used\ndateFormat();\n// Sat Jun 09 2007 17:46:22\n\n// You can also skip the date argument (as long as your mask doesn't\n// contain any numbers), in which case the current date/time is used\ndateFormat(\"longTime\");\n// 5:46:22 PM EST\n\n// And finally, you can convert local time to UTC time. Simply pass in\n// true as an additional argument (no argument skipping allowed in this case):\ndateFormat(now, \"longTime\", true);\n// 10:46:21 PM UTC\n\n// ...Or add the prefix \"UTC:\" or \"GMT:\" to your mask.\ndateFormat(now, \"UTC:h:MM:ss TT Z\");\n// 10:46:21 PM UTC\n\n// You can also get the ISO 8601 week of the year:\ndateFormat(now, \"W\");\n// 42\n\n// and also get the ISO 8601 numeric representation of the day of the week:\ndateFormat(now,\"N\");\n// 6\n```\n\n### Mask options\n\nMask | Description\n---- | -----------\n`d` | Day of the month as digits; no leading zero for single-digit days.\n`dd` | Day of the month as digits; leading zero for single-digit days.\n`ddd` | Day of the week as a three-letter abbreviation.\n`dddd` | Day of the week as its full name.\n`m` | Month as digits; no leading zero for single-digit months.\n`mm` | Month as digits; leading zero for single-digit months.\n`mmm` | Month as a three-letter abbreviation.\n`mmmm` | Month as its full name.\n`yy` | Year as last two digits; leading zero for years less than 10.\n`yyyy` | Year represented by four digits.\n`h` | Hours; no leading zero for single-digit hours (12-hour clock).\n`hh` | Hours; leading zero for single-digit hours (12-hour clock).\n`H` | Hours; no leading zero for single-digit hours (24-hour clock).\n`HH` | Hours; leading zero for single-digit hours (24-hour clock).\n`M` | Minutes; no leading zero for single-digit minutes.\n`MM` | Minutes; leading zero for single-digit minutes.\n`N` | ISO 8601 numeric representation of the day of the week.\n`o` | GMT/UTC timezone offset, e.g. -0500 or +0230.\n`s` | Seconds; no leading zero for single-digit seconds.\n`ss` | Seconds; leading zero for single-digit seconds.\n`S` | The date's ordinal suffix (st, nd, rd, or th). Works well with `d`.\n`l` |  Milliseconds; gives 3 digits.\n`L` | Milliseconds; gives 2 digits.\n`t`\t| Lowercase, single-character time marker string: a or p.\n`tt` | Lowercase, two-character time marker string: am or pm.\n`T` | Uppercase, single-character time marker string: A or P.\n`TT` | Uppercase, two-character time marker string: AM or PM.\n`W` | ISO 8601 week number of the year, e.g. 42\n`Z` | US timezone abbreviation, e.g. EST or MDT. With non-US timezones or in the\n`'...'`, `\"...\"` | Literal character sequence. Surrounding quotes are removed.\n`UTC:` |\tMust be the first four characters of the mask. Converts the date from local time to UTC/GMT/Zulu time before applying the mask. The \"UTC:\" prefix is removed.\n\n### Named Formats\n\nName | Mask | Example\n---- | ---- | -------\n`default` | `ddd mmm dd yyyy HH:MM:ss` | Sat Jun 09 2007 17:46:21\n`shortDate` | `m/d/yy` | 6/9/07\n`mediumDate` | `mmm d, yyyy` | Jun 9, 2007\n`longDate` | `mmmm d, yyyy` | June 9, 2007\n`fullDate` | `dddd, mmmm d, yyyy` | Saturday, June 9, 2007\n`shortTime` | `h:MM TT` | 5:46 PM\n`mediumTime` | `h:MM:ss TT` | 5:46:21 PM\n`longTime` | `h:MM:ss TT Z` | 5:46:21 PM EST\n`isoDate` | `yyyy-mm-dd` | 2007-06-09\n`isoTime` | `HH:MM:ss` | 17:46:21\n`isoDateTime` | `yyyy-mm-dd'T'HH:MM:ss` | 2007-06-09T17:46:21\n`isoUtcDateTime` | `UTC:yyyy-mm-dd'T'HH:MM:ss'Z'` | 2007-06-09T22:46:21Z\n\n### Localization\nDay names, month names and the AM/PM indicators can be localized by\npassing an object with the necessary strings. For example:\n```js\nvar dateFormat = require('dateformat');\ndateFormat.i18n = {\n    dayNames: [\n        'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n        'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n        'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n};\n```\n> Notice that only one language is supported at a time and all strings\n> *must* be present in the new value.\n\n### Breaking change in 2.1.0\n- 2.1.0 was published with a breaking change, for those using localized strings.\n- 2.2.0 has been published without the change, to keep packages refering to ^2.0.0 to continue working. This is now branch v2_2.\n- 3.0.* contains the localized AM/PM change.\n\n## License\n\n(c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\n\n[dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\n[stevenlevithan]: http://stevenlevithan.com/\n",
          "readmeFilename": "Readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/dateformat",
          "error": "[Circular]",
          "extraneous": false
        },
        "fast-safe-stringify": {
          "_args": "[Circular]",
          "_from": "fast-safe-stringify@2.0.7",
          "_id": "fast-safe-stringify@2.0.7",
          "_integrity": "sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA==",
          "_location": "/fast-safe-stringify",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "fast-safe-stringify@2.0.7",
            "name": "fast-safe-stringify",
            "escapedName": "fast-safe-stringify",
            "rawSpec": "2.0.7",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.0.7"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz",
          "_spec": "2.0.7",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "contributors": "[Circular]",
          "dependencies": {},
          "description": "Safely and quickly serialize JavaScript objects",
          "devDependencies": "[Circular]",
          "homepage": "https://github.com/davidmarkclements/fast-safe-stringify#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "index.js",
          "name": "fast-safe-stringify",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "typings": "index",
          "version": "2.0.7",
          "readme": "# fast-safe-stringify\n\nSafe and fast serialization alternative to [JSON.stringify][].\n\nGracefully handles circular structures instead of throwing.\n\nProvides a deterministic (\"stable\") version as well that will also gracefully\nhandle circular structures. See the example below for further information.\n\n## Usage\n\nThe same as [JSON.stringify][].\n\n`stringify(value[, replacer[, space]])`\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { a: 1 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"a\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n\nfunction replacer(key, value) {\n  console.log('Key:', JSON.stringify(key), 'Value:', JSON.stringify(value))\n  // Remove the circular structure\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\nconst serialized = safeStringify(o, replacer, 2)\n// Key: \"\" Value: {\"a\":1,\"o\":\"[Circular]\"}\n// Key: \"a\" Value: 1\n// Key: \"o\" Value: \"[Circular]\"\nconsole.log(serialized)\n// {\n//  \"a\": 1\n// }\n```\n\nUsing the deterministic version also works the same:\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { b: 1, a: 0 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"b\":1,\"a\":0,\"o\":\"[Circular]\"}'\nconsole.log(safeStringify.stableStringify(o))\n// '{\"a\":0,\"b\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n```\n\nA faster and side-effect free implementation is available in the\n[safe-stable-stringify][] module. However it is still considered experimental\ndue to a new and more complex implementation.\n\n## Differences to JSON.stringify\n\nIn general the behavior is identical to [JSON.stringify][]. The [`replacer`][]\nand [`space`][] options are also available.\n\nA few exceptions exist to [JSON.stringify][] while using [`toJSON`][] or\n[`replacer`][]:\n\n### Regular safe stringify\n\n- Manipulating a circular structure of the passed in value in a `toJSON` or the\n  `replacer` is not possible! It is possible for any other value and property.\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\n### Deterministic (\"stable\") safe stringify\n\n- Manipulating the input object either in a [`toJSON`][] or the [`replacer`][]\n  function will not have any effect on the output. The output entirely relies on\n  the shape the input value had at the point passed to the stringify function!\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\nA side effect free variation without these limitations can be found as well\n([`safe-stable-stringify`][]). It is also faster than the current\nimplementation. It is still considered experimental due to a new and more\ncomplex implementation.\n\n## Benchmarks\n\nAlthough not JSON, the Node.js `util.inspect` method can be used for similar\npurposes (e.g. logging) and also handles circular references.\n\nHere we compare `fast-safe-stringify` with some alternatives:\n(Lenovo T450s with a i7-5600U CPU using Node.js 8.9.4)\n\n```md\nfast-safe-stringify:   simple object x 1,121,497 ops/sec ±0.75% (97 runs sampled)\nfast-safe-stringify:   circular      x 560,126 ops/sec ±0.64% (96 runs sampled)\nfast-safe-stringify:   deep          x 32,472 ops/sec ±0.57% (95 runs sampled)\nfast-safe-stringify:   deep circular x 32,513 ops/sec ±0.80% (92 runs sampled)\n\nutil.inspect:          simple object x 272,837 ops/sec ±1.48% (90 runs sampled)\nutil.inspect:          circular      x 116,896 ops/sec ±1.19% (95 runs sampled)\nutil.inspect:          deep          x 19,382 ops/sec ±0.66% (92 runs sampled)\nutil.inspect:          deep circular x 18,717 ops/sec ±0.63% (96 runs sampled)\n\njson-stringify-safe:   simple object x 233,621 ops/sec ±0.97% (94 runs sampled)\njson-stringify-safe:   circular      x 110,409 ops/sec ±1.85% (95 runs sampled)\njson-stringify-safe:   deep          x 8,705 ops/sec ±0.87% (96 runs sampled)\njson-stringify-safe:   deep circular x 8,336 ops/sec ±2.20% (93 runs sampled)\n```\n\nFor stable stringify comparisons, see the performance benchmarks in the\n[`safe-stable-stringify`][] readme.\n\n## Protip\n\nWhether `fast-safe-stringify` or alternatives are used: if the use case\nconsists of deeply nested objects without circular references the following\npattern will give best results.\nShallow or one level nested objects on the other hand will slow down with it.\nIt is entirely dependant on the use case.\n\n```js\nconst stringify = require('fast-safe-stringify')\n\nfunction tryJSONStringify (obj) {\n  try { return JSON.stringify(obj) } catch (_) {}\n}\n\nconst serializedString = tryJSONStringify(deep) || stringify(deep)\n```\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\n## License\n\nMIT\n\n[`replacer`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20replacer%20parameter\n[`safe-stable-stringify`]: https://github.com/BridgeAR/safe-stable-stringify\n[`space`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20space%20argument\n[`toJSON`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior\n[benchmark]: https://github.com/epoberezkin/fast-json-stable-stringify/blob/67f688f7441010cfef91a6147280cc501701e83b/benchmark\n[JSON.stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/fast-safe-stringify",
          "error": "[Circular]",
          "extraneous": false,
          "_deduped": "fast-safe-stringify"
        },
        "jmespath": {
          "_args": [
            [
              "jmespath@0.15.0",
              "/path/to/project/packages/shared"
            ],
            [
              "jmespath@0.15.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "jmespath@0.15.0",
          "_id": "jmespath@0.15.0",
          "_integrity": "sha1-o/Iiqarp+Wb10nx5ZRDigJF2Qhc=",
          "_location": "/jmespath",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "jmespath@0.15.0",
            "name": "jmespath",
            "escapedName": "jmespath",
            "rawSpec": "0.15.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "0.15.0"
          },
          "_requiredBy": [
            "/aws-sdk",
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/jmespath/-/jmespath-0.15.0.tgz",
          "_spec": "0.15.0",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "James Saryerwinnie",
            "email": "js@jamesls.com",
            "url": "http://jamesls.com/"
          },
          "bugs": {
            "url": "http://github.com/jmespath/jmespath.js/issues"
          },
          "contributors": [],
          "dependencies": {},
          "description": "JMESPath implementation in javascript",
          "devDependencies": {
            "grunt": "^0.4.5",
            "grunt-contrib-jshint": "^0.11.0",
            "grunt-contrib-uglify": "^0.11.1",
            "grunt-eslint": "^17.3.1",
            "mocha": "^2.1.0"
          },
          "directories": {
            "test": "test"
          },
          "engines": {
            "node": ">= 0.6.0"
          },
          "homepage": "https://github.com/jmespath/jmespath.js",
          "keywords": [
            "jmespath",
            "jsonpath",
            "json",
            "xpath"
          ],
          "licenses": [
            {
              "type": "Apache 2.0",
              "url": "http://github.com/jmespath/jmespath.js/raw/master/LICENSE"
            }
          ],
          "main": "jmespath.js",
          "name": "jmespath",
          "repository": {
            "type": "git",
            "url": "git://github.com/jmespath/jmespath.js.git"
          },
          "scripts": {
            "test": "mocha test/"
          },
          "version": "0.15.0",
          "readme": "# jmespath.js\n\n[![Build Status](https://travis-ci.org/jmespath/jmespath.js.png?branch=master)](https://travis-ci.org/jmespath/jmespath.js)\n\njmespath.js is a javascript implementation of JMESPath,\nwhich is a query language for JSON.  It will take a JSON\ndocument and transform it into another JSON document\nthrough a JMESPath expression.\n\nUsing jmespath.js is really easy.  There's a single function\nyou use, `jmespath.search`:\n\n\n```\n> var jmespath = require('jmespath');\n> jmespath.search({foo: {bar: {baz: [0, 1, 2, 3, 4]}}}, \"foo.bar.baz[2]\")\n2\n```\n\nIn the example we gave the ``search`` function input data of\n`{foo: {bar: {baz: [0, 1, 2, 3, 4]}}}` as well as the JMESPath\nexpression `foo.bar.baz[2]`, and the `search` function evaluated\nthe expression against the input data to produce the result ``2``.\n\nThe JMESPath language can do a lot more than select an element\nfrom a list.  Here are a few more examples:\n\n```\n> jmespath.search({foo: {bar: {baz: [0, 1, 2, 3, 4]}}}, \"foo.bar\")\n{ baz: [ 0, 1, 2, 3, 4 ] }\n\n> jmespath.search({\"foo\": [{\"first\": \"a\", \"last\": \"b\"},\n                           {\"first\": \"c\", \"last\": \"d\"}]},\n                  \"foo[*].first\")\n[ 'a', 'c' ]\n\n> jmespath.search({\"foo\": [{\"age\": 20}, {\"age\": 25},\n                           {\"age\": 30}, {\"age\": 35},\n                           {\"age\": 40}]},\n                  \"foo[?age > `30`]\")\n[ { age: 35 }, { age: 40 } ]\n```\n\n## More Resources\n\nThe example above only show a small amount of what\na JMESPath expression can do.  If you want to take a\ntour of the language, the *best* place to go is the\n[JMESPath Tutorial](http://jmespath.org/tutorial.html).\n\nOne of the best things about JMESPath is that it is\nimplemented in many different programming languages including\npython, ruby, php, lua, etc.  To see a complete list of libraries,\ncheck out the [JMESPath libraries page](http://jmespath.org/libraries.html).\n\nAnd finally, the full JMESPath specification can be found\non the [JMESPath site](http://jmespath.org/specification.html).\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/jmespath",
          "error": "[Circular]",
          "extraneous": false
        },
        "joycon": {
          "_args": [
            [
              "joycon@2.2.5",
              "/path/to/project/packages/shared"
            ],
            [
              "joycon@2.2.5",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "joycon@2.2.5",
          "_id": "joycon@2.2.5",
          "_integrity": "sha512-YqvUxoOcVPnCp0VU1/56f+iKSdvIRJYPznH22BdXV3xMk75SFXhWeJkZ8C9XxUWt1b5x2X1SxuFygW1U0FmkEQ==",
          "_location": "/joycon",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "joycon@2.2.5",
            "name": "joycon",
            "escapedName": "joycon",
            "rawSpec": "2.2.5",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.2.5"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/joycon/-/joycon-2.2.5.tgz",
          "_spec": "2.2.5",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "egoist",
            "email": "0x142857@gmail.com"
          },
          "bugs": {
            "url": "https://github.com/egoist/joycon/issues"
          },
          "description": "Load config with ease.",
          "devDependencies": {
            "@babel/cli": "^7.0.0",
            "@babel/core": "^7.0.0",
            "@babel/preset-env": "^7.0.0",
            "@types/json5": "^0.0.29",
            "@types/node": "^9.6.5",
            "babel-core": "^7.0.0-bridge.0",
            "babel-jest": "^22.4.3",
            "babel-plugin-sync": "^0.1.0",
            "eslint-config-rem": "^3.0.0",
            "jest-cli": "^22.4.3",
            "xo": "^0.18.0"
          },
          "engines": {
            "node": ">=6"
          },
          "files": [
            "lib",
            "types/index.d.ts"
          ],
          "homepage": "https://github.com/egoist/joycon#readme",
          "jest": {
            "testEnvironment": "node"
          },
          "license": "MIT",
          "main": "lib/index.js",
          "name": "joycon",
          "repository": {
            "url": "git+https://github.com/egoist/joycon.git",
            "type": "git"
          },
          "scripts": {
            "build": "babel src -d lib --no-comments",
            "lint": "xo",
            "prepublishOnly": "npm run build",
            "test": "npm run lint && jest"
          },
          "types": "types/index.d.ts",
          "version": "2.2.5",
          "xo": {
            "extends": "rem",
            "envs": [
              "jest"
            ],
            "ignores": [
              "lib/**"
            ]
          },
          "readme": "\n# joycon\n\n[![NPM version](https://img.shields.io/npm/v/joycon.svg?style=flat)](https://npmjs.com/package/joycon) [![NPM downloads](https://img.shields.io/npm/dm/joycon.svg?style=flat)](https://npmjs.com/package/joycon) [![install size](https://packagephobia.now.sh/badge?p=joycon@2.0.0)](https://packagephobia.now.sh/result?p=joycon@2.0.0) [![CircleCI](https://circleci.com/gh/egoist/joycon/tree/master.svg?style=shield)](https://circleci.com/gh/egoist/joycon/tree/master)  [![donate](https://img.shields.io/badge/$-donate-ff69b4.svg?maxAge=2592000&style=flat)](https://github.com/egoist/donate) [![chat](https://img.shields.io/badge/chat-on%20discord-7289DA.svg?style=flat)](https://chat.egoist.moe)\n\n## Differences with [cosmiconfig](https://github.com/davidtheclark/cosmiconfig)?\n\nJoyCon is zero-dependency but feature-complete.\n\n## Install\n\n```bash\nyarn add joycon\n```\n\n## Usage\n\n```js\nconst JoyCon = require('joycon')\n\nconst joycon = new JoyCon()\n\njoycon.load(['package-lock.json', 'yarn.lock'])\n.then(result => {\n  // result is {} when files do not exist\n  // otherwise { path, data }\n})\n```\n\nBy default only `.js` and `.json` file are parsed, otherwise raw data will be returned, so you can add custom loader to parse them:\n\n```js\nconst joycon = new JoyCon()\n\njoycon.addLoader({\n  test: /\\.toml$/,\n  load(filepath) {\n    return require('toml').parse(filepath)\n  }\n})\n\njoycon.load(['cargo.toml'])\n```\n\n## API\n\n### constructor([options])\n\n#### options\n\n##### files\n\n- Type: `string[]`\n\nThe files to search.\n\n##### cwd\n\nThe directory to search files.\n\n##### stopDir\n\nThe directory to stop searching.\n\n##### packageKey\n\nYou can load config from certain property in a `package.json` file. For example, when you set `packageKey: 'babel'`, it will load the `babel` property in `package.json` instead of the entire data.\n\n##### parseJSON\n\n- Type: `(str: string) => any`\n- Default: `JSON.parse`\n\nThe function used to parse JSON string.\n\n### resolve([files], [cwd], [stopDir])\n### resolve([options])\n\n`files` defaults to `options.files`.\n\n`cwd` defaults to `options.cwd`.\n\n`stopDir` defaults to `options.stopDir` then `path.parse(cwd).root`.\n\nIf using a single object `options`, it will be the same as constructor options.\n\nSearch files and resolve the path of the file we found.\n\nThere's also `.resolveSync` method.\n\n### load(...args)\n\nThe signature is the same as [resolve](#resolvefiles-cwd-stopdir).\n\nSearch files and resolve `{ path, data }` of the file we found.\n\nThere's also `.loadSync` method.\n\n### addLoader(Loader)\n\n```typescript\ninterface Loader {\n  name?: string\n  test: RegExp\n  load(filepath: string)?: Promise<any>\n  loadSync(filepath: string)?: any\n}\n```\n\nAt least one of `load` and `loadSync` is required, depending on whether you're calling the synchonous methods or not.\n\n### removeLoader(name)\n\nRemove loaders by loader name.\n\n### clearCache()\n\nEach JoyCon instance uses its own cache.\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## Author\n\n**joycon** © [egoist](https://github.com/egoist), Released under the [MIT](./LICENSE) License.<br>\nAuthored and maintained by egoist with help from contributors ([list](https://github.com/egoist/joycon/contributors)).\n\n> [github.com/egoist](https://github.com/egoist) · GitHub [@egoist](https://github.com/egoist) · Twitter [@_egoistlily](https://twitter.com/_egoistlily)\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/joycon",
          "error": "[Circular]",
          "extraneous": false
        },
        "pump": {
          "_args": "[Circular]",
          "_from": "pump@3.0.0",
          "_id": "pump@3.0.0",
          "_integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "_location": "/pump",
          "_phantomChildren": "[Circular]",
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "pump@3.0.0",
            "name": "pump",
            "escapedName": "pump",
            "rawSpec": "3.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.0.0"
          },
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "_spec": "3.0.0",
          "_where": "/path/to/project/packages/shared",
          "author": "[Circular]",
          "browser": "[Circular]",
          "bugs": "[Circular]",
          "dependencies": {
            "end-of-stream": {
              "_args": [
                [
                  "end-of-stream@1.4.4",
                  "/path/to/project/packages/shared"
                ],
                [
                  "end-of-stream@1.4.4",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "end-of-stream@1.4.4",
              "_id": "end-of-stream@1.4.4",
              "_integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
              "_location": "/end-of-stream",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "end-of-stream@1.4.4",
                "name": "end-of-stream",
                "escapedName": "end-of-stream",
                "rawSpec": "1.4.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.4.4"
              },
              "_requiredBy": [
                "/pump"
              ],
              "_resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
              "_spec": "1.4.4",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Mathias Buus",
                "email": "mathiasbuus@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/mafintosh/end-of-stream/issues"
              },
              "dependencies": {
                "once": {
                  "_args": [
                    [
                      "once@1.4.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "once@1.4.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "once@1.4.0",
                  "_id": "once@1.4.0",
                  "_integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
                  "_location": "/once",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "once@1.4.0",
                    "name": "once",
                    "escapedName": "once",
                    "rawSpec": "1.4.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.4.0"
                  },
                  "_requiredBy": [
                    "/end-of-stream",
                    "/pump"
                  ],
                  "_resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
                  "_spec": "1.4.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/isaacs/once/issues"
                  },
                  "dependencies": {},
                  "description": "Run a function exactly one time",
                  "devDependencies": {
                    "tap": "^7.0.1"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "files": [
                    "once.js"
                  ],
                  "homepage": "https://github.com/isaacs/once#readme",
                  "keywords": [
                    "once",
                    "function",
                    "one",
                    "single"
                  ],
                  "license": "ISC",
                  "main": "once.js",
                  "name": "once",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/once.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "1.4.0",
                  "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "wrappy": "1"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/once",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "once"
                }
              },
              "description": "Call a callback when a readable/writable/duplex stream has completed or failed.",
              "devDependencies": {
                "tape": "^4.11.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/mafintosh/end-of-stream",
              "keywords": [
                "stream",
                "streams",
                "callback",
                "finish",
                "close",
                "end",
                "wait"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "end-of-stream",
              "repository": {
                "type": "git",
                "url": "git://github.com/mafintosh/end-of-stream.git"
              },
              "scripts": {
                "test": "node test.js"
              },
              "version": "1.4.4",
              "readme": "# end-of-stream\n\nA node module that calls a callback when a readable/writable/duplex stream has completed or failed.\n\n\tnpm install end-of-stream\n\n[![Build status](https://travis-ci.org/mafintosh/end-of-stream.svg?branch=master)](https://travis-ci.org/mafintosh/end-of-stream)\n\n## Usage\n\nSimply pass a stream and a callback to the `eos`.\nBoth legacy streams, streams2 and stream3 are supported.\n\n``` js\nvar eos = require('end-of-stream');\n\neos(readableStream, function(err) {\n  // this will be set to the stream instance\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended', this === readableStream);\n});\n\neos(writableStream, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has finished', this === writableStream);\n});\n\neos(duplexStream, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended and finished', this === duplexStream);\n});\n\neos(duplexStream, {readable:false}, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has finished but might still be readable');\n});\n\neos(duplexStream, {writable:false}, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended but might still be writable');\n});\n\neos(readableStream, {error:false}, function(err) {\n\t// do not treat emit('error', err) as a end-of-stream\n});\n```\n\n## License\n\nMIT\n\n## Related\n\n`end-of-stream` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "once": "^1.4.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/end-of-stream",
              "error": "[Circular]",
              "extraneous": false
            },
            "once": {
              "_args": "[Circular]",
              "_from": "once@1.4.0",
              "_id": "once@1.4.0",
              "_integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
              "_location": "/once",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "once@1.4.0",
                "name": "once",
                "escapedName": "once",
                "rawSpec": "1.4.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.4.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
              "_spec": "1.4.0",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {
                "wrappy": {
                  "_args": [
                    [
                      "wrappy@1.0.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "wrappy@1.0.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "wrappy@1.0.2",
                  "_id": "wrappy@1.0.2",
                  "_integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
                  "_location": "/wrappy",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "wrappy@1.0.2",
                    "name": "wrappy",
                    "escapedName": "wrappy",
                    "rawSpec": "1.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.2"
                  },
                  "_requiredBy": [
                    "/once"
                  ],
                  "_resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
                  "_spec": "1.0.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/npm/wrappy/issues"
                  },
                  "dependencies": {},
                  "description": "Callback wrapping utility",
                  "devDependencies": {
                    "tap": "^2.3.1"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "files": [
                    "wrappy.js"
                  ],
                  "homepage": "https://github.com/npm/wrappy",
                  "license": "ISC",
                  "main": "wrappy.js",
                  "name": "wrappy",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/npm/wrappy.git"
                  },
                  "scripts": {
                    "test": "tap --coverage test/*.js"
                  },
                  "version": "1.0.2",
                  "readme": "# wrappy\n\nCallback wrapping utility\n\n## USAGE\n\n```javascript\nvar wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/wrappy",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Run a function exactly one time",
              "devDependencies": "[Circular]",
              "directories": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/isaacs/once#readme",
              "keywords": "[Circular]",
              "license": "ISC",
              "main": "once.js",
              "name": "once",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.4.0",
              "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/once",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "pipe streams together and close all of them if one of them closes",
          "homepage": "https://github.com/mafintosh/pump#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "pump",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "3.0.0",
          "readme": "# pump\n\npump is a small node module that pipes streams together and destroys all of them if one of them closes.\n\n```\nnpm install pump\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/pump.svg?style=flat)](http://travis-ci.org/mafintosh/pump)\n\n## What problem does it solve?\n\nWhen using standard `source.pipe(dest)` source will _not_ be destroyed if dest emits close or an error.\nYou are also not able to provide a callback to tell when then pipe has finished.\n\npump does these two things for you\n\n## Usage\n\nSimply pass the streams you want to pipe together to pump and add an optional callback\n\n``` js\nvar pump = require('pump')\nvar fs = require('fs')\n\nvar source = fs.createReadStream('/dev/random')\nvar dest = fs.createWriteStream('/dev/null')\n\npump(source, dest, function(err) {\n  console.log('pipe finished', err)\n})\n\nsetTimeout(function() {\n  dest.destroy() // when dest is closed pump will destroy source\n}, 1000)\n```\n\nYou can use pump to pipe more than two streams together as well\n\n``` js\nvar transform = someTransformStream()\n\npump(source, transform, anotherTransform, dest, function(err) {\n  console.log('pipe finished', err)\n})\n```\n\nIf `source`, `transform`, `anotherTransform` or `dest` closes all of them will be destroyed.\n\nSimilarly to `stream.pipe()`, `pump()` returns the last stream passed in, so you can do:\n\n```\nreturn pump(s1, s2) // returns s2\n```\n\nIf you want to return a stream that combines *both* s1 and s2 to a single stream use\n[pumpify](https://github.com/mafintosh/pumpify) instead.\n\n## License\n\nMIT\n\n## Related\n\n`pump` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
          "readmeFilename": "README.md",
          "devDependencies": "[Circular]",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/path/to/project/packages/shared/node_modules/pump",
          "error": "[Circular]",
          "extraneous": false
        },
        "readable-stream": {
          "_args": [
            [
              "readable-stream@3.6.0",
              "/path/to/project/packages/shared"
            ],
            [
              "readable-stream@3.6.0",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "readable-stream@3.6.0",
          "_id": "readable-stream@3.6.0",
          "_integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
          "_location": "/readable-stream",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "readable-stream@3.6.0",
            "name": "readable-stream",
            "escapedName": "readable-stream",
            "rawSpec": "3.6.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.6.0"
          },
          "_requiredBy": [
            "/pino-pretty",
            "/split2"
          ],
          "_resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
          "_spec": "3.6.0",
          "_where": "/path/to/project/packages/shared",
          "browser": {
            "util": false,
            "worker_threads": false,
            "./errors": "./errors-browser.js",
            "./readable.js": "./readable-browser.js",
            "./lib/internal/streams/from.js": "./lib/internal/streams/from-browser.js",
            "./lib/internal/streams/stream.js": "./lib/internal/streams/stream-browser.js"
          },
          "bugs": {
            "url": "https://github.com/nodejs/readable-stream/issues"
          },
          "dependencies": {
            "inherits": {
              "_args": [
                [
                  "inherits@2.0.4",
                  "/path/to/project/packages/shared"
                ],
                [
                  "inherits@2.0.4",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "inherits@2.0.4",
              "_id": "inherits@2.0.4",
              "_integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
              "_location": "/inherits",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "inherits@2.0.4",
                "name": "inherits",
                "escapedName": "inherits",
                "rawSpec": "2.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.4"
              },
              "_requiredBy": [
                "/readable-stream"
              ],
              "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
              "_spec": "2.0.4",
              "_where": "/path/to/project/packages/shared",
              "browser": "./inherits_browser.js",
              "bugs": {
                "url": "https://github.com/isaacs/inherits/issues"
              },
              "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
              "devDependencies": {
                "tap": "^14.2.4"
              },
              "files": [
                "inherits.js",
                "inherits_browser.js"
              ],
              "homepage": "https://github.com/isaacs/inherits#readme",
              "keywords": [
                "inheritance",
                "class",
                "klass",
                "oop",
                "object-oriented",
                "inherits",
                "browser",
                "browserify"
              ],
              "license": "ISC",
              "main": "./inherits.js",
              "name": "inherits",
              "repository": {
                "type": "git",
                "url": "git://github.com/isaacs/inherits.git"
              },
              "scripts": {
                "test": "tap"
              },
              "version": "2.0.4",
              "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/inherits",
              "error": "[Circular]",
              "extraneous": false
            },
            "string_decoder": {
              "_args": [
                [
                  "string_decoder@1.3.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "string_decoder@1.3.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "string_decoder@1.3.0",
              "_id": "string_decoder@1.3.0",
              "_integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
              "_location": "/string_decoder",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "string_decoder@1.3.0",
                "name": "string_decoder",
                "escapedName": "string_decoder",
                "rawSpec": "1.3.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.3.0"
              },
              "_requiredBy": [
                "/readable-stream"
              ],
              "_resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
              "_spec": "1.3.0",
              "_where": "/path/to/project/packages/shared",
              "bugs": {
                "url": "https://github.com/nodejs/string_decoder/issues"
              },
              "dependencies": {
                "safe-buffer": {
                  "_args": [
                    [
                      "safe-buffer@5.2.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "safe-buffer@5.2.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "safe-buffer@5.2.0",
                  "_id": "safe-buffer@5.2.0",
                  "_integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
                  "_location": "/safe-buffer",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "safe-buffer@5.2.0",
                    "name": "safe-buffer",
                    "escapedName": "safe-buffer",
                    "rawSpec": "5.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.2.0"
                  },
                  "_requiredBy": [
                    "/string_decoder"
                  ],
                  "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
                  "_spec": "5.2.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Feross Aboukhadijeh",
                    "email": "feross@feross.org",
                    "url": "http://feross.org"
                  },
                  "bugs": {
                    "url": "https://github.com/feross/safe-buffer/issues"
                  },
                  "description": "Safer Node.js Buffer API",
                  "devDependencies": {
                    "standard": "*",
                    "tape": "^4.0.0"
                  },
                  "homepage": "https://github.com/feross/safe-buffer",
                  "keywords": [
                    "buffer",
                    "buffer allocate",
                    "node security",
                    "safe",
                    "safe-buffer",
                    "security",
                    "uninitialized"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "safe-buffer",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/feross/safe-buffer.git"
                  },
                  "scripts": {
                    "test": "standard && tape test/*.js"
                  },
                  "types": "index.d.ts",
                  "version": "5.2.0",
                  "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n[Get supported safe-buffer with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-safe-buffer?utm_source=npm-safe-buffer&utm_medium=referral&utm_campaign=readme)\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/safe-buffer",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "The string_decoder module from Node core",
              "devDependencies": {
                "babel-polyfill": "^6.23.0",
                "core-util-is": "^1.0.2",
                "inherits": "^2.0.3",
                "tap": "~0.4.8"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://github.com/nodejs/string_decoder",
              "keywords": [
                "string",
                "decoder",
                "browser",
                "browserify"
              ],
              "license": "MIT",
              "main": "lib/string_decoder.js",
              "name": "string_decoder",
              "repository": {
                "type": "git",
                "url": "git://github.com/nodejs/string_decoder.git"
              },
              "scripts": {
                "ci": "tap test/parallel/*.js test/ours/*.js --tap | tee test.tap && node test/verify-dependencies.js",
                "test": "tap test/parallel/*.js && node test/verify-dependencies"
              },
              "version": "1.3.0",
              "readme": "# string_decoder\n\n***Node-core v8.9.4 string_decoder for userland***\n\n\n[![NPM](https://nodei.co/npm/string_decoder.png?downloads=true&downloadRank=true)](https://nodei.co/npm/string_decoder/)\n[![NPM](https://nodei.co/npm-dl/string_decoder.png?&months=6&height=3)](https://nodei.co/npm/string_decoder/)\n\n\n```bash\nnpm install --save string_decoder\n```\n\n***Node-core string_decoder for userland***\n\nThis package is a mirror of the string_decoder implementation in Node-core.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v8.9.4/docs/api/).\n\nAs of version 1.0.0 **string_decoder** uses semantic versioning.\n\n## Previous versions\n\nPrevious version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10.\n\n## Update\n\nThe *build/* directory contains a build script that will scrape the source from the [nodejs/node](https://github.com/nodejs/node) repo given a specific Node version.\n\n## Streams Working Group\n\n`string_decoder` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\nSee [readable-stream](https://github.com/nodejs/readable-stream) for\nmore details.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "safe-buffer": "~5.2.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/string_decoder",
              "error": "[Circular]",
              "extraneous": false
            },
            "util-deprecate": {
              "_args": [
                [
                  "util-deprecate@1.0.2",
                  "/path/to/project/packages/shared"
                ],
                [
                  "util-deprecate@1.0.2",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "util-deprecate@1.0.2",
              "_id": "util-deprecate@1.0.2",
              "_integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
              "_location": "/util-deprecate",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "util-deprecate@1.0.2",
                "name": "util-deprecate",
                "escapedName": "util-deprecate",
                "rawSpec": "1.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.2"
              },
              "_requiredBy": [
                "/readable-stream"
              ],
              "_resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
              "_spec": "1.0.2",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Nathan Rajlich",
                "email": "nathan@tootallnate.net",
                "url": "http://n8.io/"
              },
              "browser": "browser.js",
              "bugs": {
                "url": "https://github.com/TooTallNate/util-deprecate/issues"
              },
              "description": "The Node.js `util.deprecate()` function with browser support",
              "homepage": "https://github.com/TooTallNate/util-deprecate",
              "keywords": [
                "util",
                "deprecate",
                "browserify",
                "browser",
                "node"
              ],
              "license": "MIT",
              "main": "node.js",
              "name": "util-deprecate",
              "repository": {
                "type": "git",
                "url": "git://github.com/TooTallNate/util-deprecate.git"
              },
              "scripts": {
                "test": "echo \"Error: no test specified\" && exit 1"
              },
              "version": "1.0.2",
              "readme": "util-deprecate\n==============\n### The Node.js `util.deprecate()` function with browser support\n\nIn Node.js, this module simply re-exports the `util.deprecate()` function.\n\nIn the web browser (i.e. via browserify), a browser-specific implementation\nof the `util.deprecate()` function is used.\n\n\n## API\n\nA `deprecate()` function is the only thing exposed by this module.\n\n``` javascript\n// setup:\nexports.foo = deprecate(foo, 'foo() is deprecated, use bar() instead');\n\n\n// users see:\nfoo();\n// foo() is deprecated, use bar() instead\nfoo();\nfoo();\n```\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Nathan Rajlich <nathan@tootallnate.net>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/util-deprecate",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Streams3, a user-land copy of the stream library from Node.js",
          "devDependencies": {
            "@babel/cli": "^7.2.0",
            "@babel/core": "^7.2.0",
            "@babel/polyfill": "^7.0.0",
            "@babel/preset-env": "^7.2.0",
            "airtap": "0.0.9",
            "assert": "^1.4.0",
            "bl": "^2.0.0",
            "deep-strict-equal": "^0.2.0",
            "events.once": "^2.0.2",
            "glob": "^7.1.2",
            "gunzip-maybe": "^1.4.1",
            "hyperquest": "^2.1.3",
            "lolex": "^2.6.0",
            "nyc": "^11.0.0",
            "pump": "^3.0.0",
            "rimraf": "^2.6.2",
            "tap": "^12.0.0",
            "tape": "^4.9.0",
            "tar-fs": "^1.16.2",
            "util-promisify": "^2.1.0"
          },
          "engines": {
            "node": ">= 6"
          },
          "homepage": "https://github.com/nodejs/readable-stream#readme",
          "keywords": [
            "readable",
            "stream",
            "pipe"
          ],
          "license": "MIT",
          "main": "readable.js",
          "name": "readable-stream",
          "nyc": {
            "include": [
              "lib/**.js"
            ]
          },
          "repository": {
            "type": "git",
            "url": "git://github.com/nodejs/readable-stream.git"
          },
          "scripts": {
            "ci": "TAP=1 tap --no-esm test/parallel/*.js test/ours/*.js | tee test.tap",
            "cover": "nyc npm test",
            "report": "nyc report --reporter=lcov",
            "test": "tap -J --no-esm test/parallel/*.js test/ours/*.js",
            "test-browser-local": "airtap --open --local -- test/browser.js",
            "test-browsers": "airtap --sauce-connect --loopback airtap.local -- test/browser.js",
            "update-browser-errors": "babel -o errors-browser.js errors.js"
          },
          "version": "3.6.0",
          "readme": "# readable-stream\n\n***Node.js core streams for userland*** [![Build Status](https://travis-ci.com/nodejs/readable-stream.svg?branch=master)](https://travis-ci.com/nodejs/readable-stream)\n\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true&downloadRank=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png?&months=6&height=3)](https://nodei.co/npm/readable-stream/)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/readabe-stream.svg)](https://saucelabs.com/u/readabe-stream)\n\n```bash\nnpm install --save readable-stream\n```\n\nThis package is a mirror of the streams implementations in Node.js.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v10.19.0/docs/api/stream.html).\n\nIf you want to guarantee a stable streams base, regardless of what version of\nNode you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *\"stream\"* module in Node-core, for background see [this blogpost](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).\n\nAs of version 2.0.0 **readable-stream** uses semantic versioning.\n\n## Version 3.x.x\n\nv3.x.x of `readable-stream` is a cut from Node 10. This version supports Node 6, 8, and 10, as well as evergreen browsers, IE 11 and latest Safari. The breaking changes introduced by v3 are composed by the combined breaking changes in [Node v9](https://nodejs.org/en/blog/release/v9.0.0/) and [Node v10](https://nodejs.org/en/blog/release/v10.0.0/), as follows:\n\n1. Error codes: https://github.com/nodejs/node/pull/13310,\n   https://github.com/nodejs/node/pull/13291,\n   https://github.com/nodejs/node/pull/16589,\n   https://github.com/nodejs/node/pull/15042,\n   https://github.com/nodejs/node/pull/15665,\n   https://github.com/nodejs/readable-stream/pull/344\n2. 'readable' have precedence over flowing\n   https://github.com/nodejs/node/pull/18994\n3. make virtual methods errors consistent\n   https://github.com/nodejs/node/pull/18813\n4. updated streams error handling\n   https://github.com/nodejs/node/pull/18438\n5. writable.end should return this.\n   https://github.com/nodejs/node/pull/18780\n6. readable continues to read when push('')\n   https://github.com/nodejs/node/pull/18211\n7. add custom inspect to BufferList\n   https://github.com/nodejs/node/pull/17907\n8. always defer 'readable' with nextTick\n   https://github.com/nodejs/node/pull/17979\n\n## Version 2.x.x\nv2.x.x of `readable-stream` is a cut of the stream module from Node 8 (there have been no semver-major changes from Node 4 to 8). This version supports all Node.js versions from 0.8, as well as evergreen browsers and IE 10 & 11.\n\n### Big Thanks\n\nCross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs][sauce]\n\n# Usage\n\nYou can swap your `require('stream')` with `require('readable-stream')`\nwithout any changes, if you are just using one of the main classes and\nfunctions.\n\n```js\nconst {\n  Readable,\n  Writable,\n  Transform,\n  Duplex,\n  pipeline,\n  finished\n} = require('readable-stream')\n````\n\nNote that `require('stream')` will return `Stream`, while\n`require('readable-stream')` will return `Readable`. We discourage using\nwhatever is exported directly, but rather use one of the properties as\nshown in the example above.\n\n# Streams Working Group\n\n`readable-stream` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\n<a name=\"members\"></a>\n## Team Members\n\n* **Calvin Metcalf** ([@calvinmetcalf](https://github.com/calvinmetcalf)) &lt;calvin.metcalf@gmail.com&gt;\n  - Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242\n* **Mathias Buus** ([@mafintosh](https://github.com/mafintosh)) &lt;mathiasbuus@gmail.com&gt;\n* **Matteo Collina** ([@mcollina](https://github.com/mcollina)) &lt;matteo.collina@gmail.com&gt;\n  - Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E\n* **Irina Shestak** ([@lrlna](https://github.com/lrlna)) &lt;shestak.irina@gmail.com&gt;\n* **Yoshua Wyuts** ([@yoshuawuyts](https://github.com/yoshuawuyts)) &lt;yoshuawuyts@gmail.com&gt;\n\n[sauce]: https://saucelabs.com\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "inherits": "^2.0.3",
            "string_decoder": "^1.1.1",
            "util-deprecate": "^1.0.1"
          },
          "path": "/path/to/project/packages/shared/node_modules/readable-stream",
          "error": "[Circular]",
          "extraneous": false
        },
        "split2": {
          "_args": [
            [
              "split2@3.1.1",
              "/path/to/project/packages/shared"
            ],
            [
              "split2@3.1.1",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "split2@3.1.1",
          "_id": "split2@3.1.1",
          "_integrity": "sha512-emNzr1s7ruq4N+1993yht631/JH+jaj0NYBosuKmLcq+JkGQ9MmTw1RB1fGaTCzUuseRIClrlSLHRNYGwWQ58Q==",
          "_location": "/split2",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "split2@3.1.1",
            "name": "split2",
            "escapedName": "split2",
            "rawSpec": "3.1.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.1.1"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/split2/-/split2-3.1.1.tgz",
          "_spec": "3.1.1",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Matteo Collina",
            "email": "hello@matteocollina.com"
          },
          "bugs": {
            "url": "http://github.com/mcollina/split2/issues"
          },
          "dependencies": {
            "readable-stream": {
              "_args": "[Circular]",
              "_from": "readable-stream@3.6.0",
              "_id": "readable-stream@3.6.0",
              "_integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
              "_location": "/readable-stream",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "readable-stream@3.6.0",
                "name": "readable-stream",
                "escapedName": "readable-stream",
                "rawSpec": "3.6.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.6.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
              "_spec": "3.6.0",
              "_where": "/path/to/project/packages/shared",
              "browser": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {},
              "description": "Streams3, a user-land copy of the stream library from Node.js",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "homepage": "https://github.com/nodejs/readable-stream#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "readable.js",
              "name": "readable-stream",
              "nyc": "[Circular]",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.6.0",
              "readme": "# readable-stream\n\n***Node.js core streams for userland*** [![Build Status](https://travis-ci.com/nodejs/readable-stream.svg?branch=master)](https://travis-ci.com/nodejs/readable-stream)\n\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true&downloadRank=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png?&months=6&height=3)](https://nodei.co/npm/readable-stream/)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/readabe-stream.svg)](https://saucelabs.com/u/readabe-stream)\n\n```bash\nnpm install --save readable-stream\n```\n\nThis package is a mirror of the streams implementations in Node.js.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v10.19.0/docs/api/stream.html).\n\nIf you want to guarantee a stable streams base, regardless of what version of\nNode you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *\"stream\"* module in Node-core, for background see [this blogpost](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).\n\nAs of version 2.0.0 **readable-stream** uses semantic versioning.\n\n## Version 3.x.x\n\nv3.x.x of `readable-stream` is a cut from Node 10. This version supports Node 6, 8, and 10, as well as evergreen browsers, IE 11 and latest Safari. The breaking changes introduced by v3 are composed by the combined breaking changes in [Node v9](https://nodejs.org/en/blog/release/v9.0.0/) and [Node v10](https://nodejs.org/en/blog/release/v10.0.0/), as follows:\n\n1. Error codes: https://github.com/nodejs/node/pull/13310,\n   https://github.com/nodejs/node/pull/13291,\n   https://github.com/nodejs/node/pull/16589,\n   https://github.com/nodejs/node/pull/15042,\n   https://github.com/nodejs/node/pull/15665,\n   https://github.com/nodejs/readable-stream/pull/344\n2. 'readable' have precedence over flowing\n   https://github.com/nodejs/node/pull/18994\n3. make virtual methods errors consistent\n   https://github.com/nodejs/node/pull/18813\n4. updated streams error handling\n   https://github.com/nodejs/node/pull/18438\n5. writable.end should return this.\n   https://github.com/nodejs/node/pull/18780\n6. readable continues to read when push('')\n   https://github.com/nodejs/node/pull/18211\n7. add custom inspect to BufferList\n   https://github.com/nodejs/node/pull/17907\n8. always defer 'readable' with nextTick\n   https://github.com/nodejs/node/pull/17979\n\n## Version 2.x.x\nv2.x.x of `readable-stream` is a cut of the stream module from Node 8 (there have been no semver-major changes from Node 4 to 8). This version supports all Node.js versions from 0.8, as well as evergreen browsers and IE 10 & 11.\n\n### Big Thanks\n\nCross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs][sauce]\n\n# Usage\n\nYou can swap your `require('stream')` with `require('readable-stream')`\nwithout any changes, if you are just using one of the main classes and\nfunctions.\n\n```js\nconst {\n  Readable,\n  Writable,\n  Transform,\n  Duplex,\n  pipeline,\n  finished\n} = require('readable-stream')\n````\n\nNote that `require('stream')` will return `Stream`, while\n`require('readable-stream')` will return `Readable`. We discourage using\nwhatever is exported directly, but rather use one of the properties as\nshown in the example above.\n\n# Streams Working Group\n\n`readable-stream` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\n<a name=\"members\"></a>\n## Team Members\n\n* **Calvin Metcalf** ([@calvinmetcalf](https://github.com/calvinmetcalf)) &lt;calvin.metcalf@gmail.com&gt;\n  - Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242\n* **Mathias Buus** ([@mafintosh](https://github.com/mafintosh)) &lt;mathiasbuus@gmail.com&gt;\n* **Matteo Collina** ([@mcollina](https://github.com/mcollina)) &lt;matteo.collina@gmail.com&gt;\n  - Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E\n* **Irina Shestak** ([@lrlna](https://github.com/lrlna)) &lt;shestak.irina@gmail.com&gt;\n* **Yoshua Wyuts** ([@yoshuawuyts](https://github.com/yoshuawuyts)) &lt;yoshuawuyts@gmail.com&gt;\n\n[sauce]: https://saucelabs.com\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/readable-stream",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "readable-stream"
            }
          },
          "description": "split a Text Stream into a Line Stream, using Stream 3",
          "devDependencies": {
            "binary-split": "^1.0.3",
            "callback-stream": "^1.1.0",
            "fastbench": "^1.0.0",
            "pre-commit": "^1.1.2",
            "safe-buffer": "^5.1.1",
            "standard": "^12.0.0",
            "tap": "^12.0.0"
          },
          "greenkeeper": {
            "ignore": [
              "tap"
            ]
          },
          "homepage": "https://github.com/mcollina/split2#readme",
          "license": "ISC",
          "main": "index.js",
          "name": "split2",
          "pre-commit": [
            "test"
          ],
          "repository": {
            "type": "git",
            "url": "git+https://github.com/mcollina/split2.git"
          },
          "scripts": {
            "test": "standard && tap -b test.js"
          },
          "version": "3.1.1",
          "website": "https://github.com/mcollina/split2",
          "readme": "# Split2(matcher, mapper, options)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/mcollina/split2.svg)](https://greenkeeper.io/)\n\n[![build status](https://secure.travis-ci.org/mcollina/split2.svg)](http://travis-ci.org/mcollina/split2)\n\nBreak up a stream and reassemble it so that each line is a chunk.\n`split2` is inspired by [@dominictarr](https://github.com/dominictarr) [`split`](https://github.com/dominictarr/split) module,\nand it is totally API compatible with it.\nHowever, it is based on Node.js core [`Transform`](https://nodejs.org/api/stream.html#stream_new_stream_transform_options) via [`readable-stream`](https://github.com/nodejs/readable-stream)\n\n`matcher` may be a `String`, or a `RegExp`. Example, read every line in a file ...\n\n``` js\n  fs.createReadStream(file)\n    .pipe(split2())\n    .on('data', function (line) {\n      //each chunk now is a separate line!\n    })\n\n```\n\n`split` takes the same arguments as `string.split` except it defaults to '/\\r?\\n/', and the optional `limit` paremeter is ignored.\n[String#split](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split)\n\n`split` takes an optional options object on it's third argument, which\nis directly passed as a\n[Transform](https://nodejs.org/api/stream.html#stream_new_stream_transform_options)\noption.\n\nAdditionally, the `.maxLength` and `.skipOverflow` options are implemented, which set limits on the internal\nbuffer size and the stream's behavior when the limit is exceeded. There is no limit unless `maxLength` is set. When\nthe internal buffer size exceeds `maxLength`, the stream emits an error by default. You may also set `skipOverflow` to\ntrue to suppress the error and instead skip past any lines that cause the internal buffer to exceed `maxLength`.\n\nCalling `.destroy` will make the stream emit `close`. Use this to perform cleanup logic\n\n``` js\nvar splitFile = function(filename) {\n  var file = fs.createReadStream(filename)\n\n  return file\n    .pipe(split2())\n    .on('close', function() {\n      // destroy the file stream in case the split stream was destroyed\n      file.destroy()\n    })\n}\n\nvar stream = splitFile('my-file.txt')\n\nstream.destroy() // will destroy the input file stream\n```\n\n# NDJ - Newline Delimited Json\n\n`split2` accepts a function which transforms each line.\n\n``` js\nfs.createReadStream(file)\n  .pipe(split2(JSON.parse))\n  .on('data', function (obj) {\n    //each chunk now is a js object\n  })\n```\n\nHowever, in [@dominictarr](https://github.com/dominictarr) [`split`](https://github.com/dominictarr/split) the mapper\nis wrapped in a try-catch, while here it is not: if your parsing logic can throw, wrap it yourself.\n\n# Benchmark\n\n```bash\n$ node bench.js\nbenchSplit*10000: 1484.983ms\nbenchBinarySplit*10000: 1484.080ms\nbenchSplit*10000: 1407.334ms\nbenchBinarySplit*10000: 1500.281ms\n```\n\nBenchmark taken on Node 8.11.3, on a Macbook i5 2018.\n\n# License\n\nCopyright (c) 2014-2018, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "readable-stream": "^3.0.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/split2",
          "error": "[Circular]",
          "extraneous": false
        },
        "strip-json-comments": {
          "_args": [
            [
              "strip-json-comments@3.0.1",
              "/path/to/project/packages/shared"
            ],
            [
              "strip-json-comments@3.0.1",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "strip-json-comments@3.0.1",
          "_id": "strip-json-comments@3.0.1",
          "_integrity": "sha512-VTyMAUfdm047mwKl+u79WIdrZxtFtn+nBxHeb844XBQ9uMNTuTHdx2hc5RiAJYqwTj3wc/xe5HLSdJSkJ+WfZw==",
          "_location": "/strip-json-comments",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "strip-json-comments@3.0.1",
            "name": "strip-json-comments",
            "escapedName": "strip-json-comments",
            "rawSpec": "3.0.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.0.1"
          },
          "_requiredBy": [
            "/pino-pretty"
          ],
          "_resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.0.1.tgz",
          "_spec": "3.0.1",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/strip-json-comments/issues"
          },
          "description": "Strip comments from JSON. Lets you use comments in your JSON files!",
          "devDependencies": {
            "ava": "^1.4.1",
            "matcha": "^0.7.0",
            "tsd": "^0.7.2",
            "xo": "^0.24.0"
          },
          "engines": {
            "node": ">=8"
          },
          "files": [
            "index.js",
            "index.d.ts"
          ],
          "homepage": "https://github.com/sindresorhus/strip-json-comments#readme",
          "keywords": [
            "json",
            "strip",
            "comments",
            "remove",
            "delete",
            "trim",
            "multiline",
            "parse",
            "config",
            "configuration",
            "settings",
            "util",
            "env",
            "environment"
          ],
          "license": "MIT",
          "name": "strip-json-comments",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/strip-json-comments.git"
          },
          "scripts": {
            "bench": "matcha benchmark.js",
            "test": "xo && ava && tsd"
          },
          "version": "3.0.1",
          "readme": "# strip-json-comments [![Build Status](https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master)](https://travis-ci.org/sindresorhus/strip-json-comments)\n\n> Strip comments from JSON. Lets you use comments in your JSON files!\n\nThis is now possible:\n\n```js\n{\n\t// Rainbows\n\t\"unicorn\": /* ❤ */ \"cake\"\n}\n```\n\nIt will replace single-line comments `//` and multi-line comments `/**/` with whitespace. This allows JSON error positions to remain as close as possible to the original source.\n\nAlso available as a [Gulp](https://github.com/sindresorhus/gulp-strip-json-comments)/[Grunt](https://github.com/sindresorhus/grunt-strip-json-comments)/[Broccoli](https://github.com/sindresorhus/broccoli-strip-json-comments) plugin.\n\n\n## Install\n\n```\n$ npm install strip-json-comments\n```\n\n\n## Usage\n\n```js\nconst json = `{\n\t// Rainbows\n\t\"unicorn\": /* ❤ */ \"cake\"\n}`;\n\nJSON.parse(stripJsonComments(json));\n//=> {unicorn: 'cake'}\n```\n\n\n## API\n\n### stripJsonComments(jsonString, [options])\n\n#### jsonString\n\nType: `string`\n\nAccepts a string with JSON and returns a string without comments.\n\n#### options\n\nType: `object`\n\n##### whitespace\n\nType: `boolean`<br>\nDefault: `true`\n\nReplace comments with whitespace instead of stripping them entirely.\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n\n## Related\n\n- [strip-json-comments-cli](https://github.com/sindresorhus/strip-json-comments-cli) - CLI for this module\n- [strip-css-comments](https://github.com/sindresorhus/strip-css-comments) - Strip comments from CSS\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/shared/node_modules/strip-json-comments",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "description": "Prettifier for Pino log lines",
      "devDependencies": {
        "pino": "^5.14.0",
        "pre-commit": "^1.2.2",
        "rimraf": "^3.0.0",
        "snazzy": "^8.0.0",
        "standard": "^14.0.0",
        "tap": "^14.10.2"
      },
      "homepage": "https://github.com/pinojs/pino-pretty#readme",
      "keywords": [
        "pino"
      ],
      "license": "MIT",
      "main": "index.js",
      "name": "pino-pretty",
      "precommit": [
        "lint",
        "test"
      ],
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/pinojs/pino-pretty.git"
      },
      "scripts": {
        "lint": "standard | snazzy",
        "lint-ci": "standard",
        "test": "tap --no-cov 'test/**/*.test.js'",
        "test-ci": "tap --cov 'test/**/*.test.js'"
      },
      "version": "3.6.0",
      "readme": "<a id=\"intro\"></a>\n# pino-pretty\n\n[![NPM Package Version](https://badgen.net/npm/v/pino-pretty)](https://www.npmjs.com/package/pino-pretty)\n[![Build Status](https://badgen.net/travis/pinojs/pino-pretty/master)](https://travis-ci.org/pinojs/pino-pretty)\n[![Coverage Status](https://badgen.net/coveralls/c/github/pinojs/pino-pretty/master)](https://coveralls.io/github/pinojs/pino-pretty?branch=master)\n\nThis module provides a basic [ndjson](http://ndjson.org/) formatter. If an\nincoming line looks like it could be a log line from an ndjson logger, in\nparticular the [Pino](https://getpino.io/) logging library, then it will apply\nextra formatting by considering things like the log level and timestamp.\n\nA standard Pino log line like:\n\n```\n{\"level\":30,\"time\":1522431328992,\"msg\":\"hello world\",\"pid\":42,\"hostname\":\"foo\",\"v\":1}\n```\n\nWill format to:\n\n```\n[1522431328992] INFO (42 on foo): hello world\n```\n\n<a id=\"example\"></a>\n## Example\n\nUsing the [example script][exscript] from the Pino module, and specifying\nthat logs should be colored and the time translated, we can see what the\nprettified logs will look like:\n\n![demo](demo.png)\n\n[exscript]: https://github.com/pinojs/pino/blob/fc4c83b/example.js\n\n<a id=\"install\"></a>\n## Install\n\n```sh\n$ npm install -g pino-pretty\n```\n\n<a id=\"usage\"></a>\n## Usage\n\nIt's recommended to use `pino-pretty` with `pino`\nby piping output to the CLI tool:\n\n```sh\npino app.js | pino-pretty\n```\n\n<a id=\"cliargs\"></a>\n### CLI Arguments\n\n- `--colorize` (`-c`): Adds terminal color escape sequences to the output.\n- `--crlf` (`-f`): Appends carriage return and line feed, instead of just a line\n  feed, to the formatted log line.\n- `--errorProps` (`-e`): When formatting an error object, display this list\n  of properties. The list should be a comma separated list of properties Default: `''`.\n- `--levelFirst` (`-l`): Display the log level name before the logged date and time.\n- `--errorLikeObjectKeys` (`-k`): Define the log keys that are associated with\n  error like objects. Default: `err,error`.\n- `--messageKey` (`-m`): Define the key that contains the main log message.\n  Default: `msg`.\n- `--levelKey` (`--levelKey`): Define the key that contains the level of the log.\n  Default: `level`.\n- `--messageFormat` (`-o`): Format output of message, e.g. `{level} - {pid}` will output message: `INFO - 1123`\n  Default: `false`\n- `--timestampKey` (`-m`): Define the key that contains the log timestamp.\n  Default: `time`.\n- `--translateTime` (`-t`): Translate the epoch time value into a human readable\n  date and time string. This flag also can set the format string to apply when\n  translating the date to human readable format. For a list of available pattern\n  letters see the [`dateformat` documentation](https://www.npmjs.com/package/dateformat).\n  - The default format is `yyyy-mm-dd HH:MM:ss.l o` in UTC.\n  - Require a `SYS:` prefix to translate time to the local system's timezone. A\n    shortcut `SYS:standard` to translate time to `yyyy-mm-dd HH:MM:ss.l o` in\n    system timezone.\n- `--search` (`-s`): Specify a search pattern according to\n  [jmespath](http://jmespath.org/).\n- `--ignore` (`-i`): Ignore one or several keys: (`-i time,hostname`)\n- `--config`: Specify a path to a config file containing the pino-pretty options.  pino-pretty will attempt to read from a `.pino-prettyrc` in your current directory (`process.cwd`) if not specified\n\n<a id=\"integration\"></a>\n## Programmatic Integration\n\nWe recommend against using `pino-pretty` in production, and highly\nrecommend installing `pino-pretty` as a development dependency.\n\nWhen installed, `pino-pretty` will be used by `pino` as the default\nprettifier.\n\nInstall `pino-pretty` alongside `pino` and set the\n`prettyPrint` option to `true`:\n\n```js\nconst pino = require('pino')\nconst logger = pino({\n  prettyPrint: true\n})\n\nlogger.info('hi')\n```\n\nThe `prettyPrint` option can also be an object containing `pretty-print`\noptions:\n\n```js\nconst pino = require('pino')\nconst logger = pino({\n  prettyPrint: { colorize: true }\n})\n\nlogger.info('hi')\n```\n\nSee the [Options](#options) section for all possible options.\n\n<a id=\"options\"></a>\n### Options\n\n`pino-pretty` exports a factory function that can be used to format log strings.\nThis factory function is used internally by Pino, and accepts an options argument\nwith keys corresponding to the options described in [CLI Arguments](#cliargs):\n\n```js\n{\n  colorize: chalk.supportsColor, // --colorize\n  crlf: false, // --crlf\n  errorLikeObjectKeys: ['err', 'error'], // --errorLikeObjectKeys\n  errorProps: '', // --errorProps\n  levelFirst: false, // --levelFirst\n  messageKey: 'msg', // --messageKey\n  levelKey: 'level', // --levelKey\n  messageFormat: false // --messageFormat\n  timestampKey: 'time', // --timestampKey\n  translateTime: false, // --translateTime\n  search: 'foo == `bar`', // --search\n  ignore: 'pid,hostname' // --ignore,\n  customPrettifiers: {}\n}\n```\n\nThe `colorize` default follows\n[`chalk.supportsColor`](https://www.npmjs.com/package/chalk#chalksupportscolor).\n\n`customPrettifiers` option provides the ability to add a custom prettify function\nfor specific log properties. `customPrettifiers` is an object, where keys are\nlog properties which will be prettified and value is the prettify function itself.\nFor example, if a log line contains a `query` property,\nyou can specify a prettifier for it:\n```js\n{\n  customPrettifiers: {\n    query: prettifyQuery\n  }\n}\n//...\nconst prettifyQuery = value => {\n  // do some prettify magic\n}\n```\n\n<a id=\"license\"><a>\n## License\n\nMIT License\n",
      "readmeFilename": "Readme.md",
      "optionalDependencies": {},
      "_dependencies": {
        "@hapi/bourne": "^1.3.2",
        "args": "^5.0.1",
        "chalk": "^2.4.2",
        "dateformat": "^3.0.3",
        "fast-safe-stringify": "^2.0.7",
        "jmespath": "^0.15.0",
        "joycon": "^2.2.5",
        "pump": "^3.0.0",
        "readable-stream": "^3.4.0",
        "split2": "^3.1.1",
        "strip-json-comments": "^3.0.1"
      },
      "path": "/path/to/project/packages/shared/node_modules/pino-pretty",
      "error": "[Circular]",
      "extraneous": false
    },
    "snowflake-promise": {
      "_args": [
        [
          "snowflake-promise@2.2.0",
          "/path/to/project/packages/shared"
        ],
        [
          "snowflake-promise@2.2.0",
          "/path/to/project/packages/shared"
        ]
      ],
      "_from": "snowflake-promise@2.2.0",
      "_id": "snowflake-promise@2.2.0",
      "_integrity": "sha512-0+MSGVFQzcS/aSRHOo3rX0+QokaRpvsaRJ61jjkZoLsmV4uZg06YQuZF1EafmWcfYqCxHVZjruxRtgExS71DyQ==",
      "_location": "/snowflake-promise",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "snowflake-promise@2.2.0",
        "name": "snowflake-promise",
        "escapedName": "snowflake-promise",
        "rawSpec": "2.2.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "2.2.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/snowflake-promise/-/snowflake-promise-2.2.0.tgz",
      "_spec": "2.2.0",
      "_where": "/path/to/project/packages/shared",
      "author": {
        "name": "Nate Silva",
        "email": "nate@natesilva.com"
      },
      "bugs": {
        "url": "https://github.com/natesilva/snowflake-promise/issues"
      },
      "dependencies": {
        "snowflake-sdk": {
          "_args": [
            [
              "snowflake-sdk@1.5.2",
              "/path/to/project/packages/shared"
            ],
            [
              "snowflake-sdk@1.5.2",
              "/path/to/project/packages/shared"
            ]
          ],
          "_from": "snowflake-sdk@1.5.2",
          "_id": "snowflake-sdk@1.5.2",
          "_integrity": "sha512-HILZU35gXUGTUVxja5g/WY8eAcMK52xEijCFphAU6Cf5Mbq3xrtISbHlI47rYDz0+l8Br/TM7xCw8QAzQvNUrg==",
          "_location": "/snowflake-sdk",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "snowflake-sdk@1.5.2",
            "name": "snowflake-sdk",
            "escapedName": "snowflake-sdk",
            "rawSpec": "1.5.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "1.5.2"
          },
          "_requiredBy": [
            "/snowflake-promise"
          ],
          "_resolved": "https://registry.npmjs.org/snowflake-sdk/-/snowflake-sdk-1.5.2.tgz",
          "_spec": "1.5.2",
          "_where": "/path/to/project/packages/shared",
          "author": {
            "name": "Snowflake Computing, Inc.",
            "email": "support@snowflake.com",
            "url": "https://www.snowflake.com/"
          },
          "bugs": {
            "url": "https://github.com/snowflakedb/snowflake-connector-nodejs/issues"
          },
          "dependencies": {
            "agent-base": {
              "_args": [
                [
                  "agent-base@2.1.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "agent-base@2.1.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "agent-base@2.1.1",
              "_id": "agent-base@2.1.1",
              "_integrity": "sha1-1t4Q1a9hMtW9aSQn1G/FOFOQlMc=",
              "_location": "/agent-base",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "agent-base@2.1.1",
                "name": "agent-base",
                "escapedName": "agent-base",
                "rawSpec": "2.1.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.1.1"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/agent-base/-/agent-base-2.1.1.tgz",
              "_spec": "2.1.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Nathan Rajlich",
                "email": "nathan@tootallnate.net",
                "url": "http://n8.io/"
              },
              "bugs": {
                "url": "https://github.com/TooTallNate/node-agent-base/issues"
              },
              "dependencies": {
                "extend": {
                  "_args": [
                    [
                      "extend@3.0.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "extend@3.0.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "extend@3.0.2",
                  "_id": "extend@3.0.2",
                  "_integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
                  "_location": "/extend",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "extend@3.0.2",
                    "name": "extend",
                    "escapedName": "extend",
                    "rawSpec": "3.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.0.2"
                  },
                  "_requiredBy": [
                    "/agent-base",
                    "/request",
                    "/snowflake-sdk"
                  ],
                  "_resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
                  "_spec": "3.0.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Stefan Thomas",
                    "email": "justmoon@members.fsf.org",
                    "url": "http://www.justmoon.net"
                  },
                  "bugs": {
                    "url": "https://github.com/justmoon/node-extend/issues"
                  },
                  "contributors": [
                    {
                      "name": "Jordan Harband",
                      "url": "https://github.com/ljharb"
                    }
                  ],
                  "dependencies": {},
                  "description": "Port of jQuery.extend for node.js and the browser",
                  "devDependencies": {
                    "@ljharb/eslint-config": "^12.2.1",
                    "covert": "^1.1.0",
                    "eslint": "^4.19.1",
                    "jscs": "^3.0.7",
                    "tape": "^4.9.1"
                  },
                  "homepage": "https://github.com/justmoon/node-extend#readme",
                  "keywords": [
                    "extend",
                    "clone",
                    "merge"
                  ],
                  "license": "MIT",
                  "main": "index",
                  "name": "extend",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/justmoon/node-extend.git"
                  },
                  "scripts": {
                    "coverage": "covert test/index.js",
                    "coverage-quiet": "covert test/index.js --quiet",
                    "eslint": "eslint *.js */*.js",
                    "jscs": "jscs *.js */*.js",
                    "lint": "npm run jscs && npm run eslint",
                    "posttest": "npm run coverage-quiet",
                    "pretest": "npm run lint",
                    "test": "npm run tests-only",
                    "tests-only": "node test"
                  },
                  "version": "3.0.2",
                  "readme": "[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n\n# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>\n\n`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.\n\nNotes:\n\n* Since Node.js >= 4,\n  [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  now offers the same functionality natively (but without the \"deep copy\" option).\n  See [ECMAScript 2015 (ES6) in Node.js](https://nodejs.org/en/docs/es6).\n* Some native implementations of `Object.assign` in both Node.js and many\n  browsers (since NPM modules are for the browser too) may not be fully\n  spec-compliant.\n  Check [`object.assign`](https://www.npmjs.com/package/object.assign) module for\n  a compliant candidate.\n\n## Installation\n\nThis package is available on [npm][npm-url] as: `extend`\n\n``` sh\nnpm install extend\n```\n\n## Usage\n\n**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**\n\n*Extend one object with one or more others, returning the modified object.*\n\n**Example:**\n\n``` js\nvar extend = require('extend');\nextend(targetObject, object1, object2);\n```\n\nKeep in mind that the target object will be modified, and will be returned from extend().\n\nIf a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\nWarning: passing `false` as the first argument is not supported.\n\n### Arguments\n\n* `deep` *Boolean* (optional)\nIf set, the merge becomes recursive (i.e. deep copy).\n* `target`\t*Object*\nThe object to extend.\n* `object1`\t*Object*\nThe object that will be merged into the first.\n* `objectN` *Object* (Optional)\nMore objects to merge into the first.\n\n## License\n\n`node-extend` is licensed under the [MIT License][mit-license-url].\n\n## Acknowledgements\n\nAll credit to the jQuery authors for perfecting this amazing utility.\n\nPorted to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].\n\n[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg\n[travis-url]: https://travis-ci.org/justmoon/node-extend\n[npm-url]: https://npmjs.org/package/extend\n[mit-license-url]: http://opensource.org/licenses/MIT\n[github-justmoon]: https://github.com/justmoon\n[github-insin]: https://github.com/insin\n[github-ljharb]: https://github.com/ljharb\n[npm-version-png]: http://versionbadg.es/justmoon/node-extend.svg\n[deps-svg]: https://david-dm.org/justmoon/node-extend.svg\n[deps-url]: https://david-dm.org/justmoon/node-extend\n[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg\n[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/extend",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "extend"
                },
                "semver": {
                  "_args": [
                    [
                      "semver@5.0.3",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "semver@5.0.3",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "semver@5.0.3",
                  "_id": "semver@5.0.3",
                  "_integrity": "sha1-d0Zt5YnNXTyV8TiqeLxWmjy10no=",
                  "_location": "/semver",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "semver@5.0.3",
                    "name": "semver",
                    "escapedName": "semver",
                    "rawSpec": "5.0.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.0.3"
                  },
                  "_requiredBy": [
                    "/agent-base"
                  ],
                  "_resolved": "https://registry.npmjs.org/semver/-/semver-5.0.3.tgz",
                  "_spec": "5.0.3",
                  "_where": "/path/to/project/packages/shared",
                  "bin": {
                    "semver": "bin/semver"
                  },
                  "bugs": {
                    "url": "https://github.com/npm/node-semver/issues"
                  },
                  "description": "The semantic version parser used by npm.",
                  "devDependencies": {
                    "tap": "^1.3.4"
                  },
                  "homepage": "https://github.com/npm/node-semver#readme",
                  "license": "ISC",
                  "main": "semver.js",
                  "name": "semver",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/npm/node-semver.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "5.0.3",
                  "readme": "semver(1) -- The semantic versioner for npm\n===========================================\n\n## Usage\n\n    $ npm install semver\n\n    semver.valid('1.2.3') // '1.2.3'\n    semver.valid('a.b.c') // null\n    semver.clean('  =v1.2.3   ') // '1.2.3'\n    semver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\n    semver.gt('1.2.3', '9.8.7') // false\n    semver.lt('1.2.3', '9.8.7') // true\n\nAs a command-line utility:\n\n    $ semver -h\n\n    Usage: semver <version> [<version> [...]] [-r <range> | -i <inc> | --preid <identifier> | -l | -rv]\n    Test if version(s) satisfy the supplied range(s), and sort them.\n\n    Multiple versions or ranges may be supplied, unless increment\n    option is specified.  In that case, only a single version may\n    be used, and it is incremented by the specified level\n\n    Program exits successfully if any valid version satisfies\n    all supplied ranges, and prints all satisfying versions.\n\n    If no versions are valid, or ranges are not satisfied,\n    then exits failure.\n\n    Versions are printed in ascending order, so supplying\n    multiple versions to the utility will just sort them.\n\n## Versions\n\nA \"version\" is described by the `v2.0.0` specification found at\n<http://semver.org/>.\n\nA leading `\"=\"` or `\"v\"` character is stripped off and ignored.\n\n## Ranges\n\nA `version range` is a set of `comparators` which specify versions\nthat satisfy the range.\n\nA `comparator` is composed of an `operator` and a `version`.  The set\nof primitive `operators` is:\n\n* `<` Less than\n* `<=` Less than or equal to\n* `>` Greater than\n* `>=` Greater than or equal to\n* `=` Equal.  If no operator is specified, then equality is assumed,\n  so this operator is optional, but MAY be included.\n\nFor example, the comparator `>=1.2.7` would match the versions\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\nor `1.1.0`.\n\nComparators can be joined by whitespace to form a `comparator set`,\nwhich is satisfied by the **intersection** of all of the comparators\nit includes.\n\nA range is composed of one or more comparator sets, joined by `||`.  A\nversion matches a range if and only if every comparator in at least\none of the `||`-separated comparator sets is satisfied by the version.\n\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\nor `1.1.0`.\n\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\n\n### Prerelease Tags\n\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `[major, minor, patch]` tuple also has a\nprerelease tag.\n\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically \"greater\nthan\" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `1.2.3` version.  The\nversion `3.4.5` *would* satisfy the range, because it does not have a\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\n\nThe purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author's design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.\n\nSecond, a user who has opted into using a prerelease version has\nclearly indicated the intent to use *that specific* set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the *next* set of prerelease versions.\n\n#### Prerelease Identifiers\n\nThe method `.inc` takes an additional `identifier` string argument that\nwill append the value of the string as a prerelease identifier:\n\n```javascript\n> semver.inc('1.2.3', 'pre', 'beta')\n'1.2.4-beta.0'\n```\n\ncommand-line example:\n\n```shell\n$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n```\n\nWhich then can be used to increment further:\n\n```shell\n$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n```\n\n### Advanced Range Syntax\n\nAdvanced range syntax desugars to primitive comparators in\ndeterministic ways.\n\nAdvanced ranges may be combined in the same way as primitive\ncomparators using white space or `||`.\n\n#### Hyphen Ranges `X.Y.Z - A.B.C`\n\nSpecifies an inclusive set.\n\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n\nIf a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.\n\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\n\nIf a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.\n\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0`\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0`\n\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\n\nAny of `X`, `x`, or `*` may be used to \"stand in\" for one of the\nnumeric values in the `[major, minor, patch]` tuple.\n\n* `*` := `>=0.0.0` (Any version satisfies)\n* `1.x` := `>=1.0.0 <2.0.0` (Matching major version)\n* `1.2.x` := `>=1.2.0 <1.3.0` (Matching major and minor versions)\n\nA partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.\n\n* `\"\"` (empty string) := `*` := `>=0.0.0`\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0`\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0`\n\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\n\nAllows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.\n\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0`\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0` (Same as `1.2.x`)\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0` (Same as `1.x`)\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0`\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0` (Same as `0.2.x`)\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0` (Same as `0.x`)\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\n\nAllows changes that do not modify the left-most non-zero digit in the\n`[major, minor, patch]` tuple.  In other words, this allows patch and\nminor updates for versions `1.0.0` and above, patch updates for\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\n\nMany authors treat a `0.x` version as if the `x` were the major\n\"breaking-change\" indicator.\n\nCaret ranges are ideal when an author may make breaking changes\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\nHowever, it presumes that there will *not* be breaking changes between\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.\n\n* `^1.2.3` := `>=1.2.3 <2.0.0`\n* `^0.2.3` := `>=0.2.3 <0.3.0`\n* `^0.0.3` := `>=0.0.3 <0.0.4`\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4`  Note that prereleases in the\n  `0.0.3` version *only* will be allowed, if they are greater than or\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\n\nWhen parsing caret ranges, a missing `patch` value desugars to the\nnumber `0`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `0`.\n\n* `^1.2.x` := `>=1.2.0 <2.0.0`\n* `^0.0.x` := `>=0.0.0 <0.1.0`\n* `^0.0` := `>=0.0.0 <0.1.0`\n\nA missing `minor` and `patch` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.\n\n* `^1.x` := `>=1.0.0 <2.0.0`\n* `^0.x` := `>=0.0.0 <1.0.0`\n\n## Functions\n\nAll methods and classes take a final `loose` boolean argument that, if\ntrue, will be more forgiving about not-quite-valid semver strings.\nThe resulting output will always be 100% strict, of course.\n\nStrict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.\n\n* `valid(v)`: Return the parsed version, or null if it's not valid.\n* `inc(v, release)`: Return the version incremented by the release\n  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,\n  `prepatch`, or `prerelease`), or null if it's not valid\n  * `premajor` in one call will bump the version up to the next major\n    version and down to a prerelease of that major version.\n    `preminor`, and `prepatch` work the same way.\n  * If called from a non-prerelease version, the `prerelease` will work the\n    same as `prepatch`. It increments the patch version, then makes a\n    prerelease. If the input version is already a prerelease it simply\n    increments it.\n* `major(v)`: Return the major version number.\n* `minor(v)`: Return the minor version number.\n* `patch(v)`: Return the patch version number.\n\n### Comparison\n\n* `gt(v1, v2)`: `v1 > v2`\n* `gte(v1, v2)`: `v1 >= v2`\n* `lt(v1, v2)`: `v1 < v2`\n* `lte(v1, v2)`: `v1 <= v2`\n* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,\n  even if they're not the exact same string.  You already know how to\n  compare strings.\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call\n  the corresponding function above.  `\"===\"` and `\"!==\"` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions\n  in descending order when passed to `Array.sort()`.\n* `diff(v1, v2)`: Returns difference between two versions by the release type\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\n  or null if the versions are the same.\n\n\n### Ranges\n\n* `validRange(range)`: Return the valid range or null if it's not valid\n* `satisfies(version, range)`: Return true if the version satisfies the\n  range.\n* `maxSatisfying(versions, range)`: Return the highest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `gtr(version, range)`: Return `true` if version is greater than all the\n  versions possible in the range.\n* `ltr(version, range)`: Return `true` if version is less than all the\n  versions possible in the range.\n* `outside(version, range, hilo)`: Return true if the version is outside\n  the bounds of the range in either the high or low direction.  The\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\n  the function called by `gtr` and `ltr`.)\n\nNote that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, *or* satisfy a range!  For\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\nrange (because `2.0.1` satisfies, which is higher), nor less than the\nrange (since `1.2.8` satisfies, which is lower), and it also does not\nsatisfy the range.\n\nIf you want to know if a version satisfies or does not satisfy a\nrange, use the `satisfies(version, range)` function.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/semver",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Turn a function into an `http.Agent` instance",
              "devDependencies": {
                "mocha": "2",
                "ws": "0.8.0"
              },
              "homepage": "https://github.com/TooTallNate/node-agent-base#readme",
              "keywords": [
                "http",
                "agent",
                "base",
                "barebones",
                "https"
              ],
              "license": "MIT",
              "main": "agent.js",
              "name": "agent-base",
              "repository": {
                "type": "git",
                "url": "git://github.com/TooTallNate/node-agent-base.git"
              },
              "scripts": {
                "test": "mocha --reporter spec"
              },
              "version": "2.1.1",
              "readme": "agent-base\n==========\n### Turn a function into an `http.Agent` instance\n[![Build Status](https://travis-ci.org/TooTallNate/node-agent-base.svg?branch=master)](https://travis-ci.org/TooTallNate/node-agent-base)\n\nThis module provides an `http.Agent` generator. That is, you pass it an async\ncallback function, and it returns a new `http.Agent` instance that will invoke the\ngiven callback function when sending outbound HTTP requests.\n\n#### Some subclasses:\n\nHere's some more interesting uses of `agent-base`.\nSend a pull request to list yours!\n\n * [`http-proxy-agent`][http-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTP endpoints\n * [`https-proxy-agent`][https-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTPS endpoints\n * [`pac-proxy-agent`][pac-proxy-agent]: A PAC file proxy `http.Agent` implementation for HTTP and HTTPS\n * [`socks-proxy-agent`][socks-proxy-agent]: A SOCKS (v4a) proxy `http.Agent` implementation for HTTP and HTTPS\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install agent-base\n```\n\n\nExample\n-------\n\nHere's a minimal example that creates a new `net.Socket` connection to the server\nfor every HTTP request (i.e. the equivalent of `agent: false` option):\n\n``` js\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar http = require('http');\nvar agent = require('agent-base');\n\nvar endpoint = 'http://nodejs.org/api/';\nvar opts = url.parse(endpoint);\n\n// This is the important part!\nopts.agent = agent(function (req, opts, fn) {\n  var socket;\n  // `secureEndpoint` is true when using the https module\n  if (opts.secureEndpoint) {\n    socket = tls.connect(opts);\n  } else {\n    socket = net.connect(opts);\n  }\n  fn(null, socket);\n});\n\n// Everything else works just like normal...\nhttp.get(opts, function (res) {\n  console.log('\"response\" event!', res.headers);\n  res.pipe(process.stdout);\n});\n```\n\nAPI\n---\n\n## Agent(Function callback) → http.Agent\n\nCreates a base `http.Agent` that will execute the callback function `callback`\nfor every HTTP request that it is used as the `agent` for. The callback function\nis responsible for creating a `stream.Duplex` instance of some kind that will be\nused as the underlying socket in the HTTP request.\n\nThe callback function should have the following signature:\n\n### callback(http.ClientRequest req, Object options, Function cb) → undefined\n\nThe ClientRequest `req` can be accessed to read request headers and\nand the path, etc. The `options` object contains the options passed\nto the `http.request()`/`https.request()` function call, and is formatted\nto be directly passed to `net.connect()`/`tls.connect()`, or however\nelse you want a Socket to be created. Pass the created socket to\nthe callback function `cb` once created, and the HTTP request will\ncontinue to proceed.\n\nIf the `https` module is used to invoke the HTTP request, then the\n`secureEndpoint` property on `options` will be set to `true`.\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[http-proxy-agent]: https://github.com/TooTallNate/node-http-proxy-agent\n[https-proxy-agent]: https://github.com/TooTallNate/node-https-proxy-agent\n[pac-proxy-agent]: https://github.com/TooTallNate/node-pac-proxy-agent\n[socks-proxy-agent]: https://github.com/TooTallNate/node-socks-proxy-agent\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "extend": "~3.0.0",
                "semver": "~5.0.1"
              },
              "path": "/path/to/project/packages/shared/node_modules/agent-base",
              "error": "[Circular]",
              "extraneous": false
            },
            "asn1.js-rfc2560": {
              "_args": [
                [
                  "asn1.js-rfc2560@5.0.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "asn1.js-rfc2560@5.0.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "asn1.js-rfc2560@5.0.1",
              "_id": "asn1.js-rfc2560@5.0.1",
              "_integrity": "sha512-1PrVg6kuBziDN3PGFmRk3QrjpKvP9h/Hv5yMrFZvC1kpzP6dQRzf5BpKstANqHBkaOUmTpakJWhicTATOA/SbA==",
              "_location": "/asn1.js-rfc2560",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "asn1.js-rfc2560@5.0.1",
                "name": "asn1.js-rfc2560",
                "escapedName": "asn1.js-rfc2560",
                "rawSpec": "5.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "5.0.1"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/asn1.js-rfc2560/-/asn1.js-rfc2560-5.0.1.tgz",
              "_spec": "5.0.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Fedor Indutny"
              },
              "bugs": {
                "url": "https://github.com/indutny/asn1.js/issues"
              },
              "dependencies": {
                "asn1.js-rfc5280": {
                  "_args": [
                    [
                      "asn1.js-rfc5280@3.0.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "asn1.js-rfc5280@3.0.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "asn1.js-rfc5280@3.0.0",
                  "_id": "asn1.js-rfc5280@3.0.0",
                  "_integrity": "sha512-Y2LZPOWeZ6qehv698ZgOGGCZXBQShObWnGthTrIFlIQjuV1gg2B8QOhWFRExq/MR1VnPpIIe7P9vX2vElxv+Pg==",
                  "_location": "/asn1.js-rfc5280",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "asn1.js-rfc5280@3.0.0",
                    "name": "asn1.js-rfc5280",
                    "escapedName": "asn1.js-rfc5280",
                    "rawSpec": "3.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.0.0"
                  },
                  "_requiredBy": [
                    "/asn1.js-rfc2560",
                    "/snowflake-sdk"
                  ],
                  "_resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-3.0.0.tgz",
                  "_spec": "3.0.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Felix Hanley"
                  },
                  "bugs": {
                    "url": "https://github.com/indutny/asn1.js/issues"
                  },
                  "dependencies": {},
                  "description": "RFC5280 extension structures for asn1.js",
                  "devDependencies": {
                    "mocha": "^4.0.1"
                  },
                  "homepage": "https://github.com/indutny/asn1.js",
                  "keywords": [
                    "asn1",
                    "rfc5280",
                    "der"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "asn1.js-rfc5280",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/indutny/asn1.js.git"
                  },
                  "scripts": {
                    "test": "mocha --reporter=spec test/*-test.js"
                  },
                  "version": "3.0.0",
                  "readme": "ERROR: No README data found!",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "asn1.js": "^5.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/asn1.js-rfc5280",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "asn1.js-rfc5280"
                }
              },
              "description": "RFC2560 structures for asn1.js",
              "devDependencies": {
                "mocha": "^4.0.1"
              },
              "homepage": "https://github.com/indutny/asn1.js",
              "keywords": [
                "asn1",
                "rfc2560",
                "der"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "asn1.js-rfc2560",
              "peerDependencies": {
                "asn1.js": "^5.0.0"
              },
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/indutny/asn1.js.git"
              },
              "scripts": {
                "test": "mocha --reporter=spec test/*-test.js"
              },
              "version": "5.0.1",
              "readme": "ERROR: No README data found!",
              "optionalDependencies": {},
              "_dependencies": {
                "asn1.js-rfc5280": "^3.0.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/asn1.js-rfc2560",
              "error": "[Circular]",
              "extraneous": false
            },
            "asn1.js-rfc5280": {
              "_args": "[Circular]",
              "_from": "asn1.js-rfc5280@3.0.0",
              "_id": "asn1.js-rfc5280@3.0.0",
              "_integrity": "sha512-Y2LZPOWeZ6qehv698ZgOGGCZXBQShObWnGthTrIFlIQjuV1gg2B8QOhWFRExq/MR1VnPpIIe7P9vX2vElxv+Pg==",
              "_location": "/asn1.js-rfc5280",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "asn1.js-rfc5280@3.0.0",
                "name": "asn1.js-rfc5280",
                "escapedName": "asn1.js-rfc5280",
                "rawSpec": "3.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.0.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-3.0.0.tgz",
              "_spec": "3.0.0",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {
                "asn1.js": {
                  "_args": [
                    [
                      "asn1.js@5.3.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "asn1.js@5.3.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "asn1.js@5.3.0",
                  "_id": "asn1.js@5.3.0",
                  "_integrity": "sha512-WHnQJFcOrIWT1RLOkFFBQkFVvyt9BPOOrH+Dp152Zk4R993rSzXUGPmkybIcUFhHE2d/iHH+nCaOWVCDbO8fgA==",
                  "_location": "/asn1.js",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "asn1.js@5.3.0",
                    "name": "asn1.js",
                    "escapedName": "asn1.js",
                    "rawSpec": "5.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.3.0"
                  },
                  "_requiredBy": [
                    "/asn1.js-rfc5280"
                  ],
                  "_resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-5.3.0.tgz",
                  "_spec": "5.3.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Fedor Indutny"
                  },
                  "bugs": {
                    "url": "https://github.com/indutny/asn1.js/issues"
                  },
                  "dependencies": {
                    "bn.js": {
                      "_args": [
                        [
                          "bn.js@4.11.8",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "bn.js@4.11.8",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "bn.js@4.11.8",
                      "_id": "bn.js@4.11.8",
                      "_integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==",
                      "_location": "/bn.js",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "bn.js@4.11.8",
                        "name": "bn.js",
                        "escapedName": "bn.js",
                        "rawSpec": "4.11.8",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "4.11.8"
                      },
                      "_requiredBy": [
                        "/asn1.js",
                        "/ocsp/asn1.js"
                      ],
                      "_resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
                      "_spec": "4.11.8",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Fedor Indutny",
                        "email": "fedor@indutny.com"
                      },
                      "browser": {
                        "buffer": false
                      },
                      "bugs": {
                        "url": "https://github.com/indutny/bn.js/issues"
                      },
                      "description": "Big number implementation in pure javascript",
                      "devDependencies": {
                        "istanbul": "^0.3.5",
                        "mocha": "^2.1.0",
                        "semistandard": "^7.0.4"
                      },
                      "homepage": "https://github.com/indutny/bn.js",
                      "keywords": [
                        "BN",
                        "BigNum",
                        "Big number",
                        "Modulo",
                        "Montgomery"
                      ],
                      "license": "MIT",
                      "main": "lib/bn.js",
                      "name": "bn.js",
                      "repository": {
                        "type": "git",
                        "url": "git+ssh://git@github.com/indutny/bn.js.git"
                      },
                      "scripts": {
                        "lint": "semistandard",
                        "test": "npm run lint && npm run unit",
                        "unit": "mocha --reporter=spec test/*-test.js"
                      },
                      "version": "4.11.8",
                      "readme": "# <img src=\"./logo.png\" alt=\"bn.js\" width=\"160\" height=\"160\" />\n\n> BigNum in pure javascript\n\n[![Build Status](https://secure.travis-ci.org/indutny/bn.js.png)](http://travis-ci.org/indutny/bn.js)\n\n## Install\n`npm install --save bn.js`\n\n## Usage\n\n```js\nconst BN = require('bn.js');\n\nvar a = new BN('dead', 16);\nvar b = new BN('101010', 2);\n\nvar res = a.add(b);\nconsole.log(res.toString(10));  // 57047\n```\n\n**Note**: decimals are not supported in this library.\n\n## Notation\n\n### Prefixes\n\nThere are several prefixes to instructions that affect the way the work. Here\nis the list of them in the order of appearance in the function name:\n\n* `i` - perform operation in-place, storing the result in the host object (on\n  which the method was invoked). Might be used to avoid number allocation costs\n* `u` - unsigned, ignore the sign of operands when performing operation, or\n  always return positive value. Second case applies to reduction operations\n  like `mod()`. In such cases if the result will be negative - modulo will be\n  added to the result to make it positive\n\n### Postfixes\n\nThe only available postfix at the moment is:\n\n* `n` - which means that the argument of the function must be a plain JavaScript\n  Number. Decimals are not supported.\n\n### Examples\n\n* `a.iadd(b)` - perform addition on `a` and `b`, storing the result in `a`\n* `a.umod(b)` - reduce `a` modulo `b`, returning positive value\n* `a.iushln(13)` - shift bits of `a` left by 13\n\n## Instructions\n\nPrefixes/postfixes are put in parens at the of the line. `endian` - could be\neither `le` (little-endian) or `be` (big-endian).\n\n### Utilities\n\n* `a.clone()` - clone number\n* `a.toString(base, length)` - convert to base-string and pad with zeroes\n* `a.toNumber()` - convert to Javascript Number (limited to 53 bits)\n* `a.toJSON()` - convert to JSON compatible hex string (alias of `toString(16)`)\n* `a.toArray(endian, length)` - convert to byte `Array`, and optionally zero\n  pad to length, throwing if already exceeding\n* `a.toArrayLike(type, endian, length)` - convert to an instance of `type`,\n  which must behave like an `Array`\n* `a.toBuffer(endian, length)` - convert to Node.js Buffer (if available). For\n  compatibility with browserify and similar tools, use this instead:\n  `a.toArrayLike(Buffer, endian, length)`\n* `a.bitLength()` - get number of bits occupied\n* `a.zeroBits()` - return number of less-significant consequent zero bits\n  (example: `1010000` has 4 zero bits)\n* `a.byteLength()` - return number of bytes occupied\n* `a.isNeg()` - true if the number is negative\n* `a.isEven()` - no comments\n* `a.isOdd()` - no comments\n* `a.isZero()` - no comments\n* `a.cmp(b)` - compare numbers and return `-1` (a `<` b), `0` (a `==` b), or `1` (a `>` b)\n  depending on the comparison result (`ucmp`, `cmpn`)\n* `a.lt(b)` - `a` less than `b` (`n`)\n* `a.lte(b)` - `a` less than or equals `b` (`n`)\n* `a.gt(b)` - `a` greater than `b` (`n`)\n* `a.gte(b)` - `a` greater than or equals `b` (`n`)\n* `a.eq(b)` - `a` equals `b` (`n`)\n* `a.toTwos(width)` - convert to two's complement representation, where `width` is bit width\n* `a.fromTwos(width)` - convert from two's complement representation, where `width` is the bit width\n* `BN.isBN(object)` - returns true if the supplied `object` is a BN.js instance\n\n### Arithmetics\n\n* `a.neg()` - negate sign (`i`)\n* `a.abs()` - absolute value (`i`)\n* `a.add(b)` - addition (`i`, `n`, `in`)\n* `a.sub(b)` - subtraction (`i`, `n`, `in`)\n* `a.mul(b)` - multiply (`i`, `n`, `in`)\n* `a.sqr()` - square (`i`)\n* `a.pow(b)` - raise `a` to the power of `b`\n* `a.div(b)` - divide (`divn`, `idivn`)\n* `a.mod(b)` - reduct (`u`, `n`) (but no `umodn`)\n* `a.divRound(b)` - rounded division\n\n### Bit operations\n\n* `a.or(b)` - or (`i`, `u`, `iu`)\n* `a.and(b)` - and (`i`, `u`, `iu`, `andln`) (NOTE: `andln` is going to be replaced\n  with `andn` in future)\n* `a.xor(b)` - xor (`i`, `u`, `iu`)\n* `a.setn(b)` - set specified bit to `1`\n* `a.shln(b)` - shift left (`i`, `u`, `iu`)\n* `a.shrn(b)` - shift right (`i`, `u`, `iu`)\n* `a.testn(b)` - test if specified bit is set\n* `a.maskn(b)` - clear bits with indexes higher or equal to `b` (`i`)\n* `a.bincn(b)` - add `1 << b` to the number\n* `a.notn(w)` - not (for the width specified by `w`) (`i`)\n\n### Reduction\n\n* `a.gcd(b)` - GCD\n* `a.egcd(b)` - Extended GCD results (`{ a: ..., b: ..., gcd: ... }`)\n* `a.invm(b)` - inverse `a` modulo `b`\n\n## Fast reduction\n\nWhen doing lots of reductions using the same modulo, it might be beneficial to\nuse some tricks: like [Montgomery multiplication][0], or using special algorithm\nfor [Mersenne Prime][1].\n\n### Reduction context\n\nTo enable this tricks one should create a reduction context:\n\n```js\nvar red = BN.red(num);\n```\nwhere `num` is just a BN instance.\n\nOr:\n\n```js\nvar red = BN.red(primeName);\n```\n\nWhere `primeName` is either of these [Mersenne Primes][1]:\n\n* `'k256'`\n* `'p224'`\n* `'p192'`\n* `'p25519'`\n\nOr:\n\n```js\nvar red = BN.mont(num);\n```\n\nTo reduce numbers with [Montgomery trick][0]. `.mont()` is generally faster than\n`.red(num)`, but slower than `BN.red(primeName)`.\n\n### Converting numbers\n\nBefore performing anything in reduction context - numbers should be converted\nto it. Usually, this means that one should:\n\n* Convert inputs to reducted ones\n* Operate on them in reduction context\n* Convert outputs back from the reduction context\n\nHere is how one may convert numbers to `red`:\n\n```js\nvar redA = a.toRed(red);\n```\nWhere `red` is a reduction context created using instructions above\n\nHere is how to convert them back:\n\n```js\nvar a = redA.fromRed();\n```\n\n### Red instructions\n\nMost of the instructions from the very start of this readme have their\ncounterparts in red context:\n\n* `a.redAdd(b)`, `a.redIAdd(b)`\n* `a.redSub(b)`, `a.redISub(b)`\n* `a.redShl(num)`\n* `a.redMul(b)`, `a.redIMul(b)`\n* `a.redSqr()`, `a.redISqr()`\n* `a.redSqrt()` - square root modulo reduction context's prime\n* `a.redInvm()` - modular inverse of the number\n* `a.redNeg()`\n* `a.redPow(b)` - modular exponentiation\n\n## LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2015.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[0]: https://en.wikipedia.org/wiki/Montgomery_modular_multiplication\n[1]: https://en.wikipedia.org/wiki/Mersenne_prime\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/bn.js",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "inherits": {
                      "_args": "[Circular]",
                      "_from": "inherits@2.0.4",
                      "_id": "inherits@2.0.4",
                      "_integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
                      "_location": "/inherits",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "inherits@2.0.4",
                        "name": "inherits",
                        "escapedName": "inherits",
                        "rawSpec": "2.0.4",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.0.4"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
                      "_spec": "2.0.4",
                      "_where": "/path/to/project/packages/shared",
                      "browser": "./inherits_browser.js",
                      "bugs": "[Circular]",
                      "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
                      "devDependencies": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/isaacs/inherits#readme",
                      "keywords": "[Circular]",
                      "license": "ISC",
                      "main": "./inherits.js",
                      "name": "inherits",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "2.0.4",
                      "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/inherits",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "inherits"
                    },
                    "minimalistic-assert": {
                      "_args": [
                        [
                          "minimalistic-assert@1.0.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "minimalistic-assert@1.0.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "minimalistic-assert@1.0.1",
                      "_id": "minimalistic-assert@1.0.1",
                      "_integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
                      "_location": "/minimalistic-assert",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "minimalistic-assert@1.0.1",
                        "name": "minimalistic-assert",
                        "escapedName": "minimalistic-assert",
                        "rawSpec": "1.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.1"
                      },
                      "_requiredBy": [
                        "/asn1.js",
                        "/ocsp/asn1.js"
                      ],
                      "_resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
                      "_spec": "1.0.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": "",
                      "bugs": {
                        "url": "https://github.com/calvinmetcalf/minimalistic-assert/issues"
                      },
                      "description": "minimalistic-assert ===",
                      "homepage": "https://github.com/calvinmetcalf/minimalistic-assert",
                      "license": "ISC",
                      "main": "index.js",
                      "name": "minimalistic-assert",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/calvinmetcalf/minimalistic-assert.git"
                      },
                      "scripts": {
                        "test": "echo \"Error: no test specified\" && exit 1"
                      },
                      "version": "1.0.1",
                      "readme": "minimalistic-assert\n===\n\nvery minimalistic assert module.\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "devDependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/minimalistic-assert",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "safer-buffer": {
                      "_args": [
                        [
                          "safer-buffer@2.1.2",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "safer-buffer@2.1.2",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "safer-buffer@2.1.2",
                      "_id": "safer-buffer@2.1.2",
                      "_integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
                      "_location": "/safer-buffer",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "safer-buffer@2.1.2",
                        "name": "safer-buffer",
                        "escapedName": "safer-buffer",
                        "rawSpec": "2.1.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.1.2"
                      },
                      "_requiredBy": [
                        "/asn1",
                        "/asn1.js",
                        "/ecc-jsbn",
                        "/sshpk"
                      ],
                      "_resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
                      "_spec": "2.1.2",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Nikita Skovoroda",
                        "email": "chalkerx@gmail.com",
                        "url": "https://github.com/ChALkeR"
                      },
                      "bugs": {
                        "url": "https://github.com/ChALkeR/safer-buffer/issues"
                      },
                      "description": "Modern Buffer API polyfill without footguns",
                      "devDependencies": {
                        "standard": "^11.0.1",
                        "tape": "^4.9.0"
                      },
                      "files": [
                        "Porting-Buffer.md",
                        "Readme.md",
                        "tests.js",
                        "dangerous.js",
                        "safer.js"
                      ],
                      "homepage": "https://github.com/ChALkeR/safer-buffer#readme",
                      "license": "MIT",
                      "main": "safer.js",
                      "name": "safer-buffer",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/ChALkeR/safer-buffer.git"
                      },
                      "scripts": {
                        "browserify-test": "browserify --external tape tests.js > browserify-tests.js && tape browserify-tests.js",
                        "test": "standard && tape tests.js"
                      },
                      "version": "2.1.2",
                      "readme": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing,\n«fixing» the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API — a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing…\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case — just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled — use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## «Without footguns»?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule).\n",
                      "readmeFilename": "Readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/safer-buffer",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "ASN.1 encoder and decoder",
                  "devDependencies": {
                    "eslint": "^4.10.0",
                    "mocha": "^7.0.0"
                  },
                  "homepage": "https://github.com/indutny/asn1.js",
                  "keywords": [
                    "asn.1",
                    "der"
                  ],
                  "license": "MIT",
                  "main": "lib/asn1.js",
                  "name": "asn1.js",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/indutny/asn1.js.git"
                  },
                  "scripts": {
                    "lint": "eslint --fix lib/*.js lib/**/*.js lib/**/**/*.js && npm run lint-2560 && npm run lint-5280",
                    "lint-2560": "eslint --fix rfc/2560/*.js rfc/2560/test/*.js",
                    "lint-5280": "eslint --fix rfc/5280/*.js rfc/5280/test/*.js",
                    "test": "mocha --reporter spec test/*-test.js && cd rfc/2560 && npm i && npm test && cd ../../rfc/5280 && npm i && npm test && cd ../../ && npm run lint"
                  },
                  "version": "5.3.0",
                  "readme": "# ASN1.js\n\nASN.1 DER Encoder/Decoder and DSL.\n\n## Example\n\nDefine model:\n\n```javascript\nvar asn = require('asn1.js');\n\nvar Human = asn.define('Human', function() {\n  this.seq().obj(\n    this.key('firstName').octstr(),\n    this.key('lastName').octstr(),\n    this.key('age').int(),\n    this.key('gender').enum({ 0: 'male', 1: 'female' }),\n    this.key('bio').seqof(Bio)\n  );\n});\n\nvar Bio = asn.define('Bio', function() {\n  this.seq().obj(\n    this.key('time').gentime(),\n    this.key('description').octstr()\n  );\n});\n```\n\nEncode data:\n\n```javascript\nvar output = Human.encode({\n  firstName: 'Thomas',\n  lastName: 'Anderson',\n  age: 28,\n  gender: 'male',\n  bio: [\n    {\n      time: +new Date('31 March 1999'),\n      description: 'freedom of mind'\n    }\n  ]\n}, 'der');\n```\n\nDecode data:\n\n```javascript\nvar human = Human.decode(output, 'der');\nconsole.log(human);\n/*\n{ firstName: <Buffer 54 68 6f 6d 61 73>,\n  lastName: <Buffer 41 6e 64 65 72 73 6f 6e>,\n  age: 28,\n  gender: 'male',\n  bio:\n   [ { time: 922820400000,\n       description: <Buffer 66 72 65 65 64 6f 6d 20 6f 66 20 6d 69 6e 64> } ] }\n*/\n```\n\n### Partial decode\n\nIts possible to parse data without stopping on first error. In order to do it,\nyou should call:\n\n```javascript\nvar human = Human.decode(output, 'der', { partial: true });\nconsole.log(human);\n/*\n{ result: { ... },\n  errors: [ ... ] }\n*/\n```\n\n#### LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2017.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "bn.js": "^4.0.0",
                    "inherits": "^2.0.1",
                    "minimalistic-assert": "^1.0.0",
                    "safer-buffer": "^2.1.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/asn1.js",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "RFC5280 extension structures for asn1.js",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/indutny/asn1.js",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "index.js",
              "name": "asn1.js-rfc5280",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.0.0",
              "readme": "ERROR: No README data found!",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/asn1.js-rfc5280",
              "error": "[Circular]",
              "extraneous": false
            },
            "big-integer": {
              "_args": [
                [
                  "big-integer@1.6.48",
                  "/path/to/project/packages/shared"
                ],
                [
                  "big-integer@1.6.48",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "big-integer@1.6.48",
              "_id": "big-integer@1.6.48",
              "_integrity": "sha512-j51egjPa7/i+RdiRuJbPdJ2FIUYYPhvYLjzoYbcMMm62ooO6F94fETG4MTs46zPAF9Brs04OajboA/qTGuz78w==",
              "_location": "/big-integer",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "big-integer@1.6.48",
                "name": "big-integer",
                "escapedName": "big-integer",
                "rawSpec": "1.6.48",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.6.48"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.48.tgz",
              "_spec": "1.6.48",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Peter Olson",
                "email": "peter.e.c.olson+npm@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/peterolson/BigInteger.js/issues"
              },
              "contributors": [],
              "description": "An arbitrary length integer library for Javascript",
              "devDependencies": {
                "@types/lodash": "^4.14.118",
                "@types/node": "^7.10.2",
                "coveralls": "^3.0.6",
                "jasmine": "3.5.0",
                "jasmine-core": "^3.5.0",
                "karma": "^4.3.0",
                "karma-cli": "^2.0.0",
                "karma-coverage": "^2.0.1",
                "karma-jasmine": "^2.0.1",
                "karma-phantomjs-launcher": "^1.0.4",
                "lodash": "^4.17.11",
                "typescript": "^3.6.3",
                "uglifyjs": "^2.4.10"
              },
              "engines": {
                "node": ">=0.6"
              },
              "homepage": "https://github.com/peterolson/BigInteger.js#readme",
              "keywords": [
                "math",
                "big",
                "bignum",
                "bigint",
                "biginteger",
                "integer",
                "arbitrary",
                "precision",
                "arithmetic"
              ],
              "license": "Unlicense",
              "main": "./BigInteger",
              "name": "big-integer",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/peterolson/BigInteger.js.git"
              },
              "scripts": {
                "minify": "uglifyjs BigInteger.js -o BigInteger.min.js",
                "test": "tsc && karma start my.conf.js && node spec/tsDefinitions.js"
              },
              "typings": "./BigInteger.d.ts",
              "version": "1.6.48",
              "readme": "# BigInteger.js [![Build Status][travis-img]][travis-url] [![Coverage Status][coveralls-img]][coveralls-url] [![Monthly Downloads][downloads-img]][downloads-url]\r\n\r\n[travis-url]: https://travis-ci.org/peterolson/BigInteger.js\r\n[travis-img]: https://travis-ci.org/peterolson/BigInteger.js.svg?branch=master\r\n[coveralls-url]: https://coveralls.io/github/peterolson/BigInteger.js?branch=master\r\n[coveralls-img]: https://coveralls.io/repos/peterolson/BigInteger.js/badge.svg?branch=master&service=github\r\n[downloads-url]: https://www.npmjs.com/package/big-integer\r\n[downloads-img]: https://img.shields.io/npm/dm/big-integer.svg\r\n\r\n**BigInteger.js** is an arbitrary-length integer library for Javascript, allowing arithmetic operations on integers of unlimited size, notwithstanding memory and time limitations.\r\n\r\n**Update (December 2, 2018):** [`BigInt` is being added as a native feature of JavaScript](https://tc39.github.io/proposal-bigint/). This library now works as a polyfill: if the environment supports the native `BigInt`, this library acts as a thin wrapper over the native implementation.\r\n\r\n## Installation\r\n\r\nIf you are using a browser, you can download [BigInteger.js from GitHub](http://peterolson.github.com/BigInteger.js/BigInteger.min.js) or just hotlink to it:\r\n\r\n\t<script src=\"https://peterolson.github.io/BigInteger.js/BigInteger.min.js\"></script>\r\n\r\nIf you are using node, you can install BigInteger with [npm](https://npmjs.org/).\r\n\r\n    npm install big-integer\r\n\r\nThen you can include it in your code:\r\n\r\n\tvar bigInt = require(\"big-integer\");\r\n\r\n\r\n## Usage\r\n### `bigInt(number, [base], [alphabet], [caseSensitive])`\r\n\r\nYou can create a bigInt by calling the `bigInt` function. You can pass in\r\n\r\n - a string, which it will parse as an bigInt and throw an `\"Invalid integer\"` error if the parsing fails.\r\n - a Javascript number, which it will parse as an bigInt and throw an `\"Invalid integer\"` error if the parsing fails.\r\n - another bigInt.\r\n - nothing, and it will return `bigInt.zero`.\r\n\r\n If you provide a second parameter, then it will parse `number` as a number in base `base`. Note that `base` can be any bigInt (even negative or zero). The letters \"a-z\" and \"A-Z\" will be interpreted as the numbers 10 to 35. Higher digits can be specified in angle brackets (`<` and `>`). The default `base` is `10`.\r\n\r\n You can specify a custom alphabet for base conversion with the third parameter. The default `alphabet` is `\"0123456789abcdefghijklmnopqrstuvwxyz\"`.\r\n\r\n The fourth parameter specifies whether or not the number string should be case-sensitive, i.e. whether `a` and `A` should be treated as different digits. By default `caseSensitive` is `false`.\r\n\r\nExamples:\r\n\r\n    var zero = bigInt();\r\n    var ninetyThree = bigInt(93);\r\n\tvar largeNumber = bigInt(\"75643564363473453456342378564387956906736546456235345\");\r\n\tvar googol = bigInt(\"1e100\");\r\n\tvar bigNumber = bigInt(largeNumber);\r\n\r\n\tvar maximumByte = bigInt(\"FF\", 16);\r\n\tvar fiftyFiveGoogol = bigInt(\"<55>0\", googol);\r\n\r\nNote that Javascript numbers larger than `9007199254740992` and smaller than `-9007199254740992` are not precisely represented numbers and will not produce exact results. If you are dealing with numbers outside that range, it is better to pass in strings.\r\n\r\n### Method Chaining\r\n\r\nNote that bigInt operations return bigInts, which allows you to chain methods, for example:\r\n\r\n    var salary = bigInt(dollarsPerHour).times(hoursWorked).plus(randomBonuses)\r\n\r\n### Constants\r\n\r\nThere are three named constants already stored that you do not have to construct with the `bigInt` function yourself:\r\n\r\n - `bigInt.one`, equivalent to `bigInt(1)`\r\n - `bigInt.zero`, equivalent to `bigInt(0)`\r\n - `bigInt.minusOne`, equivalent to `bigInt(-1)`\r\n\r\nThe numbers from -999 to 999 are also already prestored and can be accessed using `bigInt[index]`, for example:\r\n\r\n - `bigInt[-999]`, equivalent to `bigInt(-999)`\r\n - `bigInt[256]`, equivalent to `bigInt(256)`\r\n\r\n### Methods\r\n\r\n#### `abs()`\r\n\r\nReturns the absolute value of a bigInt.\r\n\r\n - `bigInt(-45).abs()` => `45`\r\n - `bigInt(45).abs()` => `45`\r\n\r\n#### `add(number)`\r\n\r\nPerforms addition.\r\n\r\n - `bigInt(5).add(7)` => `12`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Addition)\r\n\r\n#### `and(number)`\r\n\r\nPerforms the bitwise AND operation. The operands are treated as if they were represented using [two's complement representation](http://en.wikipedia.org/wiki/Two%27s_complement).\r\n\r\n - `bigInt(6).and(3)` => `2`\r\n - `bigInt(6).and(-3)` => `4`\r\n\r\n#### `bitLength()`\r\n\r\nReturns the number of digits required to represent a bigInt in binary.\r\n\r\n - `bigInt(5)` => `3` (since 5 is `101` in binary, which is three digits long)\r\n\r\n#### `compare(number)`\r\n\r\nPerforms a comparison between two numbers. If the numbers are equal, it returns `0`. If the first number is greater, it returns `1`. If the first number is lesser, it returns `-1`.\r\n\r\n - `bigInt(5).compare(5)` => `0`\r\n - `bigInt(5).compare(4)` => `1`\r\n - `bigInt(4).compare(5)` => `-1`\r\n\r\n#### `compareAbs(number)`\r\n\r\nPerforms a comparison between the absolute value of two numbers.\r\n\r\n - `bigInt(5).compareAbs(-5)` => `0`\r\n - `bigInt(5).compareAbs(4)` => `1`\r\n - `bigInt(4).compareAbs(-5)` => `-1`\r\n\r\n#### `compareTo(number)`\r\n\r\nAlias for the `compare` method.\r\n\r\n#### `divide(number)`\r\n\r\nPerforms integer division, disregarding the remainder.\r\n\r\n - `bigInt(59).divide(5)` => `11`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Division)\r\n\r\n#### `divmod(number)`\r\n\r\nPerforms division and returns an object with two properties: `quotient` and `remainder`. The sign of the remainder will match the sign of the dividend.\r\n\r\n - `bigInt(59).divmod(5)` => `{quotient: bigInt(11), remainder: bigInt(4) }`\r\n - `bigInt(-5).divmod(2)` => `{quotient: bigInt(-2), remainder: bigInt(-1) }`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Division)\r\n\r\n#### `eq(number)`\r\n\r\nAlias for the `equals` method.\r\n\r\n#### `equals(number)`\r\n\r\nChecks if two numbers are equal.\r\n\r\n - `bigInt(5).equals(5)` => `true`\r\n - `bigInt(4).equals(7)` => `false`\r\n\r\n#### `geq(number)`\r\n\r\nAlias for the `greaterOrEquals` method.\r\n\r\n\r\n#### `greater(number)`\r\n\r\nChecks if the first number is greater than the second.\r\n\r\n - `bigInt(5).greater(6)` => `false`\r\n - `bigInt(5).greater(5)` => `false`\r\n - `bigInt(5).greater(4)` => `true`\r\n\r\n#### `greaterOrEquals(number)`\r\n\r\nChecks if the first number is greater than or equal to the second.\r\n\r\n - `bigInt(5).greaterOrEquals(6)` => `false`\r\n - `bigInt(5).greaterOrEquals(5)` => `true`\r\n - `bigInt(5).greaterOrEquals(4)` => `true`\r\n\r\n#### `gt(number)`\r\n\r\nAlias for the `greater` method.\r\n\r\n#### `isDivisibleBy(number)`\r\n\r\nReturns `true` if the first number is divisible by the second number, `false` otherwise.\r\n\r\n - `bigInt(999).isDivisibleBy(333)` => `true`\r\n - `bigInt(99).isDivisibleBy(5)` => `false`\r\n\r\n#### `isEven()`\r\n\r\nReturns `true` if the number is even, `false` otherwise.\r\n\r\n - `bigInt(6).isEven()` => `true`\r\n - `bigInt(3).isEven()` => `false`\r\n\r\n#### `isNegative()`\r\n\r\nReturns `true` if the number is negative, `false` otherwise.\r\nReturns `false` for `0` and `-0`.\r\n\r\n - `bigInt(-23).isNegative()` => `true`\r\n - `bigInt(50).isNegative()` => `false`\r\n\r\n#### `isOdd()`\r\n\r\nReturns `true` if the number is odd, `false` otherwise.\r\n\r\n - `bigInt(13).isOdd()` => `true`\r\n - `bigInt(40).isOdd()` => `false`\r\n\r\n#### `isPositive()`\r\n\r\nReturn `true` if the number is positive, `false` otherwise.\r\nReturns `false` for `0` and `-0`.\r\n\r\n - `bigInt(54).isPositive()` => `true`\r\n - `bigInt(-1).isPositive()` => `false`\r\n\r\n#### `isPrime()`\r\n\r\nReturns `true` if the number is prime, `false` otherwise.\r\n\r\n - `bigInt(5).isPrime()` => `true`\r\n - `bigInt(6).isPrime()` => `false`\r\n\r\n#### `isProbablePrime([iterations], [rng])`\r\n\r\nReturns `true` if the number is very likely to be prime, `false` otherwise.\r\nSupplying `iterations` is optional - it determines the number of iterations of the test (default: `5`). The more iterations, the lower chance of getting a false positive.\r\nThis uses the [Miller Rabin test](https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test).\r\n\r\n - `bigInt(5).isProbablePrime()` => `true`\r\n - `bigInt(49).isProbablePrime()` => `false`\r\n - `bigInt(1729).isProbablePrime()` => `false`\r\n\r\nNote that this function is not deterministic, since it relies on random sampling of factors, so the result for some numbers is not always the same - unless you pass a predictable random number generator as `rng`. The behavior and requirements are the same as with `randBetween`.\r\n\r\n - `bigInt(1729).isProbablePrime(1, () => 0.1)` => `false`\r\n - `bigInt(1729).isProbablePrime(1, () => 0.2)` => `true`\r\n\r\nIf the number is composite then the Miller–Rabin primality test declares the number probably prime with a probability at most `4` to the power `−iterations`.\r\nIf the number is prime, this function always returns `true`.\r\n\r\n#### `isUnit()`\r\n\r\nReturns `true` if the number is `1` or `-1`, `false` otherwise.\r\n\r\n - `bigInt.one.isUnit()` => `true`\r\n - `bigInt.minusOne.isUnit()` => `true`\r\n - `bigInt(5).isUnit()` => `false`\r\n\r\n#### `isZero()`\r\n\r\nReturn `true` if the number is `0` or `-0`, `false` otherwise.\r\n\r\n - `bigInt.zero.isZero()` => `true`\r\n - `bigInt(\"-0\").isZero()` => `true`\r\n - `bigInt(50).isZero()` => `false`\r\n\r\n#### `leq(number)`\r\n\r\nAlias for the `lesserOrEquals` method.\r\n\r\n#### `lesser(number)`\r\n\r\nChecks if the first number is lesser than the second.\r\n\r\n - `bigInt(5).lesser(6)` => `true`\r\n - `bigInt(5).lesser(5)` => `false`\r\n - `bigInt(5).lesser(4)` => `false`\r\n\r\n#### `lesserOrEquals(number)`\r\n\r\nChecks if the first number is less than or equal to the second.\r\n\r\n - `bigInt(5).lesserOrEquals(6)` => `true`\r\n - `bigInt(5).lesserOrEquals(5)` => `true`\r\n - `bigInt(5).lesserOrEquals(4)` => `false`\r\n\r\n#### `lt(number)`\r\n\r\nAlias for the `lesser` method.\r\n\r\n#### `minus(number)`\r\n\r\nAlias for the `subtract` method.\r\n\r\n - `bigInt(3).minus(5)` => `-2`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Subtraction)\r\n\r\n#### `mod(number)`\r\n\r\nPerforms division and returns the remainder, disregarding the quotient. The sign of the remainder will match the sign of the dividend.\r\n\r\n - `bigInt(59).mod(5)` =>  `4`\r\n - `bigInt(-5).mod(2)` => `-1`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Division)\r\n\r\n#### `modInv(mod)`\r\n\r\nFinds the [multiplicative inverse](https://en.wikipedia.org/wiki/Modular_multiplicative_inverse) of the number modulo `mod`.\r\n\r\n - `bigInt(3).modInv(11)` => `4`\r\n - `bigInt(42).modInv(2017)` => `1969`\r\n\r\n#### `modPow(exp, mod)`\r\n\r\nTakes the number to the power `exp` modulo `mod`.\r\n\r\n - `bigInt(10).modPow(3, 30)` => `10`\r\n\r\n#### `multiply(number)`\r\n\r\nPerforms multiplication.\r\n\r\n - `bigInt(111).multiply(111)` => `12321`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Multiplication)\r\n\r\n#### `neq(number)`\r\n\r\nAlias for the `notEquals` method.\r\n\r\n#### `next()`\r\n\r\nAdds one to the number.\r\n\r\n - `bigInt(6).next()` => `7`\r\n\r\n#### `not()`\r\n\r\nPerforms the bitwise NOT operation. The operands are treated as if they were represented using [two's complement representation](http://en.wikipedia.org/wiki/Two%27s_complement).\r\n\r\n - `bigInt(10).not()` => `-11`\r\n - `bigInt(0).not()` => `-1`\r\n\r\n#### `notEquals(number)`\r\n\r\nChecks if two numbers are not equal.\r\n\r\n - `bigInt(5).notEquals(5)` => `false`\r\n - `bigInt(4).notEquals(7)` => `true`\r\n\r\n#### `or(number)`\r\n\r\nPerforms the bitwise OR operation. The operands are treated as if they were represented using [two's complement representation](http://en.wikipedia.org/wiki/Two%27s_complement).\r\n\r\n - `bigInt(13).or(10)` => `15`\r\n - `bigInt(13).or(-8)` => `-3`\r\n\r\n#### `over(number)`\r\n\r\nAlias for the `divide` method.\r\n\r\n - `bigInt(59).over(5)` => `11`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Division)\r\n\r\n#### `plus(number)`\r\n\r\nAlias for the `add` method.\r\n\r\n - `bigInt(5).plus(7)` => `12`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Addition)\r\n\r\n#### `pow(number)`\r\n\r\nPerforms exponentiation. If the exponent is less than `0`, `pow` returns `0`. `bigInt.zero.pow(0)` returns `1`.\r\n\r\n - `bigInt(16).pow(16)` => `18446744073709551616`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Exponentiation)\r\n\r\n#### `prev(number)`\r\n\r\nSubtracts one from the number.\r\n\r\n - `bigInt(6).prev()` => `5`\r\n\r\n#### `remainder(number)`\r\n\r\nAlias for the `mod` method.\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Division)\r\n\r\n#### `shiftLeft(n)`\r\n\r\nShifts the number left by `n` places in its binary representation. If a negative number is provided, it will shift right. Throws an error if `n` is outside of the range `[-9007199254740992, 9007199254740992]`.\r\n\r\n - `bigInt(8).shiftLeft(2)` => `32`\r\n - `bigInt(8).shiftLeft(-2)` => `2`\r\n\r\n#### `shiftRight(n)`\r\n\r\nShifts the number right by `n` places in its binary representation. If a negative number is provided, it will shift left. Throws an error if `n` is outside of the range `[-9007199254740992, 9007199254740992]`.\r\n\r\n - `bigInt(8).shiftRight(2)` => `2`\r\n - `bigInt(8).shiftRight(-2)` => `32`\r\n\r\n#### `square()`\r\n\r\nSquares the number\r\n\r\n - `bigInt(3).square()` => `9`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Squaring)\r\n\r\n#### `subtract(number)`\r\n\r\nPerforms subtraction.\r\n\r\n - `bigInt(3).subtract(5)` => `-2`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Subtraction)\r\n\r\n#### `times(number)`\r\n\r\nAlias for the `multiply` method.\r\n\r\n - `bigInt(111).times(111)` => `12321`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#Multiplication)\r\n\r\n#### `toArray(radix)`\r\n\r\nConverts a bigInt into an object with the properties \"value\" and \"isNegative.\" \"Value\" is an array of integers modulo the given radix. \"isNegative\" is a boolean that represents the sign of the result.\r\n\r\n - `bigInt(\"1e9\").toArray(10)` => {\r\n     value: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n     isNegative: false\r\n   }\r\n - `bigInt(\"1e9\").toArray(16)` => {\r\n     value: [3, 11, 9, 10, 12, 10, 0, 0],\r\n     isNegative: false\r\n   }\r\n - `bigInt(567890).toArray(100)` => {\r\n     value: [56, 78, 90],\r\n     isNegative: false\r\n   }\r\n\r\nNegative bases are supported.\r\n\r\n - `bigInt(12345).toArray(-10)` => {\r\n     value: [2, 8, 4, 6, 5],\r\n     isNegative: false\r\n   }\r\n\r\nBase 1 and base -1 are also supported.\r\n\r\n - `bigInt(-15).toArray(1)` => {\r\n     value: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n     isNegative: true\r\n   }\r\n - `bigInt(-15).toArray(-1)` => {\r\n     value: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\r\n             0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\r\n     isNegative: false\r\n   }\r\n\r\nBase 0 is only allowed for the number zero.\r\n\r\n - `bigInt(0).toArray(0)` => {\r\n     value: [0],\r\n     isNegative: false\r\n   }\r\n - `bigInt(1).toArray(0)` => `Error: Cannot convert nonzero numbers to base 0.`\r\n\r\n#### `toJSNumber()`\r\n\r\nConverts a bigInt into a native Javascript number. Loses precision for numbers outside the range `[-9007199254740992, 9007199254740992]`.\r\n\r\n - `bigInt(\"18446744073709551616\").toJSNumber()` => `18446744073709552000`\r\n\r\n#### `xor(number)`\r\n\r\nPerforms the bitwise XOR operation. The operands are treated as if they were represented using [two's complement representation](http://en.wikipedia.org/wiki/Two%27s_complement).\r\n\r\n - `bigInt(12).xor(5)` => `9`\r\n - `bigInt(12).xor(-5)` => `-9`\r\n\r\n### Static Methods\r\n\r\n#### `fromArray(digits, base = 10, isNegative?)`\r\n\r\nConstructs a bigInt from an array of digits in base `base`. The optional `isNegative` flag will make the number negative.\r\n\r\n - `bigInt.fromArray([1, 2, 3, 4, 5], 10)` => `12345`\r\n - `bigInt.fromArray([1, 0, 0], 2, true)` => `-4`\r\n\r\n#### `gcd(a, b)`\r\n\r\nFinds the greatest common denominator of `a` and `b`.\r\n\r\n - `bigInt.gcd(42,56)` => `14`\r\n\r\n#### `isInstance(x)`\r\n\r\nReturns `true` if `x` is a BigInteger, `false` otherwise.\r\n\r\n - `bigInt.isInstance(bigInt(14))` => `true`\r\n - `bigInt.isInstance(14)` => `false`\r\n\r\n#### `lcm(a,b)`\r\n\r\nFinds the least common multiple of `a` and `b`.\r\n\r\n - `bigInt.lcm(21, 6)` => `42`\r\n\r\n#### `max(a,b)`\r\n\r\nReturns the largest of `a` and `b`.\r\n\r\n - `bigInt.max(77, 432)` => `432`\r\n\r\n#### `min(a,b)`\r\n\r\nReturns the smallest of `a` and `b`.\r\n\r\n - `bigInt.min(77, 432)` => `77`\r\n\r\n#### `randBetween(min, max, [rng])`\r\n\r\nReturns a random number between `min` and `max`, optionally using `rng` to generate randomness.\r\n\r\n - `bigInt.randBetween(\"-1e100\", \"1e100\")` => (for example) `8494907165436643479673097939554427056789510374838494147955756275846226209006506706784609314471378745`\r\n\r\n`rng` should take no arguments and return a `number` between 0 and 1. It defaults to `Math.random`.\r\n\r\n  - `bigInt.randBetween(\"-1e100\", \"1e100\", () => 0.5)` => (always) `50000005000000500000050000005000000500000050000005000000500000050000005000000500000050000005000000`\r\n\r\n\r\n### Override Methods\r\n\r\n#### `toString(radix = 10, [alphabet])`\r\n\r\nConverts a bigInt to a string. There is an optional radix parameter (which defaults to 10) that converts the number to the given radix. Digits in the range `10-35` will use the letters `a-z`.\r\n\r\n - `bigInt(\"1e9\").toString()` => `\"1000000000\"`\r\n - `bigInt(\"1e9\").toString(16)` => `\"3b9aca00\"`\r\n\r\n You can use a custom base alphabet with the second parameter. The default `alphabet` is `\"0123456789abcdefghijklmnopqrstuvwxyz\"`.\r\n\r\n  - `bigInt(\"5\").toString(2, \"aA\")` => `\"AaA\"`\r\n\r\n**Note that arithmetical operators will trigger the `valueOf` function rather than the `toString` function.** When converting a bigInteger to a string, you should use the `toString` method or the `String` function instead of adding the empty string.\r\n\r\n - `bigInt(\"999999999999999999\").toString()` => `\"999999999999999999\"`\r\n - `String(bigInt(\"999999999999999999\"))` => `\"999999999999999999\"`\r\n - `bigInt(\"999999999999999999\") + \"\"` => `1000000000000000000`\r\n\r\nBases larger than 36 are supported. If a digit is greater than or equal to 36, it will be enclosed in angle brackets.\r\n\r\n - `bigInt(567890).toString(100)` => `\"<56><78><90>\"`\r\n\r\nNegative bases are also supported.\r\n\r\n - `bigInt(12345).toString(-10)` => `\"28465\"`\r\n\r\nBase 1 and base -1 are also supported.\r\n\r\n - `bigInt(-15).toString(1)` => `\"-111111111111111\"`\r\n - `bigInt(-15).toString(-1)` => `\"101010101010101010101010101010\"`\r\n\r\nBase 0 is only allowed for the number zero.\r\n\r\n - `bigInt(0).toString(0)` => `0`\r\n - `bigInt(1).toString(0)` => `Error: Cannot convert nonzero numbers to base 0.`\r\n\r\n[View benchmarks for this method](http://peterolson.github.io/BigInteger.js/benchmark/#toString)\r\n\r\n#### `valueOf()`\r\n\r\nConverts a bigInt to a native Javascript number. This override allows you to use native arithmetic operators without explicit conversion:\r\n\r\n - `bigInt(\"100\") + bigInt(\"200\") === 300; //true`\r\n\r\n## Contributors\r\n\r\nTo contribute, just fork the project, make some changes, and submit a pull request. Please verify that the unit tests pass before submitting.\r\n\r\nThe unit tests are contained in the `spec/spec.js` file. You can run them locally by opening the `spec/SpecRunner.html` or file or running `npm test`. You can also [run the tests online from GitHub](http://peterolson.github.io/BigInteger.js/spec/SpecRunner.html).\r\n\r\nThere are performance benchmarks that can be viewed from the `benchmarks/index.html` page. You can [run them online from GitHub](http://peterolson.github.io/BigInteger.js/benchmark/).\r\n\r\n## License\r\n\r\nThis project is public domain. For more details, read about the [Unlicense](http://unlicense.org/).\r\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/big-integer",
              "error": "[Circular]",
              "extraneous": false
            },
            "bignumber.js": {
              "_args": [
                [
                  "bignumber.js@2.4.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "bignumber.js@2.4.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "bignumber.js@2.4.0",
              "_id": "bignumber.js@2.4.0",
              "_integrity": "sha1-g4qZLan51zfg9LLbC+YrsJ3Qxeg=",
              "_location": "/bignumber.js",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "bignumber.js@2.4.0",
                "name": "bignumber.js",
                "escapedName": "bignumber.js",
                "rawSpec": "2.4.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.4.0"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-2.4.0.tgz",
              "_spec": "2.4.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Michael Mclaughlin",
                "email": "M8ch88l@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/MikeMcl/bignumber.js/issues"
              },
              "description": "A library for arbitrary-precision decimal and non-decimal arithmetic",
              "engines": {
                "node": "*"
              },
              "homepage": "https://github.com/MikeMcl/bignumber.js#readme",
              "keywords": [
                "arbitrary",
                "precision",
                "arithmetic",
                "big",
                "number",
                "decimal",
                "float",
                "biginteger",
                "bigdecimal",
                "bignumber",
                "bigint",
                "bignum"
              ],
              "license": "MIT",
              "main": "bignumber.js",
              "name": "bignumber.js",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/MikeMcl/bignumber.js.git"
              },
              "scripts": {
                "build": "uglifyjs bignumber.js --source-map bignumber.js.map -c -m -o bignumber.min.js --preamble \"/* bignumber.js v2.4.0 https://github.com/MikeMcl/bignumber.js/LICENCE */\"",
                "test": "node ./test/every-test.js"
              },
              "version": "2.4.0",
              "readme": "![bignumber.js](https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/bignumberjs.png)\r\n\r\nA JavaScript library for arbitrary-precision decimal and non-decimal arithmetic.\r\n\r\n[![Build Status](https://travis-ci.org/MikeMcl/bignumber.js.svg)](https://travis-ci.org/MikeMcl/bignumber.js)\r\n\r\n<br />\r\n\r\n## Features\r\n\r\n  - Faster, smaller, and perhaps easier to use than JavaScript versions of Java's BigDecimal\r\n  - 8 KB minified and gzipped\r\n  - Simple API but full-featured\r\n  - Works with numbers with or without fraction digits in bases from 2 to 64 inclusive\r\n  - Replicates the `toExponential`, `toFixed`, `toPrecision` and `toString` methods of JavaScript's Number type\r\n  - Includes a `toFraction` and a correctly-rounded `squareRoot` method\r\n  - Supports cryptographically-secure pseudo-random number generation\r\n  - No dependencies\r\n  - Wide platform compatibility: uses JavaScript 1.5 (ECMAScript 3) features only\r\n  - Comprehensive [documentation](http://mikemcl.github.io/bignumber.js/) and test set\r\n\r\n![API](https://raw.githubusercontent.com/MikeMcl/bignumber.js/gh-pages/API.png)\r\n\r\nIf a smaller and simpler library is required see [big.js](https://github.com/MikeMcl/big.js/).\r\nIt's less than half the size but only works with decimal numbers and only has half the methods.\r\nIt also does not allow `NaN` or `Infinity`, or have the configuration options of this library.\r\n\r\nSee also [decimal.js](https://github.com/MikeMcl/decimal.js/), which among other things adds support for non-integer powers, and performs all operations to a specified number of significant digits.\r\n\r\n## Load\r\n\r\nThe library is the single JavaScript file *bignumber.js* (or minified, *bignumber.min.js*).\r\n\r\n```html\r\n<script src='relative/path/to/bignumber.js'></script>\r\n```\r\n\r\nFor [Node.js](http://nodejs.org), the library is available from the [npm](https://npmjs.org/) registry\r\n\r\n    $ npm install bignumber.js\r\n\r\n```javascript\r\nvar BigNumber = require('bignumber.js');\r\n```\r\n\r\nTo load with AMD loader libraries such as [requireJS](http://requirejs.org/):\r\n\r\n```javascript\r\nrequire(['path/to/bignumber'], function(BigNumber) {\r\n    // Use BigNumber here in local scope. No global BigNumber.\r\n});\r\n```\r\n\r\n## Use\r\n\r\n*In all examples below, `var`, semicolons and `toString` calls are not shown.\r\nIf a commented-out value is in quotes it means `toString` has been called on the preceding expression.*\r\n\r\nThe library exports a single function: `BigNumber`, the constructor of BigNumber instances.\r\n\r\nIt accepts a value of type number *(up to 15 significant digits only)*, string or BigNumber object,\r\n\r\n```javascript\r\nx = new BigNumber(123.4567)\r\ny = BigNumber('123456.7e-3')\r\nz = new BigNumber(x)\r\nx.equals(y) && y.equals(z) && x.equals(z)      // true\r\n```\r\n\r\n\r\nand a base from 2 to 64 inclusive can be specified.\r\n\r\n```javascript\r\nx = new BigNumber(1011, 2)          // \"11\"\r\ny = new BigNumber('zz.9', 36)       // \"1295.25\"\r\nz = x.plus(y)                       // \"1306.25\"\r\n```\r\n\r\nA BigNumber is immutable in the sense that it is not changed by its methods.\r\n\r\n```javascript\r\n0.3 - 0.1                           // 0.19999999999999998\r\nx = new BigNumber(0.3)\r\nx.minus(0.1)                        // \"0.2\"\r\nx                                   // \"0.3\"\r\n```\r\n\r\nThe methods that return a BigNumber can be chained.\r\n\r\n```javascript\r\nx.dividedBy(y).plus(z).times(9).floor()\r\nx.times('1.23456780123456789e+9').plus(9876.5432321).dividedBy('4444562598.111772').ceil()\r\n```\r\n\r\nMany method names have a shorter alias.\r\n\r\n```javascript\r\nx.squareRoot().dividedBy(y).toPower(3).equals(x.sqrt().div(y).pow(3))         // true\r\nx.cmp(y.mod(z).neg()) == 1 && x.comparedTo(y.modulo(z).negated()) == 1        // true\r\n```\r\n\r\nLike JavaScript's number type, there are `toExponential`, `toFixed` and `toPrecision` methods\r\n\r\n```javascript\r\nx = new BigNumber(255.5)\r\nx.toExponential(5)                  // \"2.55500e+2\"\r\nx.toFixed(5)                        // \"255.50000\"\r\nx.toPrecision(5)                    // \"255.50\"\r\nx.toNumber()                        // 255.5\r\n```\r\n\r\n and a base can be specified for `toString`.\r\n\r\n ```javascript\r\n x.toString(16)                     // \"ff.8\"\r\n ```\r\n\r\nThere is also a `toFormat` method which may be useful for internationalisation\r\n\r\n```javascript\r\ny = new BigNumber('1234567.898765')\r\ny.toFormat(2)                       // \"1,234,567.90\"\r\n```\r\n\r\nThe maximum number of decimal places of the result of an operation involving division (i.e. a division, square root, base conversion or negative power operation) is set using the `config` method of the `BigNumber` constructor.\r\n\r\nThe other arithmetic operations always give the exact result.\r\n\r\n```javascript\r\nBigNumber.config({ DECIMAL_PLACES: 10, ROUNDING_MODE: 4 })\r\n// Alternatively, BigNumber.config( 10, 4 );\r\n\r\nx = new BigNumber(2);\r\ny = new BigNumber(3);\r\nz = x.div(y)                        // \"0.6666666667\"\r\nz.sqrt()                            // \"0.8164965809\"\r\nz.pow(-3)                           // \"3.3749999995\"\r\nz.toString(2)                       // \"0.1010101011\"\r\nz.times(z)                          // \"0.44444444448888888889\"\r\nz.times(z).round(10)                // \"0.4444444445\"\r\n```\r\n\r\nThere is a `toFraction` method with an optional *maximum denominator* argument\r\n\r\n```javascript\r\ny = new BigNumber(355)\r\npi = y.dividedBy(113)               // \"3.1415929204\"\r\npi.toFraction()                     // [ \"7853982301\", \"2500000000\" ]\r\npi.toFraction(1000)                 // [ \"355\", \"113\" ]\r\n```\r\n\r\nand `isNaN` and `isFinite` methods, as `NaN` and `Infinity` are valid `BigNumber` values.\r\n\r\n```javascript\r\nx = new BigNumber(NaN)                                           // \"NaN\"\r\ny = new BigNumber(Infinity)                                      // \"Infinity\"\r\nx.isNaN() && !y.isNaN() && !x.isFinite() && !y.isFinite()        // true\r\n```\r\n\r\nThe value of a BigNumber is stored in a decimal floating point format in terms of a coefficient, exponent and sign.\r\n\r\n\r\n```javascript\r\nx = new BigNumber(-123.456);\r\nx.c                                 // [ 123, 45600000000000 ]  coefficient (i.e. significand)\r\nx.e                                 // 2                        exponent\r\nx.s                                 // -1                       sign\r\n```\r\n\r\n\r\nMultiple BigNumber constructors can be created, each with their own independent configuration which applies to all BigNumber's created from it.\r\n\r\n```javascript\r\n// Set DECIMAL_PLACES for the original BigNumber constructor\r\nBigNumber.config({ DECIMAL_PLACES: 10 })\r\n\r\n// Create another BigNumber constructor, optionally passing in a configuration object\r\nBN = BigNumber.another({ DECIMAL_PLACES: 5 })\r\n\r\nx = new BigNumber(1)\r\ny = new BN(1)\r\n\r\nx.div(3)                            // '0.3333333333'\r\ny.div(3)                            // '0.33333'\r\n```\r\n\r\nFor futher information see the [API](http://mikemcl.github.io/bignumber.js/) reference in the *doc* directory.\r\n\r\n## Test\r\n\r\nThe *test* directory contains the test scripts for each method.\r\n\r\nThe tests can be run with Node or a browser. For Node use\r\n\r\n    $ npm test\r\n\r\nor\r\n\r\n    $ node test/every-test\r\n\r\nTo test a single method, e.g.\r\n\r\n    $ node test/toFraction\r\n\r\nFor the browser, see *every-test.html* and *single-test.html* in the *test/browser* directory.\r\n\r\n*bignumber-vs-number.html* enables some of the methods of bignumber.js to be compared with those of JavaScript's number type.\r\n\r\n## Versions\r\n\r\nThis is version 2.x.x of the library, for version 1.x.x see the tagged releases or switch to the 'original' branch. The advantages of version 2 are that it is considerably faster for numbers with many digits and that there are a some added methods (see Change Log below). The disadvantages are more lines of code and increased code complexity, and the loss of simplicity in no longer having the coefficient of a BigNumber stored in base 10. The 'original' version will continue to be supported.\r\n\r\n## Performance\r\n\r\nSee the [README](https://github.com/MikeMcl/bignumber.js/tree/master/perf) in the *perf* directory.\r\n\r\n## Build\r\n\r\nFor Node, if [uglify-js](https://github.com/mishoo/UglifyJS2) is installed\r\n\r\n    npm install uglify-js -g\r\n\r\nthen\r\n\r\n    npm run build\r\n\r\nwill create *bignumber.min.js*.\r\n\r\nA source map will also be created in the root directory.\r\n\r\n## Feedback\r\n\r\nOpen an issue, or email\r\n\r\nMichael\r\n\r\n<a href=\"mailto:M8ch88l@gmail.com\">M8ch88l@gmail.com</a>\r\n\r\n## Licence\r\n\r\nMIT.\r\n\r\nSee [LICENCE](https://github.com/MikeMcl/bignumber.js/blob/master/LICENCE).\r\n\r\n## Change Log\r\n\r\n####2.4.0\r\n* 14/07/2016\r\n* #97 Add exports to support ES6 imports.\r\n\r\n####2.3.0\r\n* 07/03/2016\r\n* #86 Add modulus parameter to `toPower`.\r\n\r\n####2.2.0\r\n* 03/03/2016\r\n* #91 Permit larger JS integers.\r\n\r\n####2.1.4\r\n* 15/12/2015\r\n* Correct UMD.\r\n\r\n####2.1.3\r\n* 13/12/2015\r\n* Refactor re global object and crypto availability when bundling.\r\n\r\n####2.1.2\r\n* 10/12/2015\r\n* Bugfix: `window.crypto` not assigned to `crypto`.\r\n\r\n####2.1.1\r\n* 09/12/2015\r\n* Prevent code bundler from adding `crypto` shim.\r\n\r\n####2.1.0\r\n* 26/10/2015\r\n* For `valueOf` and `toJSON`, include the minus sign with negative zero.\r\n\r\n####2.0.8\r\n* 2/10/2015\r\n* Internal round function bugfix.\r\n\r\n####2.0.6\r\n* 31/03/2015\r\n* Add bower.json. Tweak division after in-depth review.\r\n\r\n####2.0.5\r\n* 25/03/2015\r\n* Amend README. Remove bitcoin address.\r\n\r\n####2.0.4\r\n* 25/03/2015\r\n* Critical bugfix #58: division.\r\n\r\n####2.0.3\r\n* 18/02/2015\r\n* Amend README. Add source map.\r\n\r\n####2.0.2\r\n* 18/02/2015\r\n* Correct links.\r\n\r\n####2.0.1\r\n* 18/02/2015\r\n* Add `max`, `min`, `precision`, `random`, `shift`, `toDigits` and `truncated` methods.\r\n* Add the short-forms: `add`, `mul`, `sd`, `sub` and `trunc`.\r\n* Add an `another` method to enable multiple independent constructors to be created.\r\n* Add support for the base 2, 8 and 16 prefixes `0b`, `0o` and `0x`.\r\n* Enable a rounding mode to be specified as a second parameter to `toExponential`, `toFixed`, `toFormat` and `toPrecision`.\r\n* Add a `CRYPTO` configuration property so cryptographically-secure pseudo-random number generation can be specified.\r\n* Add a `MODULO_MODE` configuration property to enable the rounding mode used by the `modulo` operation to be specified.\r\n* Add a `POW_PRECISION` configuration property to enable the number of significant digits calculated by the power operation to be limited.\r\n* Improve code quality.\r\n* Improve documentation.\r\n\r\n####2.0.0\r\n* 29/12/2014\r\n* Add `dividedToIntegerBy`, `isInteger` and `toFormat` methods.\r\n* Remove the following short-forms: `isF`, `isZ`, `toE`, `toF`, `toFr`, `toN`, `toP`, `toS`.\r\n* Store a BigNumber's coefficient in base 1e14, rather than base 10.\r\n* Add fast path for integers to BigNumber constructor.\r\n* Incorporate the library into the online documentation.\r\n\r\n####1.5.0\r\n* 13/11/2014\r\n* Add `toJSON` and `decimalPlaces` methods.\r\n\r\n####1.4.1\r\n* 08/06/2014\r\n* Amend README.\r\n\r\n####1.4.0\r\n* 08/05/2014\r\n* Add `toNumber`.\r\n\r\n####1.3.0\r\n* 08/11/2013\r\n* Ensure correct rounding of `sqrt` in all, rather than almost all, cases.\r\n* Maximum radix to 64.\r\n\r\n####1.2.1\r\n* 17/10/2013\r\n* Sign of zero when x < 0 and x + (-x) = 0.\r\n\r\n####1.2.0\r\n* 19/9/2013\r\n* Throw Error objects for stack.\r\n\r\n####1.1.1\r\n* 22/8/2013\r\n* Show original value in constructor error message.\r\n\r\n####1.1.0\r\n* 1/8/2013\r\n* Allow numbers with trailing radix point.\r\n\r\n####1.0.1\r\n* Bugfix: error messages with incorrect method name\r\n\r\n####1.0.0\r\n* 8/11/2012\r\n* Initial release\r\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/bignumber.js",
              "error": "[Circular]",
              "extraneous": false
            },
            "browser-request": {
              "_args": [
                [
                  "browser-request@0.3.3",
                  "/path/to/project/packages/shared"
                ],
                [
                  "browser-request@0.3.3",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "browser-request@0.3.3",
              "_id": "browser-request@0.3.3",
              "_integrity": "sha1-ns5bWsqJopkyJC4Yv5M975h2zBc=",
              "_location": "/browser-request",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "browser-request@0.3.3",
                "name": "browser-request",
                "escapedName": "browser-request",
                "rawSpec": "0.3.3",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.3.3"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/browser-request/-/browser-request-0.3.3.tgz",
              "_spec": "0.3.3",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Jason Smith",
                "email": "jhs@iriscouch.com"
              },
              "bugs": {
                "url": "https://github.com/iriscouch/browser-request/issues"
              },
              "contributors": [
                {
                  "name": "Jason Smith Work",
                  "email": "jhs@iriscouch.com"
                },
                {
                  "name": "Jason Smith",
                  "email": "jason.h.smith@gmail.com"
                },
                {
                  "name": "maxogden",
                  "email": "max@maxogden.com"
                },
                {
                  "name": "Abbey Sparrow via Google",
                  "email": "abbeys@google.com"
                }
              ],
              "description": "Browser port of the Node.js 'request' package",
              "devDependencies": {
                "beefy": "~0.4.0",
                "browserify": "~2.25.0",
                "tape": "~1.0.4"
              },
              "engines": [
                "node"
              ],
              "homepage": "http://github.com/iriscouch/browser-request",
              "keywords": [
                "request",
                "http",
                "browser",
                "browserify"
              ],
              "name": "browser-request",
              "repository": {
                "type": "git",
                "url": "git://github.com/iriscouch/browser-request.git"
              },
              "scripts": {
                "test": "beefy test.js"
              },
              "testling": {
                "files": "test.js",
                "browsers": [
                  "ie/6..latest",
                  "firefox/3..5",
                  "firefox/19..nightly",
                  "chrome/4..7",
                  "chrome/24..canary",
                  "opera/10..next",
                  "safari/4..latest",
                  "iphone/6",
                  "ipad/6"
                ]
              },
              "version": "0.3.3",
              "readme": "# Browser Request: The easiest HTTP library you'll ever see\n\nBrowser Request is a port of Mikeal Rogers's ubiquitous and excellent [request][req] package to the browser.\n\nJealous of Node.js? Pining for clever callbacks? Request is for you.\n\nDon't care about Node.js? Looking for less tedium and a no-nonsense API? Request is for you too.\n\n[![browser support](https://ci.testling.com/iriscouch/browser-request.png)](https://ci.testling.com/maxogden/browser-request)\n\n# Examples\n\nFetch a resource:\n\n```javascript\nrequest('/some/resource.txt', function(er, response, body) {\n  if(er)\n    throw er;\n  console.log(\"I got: \" + body);\n})\n```\n\nSend a resource:\n\n```javascript\nrequest.put({uri:'/some/resource.xml', body:'<foo><bar/></foo>'}, function(er, response) {\n  if(er)\n    throw new Error(\"XML PUT failed (\" + er + \"): HTTP status was \" + response.status);\n  console.log(\"Stored the XML\");\n})\n```\n\nTo work with JSON, set `options.json` to `true`. Request will set the `Content-Type` and `Accept` headers, and handle parsing and serialization.\n\n```javascript\nrequest({method:'POST', url:'/db', body:'{\"relaxed\":true}', json:true}, on_response)\n\nfunction on_response(er, response, body) {\n  if(er)\n    throw er\n  if(result.ok)\n    console.log('Server ok, id = ' + result.id)\n}\n```\n\nOr, use this shorthand version (pass data into the `json` option directly):\n\n```javascript\nrequest({method:'POST', url:'/db', json:{relaxed:true}}, on_response)\n```\n\n## Convenient CouchDB\n\nBrowser Request provides a CouchDB wrapper. It is the same as the JSON wrapper, however it will indicate an error if the HTTP query was fine, but there was a problem at the database level. The most common example is `409 Conflict`.\n\n```javascript\nrequest.couch({method:'PUT', url:'/db/existing_doc', body:{\"will_conflict\":\"you bet!\"}}, function(er, resp, result) {\n  if(er.error === 'conflict')\n    return console.error(\"Couch said no: \" + er.reason); // Output: Couch said no: Document update conflict.\n\n  if(er)\n    throw er;\n\n  console.log(\"Existing doc stored. This must have been the first run.\");\n})\n```\n\nSee the [Node.js Request README][req] for several more examples. Request intends to maintain feature parity with Node request (except what the browser disallows). If you find a discrepancy, please submit a bug report. Thanks!\n\n# Usage\n\n## Browserify\n\nBrowser Request is a [browserify][browserify]-enabled package.\n\nFirst, add `browser-request` to your Node project\n\n    $ npm install browser-request\n\nNext, make a module that uses the package.\n\n```javascript\n// example.js - Example front-end (client-side) code using browser-request via browserify\n//\nvar request = require('browser-request')\nrequest('/', function(er, res) {\n  if(!er)\n    return console.log('browser-request got your root path:\\n' + res.body)\n\n  console.log('There was an error, but at least browser-request loaded and ran!')\n  throw er\n})\n```\n\nTo build this for the browser, run it through browserify.\n\n    $ browserify --entry example.js --outfile example-built.js\n\nDeploy `example-built.js` to your web site and use it from your page.\n\n```html\n  <script src=\"example-built.js\"></script> <!-- Runs the request, outputs the result to the console -->\n```\n\n## UMD\n\n`browser-request` is [UMD](https://github.com/umdjs/umd) wrapped, allowing you to serve it directly to the browser from wherever you store the module.\n\n```html\n  <script src=\"/node_modules/browser-request/index.js\"></script> <!-- Assigns the module to window.request -->\n```\n\nYou may also use an [AMD loader](http://requirejs.org/docs/whyamd.html) by referencing the same file in your loader [config](http://requirejs.org/docs/api.html#config).\n    \n## License\n\nBrowser Request is licensed under the Apache 2.0 license.\n\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/browser-request",
              "error": "[Circular]",
              "extraneous": false
            },
            "debug": {
              "_args": [
                [
                  "debug@3.2.6",
                  "/path/to/project/packages/shared"
                ],
                [
                  "debug@3.2.6",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "debug@3.2.6",
              "_id": "debug@3.2.6",
              "_integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
              "_location": "/debug",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "debug@3.2.6",
                "name": "debug",
                "escapedName": "debug",
                "rawSpec": "3.2.6",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.2.6"
              },
              "_requiredBy": [
                "/https-proxy-agent",
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
              "_spec": "3.2.6",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "TJ Holowaychuk",
                "email": "tj@vision-media.ca"
              },
              "browser": "./src/browser.js",
              "bugs": {
                "url": "https://github.com/visionmedia/debug/issues"
              },
              "contributors": [
                {
                  "name": "Nathan Rajlich",
                  "email": "nathan@tootallnate.net",
                  "url": "http://n8.io"
                },
                {
                  "name": "Andrew Rhyne",
                  "email": "rhyneandrew@gmail.com"
                }
              ],
              "dependencies": {
                "ms": {
                  "_args": [
                    [
                      "ms@2.1.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "ms@2.1.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "ms@2.1.2",
                  "_id": "ms@2.1.2",
                  "_integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
                  "_location": "/ms",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "ms@2.1.2",
                    "name": "ms",
                    "escapedName": "ms",
                    "rawSpec": "2.1.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.1.2"
                  },
                  "_requiredBy": [
                    "/debug",
                    "/logform"
                  ],
                  "_resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
                  "_spec": "2.1.2",
                  "_where": "/path/to/project/packages/shared",
                  "bugs": {
                    "url": "https://github.com/zeit/ms/issues"
                  },
                  "description": "Tiny millisecond conversion utility",
                  "devDependencies": {
                    "eslint": "4.12.1",
                    "expect.js": "0.3.1",
                    "husky": "0.14.3",
                    "lint-staged": "5.0.0",
                    "mocha": "4.0.1"
                  },
                  "eslintConfig": {
                    "extends": "eslint:recommended",
                    "env": {
                      "node": true,
                      "es6": true
                    }
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/zeit/ms#readme",
                  "license": "MIT",
                  "lint-staged": {
                    "*.js": [
                      "npm run lint",
                      "prettier --single-quote --write",
                      "git add"
                    ]
                  },
                  "main": "./index",
                  "name": "ms",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/zeit/ms.git"
                  },
                  "scripts": {
                    "lint": "eslint lib/* bin/*",
                    "precommit": "lint-staged",
                    "test": "mocha tests.js"
                  },
                  "version": "2.1.2",
                  "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n```\n\n### Convert from Milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time Format Written-Out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [Node.js](https://nodejs.org) and in the browser\n- If a number is supplied to `ms`, a string with a unit is returned\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\n\n## Related Packages\n\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/ms",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "small debugging utility",
              "devDependencies": {
                "@babel/cli": "^7.0.0",
                "@babel/core": "^7.0.0",
                "@babel/preset-env": "^7.0.0",
                "browserify": "14.4.0",
                "chai": "^3.5.0",
                "concurrently": "^3.1.0",
                "coveralls": "^3.0.2",
                "istanbul": "^0.4.5",
                "karma": "^3.0.0",
                "karma-chai": "^0.1.0",
                "karma-mocha": "^1.3.0",
                "karma-phantomjs-launcher": "^1.0.2",
                "mocha": "^5.2.0",
                "mocha-lcov-reporter": "^1.2.0",
                "rimraf": "^2.5.4",
                "xo": "^0.23.0"
              },
              "files": [
                "src",
                "node.js",
                "dist/debug.js",
                "LICENSE",
                "README.md"
              ],
              "homepage": "https://github.com/visionmedia/debug#readme",
              "keywords": [
                "debug",
                "log",
                "debugger"
              ],
              "license": "MIT",
              "main": "./src/index.js",
              "name": "debug",
              "repository": {
                "type": "git",
                "url": "git://github.com/visionmedia/debug.git"
              },
              "unpkg": "./dist/debug.js",
              "version": "3.2.6",
              "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nA tiny JavaScript debugging utility modelled after Node.js core's debugging\ntechnique. Works in Node.js and web browsers.\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample [_app.js_](./examples/node/app.js):\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %o', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample [_worker.js_](./examples/node/worker.js):\n\n```js\nvar a = require('debug')('worker:a')\n  , b = require('debug')('worker:b');\n\nfunction work() {\n  a('doing lots of uninteresting work');\n  setTimeout(work, Math.random() * 1000);\n}\n\nwork();\n\nfunction workb() {\n  b('doing some work');\n  setTimeout(workb, Math.random() * 2000);\n}\n\nworkb();\n```\n\nThe `DEBUG` environment variable is then used to enable these based on space or\ncomma-delimited names.\n\nHere are some examples:\n\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 04 pm\" src=\"https://user-images.githubusercontent.com/71256/29091703-a6302cdc-7c38-11e7-8304-7c0b3bc600cd.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 38 pm\" src=\"https://user-images.githubusercontent.com/71256/29091700-a62a6888-7c38-11e7-800b-db911291ca2b.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 25 pm\" src=\"https://user-images.githubusercontent.com/71256/29091701-a62ea114-7c38-11e7-826a-2692bedca740.png\">\n\n#### Windows command prompt notes\n\n##### CMD\n\nOn Windows the environment variable is set using the `set` command.\n\n```cmd\nset DEBUG=*,-not_this\n```\n\nExample:\n\n```cmd\nset DEBUG=* & node app.js\n```\n\n##### PowerShell (VS Code default)\n\nPowerShell uses different syntax to set environment variables.\n\n```cmd\n$env:DEBUG = \"*,-not_this\"\n```\n\nExample:\n\n```cmd\n$env:DEBUG='app';node app.js\n```\n\nThen, run the program to be debugged as usual.\n\nnpm script example:\n```js\n  \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\n```\n\n## Namespace Colors\n\nEvery debug instance has a color generated for it based on its namespace name.\nThis helps when visually parsing the debug output to identify which debug instance\na debug line belongs to.\n\n#### Node.js\n\nIn Node.js, colors are enabled when stderr is a TTY. You also _should_ install\nthe [`supports-color`](https://npmjs.org/supports-color) module alongside debug,\notherwise debug will only use a small handful of basic colors.\n\n<img width=\"521\" src=\"https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png\">\n\n#### Web Browser\n\nColors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\noption. These are WebKit web inspectors, Firefox ([since version\n31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\nand the Firebug plugin for Firefox (any version).\n\n<img width=\"524\" src=\"https://user-images.githubusercontent.com/71256/29092033-b65f9f2e-7c39-11e7-8e32-f6f0d8e865c1.png\">\n\n\n## Millisecond diff\n\nWhen actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nWhen stdout is not a TTY, `Date#toISOString()` is used, making it more useful for logging the debug information as shown below:\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091956-6bd78372-7c39-11e7-8c55-c948396d6edd.png\">\n\n\n## Conventions\n\nIf you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".  If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable.  You can then use it for normal output as well as debug output.\n\n## Wildcards\n\nThe `*` character may be used as a wildcard. Suppose for example your library has\ndebuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\",\ninstead of listing all three with\n`DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do\n`DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\nYou can also exclude specific debuggers by prefixing them with a \"-\" character.\nFor example, `DEBUG=*,-connect:*` would include all debuggers except those\nstarting with \"connect:\".\n\n## Environment Variables\n\nWhen running through Node.js, you can set a few environment variables that will\nchange the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_HIDE_DATE` | Hide date from debug output (non-TTY).  |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth.                    |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n__Note:__ The environment variables beginning with `DEBUG_` end up being\nconverted into an Options object that gets used with `%o`/`%O` formatters.\nSee the Node.js documentation for\n[`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nfor the complete list.\n\n## Formatters\n\nDebug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting.\nBelow are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n\n### Custom formatters\n\nYou can add custom formatters by extending the `debug.formatters` object.\nFor example, if you wanted to add support for rendering a Buffer as hex with\n`%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n\n## Browser Support\n\nYou can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\nor just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\nif you don't want to build it yourself.\n\nDebug's enable state is currently persisted by `localStorage`.\nConsider the situation shown below where you have `worker:a` and `worker:b`,\nand wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample [_stdout.js_](./examples/node/stdout.js):\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n## Extend\nYou can simply extend debugger \n```js\nconst log = require('debug')('auth');\n\n//creates new debug instance with extended namespace\nconst logSign = log.extend('sign');\nconst logLogin = log.extend('login');\n\nlog('hello'); // auth hello\nlogSign('hello'); //auth:sign hello\nlogLogin('hello'); //auth:login hello\n```\n\n## Set dynamically\n\nYou can also enable debug dynamically by calling the `enable()` method :\n\n```js\nlet debug = require('debug');\n\nconsole.log(1, debug.enabled('test'));\n\ndebug.enable('test');\nconsole.log(2, debug.enabled('test'));\n\ndebug.disable();\nconsole.log(3, debug.enabled('test'));\n\n```\n\nprint :   \n```\n1 false\n2 true\n3 false\n```\n\nUsage :  \n`enable(namespaces)`  \n`namespaces` can include modes separated by a colon and wildcards.\n   \nNote that calling `enable()` completely overrides previously set DEBUG variable : \n\n```\n$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\n=> false\n```\n\n## Checking whether a debug target is enabled\n\nAfter you've created a debug instance, you can determine whether or not it is\nenabled by checking the `enabled` property:\n\n```javascript\nconst debug = require('debug')('http');\n\nif (debug.enabled) {\n  // do stuff...\n}\n```\n\nYou can also manually toggle this property to force the debug instance to be\nenabled or disabled.\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "ms": "^2.1.1"
              },
              "path": "/path/to/project/packages/shared/node_modules/debug",
              "error": "[Circular]",
              "extraneous": false
            },
            "extend": {
              "_args": "[Circular]",
              "_from": "extend@3.0.2",
              "_id": "extend@3.0.2",
              "_integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
              "_location": "/extend",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "extend@3.0.2",
                "name": "extend",
                "escapedName": "extend",
                "rawSpec": "3.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.0.2"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
              "_spec": "3.0.2",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "contributors": "[Circular]",
              "dependencies": {},
              "description": "Port of jQuery.extend for node.js and the browser",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/justmoon/node-extend#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "index",
              "name": "extend",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.0.2",
              "readme": "[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n\n# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>\n\n`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.\n\nNotes:\n\n* Since Node.js >= 4,\n  [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  now offers the same functionality natively (but without the \"deep copy\" option).\n  See [ECMAScript 2015 (ES6) in Node.js](https://nodejs.org/en/docs/es6).\n* Some native implementations of `Object.assign` in both Node.js and many\n  browsers (since NPM modules are for the browser too) may not be fully\n  spec-compliant.\n  Check [`object.assign`](https://www.npmjs.com/package/object.assign) module for\n  a compliant candidate.\n\n## Installation\n\nThis package is available on [npm][npm-url] as: `extend`\n\n``` sh\nnpm install extend\n```\n\n## Usage\n\n**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**\n\n*Extend one object with one or more others, returning the modified object.*\n\n**Example:**\n\n``` js\nvar extend = require('extend');\nextend(targetObject, object1, object2);\n```\n\nKeep in mind that the target object will be modified, and will be returned from extend().\n\nIf a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\nWarning: passing `false` as the first argument is not supported.\n\n### Arguments\n\n* `deep` *Boolean* (optional)\nIf set, the merge becomes recursive (i.e. deep copy).\n* `target`\t*Object*\nThe object to extend.\n* `object1`\t*Object*\nThe object that will be merged into the first.\n* `objectN` *Object* (Optional)\nMore objects to merge into the first.\n\n## License\n\n`node-extend` is licensed under the [MIT License][mit-license-url].\n\n## Acknowledgements\n\nAll credit to the jQuery authors for perfecting this amazing utility.\n\nPorted to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].\n\n[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg\n[travis-url]: https://travis-ci.org/justmoon/node-extend\n[npm-url]: https://npmjs.org/package/extend\n[mit-license-url]: http://opensource.org/licenses/MIT\n[github-justmoon]: https://github.com/justmoon\n[github-insin]: https://github.com/insin\n[github-ljharb]: https://github.com/ljharb\n[npm-version-png]: http://versionbadg.es/justmoon/node-extend.svg\n[deps-svg]: https://david-dm.org/justmoon/node-extend.svg\n[deps-url]: https://david-dm.org/justmoon/node-extend\n[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg\n[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies\n\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/extend",
              "error": "[Circular]",
              "extraneous": false
            },
            "https-proxy-agent": {
              "_args": [
                [
                  "https-proxy-agent@3.0.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "https-proxy-agent@3.0.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "https-proxy-agent@3.0.1",
              "_id": "https-proxy-agent@3.0.1",
              "_integrity": "sha512-+ML2Rbh6DAuee7d07tYGEKOEi2voWPUGan+ExdPbPW6Z3svq+JCqr0v8WmKPOkz1vOVykPCBSuobe7G8GJUtVg==",
              "_location": "/https-proxy-agent",
              "_phantomChildren": {
                "es6-promisify": "5.0.0"
              },
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "https-proxy-agent@3.0.1",
                "name": "https-proxy-agent",
                "escapedName": "https-proxy-agent",
                "rawSpec": "3.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.0.1"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-3.0.1.tgz",
              "_spec": "3.0.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Nathan Rajlich",
                "email": "nathan@tootallnate.net",
                "url": "http://n8.io/"
              },
              "bugs": {
                "url": "https://github.com/TooTallNate/node-https-proxy-agent/issues"
              },
              "dependencies": {
                "debug": {
                  "_args": "[Circular]",
                  "_from": "debug@3.2.6",
                  "_id": "debug@3.2.6",
                  "_integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
                  "_location": "/debug",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "debug@3.2.6",
                    "name": "debug",
                    "escapedName": "debug",
                    "rawSpec": "3.2.6",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.2.6"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
                  "_spec": "3.2.6",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "browser": "./src/browser.js",
                  "bugs": "[Circular]",
                  "contributors": "[Circular]",
                  "dependencies": {},
                  "description": "small debugging utility",
                  "devDependencies": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/visionmedia/debug#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "./src/index.js",
                  "name": "debug",
                  "repository": "[Circular]",
                  "unpkg": "./dist/debug.js",
                  "version": "3.2.6",
                  "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nA tiny JavaScript debugging utility modelled after Node.js core's debugging\ntechnique. Works in Node.js and web browsers.\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample [_app.js_](./examples/node/app.js):\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %o', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample [_worker.js_](./examples/node/worker.js):\n\n```js\nvar a = require('debug')('worker:a')\n  , b = require('debug')('worker:b');\n\nfunction work() {\n  a('doing lots of uninteresting work');\n  setTimeout(work, Math.random() * 1000);\n}\n\nwork();\n\nfunction workb() {\n  b('doing some work');\n  setTimeout(workb, Math.random() * 2000);\n}\n\nworkb();\n```\n\nThe `DEBUG` environment variable is then used to enable these based on space or\ncomma-delimited names.\n\nHere are some examples:\n\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 04 pm\" src=\"https://user-images.githubusercontent.com/71256/29091703-a6302cdc-7c38-11e7-8304-7c0b3bc600cd.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 38 pm\" src=\"https://user-images.githubusercontent.com/71256/29091700-a62a6888-7c38-11e7-800b-db911291ca2b.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 25 pm\" src=\"https://user-images.githubusercontent.com/71256/29091701-a62ea114-7c38-11e7-826a-2692bedca740.png\">\n\n#### Windows command prompt notes\n\n##### CMD\n\nOn Windows the environment variable is set using the `set` command.\n\n```cmd\nset DEBUG=*,-not_this\n```\n\nExample:\n\n```cmd\nset DEBUG=* & node app.js\n```\n\n##### PowerShell (VS Code default)\n\nPowerShell uses different syntax to set environment variables.\n\n```cmd\n$env:DEBUG = \"*,-not_this\"\n```\n\nExample:\n\n```cmd\n$env:DEBUG='app';node app.js\n```\n\nThen, run the program to be debugged as usual.\n\nnpm script example:\n```js\n  \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\n```\n\n## Namespace Colors\n\nEvery debug instance has a color generated for it based on its namespace name.\nThis helps when visually parsing the debug output to identify which debug instance\na debug line belongs to.\n\n#### Node.js\n\nIn Node.js, colors are enabled when stderr is a TTY. You also _should_ install\nthe [`supports-color`](https://npmjs.org/supports-color) module alongside debug,\notherwise debug will only use a small handful of basic colors.\n\n<img width=\"521\" src=\"https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png\">\n\n#### Web Browser\n\nColors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\noption. These are WebKit web inspectors, Firefox ([since version\n31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\nand the Firebug plugin for Firefox (any version).\n\n<img width=\"524\" src=\"https://user-images.githubusercontent.com/71256/29092033-b65f9f2e-7c39-11e7-8e32-f6f0d8e865c1.png\">\n\n\n## Millisecond diff\n\nWhen actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nWhen stdout is not a TTY, `Date#toISOString()` is used, making it more useful for logging the debug information as shown below:\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091956-6bd78372-7c39-11e7-8c55-c948396d6edd.png\">\n\n\n## Conventions\n\nIf you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".  If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable.  You can then use it for normal output as well as debug output.\n\n## Wildcards\n\nThe `*` character may be used as a wildcard. Suppose for example your library has\ndebuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\",\ninstead of listing all three with\n`DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do\n`DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\nYou can also exclude specific debuggers by prefixing them with a \"-\" character.\nFor example, `DEBUG=*,-connect:*` would include all debuggers except those\nstarting with \"connect:\".\n\n## Environment Variables\n\nWhen running through Node.js, you can set a few environment variables that will\nchange the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_HIDE_DATE` | Hide date from debug output (non-TTY).  |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth.                    |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n__Note:__ The environment variables beginning with `DEBUG_` end up being\nconverted into an Options object that gets used with `%o`/`%O` formatters.\nSee the Node.js documentation for\n[`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nfor the complete list.\n\n## Formatters\n\nDebug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting.\nBelow are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n\n### Custom formatters\n\nYou can add custom formatters by extending the `debug.formatters` object.\nFor example, if you wanted to add support for rendering a Buffer as hex with\n`%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n\n## Browser Support\n\nYou can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\nor just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\nif you don't want to build it yourself.\n\nDebug's enable state is currently persisted by `localStorage`.\nConsider the situation shown below where you have `worker:a` and `worker:b`,\nand wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample [_stdout.js_](./examples/node/stdout.js):\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n## Extend\nYou can simply extend debugger \n```js\nconst log = require('debug')('auth');\n\n//creates new debug instance with extended namespace\nconst logSign = log.extend('sign');\nconst logLogin = log.extend('login');\n\nlog('hello'); // auth hello\nlogSign('hello'); //auth:sign hello\nlogLogin('hello'); //auth:login hello\n```\n\n## Set dynamically\n\nYou can also enable debug dynamically by calling the `enable()` method :\n\n```js\nlet debug = require('debug');\n\nconsole.log(1, debug.enabled('test'));\n\ndebug.enable('test');\nconsole.log(2, debug.enabled('test'));\n\ndebug.disable();\nconsole.log(3, debug.enabled('test'));\n\n```\n\nprint :   \n```\n1 false\n2 true\n3 false\n```\n\nUsage :  \n`enable(namespaces)`  \n`namespaces` can include modes separated by a colon and wildcards.\n   \nNote that calling `enable()` completely overrides previously set DEBUG variable : \n\n```\n$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\n=> false\n```\n\n## Checking whether a debug target is enabled\n\nAfter you've created a debug instance, you can determine whether or not it is\nenabled by checking the `enabled` property:\n\n```javascript\nconst debug = require('debug')('http');\n\nif (debug.enabled) {\n  // do stuff...\n}\n```\n\nYou can also manually toggle this property to force the debug instance to be\nenabled or disabled.\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/debug",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "debug"
                },
                "agent-base": {
                  "_args": [
                    [
                      "agent-base@4.3.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "agent-base@4.3.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "agent-base@4.3.0",
                  "_id": "agent-base@4.3.0",
                  "_integrity": "sha512-salcGninV0nPrwpGNn4VTXBb1SOuXQBiqbrNXoeizJsHrsL6ERFM2Ne3JUSBWRE6aeNJI2ROP/WEEIDUiDe3cg==",
                  "_location": "/https-proxy-agent/agent-base",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "agent-base@4.3.0",
                    "name": "agent-base",
                    "escapedName": "agent-base",
                    "rawSpec": "4.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "4.3.0"
                  },
                  "_requiredBy": [
                    "/https-proxy-agent"
                  ],
                  "_resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.3.0.tgz",
                  "_spec": "4.3.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Nathan Rajlich",
                    "email": "nathan@tootallnate.net",
                    "url": "http://n8.io/"
                  },
                  "bugs": {
                    "url": "https://github.com/TooTallNate/node-agent-base/issues"
                  },
                  "dependencies": {
                    "es6-promisify": {
                      "_args": [
                        [
                          "es6-promisify@5.0.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "es6-promisify@5.0.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "es6-promisify@5.0.0",
                      "_id": "es6-promisify@5.0.0",
                      "_integrity": "sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=",
                      "_location": "/es6-promisify",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "es6-promisify@5.0.0",
                        "name": "es6-promisify",
                        "escapedName": "es6-promisify",
                        "rawSpec": "5.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "5.0.0"
                      },
                      "_requiredBy": [
                        "/https-proxy-agent/agent-base"
                      ],
                      "_resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
                      "_spec": "5.0.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Mike Hall",
                        "email": "mikehall314@gmail.com"
                      },
                      "bugs": {
                        "url": "http://github.com/digitaldesignlabs/es6-promisify/issues"
                      },
                      "dependencies": {
                        "es6-promise": {
                          "_args": [
                            [
                              "es6-promise@4.2.8",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "es6-promise@4.2.8",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "es6-promise@4.2.8",
                          "_id": "es6-promise@4.2.8",
                          "_integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w==",
                          "_location": "/es6-promise",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "es6-promise@4.2.8",
                            "name": "es6-promise",
                            "escapedName": "es6-promise",
                            "rawSpec": "4.2.8",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "4.2.8"
                          },
                          "_requiredBy": [
                            "/es6-promisify"
                          ],
                          "_resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
                          "_spec": "4.2.8",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Yehuda Katz, Tom Dale, Stefan Penner and contributors",
                            "url": "Conversion to ES6 API by Jake Archibald"
                          },
                          "browser": {
                            "vertx": false
                          },
                          "bugs": {
                            "url": "https://github.com/stefanpenner/es6-promise/issues"
                          },
                          "dependencies": {},
                          "description": "A lightweight library that provides tools for organizing asynchronous code",
                          "devDependencies": {
                            "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
                            "babel-plugin-transform-es2015-block-scoping": "^6.24.1",
                            "babel-plugin-transform-es2015-classes": "^6.24.1",
                            "babel-plugin-transform-es2015-computed-properties": "^6.24.1",
                            "babel-plugin-transform-es2015-constants": "^6.1.4",
                            "babel-plugin-transform-es2015-destructuring": "^6.23.0",
                            "babel-plugin-transform-es2015-parameters": "^6.24.1",
                            "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1",
                            "babel-plugin-transform-es2015-spread": "^6.22.0",
                            "babel-plugin-transform-es2015-template-literals": "^6.22.0",
                            "babel6-plugin-strip-class-callcheck": "^6.0.0",
                            "broccoli-babel-transpiler": "^6.0.0",
                            "broccoli-concat": "^3.1.0",
                            "broccoli-merge-trees": "^2.0.0",
                            "broccoli-rollup": "^2.0.0",
                            "broccoli-stew": "^1.5.0",
                            "broccoli-uglify-js": "^0.2.0",
                            "broccoli-watchify": "^1.0.1",
                            "ember-cli": "2.18.0-beta.2",
                            "ember-cli-dependency-checker": "^2.1.0",
                            "git-repo-version": "1.0.1",
                            "json3": "^3.3.2",
                            "mocha": "^4.0.1",
                            "promises-aplus-tests-phantom": "^2.1.0-revise"
                          },
                          "directories": {
                            "lib": "lib"
                          },
                          "files": [
                            "dist",
                            "lib",
                            "es6-promise.d.ts",
                            "auto.js",
                            "!dist/test"
                          ],
                          "homepage": "https://github.com/stefanpenner/es6-promise",
                          "jsdelivr": "dist/es6-promise.auto.min.js",
                          "keywords": [
                            "futures",
                            "polyfill",
                            "promise",
                            "promises"
                          ],
                          "license": "MIT",
                          "main": "dist/es6-promise.js",
                          "name": "es6-promise",
                          "namespace": "es6-promise",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/stefanpenner/es6-promise.git"
                          },
                          "scripts": {
                            "build": "ember build --environment production",
                            "prepublishOnly": "ember build --environment production",
                            "start": "ember s",
                            "test": "ember test",
                            "test:browser": "ember test --launch PhantomJS",
                            "test:node": "ember test --launch Mocha",
                            "test:server": "ember test --server"
                          },
                          "spm": {
                            "main": "dist/es6-promise.js"
                          },
                          "typings": "es6-promise.d.ts",
                          "unpkg": "dist/es6-promise.auto.min.js",
                          "version": "4.2.8",
                          "readme": "# ES6-Promise (subset of [rsvp.js](https://github.com/tildeio/rsvp.js)) [![Build Status](https://travis-ci.org/stefanpenner/es6-promise.svg?branch=master)](https://travis-ci.org/stefanpenner/es6-promise)\n\nThis is a polyfill of the [ES6 Promise](http://www.ecma-international.org/ecma-262/6.0/#sec-promise-constructor). The implementation is a subset of [rsvp.js](https://github.com/tildeio/rsvp.js) extracted by @jakearchibald, if you're wanting extra features and more debugging options, check out the [full library](https://github.com/tildeio/rsvp.js).\n\nFor API details and how to use promises, see the <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\">JavaScript Promises HTML5Rocks article</a>.\n\n## Downloads\n\n* [es6-promise 27.86 KB (7.33 KB gzipped)](https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.js)\n* [es6-promise-auto 27.78 KB (7.3 KB gzipped)](https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.auto.js) - Automatically provides/replaces `Promise` if missing or broken.\n* [es6-promise-min 6.17 KB (2.4 KB gzipped)](https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.min.js)\n* [es6-promise-auto-min 6.19 KB (2.4 KB gzipped)](https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.auto.min.js) - Minified version of `es6-promise-auto` above.\n\n## CDN \n\nTo use via a CDN include this in your html:\n\n```html\n<!-- Automatically provides/replaces `Promise` if missing or broken. -->\n<script src=\"https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.js\"></script> \n\n<!-- Minified version of `es6-promise-auto` below. -->\n<script src=\"https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js\"></script> \n\n```\n\n## Node.js\n\nTo install:\n\n```sh\nyarn add es6-promise\n```\n\nor\n\n```sh\nnpm install es6-promise\n```\n\nTo use:\n\n```js\nvar Promise = require('es6-promise').Promise;\n```\n\n\n## Usage in IE<9\n\n`catch` and `finally` are reserved keywords in IE<9, meaning\n`promise.catch(func)` or `promise.finally(func)` throw a syntax error. To work\naround this, you can use a string to access the property as shown in the\nfollowing example.\n\nHowever most minifiers will automatically fix this for you, making the\nresulting code safe for old browsers and production:\n\n```js\npromise['catch'](function(err) {\n  // ...\n});\n```\n\n```js\npromise['finally'](function() {\n  // ...\n});\n```\n\n## Auto-polyfill\n\nTo polyfill the global environment (either in Node or in the browser via CommonJS) use the following code snippet:\n\n```js\nrequire('es6-promise').polyfill();\n```\n\nAlternatively\n\n```js\nrequire('es6-promise/auto');\n```\n\nNotice that we don't assign the result of `polyfill()` to any variable. The `polyfill()` method will patch the global environment (in this case to the `Promise` name) when called.\n\n## Building & Testing\n\nYou will need to have PhantomJS installed globally in order to run the tests.\n\n`npm install -g phantomjs`\n\n* `npm run build` to build\n* `npm test` to run tests\n* `npm start` to run a build watcher, and webserver to test\n* `npm run test:server` for a testem test runner and watching builder\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/es6-promise",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Converts callback-based functions to ES6 Promises",
                      "devDependencies": {
                        "babel-preset-es2015": "^6.9.0",
                        "eslint": "^2.13.1",
                        "gulp": "^3.9.1",
                        "gulp-babel": "^6.1.2",
                        "nodeunit": "^0.10.0"
                      },
                      "files": [
                        "dist/promisify.js",
                        "dist/promise.js"
                      ],
                      "greenkeeper": {
                        "ignore": [
                          "eslint"
                        ]
                      },
                      "homepage": "https://github.com/digitaldesignlabs/es6-promisify#readme",
                      "keywords": [
                        "promises",
                        "es6",
                        "promisify"
                      ],
                      "license": "MIT",
                      "main": "dist/promisify.js",
                      "name": "es6-promisify",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/digitaldesignlabs/es6-promisify.git"
                      },
                      "scripts": {
                        "pretest": "./node_modules/eslint/bin/eslint.js ./lib/*.js ./tests/*.js",
                        "test": "gulp && nodeunit tests"
                      },
                      "version": "5.0.0",
                      "readme": "[![Travis CI](https://travis-ci.org/digitaldesignlabs/es6-promisify.svg)](https://travis-ci.org/digitaldesignlabs/es6-promisify)\n\n# es6-promisify\n\nConverts callback-based functions to Promise-based functions.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/es6-promisify)\n\n```bash\nnpm install --save es6-promisify\n```\n\n## Example\n\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst fs = require(\"fs\");\n\n// Convert the stat function\nconst stat = promisify(fs.stat);\n\n// Now usable as a promise!\nstat(\"example.txt\").then(function (stats) {\n    console.log(\"Got stats\", stats);\n}).catch(function (err) {\n    console.error(\"Yikes!\", err);\n});\n```\n\n## Promisify methods\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst redis = require(\"redis\").createClient(6379, \"localhost\");\n\n// Create a promise-based version of send_command\nconst client = promisify(redis.send_command, redis);\n\n// Send commands to redis and get a promise back\nclient(\"ping\").then(function (pong) {\n    console.log(\"Got\", pong);\n}).catch(function (err) {\n    console.error(\"Unexpected error\", err);\n}).then(function () {\n    redis.quit();\n});\n```\n\n## Handle callback multiple arguments\n```js\n\"use strict\";\n\n// Declare functions\nfunction test(cb) {\n    return cb(undefined, 1, 2, 3);\n}\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\n\n// Create promise-based version of test\nconst single = promisify(test);\nconst multi = promisify(test, {multiArgs: true});\n\n// Discards additional arguments\nsingle().then(function (result) {\n    console.log(result); // 1\n});\n\n// Returns all arguments as an array\nmulti().then(function (result) {\n    console.log(result); // [1, 2, 3]\n});\n```\n\n### Tests\nTest with nodeunit\n```bash\n$ npm test\n```\n\nPublished under the [MIT License](http://opensource.org/licenses/MIT).\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "es6-promise": "^4.0.3"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/es6-promisify",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Turn a function into an `http.Agent` instance",
                  "devDependencies": {
                    "@types/es6-promisify": "^5.0.0",
                    "@types/node": "^10.5.3",
                    "mocha": "^3.4.2",
                    "ws": "^3.0.0"
                  },
                  "engines": {
                    "node": ">= 4.0.0"
                  },
                  "homepage": "https://github.com/TooTallNate/node-agent-base#readme",
                  "keywords": [
                    "http",
                    "agent",
                    "base",
                    "barebones",
                    "https"
                  ],
                  "license": "MIT",
                  "main": "./index.js",
                  "name": "agent-base",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/TooTallNate/node-agent-base.git"
                  },
                  "scripts": {
                    "test": "mocha --reporter spec"
                  },
                  "version": "4.3.0",
                  "readme": "agent-base\n==========\n### Turn a function into an [`http.Agent`][http.Agent] instance\n[![Build Status](https://travis-ci.org/TooTallNate/node-agent-base.svg?branch=master)](https://travis-ci.org/TooTallNate/node-agent-base)\n\nThis module provides an `http.Agent` generator. That is, you pass it an async\ncallback function, and it returns a new `http.Agent` instance that will invoke the\ngiven callback function when sending outbound HTTP requests.\n\n#### Some subclasses:\n\nHere's some more interesting uses of `agent-base`.\nSend a pull request to list yours!\n\n * [`http-proxy-agent`][http-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTP endpoints\n * [`https-proxy-agent`][https-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTPS endpoints\n * [`pac-proxy-agent`][pac-proxy-agent]: A PAC file proxy `http.Agent` implementation for HTTP and HTTPS\n * [`socks-proxy-agent`][socks-proxy-agent]: A SOCKS (v4a) proxy `http.Agent` implementation for HTTP and HTTPS\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install agent-base\n```\n\n\nExample\n-------\n\nHere's a minimal example that creates a new `net.Socket` connection to the server\nfor every HTTP request (i.e. the equivalent of `agent: false` option):\n\n```js\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar http = require('http');\nvar agent = require('agent-base');\n\nvar endpoint = 'http://nodejs.org/api/';\nvar parsed = url.parse(endpoint);\n\n// This is the important part!\nparsed.agent = agent(function (req, opts) {\n  var socket;\n  // `secureEndpoint` is true when using the https module\n  if (opts.secureEndpoint) {\n    socket = tls.connect(opts);\n  } else {\n    socket = net.connect(opts);\n  }\n  return socket;\n});\n\n// Everything else works just like normal...\nhttp.get(parsed, function (res) {\n  console.log('\"response\" event!', res.headers);\n  res.pipe(process.stdout);\n});\n```\n\nReturning a Promise or using an `async` function is also supported:\n\n```js\nagent(async function (req, opts) {\n  await sleep(1000);\n  // etc…\n});\n```\n\nReturn another `http.Agent` instance to \"pass through\" the responsibility\nfor that HTTP request to that agent:\n\n```js\nagent(function (req, opts) {\n  return opts.secureEndpoint ? https.globalAgent : http.globalAgent;\n});\n```\n\n\nAPI\n---\n\n## Agent(Function callback[, Object options]) → [http.Agent][]\n\nCreates a base `http.Agent` that will execute the callback function `callback`\nfor every HTTP request that it is used as the `agent` for. The callback function\nis responsible for creating a `stream.Duplex` instance of some kind that will be\nused as the underlying socket in the HTTP request.\n\nThe `options` object accepts the following properties:\n\n  * `timeout` - Number - Timeout for the `callback()` function in milliseconds. Defaults to Infinity (optional).\n\nThe callback function should have the following signature:\n\n### callback(http.ClientRequest req, Object options, Function cb) → undefined\n\nThe ClientRequest `req` can be accessed to read request headers and\nand the path, etc. The `options` object contains the options passed\nto the `http.request()`/`https.request()` function call, and is formatted\nto be directly passed to `net.connect()`/`tls.connect()`, or however\nelse you want a Socket to be created. Pass the created socket to\nthe callback function `cb` once created, and the HTTP request will\ncontinue to proceed.\n\nIf the `https` module is used to invoke the HTTP request, then the\n`secureEndpoint` property on `options` _will be set to `true`_.\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[http-proxy-agent]: https://github.com/TooTallNate/node-http-proxy-agent\n[https-proxy-agent]: https://github.com/TooTallNate/node-https-proxy-agent\n[pac-proxy-agent]: https://github.com/TooTallNate/node-pac-proxy-agent\n[socks-proxy-agent]: https://github.com/TooTallNate/node-socks-proxy-agent\n[http.Agent]: https://nodejs.org/api/http.html#http_class_http_agent\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "es6-promisify": "^5.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/https-proxy-agent/node_modules/agent-base",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "An HTTP(s) proxy `http.Agent` implementation for HTTPS",
              "devDependencies": {
                "mocha": "^6.2.0",
                "proxy": "1.0.1"
              },
              "engines": {
                "node": ">= 4.5.0"
              },
              "homepage": "https://github.com/TooTallNate/node-https-proxy-agent#readme",
              "keywords": [
                "https",
                "proxy",
                "endpoint",
                "agent"
              ],
              "license": "MIT",
              "main": "./index.js",
              "name": "https-proxy-agent",
              "repository": {
                "type": "git",
                "url": "git://github.com/TooTallNate/node-https-proxy-agent.git"
              },
              "scripts": {
                "test": "mocha --reporter spec"
              },
              "types": "./index.d.ts",
              "version": "3.0.1",
              "readme": "https-proxy-agent\n================\n### An HTTP(s) proxy `http.Agent` implementation for HTTPS\n[![Build Status](https://github.com/TooTallNate/node-https-proxy-agent/workflows/Node%20CI/badge.svg)](https://github.com/TooTallNate/node-https-proxy-agent/actions?workflow=Node+CI)\n\nThis module provides an `http.Agent` implementation that connects to a specified\nHTTP or HTTPS proxy server, and can be used with the built-in `https` module.\n\nSpecifically, this `Agent` implementation connects to an intermediary \"proxy\"\nserver and issues the [CONNECT HTTP method][CONNECT], which tells the proxy to\nopen a direct TCP connection to the destination server.\n\nSince this agent implements the CONNECT HTTP method, it also works with other\nprotocols that use this method when connecting over proxies (i.e. WebSockets).\nSee the \"Examples\" section below for more.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install https-proxy-agent\n```\n\n\nExamples\n--------\n\n#### `https` module example\n\n``` js\nvar url = require('url');\nvar https = require('https');\nvar HttpsProxyAgent = require('https-proxy-agent');\n\n// HTTP/HTTPS proxy to connect to\nvar proxy = process.env.http_proxy || 'http://168.63.76.32:3128';\nconsole.log('using proxy server %j', proxy);\n\n// HTTPS endpoint for the proxy to connect to\nvar endpoint = process.argv[2] || 'https://graph.facebook.com/tootallnate';\nconsole.log('attempting to GET %j', endpoint);\nvar options = url.parse(endpoint);\n\n// create an instance of the `HttpsProxyAgent` class with the proxy server information\nvar agent = new HttpsProxyAgent(proxy);\noptions.agent = agent;\n\nhttps.get(options, function (res) {\n  console.log('\"response\" event!', res.headers);\n  res.pipe(process.stdout);\n});\n```\n\n#### `ws` WebSocket connection example\n\n``` js\nvar url = require('url');\nvar WebSocket = require('ws');\nvar HttpsProxyAgent = require('https-proxy-agent');\n\n// HTTP/HTTPS proxy to connect to\nvar proxy = process.env.http_proxy || 'http://168.63.76.32:3128';\nconsole.log('using proxy server %j', proxy);\n\n// WebSocket endpoint for the proxy to connect to\nvar endpoint = process.argv[2] || 'ws://echo.websocket.org';\nvar parsed = url.parse(endpoint);\nconsole.log('attempting to connect to WebSocket %j', endpoint);\n\n// create an instance of the `HttpsProxyAgent` class with the proxy server information\nvar options = url.parse(proxy);\n\nvar agent = new HttpsProxyAgent(options);\n\n// finally, initiate the WebSocket connection\nvar socket = new WebSocket(endpoint, { agent: agent });\n\nsocket.on('open', function () {\n  console.log('\"open\" event!');\n  socket.send('hello world');\n});\n\nsocket.on('message', function (data, flags) {\n  console.log('\"message\" event! %j %j', data, flags);\n  socket.close();\n});\n```\n\nAPI\n---\n\n### new HttpsProxyAgent(Object options)\n\nThe `HttpsProxyAgent` class implements an `http.Agent` subclass that connects\nto the specified \"HTTP(s) proxy server\" in order to proxy HTTPS and/or WebSocket\nrequests. This is achieved by using the [HTTP `CONNECT` method][CONNECT].\n\nThe `options` argument may either be a string URI of the proxy server to use, or an\n\"options\" object with more specific properties:\n\n  * `host` - String - Proxy host to connect to (may use `hostname` as well). Required.\n  * `port` - Number - Proxy port to connect to. Required.\n  * `protocol` - String - If `https:`, then use TLS to connect to the proxy.\n  * `headers` - Object - Additional HTTP headers to be sent on the HTTP CONNECT method.\n  * Any other options given are passed to the `net.connect()`/`tls.connect()` functions.\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[CONNECT]: http://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_Tunneling\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "agent-base": "^4.3.0",
                "debug": "^3.1.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/https-proxy-agent",
              "error": "[Circular]",
              "extraneous": false
            },
            "lodash": {
              "_args": [
                [
                  "lodash@4.17.15",
                  "/path/to/project/packages/shared"
                ],
                [
                  "lodash@4.17.15",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "lodash@4.17.15",
              "_id": "lodash@4.17.15",
              "_integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==",
              "_location": "/lodash",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "lodash@4.17.15",
                "name": "lodash",
                "escapedName": "lodash",
                "rawSpec": "4.17.15",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.17.15"
              },
              "_requiredBy": [
                "/snowflake-sdk",
                "/winston/async"
              ],
              "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
              "_spec": "4.17.15",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "John-David Dalton",
                "email": "john.david.dalton@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/lodash/lodash/issues"
              },
              "contributors": [
                {
                  "name": "John-David Dalton",
                  "email": "john.david.dalton@gmail.com"
                },
                {
                  "name": "Mathias Bynens",
                  "email": "mathias@qiwi.be"
                }
              ],
              "description": "Lodash modular utilities.",
              "homepage": "https://lodash.com/",
              "icon": "https://lodash.com/icon.svg",
              "keywords": [
                "modules",
                "stdlib",
                "util"
              ],
              "license": "MIT",
              "main": "lodash.js",
              "name": "lodash",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lodash/lodash.git"
              },
              "scripts": {
                "test": "echo \"See https://travis-ci.org/lodash-archive/lodash-cli for testing details.\""
              },
              "version": "4.17.15",
              "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/lodash",
              "error": "[Circular]",
              "extraneous": false
            },
            "mkdirp": {
              "_args": [
                [
                  "mkdirp@1.0.4",
                  "/path/to/project/packages/shared"
                ],
                [
                  "mkdirp@1.0.4",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "mkdirp@1.0.4",
              "_id": "mkdirp@1.0.4",
              "_integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
              "_location": "/mkdirp",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "mkdirp@1.0.4",
                "name": "mkdirp",
                "escapedName": "mkdirp",
                "rawSpec": "1.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.0.4"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
              "_spec": "1.0.4",
              "_where": "/path/to/project/packages/shared",
              "bin": {
                "mkdirp": "bin/cmd.js"
              },
              "bugs": {
                "url": "https://github.com/isaacs/node-mkdirp/issues"
              },
              "description": "Recursively mkdir, like `mkdir -p`",
              "devDependencies": {
                "require-inject": "^1.4.4",
                "tap": "^14.10.7"
              },
              "engines": {
                "node": ">=10"
              },
              "files": [
                "bin",
                "lib",
                "index.js"
              ],
              "homepage": "https://github.com/isaacs/node-mkdirp#readme",
              "keywords": [
                "mkdir",
                "directory",
                "make dir",
                "make",
                "dir",
                "recursive",
                "native"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "mkdirp",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/isaacs/node-mkdirp.git"
              },
              "scripts": {
                "postpublish": "git push origin --follow-tags",
                "postversion": "npm publish",
                "preversion": "npm test",
                "snap": "tap",
                "test": "tap"
              },
              "tap": {
                "check-coverage": true,
                "coverage-map": "map.js"
              },
              "version": "1.0.4",
              "readme": "# mkdirp\n\nLike `mkdir -p`, but in Node.js!\n\nNow with a modern API and no\\* bugs!\n\n<small>\\* may contain some bugs</small>\n\n# example\n\n## pow.js\n\n```js\nconst mkdirp = require('mkdirp')\n\n// return value is a Promise resolving to the first directory created\nmkdirp('/tmp/foo/bar/baz').then(made =>\n  console.log(`made directories, starting with ${made}`))\n```\n\nOutput (where `/tmp/foo` already exists)\n\n```\nmade directories, starting with /tmp/foo/bar\n```\n\nOr, if you don't have time to wait around for promises:\n\n```js\nconst mkdirp = require('mkdirp')\n\n// return value is the first directory created\nconst made = mkdirp.sync('/tmp/foo/bar/baz')\nconsole.log(`made directories, starting with ${made}`)\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nconst mkdirp = require('mkdirp')\n```\n\n## mkdirp(dir, [opts]) -> Promise<String | undefined>\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a string or number, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0o777 &\n(~process.umask())`.\n\nPromise resolves to first directory `made` that had to be created, or\n`undefined` if everything already exists.  Promise rejects if any errors\nare encountered.  Note that, in the case of promise rejection, some\ndirectories _may_ have been created, as recursive directory creation is not\nan atomic operation.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, opts, cb)`\nand `opts.fs.stat(path, cb)`.\n\nYou can also override just one or the other of `mkdir` and `stat` by\npassing in `opts.stat` or `opts.mkdir`, or providing an `fs` option that\nonly overrides one of these.\n\n## mkdirp.sync(dir, opts) -> String|null\n\nSynchronously create a new directory and any necessary subdirectories at\n`dir` with octal permission string `opts.mode`. If `opts` is a string or\nnumber, it will be treated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0o777 &\n(~process.umask())`.\n\nReturns the first directory that had to be created, or undefined if\neverything already exists.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)`\nand `opts.fs.statSync(path)`.\n\nYou can also override just one or the other of `mkdirSync` and `statSync`\nby passing in `opts.statSync` or `opts.mkdirSync`, or providing an `fs`\noption that only overrides one of these.\n\n## mkdirp.manual, mkdirp.manualSync\n\nUse the manual implementation (not the native one).  This is the default\nwhen the native implementation is not available or the stat/mkdir\nimplementation is overridden.\n\n## mkdirp.native, mkdirp.nativeSync\n\nUse the native implementation (not the manual one).  This is the default\nwhen the native implementation is available and stat/mkdir are not\noverridden.\n\n# implementation\n\nOn Node.js v10.12.0 and above, use the native `fs.mkdir(p,\n{recursive:true})` option, unless `fs.mkdir`/`fs.mkdirSync` has been\noverridden by an option.\n\n## native implementation\n\n- If the path is a root directory, then pass it to the underlying\n  implementation and return the result/error.  (In this case, it'll either\n  succeed or fail, but we aren't actually creating any dirs.)\n- Walk up the path statting each directory, to find the first path that\n  will be created, `made`.\n- Call `fs.mkdir(path, { recursive: true })` (or `fs.mkdirSync`)\n- If error, raise it to the caller.\n- Return `made`.\n\n## manual implementation\n\n- Call underlying `fs.mkdir` implementation, with `recursive: false`\n- If error:\n  - If path is a root directory, raise to the caller and do not handle it\n  - If ENOENT, mkdirp parent dir, store result as `made`\n  - stat(path)\n    - If error, raise original `mkdir` error\n    - If directory, return `made`\n    - Else, raise original `mkdir` error\n- else\n  - return `undefined` if a root dir, or `made` if set, or `path`\n\n## windows vs unix caveat\n\nOn Windows file systems, attempts to create a root directory (ie, a drive\nletter or root UNC path) will fail.  If the root directory exists, then it\nwill fail with `EPERM`.  If the root directory does not exist, then it will\nfail with `ENOENT`.\n\nOn posix file systems, attempts to create a root directory (in recursive\nmode) will succeed silently, as it is treated like just another directory\nthat already exists.  (In non-recursive mode, of course, it fails with\n`EEXIST`.)\n\nIn order to preserve this system-specific behavior (and because it's not as\nif we can create the parent of a root directory anyway), attempts to create\na root directory are passed directly to the `fs` implementation, and any\nerrors encountered are not handled.\n\n## native error caveat\n\nThe native implementation (as of at least Node.js v13.4.0) does not provide\nappropriate errors in some cases (see\n[nodejs/node#31481](https://github.com/nodejs/node/issues/31481) and\n[nodejs/node#28015](https://github.com/nodejs/node/issues/28015)).\n\nIn order to work around this issue, the native implementation will fall\nback to the manual implementation if an `ENOENT` error is encountered.\n\n# choosing a recursive mkdir implementation\n\nThere are a few to choose from!  Use the one that suits your needs best :D\n\n## use `fs.mkdir(path, {recursive: true}, cb)` if:\n\n- You wish to optimize performance even at the expense of other factors.\n- You don't need to know the first dir created.\n- You are ok with getting `ENOENT` as the error when some other problem is\n  the actual cause.\n- You can limit your platforms to Node.js v10.12 and above.\n- You're ok with using callbacks instead of promises.\n- You don't need/want a CLI.\n- You don't need to override the `fs` methods in use.\n\n## use this module (mkdirp 1.x) if:\n\n- You need to know the first directory that was created.\n- You wish to use the native implementation if available, but fall back\n  when it's not.\n- You prefer promise-returning APIs to callback-taking APIs.\n- You want more useful error messages than the native recursive mkdir\n  provides (at least as of Node.js v13.4), and are ok with re-trying on\n  `ENOENT` to achieve this.\n- You need (or at least, are ok with) a CLI.\n- You need to override the `fs` methods in use.\n\n## use [`make-dir`](http://npm.im/make-dir) if:\n\n- You do not need to know the first dir created (and wish to save a few\n  `stat` calls when using the native implementation for this reason).\n- You wish to use the native implementation if available, but fall back\n  when it's not.\n- You prefer promise-returning APIs to callback-taking APIs.\n- You are ok with occasionally getting `ENOENT` errors for failures that\n  are actually related to something other than a missing file system entry.\n- You don't need/want a CLI.\n- You need to override the `fs` methods in use.\n\n## use mkdirp 0.x if:\n\n- You need to know the first directory that was created.\n- You need (or at least, are ok with) a CLI.\n- You need to override the `fs` methods in use.\n- You're ok with using callbacks instead of promises.\n- You are not running on Windows, where the root-level ENOENT errors can\n  lead to infinite regress.\n- You think vinyl just sounds warmer and richer for some weird reason.\n- You are supporting truly ancient Node.js versions, before even the advent\n  of a `Promise` language primitive.  (Please don't.  You deserve better.)\n\n# cli\n\nThis package also ships with a `mkdirp` command.\n\n```\n$ mkdirp -h\n\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories\n  that don't yet exist.\n\n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m<mode>       If a directory needs to be created, set the mode as an octal\n  --mode=<mode>  permission string.\n\n  -v --version   Print the mkdirp version number\n\n  -h --help      Print this helpful banner\n\n  -p --print     Print the first directories created for each path provided\n\n  --manual       Use manual implementation, even if native is available\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library locally, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command everywhere, or\n\n```\nnpx mkdirp ...\n```\n\nto run the command without installing it globally.\n\n# platform support\n\nThis module works on node v8, but only v10 and above are officially\nsupported, as Node v8 reached its LTS end of life 2020-01-01, which is in\nthe past, as of this writing.\n\n# license\n\nMIT\n",
              "readmeFilename": "readme.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/shared/node_modules/mkdirp",
              "error": "[Circular]",
              "extraneous": false
            },
            "moment": {
              "_args": "[Circular]",
              "_from": "moment@2.24.0",
              "_id": "moment@2.24.0",
              "_integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg==",
              "_location": "/moment",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "moment@2.24.0",
                "name": "moment",
                "escapedName": "moment",
                "rawSpec": "2.24.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.24.0"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
              "_spec": "2.24.0",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "contributors": "[Circular]",
              "description": "Parse, validate, manipulate, and display dates",
              "devDependencies": "[Circular]",
              "dojoBuild": "package.js",
              "ender": "./ender.js",
              "engines": "[Circular]",
              "homepage": "http://momentjs.com",
              "jsnext:main": "./src/moment.js",
              "jspm": "[Circular]",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "./moment.js",
              "name": "moment",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "spm": "[Circular]",
              "typings": "./moment.d.ts",
              "version": "2.24.0",
              "readme": "[![Join the chat at https://gitter.im/moment/moment](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][downloads-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n[![Coverage Status](https://coveralls.io/repos/moment/moment/badge.svg?branch=develop)](https://coveralls.io/r/moment/moment?branch=develop)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield)\n[![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\n**[Documentation](http://momentjs.com/docs/)**\n\n## Port to ECMAScript 6 (version 2.10.0)\n\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside `src/`. Previously `moment.js`, `locale/*.js` and\n`test/moment/*.js`, `test/locale/*.js` contained the source of the project. Now\nthe source is in `src/`, temporary build (ECMAScript 5) files are placed under\n`build/umd/` (for running tests during development), and the `moment.js` and\n`locale/*.js` files are updated only on release.\n\nIf you want to use a particular revision of the code, make sure to run\n`grunt transpile update-index`, so `moment.js` and `locales/*.js` are synced\nwith `src/*`. We might place that in a commit hook in the future.\n\n## Upgrading to 2.0.0\n\nThere are a number of small backwards incompatible changes with version 2.0.0. [See the full descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\n * Changed language ordinal method to return the number + ordinal instead of just the ordinal.\n\n * Changed two digit year parsing cutoff to match strptime.\n\n * Removed `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\n * Removed `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\n * Removed the lang data objects from the top level namespace.\n\n * Duplicate `Date` passed to `moment()` instead of referencing it.\n\n## [Changelog](https://github.com/moment/moment/blob/develop/CHANGELOG.md)\n\n## [Contributing](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md) [![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to [ichernev](https://github.com/ichernev).\n\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to moment/moment on CodeTriage](https://www.codetriage.com/moment/moment).\n\n## License\n\nMoment.js is freely distributable under the terms of the [MIT license](https://github.com/moment/moment/blob/develop/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large)\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment\n[npm-version-image]: http://img.shields.io/npm/v/moment.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment.svg?style=flat\n[downloads-url]: https://npmcharts.com/compare/moment?minimal=true\n\n[travis-url]: http://travis-ci.org/moment/moment\n[travis-image]: http://img.shields.io/travis/moment/moment/develop.svg?style=flat\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/moment",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "moment"
            },
            "moment-timezone": {
              "_args": [
                [
                  "moment-timezone@0.5.28",
                  "/path/to/project/packages/shared"
                ],
                [
                  "moment-timezone@0.5.28",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "moment-timezone@0.5.28",
              "_id": "moment-timezone@0.5.28",
              "_integrity": "sha512-TDJkZvAyKIVWg5EtVqRzU97w0Rb0YVbfpqyjgu6GwXCAohVRqwZjf4fOzDE6p1Ch98Sro/8hQQi65WDXW5STPw==",
              "_location": "/moment-timezone",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "moment-timezone@0.5.28",
                "name": "moment-timezone",
                "escapedName": "moment-timezone",
                "rawSpec": "0.5.28",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.5.28"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/moment-timezone/-/moment-timezone-0.5.28.tgz",
              "_spec": "0.5.28",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Tim Wood",
                "email": "washwithcare@gmail.com",
                "url": "http://timwoodcreates.com/"
              },
              "bugs": {
                "url": "https://github.com/moment/moment-timezone/issues"
              },
              "dependencies": {
                "moment": {
                  "_args": "[Circular]",
                  "_from": "moment@2.24.0",
                  "_id": "moment@2.24.0",
                  "_integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg==",
                  "_location": "/moment",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "moment@2.24.0",
                    "name": "moment",
                    "escapedName": "moment",
                    "rawSpec": "2.24.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.24.0"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
                  "_spec": "2.24.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "contributors": "[Circular]",
                  "description": "Parse, validate, manipulate, and display dates",
                  "devDependencies": "[Circular]",
                  "dojoBuild": "package.js",
                  "ender": "./ender.js",
                  "engines": "[Circular]",
                  "homepage": "http://momentjs.com",
                  "jsnext:main": "./src/moment.js",
                  "jspm": "[Circular]",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "./moment.js",
                  "name": "moment",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "spm": "[Circular]",
                  "typings": "./moment.d.ts",
                  "version": "2.24.0",
                  "readme": "[![Join the chat at https://gitter.im/moment/moment](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][downloads-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n[![Coverage Status](https://coveralls.io/repos/moment/moment/badge.svg?branch=develop)](https://coveralls.io/r/moment/moment?branch=develop)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield)\n[![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\n**[Documentation](http://momentjs.com/docs/)**\n\n## Port to ECMAScript 6 (version 2.10.0)\n\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside `src/`. Previously `moment.js`, `locale/*.js` and\n`test/moment/*.js`, `test/locale/*.js` contained the source of the project. Now\nthe source is in `src/`, temporary build (ECMAScript 5) files are placed under\n`build/umd/` (for running tests during development), and the `moment.js` and\n`locale/*.js` files are updated only on release.\n\nIf you want to use a particular revision of the code, make sure to run\n`grunt transpile update-index`, so `moment.js` and `locales/*.js` are synced\nwith `src/*`. We might place that in a commit hook in the future.\n\n## Upgrading to 2.0.0\n\nThere are a number of small backwards incompatible changes with version 2.0.0. [See the full descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\n * Changed language ordinal method to return the number + ordinal instead of just the ordinal.\n\n * Changed two digit year parsing cutoff to match strptime.\n\n * Removed `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\n * Removed `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\n * Removed the lang data objects from the top level namespace.\n\n * Duplicate `Date` passed to `moment()` instead of referencing it.\n\n## [Changelog](https://github.com/moment/moment/blob/develop/CHANGELOG.md)\n\n## [Contributing](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md) [![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to [ichernev](https://github.com/ichernev).\n\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to moment/moment on CodeTriage](https://www.codetriage.com/moment/moment).\n\n## License\n\nMoment.js is freely distributable under the terms of the [MIT license](https://github.com/moment/moment/blob/develop/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large)\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment\n[npm-version-image]: http://img.shields.io/npm/v/moment.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment.svg?style=flat\n[downloads-url]: https://npmcharts.com/compare/moment?minimal=true\n\n[travis-url]: http://travis-ci.org/moment/moment\n[travis-image]: http://img.shields.io/travis/moment/moment/develop.svg?style=flat\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/moment",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "moment"
                }
              },
              "description": "Parse and display moments in any timezone.",
              "devDependencies": {
                "grunt": "^1.0.4",
                "grunt-contrib-clean": "^2.0.0",
                "grunt-contrib-jshint": "^2.1.0",
                "grunt-contrib-nodeunit": "^2.0.0",
                "grunt-contrib-uglify": "^4.0.1"
              },
              "engines": {
                "node": "*"
              },
              "homepage": "http://momentjs.com/timezone/",
              "jspm": {
                "main": "builds/moment-timezone-with-data",
                "shim": {
                  "moment-timezone": {
                    "deps": [
                      "moment"
                    ]
                  }
                }
              },
              "keywords": [
                "moment",
                "date",
                "time",
                "timezone",
                "olson",
                "iana",
                "zone",
                "tz"
              ],
              "license": "MIT",
              "main": "./index.js",
              "name": "moment-timezone",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/moment/moment-timezone.git"
              },
              "scripts": {
                "test": "grunt"
              },
              "version": "0.5.28",
              "readme": "# [Moment Timezone](http://momentjs.com/timezone)\n\n[![Join the chat at https://gitter.im/moment/moment-timezone](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment-timezone?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n\nIANA Time Zone Database + [Moment.js](http://momentjs.com).\n\n```js\nvar june = moment(\"2014-06-01T12:00:00Z\");\njune.tz('America/Los_Angeles').format('ha z'); // 5am PDT\njune.tz('America/New_York').format('ha z');    // 8am EDT\njune.tz('Asia/Tokyo').format('ha z');          // 9pm JST\njune.tz('Australia/Sydney').format('ha z');    // 10pm EST\n\nvar dec = moment(\"2014-12-01T12:00:00Z\");\ndec.tz('America/Los_Angeles').format('ha z');  // 4am PST\ndec.tz('America/New_York').format('ha z');     // 7am EST\ndec.tz('Asia/Tokyo').format('ha z');           // 9pm JST\ndec.tz('Australia/Sydney').format('ha z');     // 11pm EST\n```\n\n#### [Contribute code or compile time zone data](contributing.md)\n\n#### [Read the changelog](changelog.md)\n\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment-timezone\n[npm-version-image]: http://img.shields.io/npm/v/moment-timezone.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment-timezone.svg?style=flat\n\n[travis-url]: http://travis-ci.org/moment/moment-timezone\n[travis-image]: http://img.shields.io/travis/moment/moment-timezone/develop.svg?style=flat\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "moment": ">= 2.9.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/moment-timezone",
              "error": "[Circular]",
              "extraneous": false
            },
            "ocsp": {
              "_args": [
                [
                  "ocsp@1.2.0",
                  "/path/to/project/packages/shared"
                ],
                [
                  "ocsp@1.2.0",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "ocsp@1.2.0",
              "_id": "ocsp@1.2.0",
              "_integrity": "sha1-RpoXdrRX3uZ+sCAUCMGUa6xAdsw=",
              "_location": "/ocsp",
              "_phantomChildren": {
                "bn.js": "4.11.8",
                "inherits": "2.0.4",
                "minimalistic-assert": "1.0.1"
              },
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "ocsp@1.2.0",
                "name": "ocsp",
                "escapedName": "ocsp",
                "rawSpec": "1.2.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.2.0"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/ocsp/-/ocsp-1.2.0.tgz",
              "_spec": "1.2.0",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Fedor Indutny",
                "email": "fedor@indutny.com"
              },
              "bugs": {
                "url": "https://github.com/indutny/ocsp/issues"
              },
              "dependencies": {
                "async": {
                  "_args": [
                    [
                      "async@1.5.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "async@1.5.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "async@1.5.2",
                  "_id": "async@1.5.2",
                  "_integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
                  "_location": "/async",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "async@1.5.2",
                    "name": "async",
                    "escapedName": "async",
                    "rawSpec": "1.5.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.5.2"
                  },
                  "_requiredBy": [
                    "/ocsp"
                  ],
                  "_resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
                  "_spec": "1.5.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Caolan McMahon"
                  },
                  "bugs": {
                    "url": "https://github.com/caolan/async/issues"
                  },
                  "description": "Higher-order functions and common patterns for asynchronous code",
                  "devDependencies": {
                    "benchmark": "github:bestiejs/benchmark.js",
                    "bluebird": "^2.9.32",
                    "chai": "^3.1.0",
                    "coveralls": "^2.11.2",
                    "es6-promise": "^2.3.0",
                    "jscs": "^1.13.1",
                    "jshint": "~2.8.0",
                    "karma": "^0.13.2",
                    "karma-browserify": "^4.2.1",
                    "karma-firefox-launcher": "^0.1.6",
                    "karma-mocha": "^0.2.0",
                    "karma-mocha-reporter": "^1.0.2",
                    "lodash": "^3.9.0",
                    "mkdirp": "~0.5.1",
                    "mocha": "^2.2.5",
                    "native-promise-only": "^0.8.0-a",
                    "nodeunit": ">0.0.0",
                    "nyc": "^2.1.0",
                    "rsvp": "^3.0.18",
                    "semver": "^4.3.6",
                    "uglify-js": "~2.4.0",
                    "xyz": "^0.5.0",
                    "yargs": "~3.9.1"
                  },
                  "files": [
                    "lib",
                    "dist/async.js",
                    "dist/async.min.js"
                  ],
                  "homepage": "https://github.com/caolan/async#readme",
                  "jam": {
                    "main": "lib/async.js",
                    "include": [
                      "lib/async.js",
                      "README.md",
                      "LICENSE"
                    ],
                    "categories": [
                      "Utilities"
                    ]
                  },
                  "keywords": [
                    "async",
                    "callback",
                    "utility",
                    "module"
                  ],
                  "license": "MIT",
                  "main": "lib/async.js",
                  "name": "async",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/caolan/async.git"
                  },
                  "scripts": {
                    "coverage": "nyc npm test && nyc report",
                    "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
                    "lint": "jshint lib/*.js test/*.js perf/*.js && jscs lib/*.js test/*.js perf/*.js",
                    "mocha-browser-test": "karma start",
                    "mocha-node-test": "mocha mocha_test/",
                    "mocha-test": "npm run mocha-node-test && npm run mocha-browser-test",
                    "nodeunit-test": "nodeunit test/test-async.js",
                    "test": "npm run-script lint && npm run nodeunit-test && npm run mocha-test"
                  },
                  "spm": {
                    "main": "lib/async.js"
                  },
                  "version": "1.5.2",
                  "volo": {
                    "main": "lib/async.js",
                    "ignore": [
                      "**/.*",
                      "node_modules",
                      "bower_components",
                      "test",
                      "tests"
                    ]
                  },
                  "readme": "# Async.js\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](http://img.shields.io/npm/v/async.svg)](https://www.npmjs.org/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [Node.js](http://nodejs.org) and installable via `npm install async`,\nit can also be used directly in the browser.\n\nAsync is also installable via:\n\n- [bower](http://bower.io/): `bower install async`\n- [component](https://github.com/component/component): `component install\n  caolan/async`\n- [jam](http://jamjs.org/): `jam install async`\n- [spm](http://spmjs.io/): `spm install async`\n\nAsync provides around 20 functions that include the usual 'functional'\nsuspects (`map`, `reduce`, `filter`, `each`…) as well as some common patterns\nfor asynchronous control flow (`parallel`, `series`, `waterfall`…). All these\nfunctions assume you follow the Node.js convention of providing a single\ncallback as the last argument of your `async` function.\n\n\n## Quick Examples\n\n```javascript\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls <sub>[(StackOverflow)](http://stackoverflow.com/questions/tagged/async.js)</sub>\n### Synchronous iteration functions\n\nIf you get an error like `RangeError: Maximum call stack size exceeded.` or other stack overflow issues when using async, you are likely using a synchronous iterator.  By *synchronous* we mean a function that calls its callback on the same tick in the javascript event loop, without doing any I/O or using any timers.  Calling many callbacks iteratively will quickly overflow the stack. If you run into this issue, just defer your callback with `async.setImmediate` to start a new call stack on the next tick of the event loop.\n\nThis can also arise by accident if you callback early in certain cases:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    callback(null, cache[item]); // if many items are cached, you'll overflow\n  } else {\n    doSomeIO(item, callback);\n  }\n}, function done() {\n  //...\n});\n```\n\nJust change it to:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    async.setImmediate(function () {\n      callback(null, cache[item]);\n    });\n  } else {\n    doSomeIO(item, callback);\n  //...\n```\n\nAsync guards against synchronous functions in some, but not all, cases.  If you are still running into stack overflows, you can defer as suggested above, or wrap functions with [`async.ensureAsync`](#ensureAsync)  Functions that are asynchronous by their nature do not have this problem and don't need the extra callback deferral.\n\nIf JavaScript's event loop is still a bit nebulous, check out [this article](http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/) or [this talk](http://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html) for more detailed information about how it works.\n\n\n### Multiple callbacks\n\nMake sure to always `return` when calling a callback early, otherwise you will cause multiple callbacks and unpredictable behavior in many cases.\n\n```js\nasync.waterfall([\n    function (callback) {\n        getSomething(options, function (err, result) {\n          if (err) {\n            callback(new Error(\"failed getting something:\" + err.message));\n            // we should return here\n          }\n          // since we did not return, this callback still will be called and\n          // `processData` will be called twice\n          callback(null, result);\n        });\n    },\n    processData\n], done)\n```\n\nIt is always good practice to `return callback(err, result)`  whenever a callback call is not the last statement of a function.\n\n\n### Binding a context to an iterator\n\nThis section is really about `bind`, not about `async`. If you are wondering how to\nmake `async` execute your iterators in a given context, or are confused as to why\na method of another library isn't working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){\n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its\n  // 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](https://github.com/caolan/async/blob/master/lib/async.js).\nAlternatively, you can install using Node Package Manager (`npm`):\n\n    npm install async\n\nAs well as using Bower:\n\n    bower install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5.\n\nUsage:\n\n```html\n<script type=\"text/javascript\" src=\"async.js\"></script>\n<script type=\"text/javascript\">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\nSome functions are also available in the following forms:\n* `<name>Series` - the same as `<name>` but runs only a single async operation at a time\n* `<name>Limit` - the same as `<name>` but runs a maximum of `limit` async operations at a time\n\n### Collections\n\n* [`each`](#each), `eachSeries`, `eachLimit`\n* [`forEachOf`](#forEachOf), `forEachOfSeries`, `forEachOfLimit`\n* [`map`](#map), `mapSeries`, `mapLimit`\n* [`filter`](#filter), `filterSeries`, `filterLimit`\n* [`reject`](#reject), `rejectSeries`, `rejectLimit`\n* [`reduce`](#reduce), [`reduceRight`](#reduceRight)\n* [`detect`](#detect), `detectSeries`, `detectLimit`\n* [`sortBy`](#sortBy)\n* [`some`](#some), `someLimit`\n* [`every`](#every), `everyLimit`\n* [`concat`](#concat), `concatSeries`\n\n### Control Flow\n\n* [`series`](#seriestasks-callback)\n* [`parallel`](#parallel), `parallelLimit`\n* [`whilst`](#whilst), [`doWhilst`](#doWhilst)\n* [`until`](#until), [`doUntil`](#doUntil)\n* [`during`](#during), [`doDuring`](#doDuring)\n* [`forever`](#forever)\n* [`waterfall`](#waterfall)\n* [`compose`](#compose)\n* [`seq`](#seq)\n* [`applyEach`](#applyEach), `applyEachSeries`\n* [`queue`](#queue), [`priorityQueue`](#priorityQueue)\n* [`cargo`](#cargo)\n* [`auto`](#auto)\n* [`retry`](#retry)\n* [`iterator`](#iterator)\n* [`times`](#times), `timesSeries`, `timesLimit`\n\n### Utils\n\n* [`apply`](#apply)\n* [`nextTick`](#nextTick)\n* [`memoize`](#memoize)\n* [`unmemoize`](#unmemoize)\n* [`ensureAsync`](#ensureAsync)\n* [`constant`](#constant)\n* [`asyncify`](#asyncify)\n* [`wrapSync`](#wrapSync)\n* [`log`](#log)\n* [`dir`](#dir)\n* [`noConflict`](#noConflict)\n\n## Collections\n\n<a name=\"forEach\" />\n<a name=\"each\" />\n### each(arr, iterator, [callback])\n\nApplies the function `iterator` to each item in `arr`, in parallel.\nThe `iterator` is called with an item from the list, and a callback for when it\nhas finished. If the `iterator` passes an error to its `callback`, the main\n`callback` (for the `each` function) is immediately called with the error.\n\nNote, that since this function applies `iterator` to each item in parallel,\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err)` which must be called once it has\n  completed. If no error has occurred, the `callback` should be run without\n  arguments or with an explicit `null` argument.  The array index is not passed\n  to the iterator.  If you need the index, use [`forEachOf`](#forEachOf).\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions\n  have finished, or an error occurs.\n\n__Examples__\n\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n```js\n// assuming openFiles is an array of file names\n\nasync.each(openFiles, function(file, callback) {\n\n  // Perform operation on file here.\n  console.log('Processing file ' + file);\n\n  if( file.length > 32 ) {\n    console.log('This file name is too long');\n    callback('File name too long');\n  } else {\n    // Do work to process file here\n    console.log('File processed');\n    callback();\n  }\n}, function(err){\n    // if any of the file processing produced an error, err would equal that error\n    if( err ) {\n      // One of the iterations produced an error.\n      // All processing will now stop.\n      console.log('A file failed to process');\n    } else {\n      console.log('All files have been processed successfully');\n    }\n});\n```\n\n__Related__\n\n* eachSeries(arr, iterator, [callback])\n* eachLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"forEachOf\" />\n<a name=\"eachOf\" />\n\n### forEachOf(obj, iterator, [callback])\n\nLike `each`, except that it iterates over objects, and passes the key as the second argument to the iterator.\n\n__Arguments__\n\n* `obj` - An object or array to iterate over.\n* `iterator(item, key, callback)` - A function to apply to each item in `obj`.\nThe `key` is the item's key, or index in the case of an array. The iterator is\npassed a `callback(err)` which must be called once it has completed. If no\nerror has occurred, the callback should be run without arguments or with an\nexplicit `null` argument.\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions have finished, or an error occurs.\n\n__Example__\n\n```js\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, function (value, key, callback) {\n  fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n    if (err) return callback(err);\n    try {\n      configs[key] = JSON.parse(data);\n    } catch (e) {\n      return callback(e);\n    }\n    callback();\n  })\n}, function (err) {\n  if (err) console.error(err.message);\n  // configs is now a map of JSON data\n  doSomethingWith(configs);\n})\n```\n\n__Related__\n\n* forEachOfSeries(obj, iterator, [callback])\n* forEachOfLimit(obj, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"map\" />\n### map(arr, iterator, [callback])\n\nProduces a new array of values by mapping each value in `arr` through\nthe `iterator` function. The `iterator` is called with an item from `arr` and a\ncallback for when it has finished processing. Each of these callback takes 2 arguments:\nan `error`, and the transformed item from `arr`. If `iterator` passes an error to its\ncallback, the main `callback` (for the `map` function) is immediately called with the error.\n\nNote, that since this function applies the `iterator` to each item in parallel,\nthere is no guarantee that the `iterator` functions will complete in order.\nHowever, the results array will be in the same order as the original `arr`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, transformed)` which must be called once\n  it has completed with an error (which can be `null`) and a transformed item.\n* `callback(err, results)` - *Optional* A callback which is called when all `iterator`\n  functions have finished, or an error occurs. Results is an array of the\n  transformed items from the `arr`.\n\n__Example__\n\n```js\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n__Related__\n* mapSeries(arr, iterator, [callback])\n* mapLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"select\" />\n<a name=\"filter\" />\n### filter(arr, iterator, [callback])\n\n__Alias:__ `select`\n\nReturns a new array of all the values in `arr` which pass an async truth test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The `iterator` is passed a `callback(truthValue)`, which must be called with a\n  boolean argument once it has completed.\n* `callback(results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n__Related__\n\n* filterSeries(arr, iterator, [callback])\n* filterLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"reject\" />\n### reject(arr, iterator, [callback])\n\nThe opposite of [`filter`](#filter). Removes values that pass an `async` truth test.\n\n__Related__\n\n* rejectSeries(arr, iterator, [callback])\n* rejectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"reduce\" />\n### reduce(arr, memo, iterator, [callback])\n\n__Aliases:__ `inject`, `foldl`\n\nReduces `arr` into a single value using an async `iterator` to return\neach successive step. `memo` is the initial state of the reduction.\nThis function only operates in series.\n\nFor performance reasons, it may make sense to split a call to this function into\na parallel map, and then use the normal `Array.prototype.reduce` on the results.\nThis function is for situations where each step in the reduction needs to be async;\nif you can get the data before reducing it, then it's probably a good idea to do so.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `memo` - The initial state of the reduction.\n* `iterator(memo, item, callback)` - A function applied to each item in the\n  array to produce the next step in the reduction. The `iterator` is passed a\n  `callback(err, reduction)` which accepts an optional error as its first\n  argument, and the state of the reduction as the second. If an error is\n  passed to the callback, the reduction is stopped and the main `callback` is\n  immediately called with the error.\n* `callback(err, result)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name=\"reduceRight\" />\n### reduceRight(arr, memo, iterator, [callback])\n\n__Alias:__ `foldr`\n\nSame as [`reduce`](#reduce), only operates on `arr` in reverse order.\n\n\n---------------------------------------\n\n<a name=\"detect\" />\n### detect(arr, iterator, [callback])\n\nReturns the first value in `arr` that passes an async truth test. The\n`iterator` is applied in parallel, meaning the first iterator to return `true` will\nfire the detect `callback` with that result. That means the result might not be\nthe first item in the original `arr` (in terms of order) that passes the test.\n\nIf order within the original `arr` is important, then look at [`detectSeries`](#detectSeries).\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The iterator is passed a `callback(truthValue)` which must be called with a\n  boolean argument once it has completed. **Note: this callback does not take an error as its first argument.**\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the `iterator` functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value `undefined` if none passed.  **Note: this callback does not take an error as its first argument.**\n\n__Example__\n\n```js\nasync.detect(['file1','file2','file3'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n__Related__\n\n* detectSeries(arr, iterator, [callback])\n* detectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name=\"sortBy\" />\n### sortBy(arr, iterator, [callback])\n\nSorts a list by the results of running each `arr` value through an async `iterator`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, sortValue)` which must be called once it\n  has completed with an error (which can be `null`) and a value to use as the sort\n  criteria.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is the items from\n  the original `arr` sorted by the values returned by the `iterator` calls.\n\n__Example__\n\n```js\nasync.sortBy(['file1','file2','file3'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n__Sort Order__\n\nBy modifying the callback parameter the sorting order can be influenced:\n\n```js\n//ascending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x);\n}, function(err,result){\n    //result callback\n} );\n\n//descending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n}, function(err,result){\n    //result callback\n} );\n```\n\n---------------------------------------\n\n<a name=\"some\" />\n### some(arr, iterator, [callback])\n\n__Alias:__ `any`\n\nReturns `true` if at least one element in the `arr` satisfies an async test.\n_The callback for each iterator call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. Once any iterator\ncall returns `true`, the main `callback` is immediately called.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)`` which must be\n  called with a boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n__Example__\n\n```js\nasync.some(['file1','file2','file3'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n__Related__\n\n* someLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name=\"every\" />\n### every(arr, iterator, [callback])\n\n__Alias:__ `all`\n\nReturns `true` if every element in `arr` satisfies an async test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)` which must be\n  called with a  boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `false`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n\n__Example__\n\n```js\nasync.every(['file1','file2','file3'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n__Related__\n\n* everyLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name=\"concat\" />\n### concat(arr, iterator, [callback])\n\nApplies `iterator` to each item in `arr`, concatenating the results. Returns the\nconcatenated list. The `iterator`s are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of `arr` passed to the `iterator` function.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, results)` which must be called once it\n  has completed with an error (which can be `null`) and an array of results.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is an array containing\n  the concatenated results of the `iterator` function.\n\n__Example__\n\n```js\nasync.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n__Related__\n\n* concatSeries(arr, iterator, [callback])\n\n\n## Control Flow\n\n<a name=\"series\" />\n### series(tasks, [callback])\n\nRun the functions in the `tasks` array in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run, and `callback` is immediately called with the value of the error.\nOtherwise, `callback` receives an array of results when `tasks` have completed.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function, and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`series`](#series).\n\n**Note** that while many implementations preserve the order of object properties, the\n[ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\nexplicitly states that\n\n> The mechanics and order of enumerating the properties is not specified.\n\nSo if you rely on the order in which your series of functions are executed, and want\nthis to work on all platforms, consider using an array.\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run, each function is passed\n  a `callback(err, result)` it must call on completion with an error `err` (which can\n  be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all\n  the result arguments passed to the `task` callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, 'one');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, 'two');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to ['one', 'two']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name=\"parallel\" />\n### parallel(tasks, [callback])\n\nRun the `tasks` array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main `callback` is immediately called with the value of the error.\nOnce the `tasks` have completed, the results are passed to the final `callback` as an\narray.\n\n**Note:** `parallel` is about kicking-off I/O tasks in parallel, not about parallel execution of code.  If your tasks do not use any timers or perform any I/O, they will actually be executed in series.  Any synchronous setup sections for each task will happen one after the other.  JavaScript remains single-threaded.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`parallel`](#parallel).\n\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run. Each function is passed\n  a `callback(err, result)` which it must call on completion with an error `err`\n  (which can be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed successfully. This function gets a results array (or object) containing all\n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, 'one');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, 'two');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal ['one','two'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n__Related__\n\n* parallelLimit(tasks, limit, [callback])\n\n---------------------------------------\n\n<a name=\"whilst\" />\n### whilst(test, fn, callback)\n\nRepeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,\nor an error occurs.\n\n__Arguments__\n\n* `test()` - synchronous truth test to perform before each execution of `fn`.\n* `fn(callback)` - A function which is called each time `test` passes. The function is\n  passed a `callback(err)`, which must be called once it has completed with an\n  optional `err` argument.\n* `callback(err, [results])` - A callback which is called after the test\n  function has failed and repeated execution of `fn` has stopped. `callback`\n  will be passed an error and any arguments passed to the final `fn`'s callback.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(function () {\n            callback(null, count);\n        }, 1000);\n    },\n    function (err, n) {\n        // 5 seconds have passed, n = 5\n    }\n);\n```\n\n---------------------------------------\n\n<a name=\"doWhilst\" />\n### doWhilst(fn, test, callback)\n\nThe post-check version of [`whilst`](#whilst). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\n`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name=\"until\" />\n### until(test, fn, callback)\n\nRepeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,\nor an error occurs. `callback` will be passed an error and any arguments passed\nto the final `fn`'s callback.\n\nThe inverse of [`whilst`](#whilst).\n\n---------------------------------------\n\n<a name=\"doUntil\" />\n### doUntil(fn, test, callback)\n\nLike [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name=\"during\" />\n### during(test, fn, callback)\n\nLike [`whilst`](#whilst), except the `test` is an asynchronous function that is passed a callback in the form of `function (err, truth)`. If error is passed to `test` or `fn`, the main callback is immediately called with the value of the error.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.during(\n    function (callback) {\n      return callback(null, count < 5);\n    },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name=\"doDuring\" />\n### doDuring(fn, test, callback)\n\nThe post-check version of [`during`](#during). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\nAlso a version of [`doWhilst`](#doWhilst) with asynchronous `test` function.\n\n---------------------------------------\n\n<a name=\"forever\" />\n### forever(fn, [errback])\n\nCalls the asynchronous function `fn` with a callback parameter that allows it to\ncall itself again, in series, indefinitely.\n\nIf an error is passed to the callback then `errback` is called with the\nerror, and execution stops, otherwise it will never be called.\n\n```js\nasync.forever(\n    function(next) {\n        // next is suitable for passing to things that need a callback(err [, whatever]);\n        // it will result in this function being called again.\n    },\n    function(err) {\n        // if next is called with a value in its first parameter, it will appear\n        // in here as 'err', and execution will stop.\n    }\n);\n```\n\n---------------------------------------\n\n<a name=\"waterfall\" />\n### waterfall(tasks, [callback])\n\nRuns the `tasks` array of functions in series, each passing their results to the next in\nthe array. However, if any of the `tasks` pass an error to their own callback, the\nnext function is not executed, and the main `callback` is immediately called with\nthe error.\n\n__Arguments__\n\n* `tasks` - An array of functions to run, each function is passed a\n  `callback(err, result1, result2, ...)` it must call on completion. The first\n  argument is an error (which can be `null`) and any further arguments will be\n  passed as arguments in order to the next task.\n* `callback(err, [results])` - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task's callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback) {\n        callback(null, 'one', 'two');\n    },\n    function(arg1, arg2, callback) {\n      // arg1 now equals 'one' and arg2 now equals 'two'\n        callback(null, 'three');\n    },\n    function(arg1, callback) {\n        // arg1 now equals 'three'\n        callback(null, 'done');\n    }\n], function (err, result) {\n    // result now equals 'done'\n});\n```\nOr, with named functions:\n\n```js\nasync.waterfall([\n    myFirstFunction,\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals 'done'\n});\nfunction myFirstFunction(callback) {\n  callback(null, 'one', 'two');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals 'one' and arg2 now equals 'two'\n  callback(null, 'three');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals 'three'\n  callback(null, 'done');\n}\n```\n\nOr, if you need to pass any argument to the first function:\n\n```js\nasync.waterfall([\n    async.apply(myFirstFunction, 'zero'),\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals 'done'\n});\nfunction myFirstFunction(arg1, callback) {\n  // arg1 now equals 'zero'\n  callback(null, 'one', 'two');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals 'one' and arg2 now equals 'two'\n  callback(null, 'three');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals 'three'\n  callback(null, 'done');\n}\n```\n\n---------------------------------------\n<a name=\"compose\" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions `f()`, `g()`, and `h()` would produce the result of\n`f(g(h()))`, only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name=\"seq\" />\n### seq(fn1, fn2...)\n\nVersion of the compose function that is more natural to read.\nEach function consumes the return value of the previous function.\nIt is the equivalent of [`compose`](#compose) with the arguments reversed.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\n// Requires lodash (or underscore), express3 and dresende's orm2.\n// Part of an app, that fetches cats of the logged user.\n// This example uses `seq` function to avoid overnesting and error\n// handling clutter.\napp.get('/cats', function(request, response) {\n  var User = request.models.User;\n  async.seq(\n    _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n    function(user, fn) {\n      user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n    }\n  )(req.session.user_id, function (err, cats) {\n    if (err) {\n      console.error(err);\n      response.json({ status: 'error', message: err.message });\n    } else {\n      response.json({ status: 'ok', message: 'Cats found', data: cats });\n    }\n  });\n});\n```\n\n---------------------------------------\n<a name=\"applyEach\" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling\n`callback` after all functions have completed. If you only provide the first\nargument, then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* `fns` - the asynchronous functions to all call with the same arguments\n* `args...` - any number of separate arguments to pass to the function\n* `callback` - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n__Related__\n\n* applyEachSeries(tasks, args..., [callback])\n\n---------------------------------------\n\n<a name=\"queue\" />\n### queue(worker, [concurrency])\n\nCreates a `queue` object with the specified `concurrency`. Tasks added to the\n`queue` are processed in parallel (up to the `concurrency` limit). If all\n`worker`s are in progress, the task is queued until one becomes available.\nOnce a `worker` completes a `task`, that `task`'s callback is called.\n\n__Arguments__\n\n* `worker(task, callback)` - An asynchronous function for processing a queued\n  task, which must call its `callback(err)` argument when finished, with an\n  optional `error` as an argument.  If you want to handle errors from an individual task, pass a callback to `q.push()`.\n* `concurrency` - An `integer` for determining how many `worker` functions should be\n  run in parallel.  If omitted, the concurrency defaults to `1`.  If the concurrency is `0`, an error is thrown.\n\n__Queue objects__\n\nThe `queue` object returned by this function has the following properties and\nmethods:\n\n* `length()` - a function returning the number of items waiting to be processed.\n* `started` - a function returning whether or not any items have been pushed and processed by the queue\n* `running()` - a function returning the number of items currently being processed.\n* `workersList()` - a function returning the array of items currently being processed.\n* `idle()` - a function returning false if there are items waiting or being processed, or true if not.\n* `concurrency` - an integer for determining how many `worker` functions should be\n  run in parallel. This property can be changed after a `queue` is created to\n  alter the concurrency on-the-fly.\n* `push(task, [callback])` - add a new task to the `queue`. Calls `callback` once\n  the `worker` has finished processing the task. Instead of a single task, a `tasks` array\n  can be submitted. The respective callback is used for every task in the list.\n* `unshift(task, [callback])` - add a new task to the front of the `queue`.\n* `saturated` - a callback that is called when the `queue` length hits the `concurrency` limit,\n   and further tasks will be queued.\n* `empty` - a callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - a callback that is called when the last item from the `queue` has returned from the `worker`.\n* `paused` - a boolean for determining whether the queue is in a paused state\n* `pause()` - a function that pauses the processing of tasks until `resume()` is called.\n* `resume()` - a function that resumes the processing of queued tasks when the queue is paused.\n* `kill()` - a function that removes the `drain` callback and empties remaining tasks from the queue forcing it to go idle.\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log('hello ' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log('all items have been processed');\n}\n\n// add some items to the queue\n\nq.push({name: 'foo'}, function (err) {\n    console.log('finished processing foo');\n});\nq.push({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {\n    console.log('finished processing item');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\n```\n\n\n---------------------------------------\n\n<a name=\"priorityQueue\" />\n### priorityQueue(worker, concurrency)\n\nThe same as [`queue`](#queue) only tasks are assigned a priority and completed in ascending priority order. There are two differences between `queue` and `priorityQueue` objects:\n\n* `push(task, priority, [callback])` - `priority` should be a number. If an array of\n  `tasks` is given, all tasks will be assigned the same priority.\n* The `unshift` method was removed.\n\n---------------------------------------\n\n<a name=\"cargo\" />\n### cargo(worker, [payload])\n\nCreates a `cargo` object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the `payload` limit). If the\n`worker` is in progress, the task is queued until it becomes available. Once\nthe `worker` has completed some tasks, each callback of those tasks is called.\nCheck out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966) for how `cargo` and `queue` work.\n\nWhile [queue](#queue) passes only one task to one of a group of workers\nat a time, cargo passes an array of tasks to a single worker, repeating\nwhen the worker is finished.\n\n__Arguments__\n\n* `worker(tasks, callback)` - An asynchronous function for processing an array of\n  queued tasks, which must call its `callback(err)` argument when finished, with\n  an optional `err` argument.\n* `payload` - An optional `integer` for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe `cargo` object returned by this function has the following properties and\nmethods:\n\n* `length()` - A function returning the number of items waiting to be processed.\n* `payload` - An `integer` for determining how many tasks should be\n  process per round. This property can be changed after a `cargo` is created to\n  alter the payload on-the-fly.\n* `push(task, [callback])` - Adds `task` to the `queue`. The callback is called\n  once the `worker` has finished processing the task. Instead of a single task, an array of `tasks`\n  can be submitted. The respective callback is used for every task in the list.\n* `saturated` - A callback that is called when the `queue.length()` hits the concurrency and further tasks will be queued.\n* `empty` - A callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - A callback that is called when the last item from the `queue` has returned from the `worker`.\n* `idle()`, `pause()`, `resume()`, `kill()` - cargo inherits all of the same methods and event calbacks as [`queue`](#queue)\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log('hello ' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: 'foo'}, function (err) {\n    console.log('finished processing foo');\n});\ncargo.push({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\ncargo.push({name: 'baz'}, function (err) {\n    console.log('finished processing baz');\n});\n```\n\n---------------------------------------\n\n<a name=\"auto\" />\n### auto(tasks, [concurrency], [callback])\n\nDetermines the best order for running the functions in `tasks`, based on their requirements. Each function can optionally depend on other functions being completed first, and each function is run as soon as its requirements are satisfied.\n\nIf any of the functions pass an error to their callback, the `auto` sequence will stop. Further tasks will not execute (so any other functions depending on it will not run), and the main `callback` is immediately called with the error.  Functions also receive an object containing the results of functions which have completed so far.\n\nNote, all functions are called with a `results` object as a second argument,\nso it is unsafe to pass functions in the `tasks` object which cannot handle the\nextra argument.\n\nFor example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, 'data.txt', 'utf-8')\n}, callback);\n```\n\nwill have the effect of calling `readFile` with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile('data.txt', 'utf-8', cb, {});\n```\n\nInstead, wrap the call to `readFile` in a function which does not forward the\n`results` object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile('data.txt', 'utf-8', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* `tasks` - An object. Each of its properties is either a function or an array of\n  requirements, with the function itself the last item in the array. The object's key\n  of a property serves as the name of the task defined by that property,\n  i.e. can be used when specifying requirements for other tasks.\n  The function receives two arguments: (1) a `callback(err, result)` which must be\n  called when finished, passing an `error` (which can be `null`) and the result of\n  the function's execution, and (2) a `results` object, containing the results of\n  the previously executed functions.\n* `concurrency` - An optional `integer` for determining the maximum number of tasks that can be run in parallel. By default, as many as possible.\n* `callback(err, results)` - An optional callback which is called when all the\n  tasks have been completed. It receives the `err` argument if any `tasks`\n  pass an error to their callback. Results are always returned; however, if\n  an error occurs, no further `tasks` will be performed, and the results\n  object will only contain partial results.\n\n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        console.log('in get_data');\n        // async code to get some data\n        callback(null, 'data', 'converted to array');\n    },\n    make_folder: function(callback){\n        console.log('in make_folder');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, 'folder');\n    },\n    write_file: ['get_data', 'make_folder', function(callback, results){\n        console.log('in write_file', JSON.stringify(results));\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, 'filename');\n    }],\n    email_link: ['write_file', function(callback, results){\n        console.log('in email_link', JSON.stringify(results));\n        // once the file is written let's email a link to it...\n        // results.write_file contains the filename returned by write_file.\n        callback(null, {'file':results.write_file, 'email':'user@example.com'});\n    }]\n}, function(err, results) {\n    console.log('err = ', err);\n    console.log('results = ', results);\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        console.log('in get_data');\n        // async code to get some data\n        callback(null, 'data', 'converted to array');\n    },\n    function(callback){\n        console.log('in make_folder');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, 'folder');\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            console.log('in write_file', JSON.stringify(results));\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            results.push('filename');\n            callback(null);\n        },\n        function(callback){\n            console.log('in email_link', JSON.stringify(results));\n            // once the file is written let's email a link to it...\n            callback(null, {'file':results.pop(), 'email':'user@example.com'});\n        }\n    ]);\n});\n```\n\nFor a complicated series of `async` tasks, using the [`auto`](#auto) function makes adding\nnew tasks much easier (and the code more readable).\n\n\n---------------------------------------\n\n<a name=\"retry\" />\n### retry([opts = {times: 5, interval: 0}| 5], task, [callback])\n\nAttempts to get a successful response from `task` no more than `times` times before\nreturning an error. If the task is successful, the `callback` will be passed the result\nof the successful task. If all attempts fail, the callback will be passed the error and\nresult (if any) of the final attempt.\n\n__Arguments__\n\n* `opts` - Can be either an object with `times` and `interval` or a number.\n  * `times` - The number of attempts to make before giving up.  The default is `5`.\n  * `interval` - The time to wait between retries, in milliseconds.  The default is `0`.\n  * If `opts` is a number, the number specifies the number of times to retry, with the default interval of `0`. \n* `task(callback, results)` - A function which receives two arguments: (1) a `callback(err, result)`\n  which must be called when finished, passing `err` (which can be `null`) and the `result` of\n  the function's execution, and (2) a `results` object, containing the results of\n  the previously executed functions (if nested inside another control flow).\n* `callback(err, results)` - An optional callback which is called when the\n  task has succeeded, or after the final failed attempt. It receives the `err` and `result` arguments of the last attempt at completing the `task`.\n\nThe [`retry`](#retry) function can be used as a stand-alone control flow by passing a callback, as shown below:\n\n```js\n// try calling apiMethod 3 times\nasync.retry(3, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod 3 times, waiting 200 ms between each retry \nasync.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod the default 5 times no delay between each retry \nasync.retry(apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\nIt can also be embedded within other control flow functions to retry individual methods\nthat are not as reliable, like this:\n\n```js\nasync.auto({\n    users: api.getUsers.bind(api),\n    payments: async.retry(3, api.getPayments.bind(api))\n}, function(err, results) {\n  // do something with the results\n});\n```\n\n\n---------------------------------------\n\n<a name=\"iterator\" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the `tasks` array,\nreturning a continuation to call the next one after that. It's also possible to\n“peek” at the next iterator with `iterator.next()`.\n\nThis function is used internally by the `async` module, but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* `tasks` - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p('one'); },\n    function(){ sys.p('two'); },\n    function(){ sys.p('three'); }\n]);\n\nnode> var iterator2 = iterator();\n'one'\nnode> var iterator3 = iterator2();\n'two'\nnode> iterator3();\n'three'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n'three'\n```\n\n---------------------------------------\n\n<a name=\"apply\" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied.\n\nUseful as a shorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, 'testfile1', 'test1'),\n    async.apply(fs.writeFile, 'testfile2', 'test2'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile('testfile1', 'test1', callback);\n    },\n    function(callback){\n        fs.writeFile('testfile2', 'test2', callback);\n    }\n]);\n```\n\nIt's possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, 'one');\nnode> fn('two', 'three');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name=\"nextTick\" />\n### nextTick(callback), setImmediate(callback)\n\nCalls `callback` on a later loop around the event loop. In Node.js this just\ncalls `process.nextTick`; in the browser it falls back to `setImmediate(callback)`\nif available, otherwise `setTimeout(callback, 0)`, which means other higher priority\nevents may precede the execution of `callback`.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* `callback` - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push('two');\n    // call_order now equals ['one','two']\n});\ncall_order.push('one')\n```\n\n<a name=\"times\" />\n### times(n, iterator, [callback])\n\nCalls the `iterator` function `n` times, and accumulates results in the same manner\nyou would use with [`map`](#map).\n\n__Arguments__\n\n* `n` - The number of times to run the function.\n* `iterator` - The function to call `n` times.\n* `callback` - see [`map`](#map)\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: 'user' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n__Related__\n\n* timesSeries(n, iterator, [callback])\n* timesLimit(n, limit, iterator, [callback])\n\n\n## Utils\n\n<a name=\"memoize\" />\n### memoize(fn, [hasher])\n\nCaches the results of an `async` function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nIf no hash function is specified, the first argument is used as a hash key, which may work reasonably if it is a string or a data type that converts to a distinct string. Note that objects and arrays will not behave reasonably. Neither will cases where the other arguments are significant. In such cases, specify your own hash function.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* `fn` - The function to proxy and cache results from.\n* `hasher` - An optional function for generating a custom hash for storing\n  results. It has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn('some name', function () {\n    // callback\n});\n```\n\n<a name=\"unmemoize\" />\n### unmemoize(fn)\n\nUndoes a [`memoize`](#memoize)d function, reverting it to the original, unmemoized\nform. Handy for testing.\n\n__Arguments__\n\n* `fn` - the memoized function\n\n---------------------------------------\n\n<a name=\"ensureAsync\" />\n### ensureAsync(fn)\n\nWrap an async function and ensure it calls its callback on a later tick of the event loop.  If the function already calls its callback on a next tick, no extra deferral is added. This is useful for preventing stack overflows (`RangeError: Maximum call stack size exceeded`) and generally keeping [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony) contained.\n\n__Arguments__\n\n* `fn` - an async function, one that expects a node-style callback as its last argument\n\nReturns a wrapped function with the exact same call signature as the function passed in.\n\n__Example__\n\n```js\nfunction sometimesAsync(arg, callback) {\n  if (cache[arg]) {\n    return callback(null, cache[arg]); // this would be synchronous!!\n  } else {\n    doSomeIO(arg, callback); // this IO would be asynchronous\n  }\n}\n\n// this has a risk of stack overflows if many results are cached in a row\nasync.mapSeries(args, sometimesAsync, done);\n\n// this will defer sometimesAsync's callback if necessary,\n// preventing stack overflows\nasync.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n\n```\n\n---------------------------------------\n\n<a name=\"constant\">\n### constant(values...)\n\nReturns a function that when called, calls-back with the values provided.  Useful as the first function in a `waterfall`, or for plugging values in to `auto`.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.constant(42),\n  function (value, next) {\n    // value === 42\n  },\n  //...\n], callback);\n\nasync.waterfall([\n  async.constant(filename, \"utf8\"),\n  fs.readFile,\n  function (fileData, next) {\n    //...\n  }\n  //...\n], callback);\n\nasync.auto({\n  hostname: async.constant(\"https://server.net/\"),\n  port: findFreePort,\n  launchServer: [\"hostname\", \"port\", function (cb, options) {\n    startServer(options, cb);\n  }],\n  //...\n}, callback);\n\n```\n\n---------------------------------------\n\n<a name=\"asyncify\">\n<a name=\"wrapSync\">\n### asyncify(func)\n\n__Alias:__ `wrapSync`\n\nTake a sync function and make it async, passing its return value to a callback. This is useful for plugging sync functions into a waterfall, series, or other async functions. Any arguments passed to the generated function will be passed to the wrapped function (except for the final callback argument). Errors thrown will be passed to the callback.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, \"utf8\"),\n  async.asyncify(JSON.parse),\n  function (data, next) {\n    // data is the result of parsing the text.\n    // If there was a parsing error, it would have been caught.\n  }\n], callback)\n```\n\nIf the function passed to `asyncify` returns a Promise, that promises's resolved/rejected state will be used to call the callback, rather than simply the synchronous return value.  Example:\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, \"utf8\"),\n  async.asyncify(function (contents) {\n    return db.model.create(contents);\n  }),\n  function (model, next) {\n    // `model` is the instantiated model object. \n    // If there was an error, this function would be skipped.\n  }\n], callback)\n```\n\nThis also means you can asyncify ES2016 `async` functions.\n\n```js\nvar q = async.queue(async.asyncify(async function (file) {\n  var intermediateStep = await processFile(file);\n  return await somePromise(intermediateStep)\n}));\n\nq.push(files);\n```\n\n---------------------------------------\n\n<a name=\"log\" />\n### log(function, arguments)\n\nLogs the result of an `async` function to the `console`. Only works in Node.js or\nin browsers that support `console.log` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.log` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, 'hello ' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, 'world');\n'hello world'\n```\n\n---------------------------------------\n\n<a name=\"dir\" />\n### dir(function, arguments)\n\nLogs the result of an `async` function to the `console` using `console.dir` to\ndisplay the properties of the resulting object. Only works in Node.js or\nin browsers that support `console.dir` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.dir` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, 'world');\n{hello: 'world'}\n```\n\n---------------------------------------\n\n<a name=\"noConflict\" />\n### noConflict()\n\nChanges the value of `async` back to its original value, returning a reference to the\n`async` object.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/async",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "asn1.js": {
                  "_args": [
                    [
                      "asn1.js@4.10.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "asn1.js@4.10.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "asn1.js@4.10.1",
                  "_id": "asn1.js@4.10.1",
                  "_integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
                  "_location": "/ocsp/asn1.js",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "asn1.js@4.10.1",
                    "name": "asn1.js",
                    "escapedName": "asn1.js",
                    "rawSpec": "4.10.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "4.10.1"
                  },
                  "_requiredBy": [
                    "/ocsp",
                    "/ocsp/asn1.js-rfc5280"
                  ],
                  "_resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
                  "_spec": "4.10.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Fedor Indutny"
                  },
                  "bugs": {
                    "url": "https://github.com/indutny/asn1.js/issues"
                  },
                  "dependencies": {
                    "bn.js": {
                      "_args": "[Circular]",
                      "_from": "bn.js@4.11.8",
                      "_id": "bn.js@4.11.8",
                      "_integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==",
                      "_location": "/bn.js",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "bn.js@4.11.8",
                        "name": "bn.js",
                        "escapedName": "bn.js",
                        "rawSpec": "4.11.8",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "4.11.8"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
                      "_spec": "4.11.8",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "browser": "[Circular]",
                      "bugs": "[Circular]",
                      "description": "Big number implementation in pure javascript",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/indutny/bn.js",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "lib/bn.js",
                      "name": "bn.js",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "4.11.8",
                      "readme": "# <img src=\"./logo.png\" alt=\"bn.js\" width=\"160\" height=\"160\" />\n\n> BigNum in pure javascript\n\n[![Build Status](https://secure.travis-ci.org/indutny/bn.js.png)](http://travis-ci.org/indutny/bn.js)\n\n## Install\n`npm install --save bn.js`\n\n## Usage\n\n```js\nconst BN = require('bn.js');\n\nvar a = new BN('dead', 16);\nvar b = new BN('101010', 2);\n\nvar res = a.add(b);\nconsole.log(res.toString(10));  // 57047\n```\n\n**Note**: decimals are not supported in this library.\n\n## Notation\n\n### Prefixes\n\nThere are several prefixes to instructions that affect the way the work. Here\nis the list of them in the order of appearance in the function name:\n\n* `i` - perform operation in-place, storing the result in the host object (on\n  which the method was invoked). Might be used to avoid number allocation costs\n* `u` - unsigned, ignore the sign of operands when performing operation, or\n  always return positive value. Second case applies to reduction operations\n  like `mod()`. In such cases if the result will be negative - modulo will be\n  added to the result to make it positive\n\n### Postfixes\n\nThe only available postfix at the moment is:\n\n* `n` - which means that the argument of the function must be a plain JavaScript\n  Number. Decimals are not supported.\n\n### Examples\n\n* `a.iadd(b)` - perform addition on `a` and `b`, storing the result in `a`\n* `a.umod(b)` - reduce `a` modulo `b`, returning positive value\n* `a.iushln(13)` - shift bits of `a` left by 13\n\n## Instructions\n\nPrefixes/postfixes are put in parens at the of the line. `endian` - could be\neither `le` (little-endian) or `be` (big-endian).\n\n### Utilities\n\n* `a.clone()` - clone number\n* `a.toString(base, length)` - convert to base-string and pad with zeroes\n* `a.toNumber()` - convert to Javascript Number (limited to 53 bits)\n* `a.toJSON()` - convert to JSON compatible hex string (alias of `toString(16)`)\n* `a.toArray(endian, length)` - convert to byte `Array`, and optionally zero\n  pad to length, throwing if already exceeding\n* `a.toArrayLike(type, endian, length)` - convert to an instance of `type`,\n  which must behave like an `Array`\n* `a.toBuffer(endian, length)` - convert to Node.js Buffer (if available). For\n  compatibility with browserify and similar tools, use this instead:\n  `a.toArrayLike(Buffer, endian, length)`\n* `a.bitLength()` - get number of bits occupied\n* `a.zeroBits()` - return number of less-significant consequent zero bits\n  (example: `1010000` has 4 zero bits)\n* `a.byteLength()` - return number of bytes occupied\n* `a.isNeg()` - true if the number is negative\n* `a.isEven()` - no comments\n* `a.isOdd()` - no comments\n* `a.isZero()` - no comments\n* `a.cmp(b)` - compare numbers and return `-1` (a `<` b), `0` (a `==` b), or `1` (a `>` b)\n  depending on the comparison result (`ucmp`, `cmpn`)\n* `a.lt(b)` - `a` less than `b` (`n`)\n* `a.lte(b)` - `a` less than or equals `b` (`n`)\n* `a.gt(b)` - `a` greater than `b` (`n`)\n* `a.gte(b)` - `a` greater than or equals `b` (`n`)\n* `a.eq(b)` - `a` equals `b` (`n`)\n* `a.toTwos(width)` - convert to two's complement representation, where `width` is bit width\n* `a.fromTwos(width)` - convert from two's complement representation, where `width` is the bit width\n* `BN.isBN(object)` - returns true if the supplied `object` is a BN.js instance\n\n### Arithmetics\n\n* `a.neg()` - negate sign (`i`)\n* `a.abs()` - absolute value (`i`)\n* `a.add(b)` - addition (`i`, `n`, `in`)\n* `a.sub(b)` - subtraction (`i`, `n`, `in`)\n* `a.mul(b)` - multiply (`i`, `n`, `in`)\n* `a.sqr()` - square (`i`)\n* `a.pow(b)` - raise `a` to the power of `b`\n* `a.div(b)` - divide (`divn`, `idivn`)\n* `a.mod(b)` - reduct (`u`, `n`) (but no `umodn`)\n* `a.divRound(b)` - rounded division\n\n### Bit operations\n\n* `a.or(b)` - or (`i`, `u`, `iu`)\n* `a.and(b)` - and (`i`, `u`, `iu`, `andln`) (NOTE: `andln` is going to be replaced\n  with `andn` in future)\n* `a.xor(b)` - xor (`i`, `u`, `iu`)\n* `a.setn(b)` - set specified bit to `1`\n* `a.shln(b)` - shift left (`i`, `u`, `iu`)\n* `a.shrn(b)` - shift right (`i`, `u`, `iu`)\n* `a.testn(b)` - test if specified bit is set\n* `a.maskn(b)` - clear bits with indexes higher or equal to `b` (`i`)\n* `a.bincn(b)` - add `1 << b` to the number\n* `a.notn(w)` - not (for the width specified by `w`) (`i`)\n\n### Reduction\n\n* `a.gcd(b)` - GCD\n* `a.egcd(b)` - Extended GCD results (`{ a: ..., b: ..., gcd: ... }`)\n* `a.invm(b)` - inverse `a` modulo `b`\n\n## Fast reduction\n\nWhen doing lots of reductions using the same modulo, it might be beneficial to\nuse some tricks: like [Montgomery multiplication][0], or using special algorithm\nfor [Mersenne Prime][1].\n\n### Reduction context\n\nTo enable this tricks one should create a reduction context:\n\n```js\nvar red = BN.red(num);\n```\nwhere `num` is just a BN instance.\n\nOr:\n\n```js\nvar red = BN.red(primeName);\n```\n\nWhere `primeName` is either of these [Mersenne Primes][1]:\n\n* `'k256'`\n* `'p224'`\n* `'p192'`\n* `'p25519'`\n\nOr:\n\n```js\nvar red = BN.mont(num);\n```\n\nTo reduce numbers with [Montgomery trick][0]. `.mont()` is generally faster than\n`.red(num)`, but slower than `BN.red(primeName)`.\n\n### Converting numbers\n\nBefore performing anything in reduction context - numbers should be converted\nto it. Usually, this means that one should:\n\n* Convert inputs to reducted ones\n* Operate on them in reduction context\n* Convert outputs back from the reduction context\n\nHere is how one may convert numbers to `red`:\n\n```js\nvar redA = a.toRed(red);\n```\nWhere `red` is a reduction context created using instructions above\n\nHere is how to convert them back:\n\n```js\nvar a = redA.fromRed();\n```\n\n### Red instructions\n\nMost of the instructions from the very start of this readme have their\ncounterparts in red context:\n\n* `a.redAdd(b)`, `a.redIAdd(b)`\n* `a.redSub(b)`, `a.redISub(b)`\n* `a.redShl(num)`\n* `a.redMul(b)`, `a.redIMul(b)`\n* `a.redSqr()`, `a.redISqr()`\n* `a.redSqrt()` - square root modulo reduction context's prime\n* `a.redInvm()` - modular inverse of the number\n* `a.redNeg()`\n* `a.redPow(b)` - modular exponentiation\n\n## LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2015.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[0]: https://en.wikipedia.org/wiki/Montgomery_modular_multiplication\n[1]: https://en.wikipedia.org/wiki/Mersenne_prime\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/bn.js",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "bn.js"
                    },
                    "inherits": {
                      "_args": "[Circular]",
                      "_from": "inherits@2.0.4",
                      "_id": "inherits@2.0.4",
                      "_integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
                      "_location": "/inherits",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "inherits@2.0.4",
                        "name": "inherits",
                        "escapedName": "inherits",
                        "rawSpec": "2.0.4",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.0.4"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
                      "_spec": "2.0.4",
                      "_where": "/path/to/project/packages/shared",
                      "browser": "./inherits_browser.js",
                      "bugs": "[Circular]",
                      "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
                      "devDependencies": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/isaacs/inherits#readme",
                      "keywords": "[Circular]",
                      "license": "ISC",
                      "main": "./inherits.js",
                      "name": "inherits",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "2.0.4",
                      "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/inherits",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "inherits"
                    },
                    "minimalistic-assert": {
                      "_args": "[Circular]",
                      "_from": "minimalistic-assert@1.0.1",
                      "_id": "minimalistic-assert@1.0.1",
                      "_integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
                      "_location": "/minimalistic-assert",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "minimalistic-assert@1.0.1",
                        "name": "minimalistic-assert",
                        "escapedName": "minimalistic-assert",
                        "rawSpec": "1.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.1"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
                      "_spec": "1.0.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": "",
                      "bugs": "[Circular]",
                      "description": "minimalistic-assert ===",
                      "homepage": "https://github.com/calvinmetcalf/minimalistic-assert",
                      "license": "ISC",
                      "main": "index.js",
                      "name": "minimalistic-assert",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "1.0.1",
                      "readme": "minimalistic-assert\n===\n\nvery minimalistic assert module.\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "devDependencies": "[Circular]",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/minimalistic-assert",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "minimalistic-assert"
                    }
                  },
                  "description": "ASN.1 encoder and decoder",
                  "devDependencies": {
                    "mocha": "^2.3.4"
                  },
                  "homepage": "https://github.com/indutny/asn1.js",
                  "keywords": [
                    "asn.1",
                    "der"
                  ],
                  "license": "MIT",
                  "main": "lib/asn1.js",
                  "name": "asn1.js",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/indutny/asn1.js.git"
                  },
                  "scripts": {
                    "test": "mocha --reporter spec test/*-test.js && cd rfc/2560 && npm i && npm test && cd ../../rfc/5280 && npm i && npm test"
                  },
                  "version": "4.10.1",
                  "readme": "# ASN1.js\n\nASN.1 DER Encoder/Decoder and DSL.\n\n## Example\n\nDefine model:\n\n```javascript\nvar asn = require('asn1.js');\n\nvar Human = asn.define('Human', function() {\n  this.seq().obj(\n    this.key('firstName').octstr(),\n    this.key('lastName').octstr(),\n    this.key('age').int(),\n    this.key('gender').enum({ 0: 'male', 1: 'female' }),\n    this.key('bio').seqof(Bio)\n  );\n});\n\nvar Bio = asn.define('Bio', function() {\n  this.seq().obj(\n    this.key('time').gentime(),\n    this.key('description').octstr()\n  );\n});\n```\n\nEncode data:\n\n```javascript\nvar output = Human.encode({\n  firstName: 'Thomas',\n  lastName: 'Anderson',\n  age: 28,\n  gender: 'male',\n  bio: [\n    {\n      time: +new Date('31 March 1999'),\n      description: 'freedom of mind'\n    }\n  ]\n}, 'der');\n```\n\nDecode data:\n\n```javascript\nvar human = Human.decode(output, 'der');\nconsole.log(human);\n/*\n{ firstName: <Buffer 54 68 6f 6d 61 73>,\n  lastName: <Buffer 41 6e 64 65 72 73 6f 6e>,\n  age: 28,\n  gender: 'male',\n  bio:\n   [ { time: 922820400000,\n       description: <Buffer 66 72 65 65 64 6f 6d 20 6f 66 20 6d 69 6e 64> } ] }\n*/\n```\n\n### Partial decode\n\nIts possible to parse data without stopping on first error. In order to do it,\nyou should call:\n\n```javascript\nvar human = Human.decode(output, 'der', { partial: true });\nconsole.log(human);\n/*\n{ result: { ... },\n  errors: [ ... ] }\n*/\n```\n\n#### LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2013.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "bn.js": "^4.0.0",
                    "inherits": "^2.0.1",
                    "minimalistic-assert": "^1.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/ocsp/node_modules/asn1.js",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "asn1.js-rfc2560": {
                  "_args": [
                    [
                      "asn1.js-rfc2560@4.0.6",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "asn1.js-rfc2560@4.0.6",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "asn1.js-rfc2560@4.0.6",
                  "_id": "asn1.js-rfc2560@4.0.6",
                  "_integrity": "sha512-ysf48ni+f/efNPilq4+ApbifUPcSW/xbDeQAh055I+grr2gXgNRQqHew7kkO70WSMQ2tEOURVwsK+dJqUNjIIg==",
                  "_location": "/ocsp/asn1.js-rfc2560",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "asn1.js-rfc2560@4.0.6",
                    "name": "asn1.js-rfc2560",
                    "escapedName": "asn1.js-rfc2560",
                    "rawSpec": "4.0.6",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "4.0.6"
                  },
                  "_requiredBy": [
                    "/ocsp"
                  ],
                  "_resolved": "https://registry.npmjs.org/asn1.js-rfc2560/-/asn1.js-rfc2560-4.0.6.tgz",
                  "_spec": "4.0.6",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Fedor Indutny"
                  },
                  "bugs": {
                    "url": "https://github.com/indutny/asn1.js/issues"
                  },
                  "dependencies": {
                    "asn1.js-rfc5280": {
                      "_args": [
                        [
                          "asn1.js-rfc5280@2.0.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "asn1.js-rfc5280@2.0.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "asn1.js-rfc5280@2.0.1",
                      "_id": "asn1.js-rfc5280@2.0.1",
                      "_integrity": "sha512-1e2ypnvTbYD/GdxWK77tdLBahvo1fZUHlQJqAVUuZWdYj0rdjGcf2CWYUtbsyRYpYUMwMWLZFUtLxog8ZXTrcg==",
                      "_location": "/ocsp/asn1.js-rfc5280",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "asn1.js-rfc5280@2.0.1",
                        "name": "asn1.js-rfc5280",
                        "escapedName": "asn1.js-rfc5280",
                        "rawSpec": "2.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.0.1"
                      },
                      "_requiredBy": [
                        "/ocsp",
                        "/ocsp/asn1.js-rfc2560"
                      ],
                      "_resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-2.0.1.tgz",
                      "_spec": "2.0.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Felix Hanley"
                      },
                      "bugs": {
                        "url": "https://github.com/indutny/asn1.js/issues"
                      },
                      "dependencies": {},
                      "description": "RFC5280 extension structures for asn1.js",
                      "devDependencies": {
                        "mocha": "^4.0.1"
                      },
                      "homepage": "https://github.com/indutny/asn1.js",
                      "keywords": [
                        "asn1",
                        "rfc5280",
                        "der"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "asn1.js-rfc5280",
                      "repository": {
                        "type": "git",
                        "url": "git+ssh://git@github.com/indutny/asn1.js.git"
                      },
                      "scripts": {
                        "test": "mocha --reporter=spec test/*-test.js"
                      },
                      "version": "2.0.1",
                      "readme": "ERROR: No README data found!",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "asn1.js": "^4.5.0"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/ocsp/node_modules/asn1.js-rfc5280",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "ocsp/asn1.js-rfc5280"
                    }
                  },
                  "description": "RFC2560 structures for asn1.js",
                  "devDependencies": {
                    "mocha": "^4.0.1"
                  },
                  "homepage": "https://github.com/indutny/asn1.js",
                  "keywords": [
                    "asn1",
                    "rfc2560",
                    "der"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "asn1.js-rfc2560",
                  "peerDependencies": {
                    "asn1.js": "^4.4.0"
                  },
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/indutny/asn1.js.git"
                  },
                  "scripts": {
                    "test": "mocha --reporter=spec test/*-test.js"
                  },
                  "version": "4.0.6",
                  "readme": "ERROR: No README data found!",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "asn1.js-rfc5280": "^2.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/ocsp/node_modules/asn1.js-rfc2560",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "asn1.js-rfc5280": {
                  "_args": "[Circular]",
                  "_from": "asn1.js-rfc5280@2.0.1",
                  "_id": "asn1.js-rfc5280@2.0.1",
                  "_integrity": "sha512-1e2ypnvTbYD/GdxWK77tdLBahvo1fZUHlQJqAVUuZWdYj0rdjGcf2CWYUtbsyRYpYUMwMWLZFUtLxog8ZXTrcg==",
                  "_location": "/ocsp/asn1.js-rfc5280",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "asn1.js-rfc5280@2.0.1",
                    "name": "asn1.js-rfc5280",
                    "escapedName": "asn1.js-rfc5280",
                    "rawSpec": "2.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.0.1"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-2.0.1.tgz",
                  "_spec": "2.0.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "dependencies": {
                    "asn1.js": {
                      "_args": "[Circular]",
                      "_from": "asn1.js@4.10.1",
                      "_id": "asn1.js@4.10.1",
                      "_integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
                      "_location": "/ocsp/asn1.js",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "asn1.js@4.10.1",
                        "name": "asn1.js",
                        "escapedName": "asn1.js",
                        "rawSpec": "4.10.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "4.10.1"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
                      "_spec": "4.10.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "dependencies": {},
                      "description": "ASN.1 encoder and decoder",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/indutny/asn1.js",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "lib/asn1.js",
                      "name": "asn1.js",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "4.10.1",
                      "readme": "# ASN1.js\n\nASN.1 DER Encoder/Decoder and DSL.\n\n## Example\n\nDefine model:\n\n```javascript\nvar asn = require('asn1.js');\n\nvar Human = asn.define('Human', function() {\n  this.seq().obj(\n    this.key('firstName').octstr(),\n    this.key('lastName').octstr(),\n    this.key('age').int(),\n    this.key('gender').enum({ 0: 'male', 1: 'female' }),\n    this.key('bio').seqof(Bio)\n  );\n});\n\nvar Bio = asn.define('Bio', function() {\n  this.seq().obj(\n    this.key('time').gentime(),\n    this.key('description').octstr()\n  );\n});\n```\n\nEncode data:\n\n```javascript\nvar output = Human.encode({\n  firstName: 'Thomas',\n  lastName: 'Anderson',\n  age: 28,\n  gender: 'male',\n  bio: [\n    {\n      time: +new Date('31 March 1999'),\n      description: 'freedom of mind'\n    }\n  ]\n}, 'der');\n```\n\nDecode data:\n\n```javascript\nvar human = Human.decode(output, 'der');\nconsole.log(human);\n/*\n{ firstName: <Buffer 54 68 6f 6d 61 73>,\n  lastName: <Buffer 41 6e 64 65 72 73 6f 6e>,\n  age: 28,\n  gender: 'male',\n  bio:\n   [ { time: 922820400000,\n       description: <Buffer 66 72 65 65 64 6f 6d 20 6f 66 20 6d 69 6e 64> } ] }\n*/\n```\n\n### Partial decode\n\nIts possible to parse data without stopping on first error. In order to do it,\nyou should call:\n\n```javascript\nvar human = Human.decode(output, 'der', { partial: true });\nconsole.log(human);\n/*\n{ result: { ... },\n  errors: [ ... ] }\n*/\n```\n\n#### LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2013.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/ocsp/node_modules/asn1.js",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "ocsp/asn1.js"
                    }
                  },
                  "description": "RFC5280 extension structures for asn1.js",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/indutny/asn1.js",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "index.js",
                  "name": "asn1.js-rfc5280",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.0.1",
                  "readme": "ERROR: No README data found!",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/ocsp/node_modules/asn1.js-rfc5280",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "simple-lru-cache": {
                  "_args": [
                    [
                      "simple-lru-cache@0.0.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "simple-lru-cache@0.0.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "simple-lru-cache@0.0.2",
                  "_id": "simple-lru-cache@0.0.2",
                  "_integrity": "sha1-1ZzDoZPBpdAyD4Tucy9uRxPlEd0=",
                  "_location": "/simple-lru-cache",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "simple-lru-cache@0.0.2",
                    "name": "simple-lru-cache",
                    "escapedName": "simple-lru-cache",
                    "rawSpec": "0.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.0.2"
                  },
                  "_requiredBy": [
                    "/ocsp",
                    "/snowflake-sdk"
                  ],
                  "_resolved": "https://registry.npmjs.org/simple-lru-cache/-/simple-lru-cache-0.0.2.tgz",
                  "_spec": "0.0.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Gabriel Eisbruch"
                  },
                  "bugs": {
                    "url": "https://github.com/geisbruch/node-simple-lru-cache/issues"
                  },
                  "dependencies": {},
                  "description": "node-simple-lru-cache =====================",
                  "devDependencies": {
                    "mocha": "*",
                    "should": "*"
                  },
                  "directories": {
                    "lib": "./lib"
                  },
                  "homepage": "https://github.com/geisbruch/node-simple-lru-cache#readme",
                  "keywords": [
                    "cache",
                    "lru",
                    "simple",
                    "fast"
                  ],
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "https://github.com/geisbruch/node-simple-lru-cache/blob/master/LICENSE"
                    }
                  ],
                  "main": "index",
                  "maintainers": [
                    {
                      "name": "Gabriel Eisbruch",
                      "email": "gabrieleisbruch@gmail.com",
                      "url": "http://www.mercadolibre.com"
                    }
                  ],
                  "name": "simple-lru-cache",
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git+ssh://git@github.com/geisbruch/node-simple-lru-cache.git"
                    }
                  ],
                  "repository": "[Circular]",
                  "scripts": {
                    "bench": "make bench",
                    "test": "make test"
                  },
                  "version": "0.0.2",
                  "readme": "node-simple-lru-cache\n=====================\n\nIt's a very simple and extremely fast lru cache for node.js.\n\nThis cache will priorize the lastest used keys over the least used keys, \nso when a new key is added if the cache is full, the least used key will be removed\n\n## Instalation\n    \n    npm install simple-lru-cache\n\n## Usage\n    var SimpleCache = require(\"simple-lru-cache\")\n\n    var cache = new SimpleCache({\"maxSize\":1000})\n\n    //Add an Objet\n    cache.set(\"hello\",\"world\")\n\n    //Get an Object\n    cache.get(\"hello\")\n\n    //Delete an Object\n    cache.del(\"hello\")\n\n    //Reset cache\n    cache.reset()\n\n## Tests\n    \n    npm install\n    npm test\n\n## Benchmark against lru-cache\n\n      make bench\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/simple-lru-cache",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "simple-lru-cache"
                }
              },
              "description": "OCSP Stapling implementation",
              "devDependencies": {
                "jscs": "^2.4.0",
                "jshint": "^2.8.0",
                "mocha": "^2.2.5",
                "selfsigned.js": "^3.0.1"
              },
              "homepage": "https://github.com/indutny/ocsp#readme",
              "keywords": [
                "OCSP",
                "ASN.1",
                "Stapling"
              ],
              "license": "MIT",
              "main": "lib/ocsp.js",
              "name": "ocsp",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/indutny/ocsp.git"
              },
              "scripts": {
                "lint": "jshint lib/*.js lib/**/*.js && jscs lib/*.js lib/**/*.js test/*.js test/**/*.js",
                "test": "mocha test/*-test.js"
              },
              "version": "1.2.0",
              "readme": "# OCSP APIs for node.js [![Build Status](https://secure.travis-ci.org/indutny/ocsp.svg)](http://travis-ci.org/indutny/ocsp)\n\nVarious [OCSP][0]-related APIs to be used with node.js/io.js.\n\n## Installing\n\n```bash\n$ npm install ocsp\n```\n\n## Parts\n\n1. Agent\n2. Cache\n3. Server\n4. `check()`/`verify()`\n5. `request.generate()`\n6. `getOCSPURI()`\n\n## Agent\n\nUsage:\n\n```javascript\nvar agent = new ocsp.Agent();\n\nhttps.request({\n  method: ...,\n  host: ...,\n  port: ...,\n  path: ...,\n  // Other options\n\n  agent: agent\n}, function(res) {\n  // ...\n});\n```\n\nThe following code snippet will perform request to the specified server, and\nwill verify that the certificate of the server using OCSP (either stapling or\nresponse from the CA).\n\nNOTE: You may pass `options` object to `new ocsp.Agent(options)`, it may have\nfollowing properties:\n\n* `CACacheSize`: number of CA certificates to keep in the cache. (Default: 1024)\n\n## Cache\n\nUsage:\n\n```javascript\nvar cache = new ocsp.Cache();\n\nvar server = https.createServer({\n  cert: cert,\n  key: key\n}, function(req, res) {\n  res.end('hello world');\n});\n\nserver.on('OCSPRequest', function(cert, issuer, cb) {\n  ocsp.getOCSPURI(cert, function(err, uri) {\n    if (err)\n      return cb(err);\n\n    var req = ocsp.request.generate(cert, issuer);\n    var options = {\n      url: uri,\n      ocsp: req.data\n    };\n\n    cache.request(req.id, options, cb);\n  });\n});\n```\n\nCache should be used to provide [OCSP Stapling][1] responses to the client.\n\nNOTE: Constructor accepts `options` object with following properties:\n\n* `probe`: override `.probe()` method\n* `store`: override `.store()` method\n* `filter`: `filter(url, callback)` to white list CA urls to do requests\n\n## Server\n\nUsage:\n\n```javascript\nvar server = ocsp.Server.create({\n  cert: cert,\n  key: key\n});\n\nserver.addCert(43, 'good');\nserver.addCert(44, 'revoked', {\n  revocationTime: new Date(),\n  revocationReason: 'CACompromise'\n});\n\nserver.listen(8000);\n```\n\nOCSP Server, i.o.w. HTTP server providing OCSP responses for supplied OCSP\nrequests.\n\nHas following methods:\n\n* `.addCert(serialNumber, status, info)`, where:\n  * `serialNumber` could be either plain number, or instance of `bn.js`\n  * `status` is one of `good`, `revoked`\n  * `info` should be empty for `good` and should contain object for `revoked`\n    (see example above, `revocationReason` is one of: `unspecified`,\n     `keyCompromise`, `CACompromise`, `affiliationChanged`, `superseded`,\n     `cessationOfOperation`, `certificateHold`, `removeFromCRL`,\n     `privelegeWithdrawn`, `AACompromise`)\n* All of `http.Server` methods!\n\n## .check()\n\nUsage:\n\n```javascript\nocsp.check({\n  cert: cert,\n  issuer: issuerCert\n}, function(err, res) {\n  if (err)\n    throw err;\n\n  console.log(res);\n});\n```\n\nSend an OCSP request to the CA and ask if the cert is still valid. `res`\nconstains the info.\n\n## .verify()\n\nUsage:\n\n```javascript\nocsp.verify({\n  request: request,\n  // Optional, `issuer: issuerCert,`\n  response: response\n}, function(err, res) {\n});\n```\n\nVerify that `response` matches the `request` and is signed by the CA.\n\n## request.generate()\n\nUsage:\n\n```javascript\nvar req = ocsp.request.generate(cert, issuerCert);\n```\n\nGenerate OCSP request for `.verify()` or for sending it manually to OCSP server.\n\n## getOCSPURI()\n\nUsage:\n\n```javascript\nocsp.getOCSPURI(cert, function(err, uri) {\n});\n```\n\nGet URI of OCSP server.\n\n#### LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2015.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[0]: http://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol\n[1]: http://en.wikipedia.org/wiki/OCSP_stapling\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "asn1.js": "^4.8.0",
                "asn1.js-rfc2560": "^4.0.0",
                "asn1.js-rfc5280": "^2.0.0",
                "async": "^1.5.2",
                "simple-lru-cache": "0.0.2"
              },
              "path": "/path/to/project/packages/shared/node_modules/ocsp",
              "error": "[Circular]",
              "extraneous": false
            },
            "request": {
              "_args": [
                [
                  "request@2.88.2",
                  "/path/to/project/packages/shared"
                ],
                [
                  "request@2.88.2",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "request@2.88.2",
              "_id": "request@2.88.2",
              "_integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
              "_location": "/request",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "request@2.88.2",
                "name": "request",
                "escapedName": "request",
                "rawSpec": "2.88.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.88.2"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
              "_spec": "2.88.2",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Mikeal Rogers",
                "email": "mikeal.rogers@gmail.com"
              },
              "bugs": {
                "url": "http://github.com/request/request/issues"
              },
              "dependencies": {
                "aws-sign2": {
                  "_args": [
                    [
                      "aws-sign2@0.7.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "aws-sign2@0.7.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "aws-sign2@0.7.0",
                  "_id": "aws-sign2@0.7.0",
                  "_integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
                  "_location": "/aws-sign2",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "aws-sign2@0.7.0",
                    "name": "aws-sign2",
                    "escapedName": "aws-sign2",
                    "rawSpec": "0.7.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.7.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
                  "_spec": "0.7.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Mikeal Rogers",
                    "email": "mikeal.rogers@gmail.com",
                    "url": "http://www.futurealoof.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mikeal/aws-sign/issues"
                  },
                  "dependencies": {},
                  "description": "AWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.",
                  "devDependencies": {},
                  "engines": {
                    "node": "*"
                  },
                  "homepage": "https://github.com/mikeal/aws-sign#readme",
                  "license": "Apache-2.0",
                  "main": "index.js",
                  "name": "aws-sign2",
                  "optionalDependencies": {},
                  "repository": {
                    "url": "git+https://github.com/mikeal/aws-sign.git"
                  },
                  "version": "0.7.0",
                  "readme": "aws-sign\n========\n\nAWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.\n",
                  "readmeFilename": "README.md",
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/aws-sign2",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "aws4": {
                  "_args": [
                    [
                      "aws4@1.9.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "aws4@1.9.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "aws4@1.9.1",
                  "_id": "aws4@1.9.1",
                  "_integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug==",
                  "_location": "/aws4",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "aws4@1.9.1",
                    "name": "aws4",
                    "escapedName": "aws4",
                    "rawSpec": "1.9.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.9.1"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
                  "_spec": "1.9.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Michael Hart",
                    "email": "michael.hart.au@gmail.com",
                    "url": "http://github.com/mhart"
                  },
                  "bugs": {
                    "url": "https://github.com/mhart/aws4/issues"
                  },
                  "description": "Signs and prepares requests using AWS Signature Version 4",
                  "devDependencies": {
                    "mocha": "^2.4.5",
                    "should": "^8.2.2"
                  },
                  "homepage": "https://github.com/mhart/aws4#readme",
                  "keywords": [
                    "amazon",
                    "aws",
                    "signature",
                    "s3",
                    "ec2",
                    "autoscaling",
                    "cloudformation",
                    "elasticloadbalancing",
                    "elb",
                    "elasticbeanstalk",
                    "cloudsearch",
                    "dynamodb",
                    "kinesis",
                    "lambda",
                    "glacier",
                    "sqs",
                    "sns",
                    "iam",
                    "sts",
                    "ses",
                    "swf",
                    "storagegateway",
                    "datapipeline",
                    "directconnect",
                    "redshift",
                    "opsworks",
                    "rds",
                    "monitoring",
                    "cloudtrail",
                    "cloudfront",
                    "codedeploy",
                    "elasticache",
                    "elasticmapreduce",
                    "elastictranscoder",
                    "emr",
                    "cloudwatch",
                    "mobileanalytics",
                    "cognitoidentity",
                    "cognitosync",
                    "cognito",
                    "containerservice",
                    "ecs",
                    "appstream",
                    "keymanagementservice",
                    "kms",
                    "config",
                    "cloudhsm",
                    "route53",
                    "route53domains",
                    "logs"
                  ],
                  "license": "MIT",
                  "main": "aws4.js",
                  "name": "aws4",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/mhart/aws4.git"
                  },
                  "scripts": {
                    "integration": "node ./test/slow.js",
                    "test": "mocha ./test/fast.js -b -t 100s -R list"
                  },
                  "version": "1.9.1",
                  "readme": "aws4\n----\n\n[![Build Status](https://secure.travis-ci.org/mhart/aws4.png?branch=master)](http://travis-ci.org/mhart/aws4)\n\nA small utility to sign vanilla Node.js http(s) request options using Amazon's\n[AWS Signature Version 4](http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html).\n\nIf you want to sign and send AWS requests in a modern browser, or an environment like [Cloudflare Workers](https://developers.cloudflare.com/workers/), then check out [aws4fetch](https://github.com/mhart/aws4fetch) – otherwise you can also bundle this library for use [in the browser](./browser).\n\nThis signature is supported by nearly all Amazon services, including\n[S3](http://docs.aws.amazon.com/AmazonS3/latest/API/),\n[EC2](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/),\n[DynamoDB](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html),\n[Kinesis](http://docs.aws.amazon.com/kinesis/latest/APIReference/),\n[Lambda](http://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html),\n[SQS](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/),\n[SNS](http://docs.aws.amazon.com/sns/latest/api/),\n[IAM](http://docs.aws.amazon.com/IAM/latest/APIReference/),\n[STS](http://docs.aws.amazon.com/STS/latest/APIReference/),\n[RDS](http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/),\n[CloudWatch](http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/),\n[CloudWatch Logs](http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/),\n[CodeDeploy](http://docs.aws.amazon.com/codedeploy/latest/APIReference/),\n[CloudFront](http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/),\n[CloudTrail](http://docs.aws.amazon.com/awscloudtrail/latest/APIReference/),\n[ElastiCache](http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/),\n[EMR](http://docs.aws.amazon.com/ElasticMapReduce/latest/API/),\n[Glacier](http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-api.html),\n[CloudSearch](http://docs.aws.amazon.com/cloudsearch/latest/developerguide/APIReq.html),\n[Elastic Load Balancing](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/),\n[Elastic Transcoder](http://docs.aws.amazon.com/elastictranscoder/latest/developerguide/api-reference.html),\n[CloudFormation](http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/),\n[Elastic Beanstalk](http://docs.aws.amazon.com/elasticbeanstalk/latest/api/),\n[Storage Gateway](http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html),\n[Data Pipeline](http://docs.aws.amazon.com/datapipeline/latest/APIReference/),\n[Direct Connect](http://docs.aws.amazon.com/directconnect/latest/APIReference/),\n[Redshift](http://docs.aws.amazon.com/redshift/latest/APIReference/),\n[OpsWorks](http://docs.aws.amazon.com/opsworks/latest/APIReference/),\n[SES](http://docs.aws.amazon.com/ses/latest/APIReference/),\n[SWF](http://docs.aws.amazon.com/amazonswf/latest/apireference/),\n[AutoScaling](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/),\n[Mobile Analytics](http://docs.aws.amazon.com/mobileanalytics/latest/ug/server-reference.html),\n[Cognito Identity](http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/),\n[Cognito Sync](http://docs.aws.amazon.com/cognitosync/latest/APIReference/),\n[Container Service](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/),\n[AppStream](http://docs.aws.amazon.com/appstream/latest/developerguide/appstream-api-rest.html),\n[Key Management Service](http://docs.aws.amazon.com/kms/latest/APIReference/),\n[Config](http://docs.aws.amazon.com/config/latest/APIReference/),\n[CloudHSM](http://docs.aws.amazon.com/cloudhsm/latest/dg/api-ref.html),\n[Route53](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rest.html) and\n[Route53 Domains](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rpc.html).\n\nIndeed, the only AWS services that *don't* support v4 as of 2014-12-30 are\n[Import/Export](http://docs.aws.amazon.com/AWSImportExport/latest/DG/api-reference.html) and\n[SimpleDB](http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API.html)\n(they only support [AWS Signature Version 2](https://github.com/mhart/aws2)).\n\nIt also provides defaults for a number of core AWS headers and\nrequest parameters, making it very easy to query AWS services, or\nbuild out a fully-featured AWS library.\n\nExample\n-------\n\n```javascript\nvar http  = require('http'),\n    https = require('https'),\n    aws4  = require('aws4')\n\n// given an options object you could pass to http.request\nvar opts = {host: 'sqs.us-east-1.amazonaws.com', path: '/?Action=ListQueues'}\n\n// alternatively (as aws4 can infer the host):\nopts = {service: 'sqs', region: 'us-east-1', path: '/?Action=ListQueues'}\n\n// alternatively (as us-east-1 is default):\nopts = {service: 'sqs', path: '/?Action=ListQueues'}\n\naws4.sign(opts) // assumes AWS credentials are available in process.env\n\nconsole.log(opts)\n/*\n{\n  host: 'sqs.us-east-1.amazonaws.com',\n  path: '/?Action=ListQueues',\n  headers: {\n    Host: 'sqs.us-east-1.amazonaws.com',\n    'X-Amz-Date': '20121226T061030Z',\n    Authorization: 'AWS4-HMAC-SHA256 Credential=ABCDEF/20121226/us-east-1/sqs/aws4_request, ...'\n  }\n}\n*/\n\n// we can now use this to query AWS using the standard node.js http API\nhttp.request(opts, function(res) { res.pipe(process.stdout) }).end()\n/*\n<?xml version=\"1.0\"?>\n<ListQueuesResponse xmlns=\"http://queue.amazonaws.com/doc/2012-11-05/\">\n...\n*/\n```\n\nMore options\n------------\n\n```javascript\n// you can also pass AWS credentials in explicitly (otherwise taken from process.env)\naws4.sign(opts, {accessKeyId: '', secretAccessKey: ''})\n\n// can also add the signature to query strings\naws4.sign({service: 's3', path: '/my-bucket?X-Amz-Expires=12345', signQuery: true})\n\n// create a utility function to pipe to stdout (with https this time)\nfunction request(o) { https.request(o, function(res) { res.pipe(process.stdout) }).end(o.body || '') }\n\n// aws4 can infer the HTTP method if a body is passed in\n// method will be POST and Content-Type: 'application/x-www-form-urlencoded; charset=utf-8'\nrequest(aws4.sign({service: 'iam', body: 'Action=ListGroups&Version=2010-05-08'}))\n/*\n<ListGroupsResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\n...\n*/\n\n// can specify any custom option or header as per usual\nrequest(aws4.sign({\n  service: 'dynamodb',\n  region: 'ap-southeast-2',\n  method: 'POST',\n  path: '/',\n  headers: {\n    'Content-Type': 'application/x-amz-json-1.0',\n    'X-Amz-Target': 'DynamoDB_20120810.ListTables'\n  },\n  body: '{}'\n}))\n/*\n{\"TableNames\":[]}\n...\n*/\n\n// works with all other services that support Signature Version 4\n\nrequest(aws4.sign({service: 's3', path: '/', signQuery: true}))\n/*\n<ListAllMyBucketsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'ec2', path: '/?Action=DescribeRegions&Version=2014-06-15'}))\n/*\n<DescribeRegionsResponse xmlns=\"http://ec2.amazonaws.com/doc/2014-06-15/\">\n...\n*/\n\nrequest(aws4.sign({service: 'sns', path: '/?Action=ListTopics&Version=2010-03-31'}))\n/*\n<ListTopicsResponse xmlns=\"http://sns.amazonaws.com/doc/2010-03-31/\">\n...\n*/\n\nrequest(aws4.sign({service: 'sts', path: '/?Action=GetSessionToken&Version=2011-06-15'}))\n/*\n<GetSessionTokenResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n...\n*/\n\nrequest(aws4.sign({service: 'cloudsearch', path: '/?Action=ListDomainNames&Version=2013-01-01'}))\n/*\n<ListDomainNamesResponse xmlns=\"http://cloudsearch.amazonaws.com/doc/2013-01-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'ses', path: '/?Action=ListIdentities&Version=2010-12-01'}))\n/*\n<ListIdentitiesResponse xmlns=\"http://ses.amazonaws.com/doc/2010-12-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'autoscaling', path: '/?Action=DescribeAutoScalingInstances&Version=2011-01-01'}))\n/*\n<DescribeAutoScalingInstancesResponse xmlns=\"http://autoscaling.amazonaws.com/doc/2011-01-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'elasticloadbalancing', path: '/?Action=DescribeLoadBalancers&Version=2012-06-01'}))\n/*\n<DescribeLoadBalancersResponse xmlns=\"http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'cloudformation', path: '/?Action=ListStacks&Version=2010-05-15'}))\n/*\n<ListStacksResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\n...\n*/\n\nrequest(aws4.sign({service: 'elasticbeanstalk', path: '/?Action=ListAvailableSolutionStacks&Version=2010-12-01'}))\n/*\n<ListAvailableSolutionStacksResponse xmlns=\"http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'rds', path: '/?Action=DescribeDBInstances&Version=2012-09-17'}))\n/*\n<DescribeDBInstancesResponse xmlns=\"http://rds.amazonaws.com/doc/2012-09-17/\">\n...\n*/\n\nrequest(aws4.sign({service: 'monitoring', path: '/?Action=ListMetrics&Version=2010-08-01'}))\n/*\n<ListMetricsResponse xmlns=\"http://monitoring.amazonaws.com/doc/2010-08-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'redshift', path: '/?Action=DescribeClusters&Version=2012-12-01'}))\n/*\n<DescribeClustersResponse xmlns=\"http://redshift.amazonaws.com/doc/2012-12-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'cloudfront', path: '/2014-05-31/distribution'}))\n/*\n<DistributionList xmlns=\"http://cloudfront.amazonaws.com/doc/2014-05-31/\">\n...\n*/\n\nrequest(aws4.sign({service: 'elasticache', path: '/?Action=DescribeCacheClusters&Version=2014-07-15'}))\n/*\n<DescribeCacheClustersResponse xmlns=\"http://elasticache.amazonaws.com/doc/2014-07-15/\">\n...\n*/\n\nrequest(aws4.sign({service: 'elasticmapreduce', path: '/?Action=DescribeJobFlows&Version=2009-03-31'}))\n/*\n<DescribeJobFlowsResponse xmlns=\"http://elasticmapreduce.amazonaws.com/doc/2009-03-31\">\n...\n*/\n\nrequest(aws4.sign({service: 'route53', path: '/2013-04-01/hostedzone'}))\n/*\n<ListHostedZonesResponse xmlns=\"https://route53.amazonaws.com/doc/2013-04-01/\">\n...\n*/\n\nrequest(aws4.sign({service: 'appstream', path: '/applications'}))\n/*\n{\"_links\":{\"curie\":[{\"href\":\"http://docs.aws.amazon.com/appstream/latest/...\n...\n*/\n\nrequest(aws4.sign({service: 'cognito-sync', path: '/identitypools'}))\n/*\n{\"Count\":0,\"IdentityPoolUsages\":[],\"MaxResults\":16,\"NextToken\":null}\n...\n*/\n\nrequest(aws4.sign({service: 'elastictranscoder', path: '/2012-09-25/pipelines'}))\n/*\n{\"NextPageToken\":null,\"Pipelines\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'lambda', path: '/2014-11-13/functions/'}))\n/*\n{\"Functions\":[],\"NextMarker\":null}\n...\n*/\n\nrequest(aws4.sign({service: 'ecs', path: '/?Action=ListClusters&Version=2014-11-13'}))\n/*\n<ListClustersResponse xmlns=\"http://ecs.amazonaws.com/doc/2014-11-13/\">\n...\n*/\n\nrequest(aws4.sign({service: 'glacier', path: '/-/vaults', headers: {'X-Amz-Glacier-Version': '2012-06-01'}}))\n/*\n{\"Marker\":null,\"VaultList\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'storagegateway', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'StorageGateway_20120630.ListGateways'\n}}))\n/*\n{\"Gateways\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'datapipeline', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'DataPipeline.ListPipelines'\n}}))\n/*\n{\"hasMoreResults\":false,\"pipelineIdList\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'opsworks', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'OpsWorks_20130218.DescribeStacks'\n}}))\n/*\n{\"Stacks\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'route53domains', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Route53Domains_v20140515.ListDomains'\n}}))\n/*\n{\"Domains\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'kinesis', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Kinesis_20131202.ListStreams'\n}}))\n/*\n{\"HasMoreStreams\":false,\"StreamNames\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'cloudtrail', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CloudTrail_20131101.DescribeTrails'\n}}))\n/*\n{\"trailList\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'logs', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'Logs_20140328.DescribeLogGroups'\n}}))\n/*\n{\"logGroups\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'codedeploy', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CodeDeploy_20141006.ListApplications'\n}}))\n/*\n{\"applications\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'directconnect', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'OvertureService.DescribeConnections'\n}}))\n/*\n{\"connections\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'kms', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'TrentService.ListKeys'\n}}))\n/*\n{\"Keys\":[],\"Truncated\":false}\n...\n*/\n\nrequest(aws4.sign({service: 'config', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'StarlingDoveService.DescribeDeliveryChannels'\n}}))\n/*\n{\"DeliveryChannels\":[]}\n...\n*/\n\nrequest(aws4.sign({service: 'cloudhsm', body: '{}', headers: {\n  'Content-Type': 'application/x-amz-json-1.1',\n  'X-Amz-Target': 'CloudHsmFrontendService.ListAvailableZones'\n}}))\n/*\n{\"AZList\":[\"us-east-1a\",\"us-east-1b\",\"us-east-1c\"]}\n...\n*/\n\nrequest(aws4.sign({\n  service: 'swf',\n  body: '{\"registrationStatus\":\"REGISTERED\"}',\n  headers: {\n    'Content-Type': 'application/x-amz-json-1.0',\n    'X-Amz-Target': 'SimpleWorkflowService.ListDomains'\n  }\n}))\n/*\n{\"domainInfos\":[]}\n...\n*/\n\nrequest(aws4.sign({\n  service: 'cognito-identity',\n  body: '{\"MaxResults\": 1}',\n  headers: {\n    'Content-Type': 'application/x-amz-json-1.1',\n    'X-Amz-Target': 'AWSCognitoIdentityService.ListIdentityPools'\n  }\n}))\n/*\n{\"IdentityPools\":[]}\n...\n*/\n\nrequest(aws4.sign({\n  service: 'mobileanalytics',\n  path: '/2014-06-05/events',\n  body: JSON.stringify({events:[{\n    eventType: 'a',\n    timestamp: new Date().toISOString(),\n    session: {},\n  }]}),\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Amz-Client-Context': JSON.stringify({\n      client: {client_id: 'a', app_title: 'a'},\n      custom: {},\n      env: {platform: 'a'},\n      services: {},\n    }),\n  }\n}))\n/*\n(HTTP 202, empty response)\n*/\n\n// Generate CodeCommit Git access password\nvar signer = new aws4.RequestSigner({\n  service: 'codecommit',\n  host: 'git-codecommit.us-east-1.amazonaws.com',\n  method: 'GIT',\n  path: '/v1/repos/MyAwesomeRepo',\n})\nvar password = signer.getDateTime() + 'Z' + signer.signature()\n```\n\nAPI\n---\n\n### aws4.sign(requestOptions, [credentials])\n\nThis calculates and populates the `Authorization` header of\n`requestOptions`, and any other necessary AWS headers and/or request\noptions. Returns `requestOptions` as a convenience for chaining.\n\n`requestOptions` is an object holding the same options that the node.js\n[http.request](http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback)\nfunction takes.\n\nThe following properties of `requestOptions` are used in the signing or\npopulated if they don't already exist:\n\n- `hostname` or `host` (will be determined from `service` and `region` if not given)\n- `method` (will use `'GET'` if not given or `'POST'` if there is a `body`)\n- `path` (will use `'/'` if not given)\n- `body` (will use `''` if not given)\n- `service` (will be calculated from `hostname` or `host` if not given)\n- `region` (will be calculated from `hostname` or `host` or use `'us-east-1'` if not given)\n- `headers['Host']` (will use `hostname` or `host` or be calculated if not given)\n- `headers['Content-Type']` (will use `'application/x-www-form-urlencoded; charset=utf-8'`\n  if not given and there is a `body`)\n- `headers['Date']` (used to calculate the signature date if given, otherwise `new Date` is used)\n\nYour AWS credentials (which can be found in your\n[AWS console](https://portal.aws.amazon.com/gp/aws/securityCredentials))\ncan be specified in one of two ways:\n\n- As the second argument, like this:\n\n```javascript\naws4.sign(requestOptions, {\n  secretAccessKey: \"<your-secret-access-key>\",\n  accessKeyId: \"<your-access-key-id>\",\n  sessionToken: \"<your-session-token>\"\n})\n```\n\n- From `process.env`, such as this:\n\n```\nexport AWS_SECRET_ACCESS_KEY=\"<your-secret-access-key>\"\nexport AWS_ACCESS_KEY_ID=\"<your-access-key-id>\"\nexport AWS_SESSION_TOKEN=\"<your-session-token>\"\n```\n\n(will also use `AWS_ACCESS_KEY` and `AWS_SECRET_KEY` if available)\n\nThe `sessionToken` property and `AWS_SESSION_TOKEN` environment variable are optional for signing\nwith [IAM STS temporary credentials](http://docs.aws.amazon.com/STS/latest/UsingSTS/using-temp-creds.html).\n\nInstallation\n------------\n\nWith [npm](http://npmjs.org/) do:\n\n```\nnpm install aws4\n```\n\nCan also be used [in the browser](./browser).\n\nThanks\n------\n\nThanks to [@jed](https://github.com/jed) for his\n[dynamo-client](https://github.com/jed/dynamo-client) lib where I first\ncommitted and subsequently extracted this code.\n\nAlso thanks to the\n[official node.js AWS SDK](https://github.com/aws/aws-sdk-js) for giving\nme a start on implementing the v4 signature.\n\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/aws4",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "caseless": {
                  "_args": [
                    [
                      "caseless@0.12.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "caseless@0.12.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "caseless@0.12.0",
                  "_id": "caseless@0.12.0",
                  "_integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
                  "_location": "/caseless",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "caseless@0.12.0",
                    "name": "caseless",
                    "escapedName": "caseless",
                    "rawSpec": "0.12.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.12.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
                  "_spec": "0.12.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Mikeal Rogers",
                    "email": "mikeal.rogers@gmail.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mikeal/caseless/issues"
                  },
                  "description": "Caseless object set/get/has, very useful when working with HTTP headers.",
                  "devDependencies": {
                    "tape": "^2.10.2"
                  },
                  "homepage": "https://github.com/mikeal/caseless#readme",
                  "keywords": [
                    "headers",
                    "http",
                    "caseless"
                  ],
                  "license": "Apache-2.0",
                  "main": "index.js",
                  "name": "caseless",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/mikeal/caseless.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "test": "node test.js",
                  "version": "0.12.0",
                  "readme": "## Caseless -- wrap an object to set and get property with caseless semantics but also preserve caseing.\n\nThis library is incredibly useful when working with HTTP headers. It allows you to get/set/check for headers in a caseless manner while also preserving the caseing of headers the first time they are set.\n\n## Usage\n\n```javascript\nvar headers = {}\n  , c = caseless(headers)\n  ;\nc.set('a-Header', 'asdf')\nc.get('a-header') === 'asdf'\n```\n\n## has(key)\n\nHas takes a name and if it finds a matching header will return that header name with the preserved caseing it was set with.\n\n```javascript\nc.has('a-header') === 'a-Header'\n```\n\n## set(key, value[, clobber=true])\n\nSet is fairly straight forward except that if the header exists and clobber is disabled it will add `','+value` to the existing header.\n\n```javascript\nc.set('a-Header', 'fdas')\nc.set('a-HEADER', 'more', false)\nc.get('a-header') === 'fdsa,more'\n```\n\n## swap(key)\n\nSwaps the casing of a header with the new one that is passed in.\n\n```javascript\nvar headers = {}\n  , c = caseless(headers)\n  ;\nc.set('a-Header', 'fdas')\nc.swap('a-HEADER')\nc.has('a-header') === 'a-HEADER'\nheaders === {'a-HEADER': 'fdas'}\n```\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/caseless",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "combined-stream": {
                  "_args": [
                    [
                      "combined-stream@1.0.8",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "combined-stream@1.0.8",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "combined-stream@1.0.8",
                  "_id": "combined-stream@1.0.8",
                  "_integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
                  "_location": "/combined-stream",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "combined-stream@1.0.8",
                    "name": "combined-stream",
                    "escapedName": "combined-stream",
                    "rawSpec": "1.0.8",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.8"
                  },
                  "_requiredBy": [
                    "/form-data",
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
                  "_spec": "1.0.8",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Felix Geisendörfer",
                    "email": "felix@debuggable.com",
                    "url": "http://debuggable.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/felixge/node-combined-stream/issues"
                  },
                  "dependencies": {
                    "delayed-stream": {
                      "_args": [
                        [
                          "delayed-stream@1.0.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "delayed-stream@1.0.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "delayed-stream@1.0.0",
                      "_id": "delayed-stream@1.0.0",
                      "_integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
                      "_location": "/delayed-stream",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "delayed-stream@1.0.0",
                        "name": "delayed-stream",
                        "escapedName": "delayed-stream",
                        "rawSpec": "1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.0"
                      },
                      "_requiredBy": [
                        "/combined-stream"
                      ],
                      "_resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
                      "_spec": "1.0.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Felix Geisendörfer",
                        "email": "felix@debuggable.com",
                        "url": "http://debuggable.com/"
                      },
                      "bugs": {
                        "url": "https://github.com/felixge/node-delayed-stream/issues"
                      },
                      "contributors": [
                        {
                          "name": "Mike Atkins",
                          "email": "apeherder@gmail.com"
                        }
                      ],
                      "dependencies": {},
                      "description": "Buffers events from a stream until you are ready to handle them.",
                      "devDependencies": {
                        "fake": "0.2.0",
                        "far": "0.0.1"
                      },
                      "engines": {
                        "node": ">=0.4.0"
                      },
                      "homepage": "https://github.com/felixge/node-delayed-stream",
                      "license": "MIT",
                      "main": "./lib/delayed_stream",
                      "name": "delayed-stream",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/felixge/node-delayed-stream.git"
                      },
                      "scripts": {
                        "test": "make test"
                      },
                      "version": "1.0.0",
                      "readme": "# delayed-stream\n\nBuffers events from a stream until you are ready to handle them.\n\n## Installation\n\n``` bash\nnpm install delayed-stream\n```\n\n## Usage\n\nThe following example shows how to write a http echo server that delays its\nresponse by 1000 ms.\n\n``` javascript\nvar DelayedStream = require('delayed-stream');\nvar http = require('http');\n\nhttp.createServer(function(req, res) {\n  var delayed = DelayedStream.create(req);\n\n  setTimeout(function() {\n    res.writeHead(200);\n    delayed.pipe(res);\n  }, 1000);\n});\n```\n\nIf you are not using `Stream#pipe`, you can also manually release the buffered\nevents by calling `delayedStream.resume()`:\n\n``` javascript\nvar delayed = DelayedStream.create(req);\n\nsetTimeout(function() {\n  // Emit all buffered events and resume underlaying source\n  delayed.resume();\n}, 1000);\n```\n\n## Implementation\n\nIn order to use this meta stream properly, here are a few things you should\nknow about the implementation.\n\n### Event Buffering / Proxying\n\nAll events of the `source` stream are hijacked by overwriting the `source.emit`\nmethod. Until node implements a catch-all event listener, this is the only way.\n\nHowever, delayed-stream still continues to emit all events it captures on the\n`source`, regardless of whether you have released the delayed stream yet or\nnot.\n\nUpon creation, delayed-stream captures all `source` events and stores them in\nan internal event buffer. Once `delayedStream.release()` is called, all\nbuffered events are emitted on the `delayedStream`, and the event buffer is\ncleared. After that, delayed-stream merely acts as a proxy for the underlaying\nsource.\n\n### Error handling\n\nError events on `source` are buffered / proxied just like any other events.\nHowever, `delayedStream.create` attaches a no-op `'error'` listener to the\n`source`. This way you only have to handle errors on the `delayedStream`\nobject, rather than in two places.\n\n### Buffer limits\n\ndelayed-stream provides a `maxDataSize` property that can be used to limit\nthe amount of data being buffered. In order to protect you from bad `source`\nstreams that don't react to `source.pause()`, this feature is enabled by\ndefault.\n\n## API\n\n### DelayedStream.create(source, [options])\n\nReturns a new `delayedStream`. Available options are:\n\n* `pauseStream`\n* `maxDataSize`\n\nThe description for those properties can be found below.\n\n### delayedStream.source\n\nThe `source` stream managed by this object. This is useful if you are\npassing your `delayedStream` around, and you still want to access properties\non the `source` object.\n\n### delayedStream.pauseStream = true\n\nWhether to pause the underlaying `source` when calling\n`DelayedStream.create()`. Modifying this property afterwards has no effect.\n\n### delayedStream.maxDataSize = 1024 * 1024\n\nThe amount of data to buffer before emitting an `error`.\n\nIf the underlaying source is emitting `Buffer` objects, the `maxDataSize`\nrefers to bytes.\n\nIf the underlaying source is emitting JavaScript strings, the size refers to\ncharacters.\n\nIf you know what you are doing, you can set this property to `Infinity` to\ndisable this feature. You can also modify this property during runtime.\n\n### delayedStream.dataSize = 0\n\nThe amount of data buffered so far.\n\n### delayedStream.readable\n\nAn ECMA5 getter that returns the value of `source.readable`.\n\n### delayedStream.resume()\n\nIf the `delayedStream` has not been released so far, `delayedStream.release()`\nis called.\n\nIn either case, `source.resume()` is called.\n\n### delayedStream.pause()\n\nCalls `source.pause()`.\n\n### delayedStream.pipe(dest)\n\nCalls `delayedStream.resume()` and then proxies the arguments to `source.pipe`.\n\n### delayedStream.release()\n\nEmits and clears all events that have been buffered up so far. This does not\nresume the underlaying source, use `delayedStream.resume()` instead.\n\n## License\n\ndelayed-stream is licensed under the MIT license.\n",
                      "readmeFilename": "Readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/delayed-stream",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "A stream that emits multiple other streams one after another.",
                  "devDependencies": {
                    "far": "~0.0.7"
                  },
                  "engines": {
                    "node": ">= 0.8"
                  },
                  "homepage": "https://github.com/felixge/node-combined-stream",
                  "license": "MIT",
                  "main": "./lib/combined_stream",
                  "name": "combined-stream",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/felixge/node-combined-stream.git"
                  },
                  "scripts": {
                    "test": "node test/run.js"
                  },
                  "version": "1.0.8",
                  "readme": "# combined-stream\n\nA stream that emits multiple other streams one after another.\n\n**NB** Currently `combined-stream` works with streams version 1 only. There is ongoing effort to switch this library to streams version 2. Any help is welcome. :) Meanwhile you can explore other libraries that provide streams2 support with more or less compatibility with `combined-stream`.\n\n- [combined-stream2](https://www.npmjs.com/package/combined-stream2): A drop-in streams2-compatible replacement for the combined-stream module.\n\n- [multistream](https://www.npmjs.com/package/multistream): A stream that emits multiple other streams one after another.\n\n## Installation\n\n``` bash\nnpm install combined-stream\n```\n\n## Usage\n\nHere is a simple example that shows how you can use combined-stream to combine\ntwo files into one:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nWhile the example above works great, it will pause all source streams until\nthey are needed. If you don't want that to happen, you can set `pauseStreams`\nto `false`:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create({pauseStreams: false});\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nHowever, what if you don't have all the source streams yet, or you don't want\nto allocate the resources (file descriptors, memory, etc.) for them right away?\nWell, in that case you can simply provide a callback that supplies the stream\nby calling a `next()` function:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file1.txt'));\n});\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file2.txt'));\n});\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\n## API\n\n### CombinedStream.create([options])\n\nReturns a new combined stream object. Available options are:\n\n* `maxDataSize`\n* `pauseStreams`\n\nThe effect of those options is described below.\n\n### combinedStream.pauseStreams = `true`\n\nWhether to apply back pressure to the underlaying streams. If set to `false`,\nthe underlaying streams will never be paused. If set to `true`, the\nunderlaying streams will be paused right after being appended, as well as when\n`delayedStream.pipe()` wants to throttle.\n\n### combinedStream.maxDataSize = `2 * 1024 * 1024`\n\nThe maximum amount of bytes (or characters) to buffer for all source streams.\nIf this value is exceeded, `combinedStream` emits an `'error'` event.\n\n### combinedStream.dataSize = `0`\n\nThe amount of bytes (or characters) currently buffered by `combinedStream`.\n\n### combinedStream.append(stream)\n\nAppends the given `stream` to the combinedStream object. If `pauseStreams` is\nset to `true, this stream will also be paused right away.\n\n`streams` can also be a function that takes one parameter called `next`. `next`\nis a function that must be invoked in order to provide the `next` stream, see\nexample above.\n\nRegardless of how the `stream` is appended, combined-stream always attaches an\n`'error'` listener to it, so you don't have to do that manually.\n\nSpecial case: `stream` can also be a String or Buffer.\n\n### combinedStream.write(data)\n\nYou should not call this, `combinedStream` takes care of piping the appended\nstreams into itself for you.\n\n### combinedStream.resume()\n\nCauses `combinedStream` to start drain the streams it manages. The function is\nidempotent, and also emits a `'resume'` event each time which usually goes to\nthe stream that is currently being drained.\n\n### combinedStream.pause();\n\nIf `combinedStream.pauseStreams` is set to `false`, this does nothing.\nOtherwise a `'pause'` event is emitted, this goes to the stream that is\ncurrently being drained, so you can use it to apply back pressure.\n\n### combinedStream.end();\n\nSets `combinedStream.writable` to false, emits an `'end'` event, and removes\nall streams from the queue.\n\n### combinedStream.destroy();\n\nSame as `combinedStream.end()`, except it emits a `'close'` event instead of\n`'end'`.\n\n## License\n\ncombined-stream is licensed under the MIT license.\n",
                  "readmeFilename": "Readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "delayed-stream": "~1.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/combined-stream",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "extend": {
                  "_args": "[Circular]",
                  "_from": "extend@3.0.2",
                  "_id": "extend@3.0.2",
                  "_integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
                  "_location": "/extend",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "extend@3.0.2",
                    "name": "extend",
                    "escapedName": "extend",
                    "rawSpec": "3.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.0.2"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
                  "_spec": "3.0.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "contributors": "[Circular]",
                  "dependencies": {},
                  "description": "Port of jQuery.extend for node.js and the browser",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/justmoon/node-extend#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "index",
                  "name": "extend",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.0.2",
                  "readme": "[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n\n# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>\n\n`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.\n\nNotes:\n\n* Since Node.js >= 4,\n  [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  now offers the same functionality natively (but without the \"deep copy\" option).\n  See [ECMAScript 2015 (ES6) in Node.js](https://nodejs.org/en/docs/es6).\n* Some native implementations of `Object.assign` in both Node.js and many\n  browsers (since NPM modules are for the browser too) may not be fully\n  spec-compliant.\n  Check [`object.assign`](https://www.npmjs.com/package/object.assign) module for\n  a compliant candidate.\n\n## Installation\n\nThis package is available on [npm][npm-url] as: `extend`\n\n``` sh\nnpm install extend\n```\n\n## Usage\n\n**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**\n\n*Extend one object with one or more others, returning the modified object.*\n\n**Example:**\n\n``` js\nvar extend = require('extend');\nextend(targetObject, object1, object2);\n```\n\nKeep in mind that the target object will be modified, and will be returned from extend().\n\nIf a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\nWarning: passing `false` as the first argument is not supported.\n\n### Arguments\n\n* `deep` *Boolean* (optional)\nIf set, the merge becomes recursive (i.e. deep copy).\n* `target`\t*Object*\nThe object to extend.\n* `object1`\t*Object*\nThe object that will be merged into the first.\n* `objectN` *Object* (Optional)\nMore objects to merge into the first.\n\n## License\n\n`node-extend` is licensed under the [MIT License][mit-license-url].\n\n## Acknowledgements\n\nAll credit to the jQuery authors for perfecting this amazing utility.\n\nPorted to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].\n\n[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg\n[travis-url]: https://travis-ci.org/justmoon/node-extend\n[npm-url]: https://npmjs.org/package/extend\n[mit-license-url]: http://opensource.org/licenses/MIT\n[github-justmoon]: https://github.com/justmoon\n[github-insin]: https://github.com/insin\n[github-ljharb]: https://github.com/ljharb\n[npm-version-png]: http://versionbadg.es/justmoon/node-extend.svg\n[deps-svg]: https://david-dm.org/justmoon/node-extend.svg\n[deps-url]: https://david-dm.org/justmoon/node-extend\n[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg\n[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/extend",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "extend"
                },
                "forever-agent": {
                  "_args": [
                    [
                      "forever-agent@0.6.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "forever-agent@0.6.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "forever-agent@0.6.1",
                  "_id": "forever-agent@0.6.1",
                  "_integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
                  "_location": "/forever-agent",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "forever-agent@0.6.1",
                    "name": "forever-agent",
                    "escapedName": "forever-agent",
                    "rawSpec": "0.6.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.6.1"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
                  "_spec": "0.6.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Mikeal Rogers",
                    "email": "mikeal.rogers@gmail.com",
                    "url": "http://www.futurealoof.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mikeal/forever-agent/issues"
                  },
                  "dependencies": {},
                  "description": "HTTP Agent that keeps socket connections alive between keep-alive requests. Formerly part of mikeal/request, now a standalone module.",
                  "devDependencies": {},
                  "engines": {
                    "node": "*"
                  },
                  "homepage": "https://github.com/mikeal/forever-agent#readme",
                  "license": "Apache-2.0",
                  "main": "index.js",
                  "name": "forever-agent",
                  "optionalDependencies": {},
                  "repository": {
                    "url": "git+https://github.com/mikeal/forever-agent.git"
                  },
                  "version": "0.6.1",
                  "readme": "forever-agent\n=============\n\nHTTP Agent that keeps socket connections alive between keep-alive requests. Formerly part of mikeal/request, now a standalone module.\n",
                  "readmeFilename": "README.md",
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/forever-agent",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "form-data": {
                  "_args": [
                    [
                      "form-data@2.3.3",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "form-data@2.3.3",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "form-data@2.3.3",
                  "_id": "form-data@2.3.3",
                  "_integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
                  "_location": "/form-data",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "form-data@2.3.3",
                    "name": "form-data",
                    "escapedName": "form-data",
                    "rawSpec": "2.3.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.3.3"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
                  "_spec": "2.3.3",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Felix Geisendörfer",
                    "email": "felix@debuggable.com",
                    "url": "http://debuggable.com/"
                  },
                  "browser": "./lib/browser",
                  "bugs": {
                    "url": "https://github.com/form-data/form-data/issues"
                  },
                  "dependencies": {
                    "asynckit": {
                      "_args": [
                        [
                          "asynckit@0.4.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "asynckit@0.4.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "asynckit@0.4.0",
                      "_id": "asynckit@0.4.0",
                      "_integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",
                      "_location": "/asynckit",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "asynckit@0.4.0",
                        "name": "asynckit",
                        "escapedName": "asynckit",
                        "rawSpec": "0.4.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "0.4.0"
                      },
                      "_requiredBy": [
                        "/form-data"
                      ],
                      "_resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
                      "_spec": "0.4.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Alex Indigo",
                        "email": "iam@alexindigo.com"
                      },
                      "bugs": {
                        "url": "https://github.com/alexindigo/asynckit/issues"
                      },
                      "dependencies": {},
                      "description": "Minimal async jobs utility library, with streams support",
                      "devDependencies": {
                        "browserify": "^13.0.0",
                        "browserify-istanbul": "^2.0.0",
                        "coveralls": "^2.11.9",
                        "eslint": "^2.9.0",
                        "istanbul": "^0.4.3",
                        "obake": "^0.1.2",
                        "phantomjs-prebuilt": "^2.1.7",
                        "pre-commit": "^1.1.3",
                        "reamde": "^1.1.0",
                        "rimraf": "^2.5.2",
                        "size-table": "^0.2.0",
                        "tap-spec": "^4.1.1",
                        "tape": "^4.5.1"
                      },
                      "homepage": "https://github.com/alexindigo/asynckit#readme",
                      "keywords": [
                        "async",
                        "jobs",
                        "parallel",
                        "serial",
                        "iterator",
                        "array",
                        "object",
                        "stream",
                        "destroy",
                        "terminate",
                        "abort"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "asynckit",
                      "pre-commit": [
                        "clean",
                        "lint",
                        "test",
                        "browser",
                        "report",
                        "size"
                      ],
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/alexindigo/asynckit.git"
                      },
                      "scripts": {
                        "browser": "browserify -t browserify-istanbul test/lib/browserify_adjustment.js test/test-*.js | obake --coverage | tap-spec",
                        "clean": "rimraf coverage",
                        "debug": "tape test/test-*.js",
                        "lint": "eslint *.js lib/*.js test/*.js",
                        "report": "istanbul report",
                        "size": "browserify index.js | size-table asynckit",
                        "test": "istanbul cover --reporter=json tape -- 'test/test-*.js' | tap-spec",
                        "win-test": "tape test/test-*.js"
                      },
                      "version": "0.4.0",
                      "readme": "# asynckit [![NPM Module](https://img.shields.io/npm/v/asynckit.svg?style=flat)](https://www.npmjs.com/package/asynckit)\n\nMinimal async jobs utility library, with streams support.\n\n[![PhantomJS Build](https://img.shields.io/travis/alexindigo/asynckit/v0.4.0.svg?label=browser&style=flat)](https://travis-ci.org/alexindigo/asynckit)\n[![Linux Build](https://img.shields.io/travis/alexindigo/asynckit/v0.4.0.svg?label=linux:0.12-6.x&style=flat)](https://travis-ci.org/alexindigo/asynckit)\n[![Windows Build](https://img.shields.io/appveyor/ci/alexindigo/asynckit/v0.4.0.svg?label=windows:0.12-6.x&style=flat)](https://ci.appveyor.com/project/alexindigo/asynckit)\n\n[![Coverage Status](https://img.shields.io/coveralls/alexindigo/asynckit/v0.4.0.svg?label=code+coverage&style=flat)](https://coveralls.io/github/alexindigo/asynckit?branch=master)\n[![Dependency Status](https://img.shields.io/david/alexindigo/asynckit/v0.4.0.svg?style=flat)](https://david-dm.org/alexindigo/asynckit)\n[![bitHound Overall Score](https://www.bithound.io/github/alexindigo/asynckit/badges/score.svg)](https://www.bithound.io/github/alexindigo/asynckit)\n\n<!-- [![Readme](https://img.shields.io/badge/readme-tested-brightgreen.svg?style=flat)](https://www.npmjs.com/package/reamde) -->\n\nAsyncKit provides harness for `parallel` and `serial` iterators over list of items represented by arrays or objects.\nOptionally it accepts abort function (should be synchronously return by iterator for each item), and terminates left over jobs upon an error event. For specific iteration order built-in (`ascending` and `descending`) and custom sort helpers also supported, via `asynckit.serialOrdered` method.\n\nIt ensures async operations to keep behavior more stable and prevent `Maximum call stack size exceeded` errors, from sync iterators.\n\n| compression        |     size |\n| :----------------- | -------: |\n| asynckit.js        | 12.34 kB |\n| asynckit.min.js    |  4.11 kB |\n| asynckit.min.js.gz |  1.47 kB |\n\n\n## Install\n\n```sh\n$ npm install --save asynckit\n```\n\n## Examples\n\n### Parallel Jobs\n\nRuns iterator over provided array in parallel. Stores output in the `result` array,\non the matching positions. In unlikely event of an error from one of the jobs,\nwill terminate rest of the active jobs (if abort function is provided)\nand return error along with salvaged data to the main callback function.\n\n#### Input Array\n\n```javascript\nvar parallel = require('asynckit').parallel\n  , assert   = require('assert')\n  ;\n\nvar source         = [ 1, 1, 4, 16, 64, 32, 8, 2 ]\n  , expectedResult = [ 2, 2, 8, 32, 128, 64, 16, 4 ]\n  , expectedTarget = [ 1, 1, 2, 4, 8, 16, 32, 64 ]\n  , target         = []\n  ;\n\nparallel(source, asyncJob, function(err, result)\n{\n  assert.deepEqual(result, expectedResult);\n  assert.deepEqual(target, expectedTarget);\n});\n\n// async job accepts one element from the array\n// and a callback function\nfunction asyncJob(item, cb)\n{\n  // different delays (in ms) per item\n  var delay = item * 25;\n\n  // pretend different jobs take different time to finish\n  // and not in consequential order\n  var timeoutId = setTimeout(function() {\n    target.push(item);\n    cb(null, item * 2);\n  }, delay);\n\n  // allow to cancel \"leftover\" jobs upon error\n  // return function, invoking of which will abort this job\n  return clearTimeout.bind(null, timeoutId);\n}\n```\n\nMore examples could be found in [test/test-parallel-array.js](test/test-parallel-array.js).\n\n#### Input Object\n\nAlso it supports named jobs, listed via object.\n\n```javascript\nvar parallel = require('asynckit/parallel')\n  , assert   = require('assert')\n  ;\n\nvar source         = { first: 1, one: 1, four: 4, sixteen: 16, sixtyFour: 64, thirtyTwo: 32, eight: 8, two: 2 }\n  , expectedResult = { first: 2, one: 2, four: 8, sixteen: 32, sixtyFour: 128, thirtyTwo: 64, eight: 16, two: 4 }\n  , expectedTarget = [ 1, 1, 2, 4, 8, 16, 32, 64 ]\n  , expectedKeys   = [ 'first', 'one', 'two', 'four', 'eight', 'sixteen', 'thirtyTwo', 'sixtyFour' ]\n  , target         = []\n  , keys           = []\n  ;\n\nparallel(source, asyncJob, function(err, result)\n{\n  assert.deepEqual(result, expectedResult);\n  assert.deepEqual(target, expectedTarget);\n  assert.deepEqual(keys, expectedKeys);\n});\n\n// supports full value, key, callback (shortcut) interface\nfunction asyncJob(item, key, cb)\n{\n  // different delays (in ms) per item\n  var delay = item * 25;\n\n  // pretend different jobs take different time to finish\n  // and not in consequential order\n  var timeoutId = setTimeout(function() {\n    keys.push(key);\n    target.push(item);\n    cb(null, item * 2);\n  }, delay);\n\n  // allow to cancel \"leftover\" jobs upon error\n  // return function, invoking of which will abort this job\n  return clearTimeout.bind(null, timeoutId);\n}\n```\n\nMore examples could be found in [test/test-parallel-object.js](test/test-parallel-object.js).\n\n### Serial Jobs\n\nRuns iterator over provided array sequentially. Stores output in the `result` array,\non the matching positions. In unlikely event of an error from one of the jobs,\nwill not proceed to the rest of the items in the list\nand return error along with salvaged data to the main callback function.\n\n#### Input Array\n\n```javascript\nvar serial = require('asynckit/serial')\n  , assert = require('assert')\n  ;\n\nvar source         = [ 1, 1, 4, 16, 64, 32, 8, 2 ]\n  , expectedResult = [ 2, 2, 8, 32, 128, 64, 16, 4 ]\n  , expectedTarget = [ 0, 1, 2, 3, 4, 5, 6, 7 ]\n  , target         = []\n  ;\n\nserial(source, asyncJob, function(err, result)\n{\n  assert.deepEqual(result, expectedResult);\n  assert.deepEqual(target, expectedTarget);\n});\n\n// extended interface (item, key, callback)\n// also supported for arrays\nfunction asyncJob(item, key, cb)\n{\n  target.push(key);\n\n  // it will be automatically made async\n  // even it iterator \"returns\" in the same event loop\n  cb(null, item * 2);\n}\n```\n\nMore examples could be found in [test/test-serial-array.js](test/test-serial-array.js).\n\n#### Input Object\n\nAlso it supports named jobs, listed via object.\n\n```javascript\nvar serial = require('asynckit').serial\n  , assert = require('assert')\n  ;\n\nvar source         = [ 1, 1, 4, 16, 64, 32, 8, 2 ]\n  , expectedResult = [ 2, 2, 8, 32, 128, 64, 16, 4 ]\n  , expectedTarget = [ 0, 1, 2, 3, 4, 5, 6, 7 ]\n  , target         = []\n  ;\n\nvar source         = { first: 1, one: 1, four: 4, sixteen: 16, sixtyFour: 64, thirtyTwo: 32, eight: 8, two: 2 }\n  , expectedResult = { first: 2, one: 2, four: 8, sixteen: 32, sixtyFour: 128, thirtyTwo: 64, eight: 16, two: 4 }\n  , expectedTarget = [ 1, 1, 4, 16, 64, 32, 8, 2 ]\n  , target         = []\n  ;\n\n\nserial(source, asyncJob, function(err, result)\n{\n  assert.deepEqual(result, expectedResult);\n  assert.deepEqual(target, expectedTarget);\n});\n\n// shortcut interface (item, callback)\n// works for object as well as for the arrays\nfunction asyncJob(item, cb)\n{\n  target.push(item);\n\n  // it will be automatically made async\n  // even it iterator \"returns\" in the same event loop\n  cb(null, item * 2);\n}\n```\n\nMore examples could be found in [test/test-serial-object.js](test/test-serial-object.js).\n\n_Note: Since _object_ is an _unordered_ collection of properties,\nit may produce unexpected results with sequential iterations.\nWhenever order of the jobs' execution is important please use `serialOrdered` method._\n\n### Ordered Serial Iterations\n\nTBD\n\nFor example [compare-property](compare-property) package.\n\n### Streaming interface\n\nTBD\n\n## Want to Know More?\n\nMore examples can be found in [test folder](test/).\n\nOr open an [issue](https://github.com/alexindigo/asynckit/issues) with questions and/or suggestions.\n\n## License\n\nAsyncKit is licensed under the MIT license.\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/asynckit",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "combined-stream": {
                      "_args": "[Circular]",
                      "_from": "combined-stream@1.0.8",
                      "_id": "combined-stream@1.0.8",
                      "_integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
                      "_location": "/combined-stream",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "combined-stream@1.0.8",
                        "name": "combined-stream",
                        "escapedName": "combined-stream",
                        "rawSpec": "1.0.8",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.8"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
                      "_spec": "1.0.8",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "dependencies": {},
                      "description": "A stream that emits multiple other streams one after another.",
                      "devDependencies": "[Circular]",
                      "engines": "[Circular]",
                      "homepage": "https://github.com/felixge/node-combined-stream",
                      "license": "MIT",
                      "main": "./lib/combined_stream",
                      "name": "combined-stream",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "1.0.8",
                      "readme": "# combined-stream\n\nA stream that emits multiple other streams one after another.\n\n**NB** Currently `combined-stream` works with streams version 1 only. There is ongoing effort to switch this library to streams version 2. Any help is welcome. :) Meanwhile you can explore other libraries that provide streams2 support with more or less compatibility with `combined-stream`.\n\n- [combined-stream2](https://www.npmjs.com/package/combined-stream2): A drop-in streams2-compatible replacement for the combined-stream module.\n\n- [multistream](https://www.npmjs.com/package/multistream): A stream that emits multiple other streams one after another.\n\n## Installation\n\n``` bash\nnpm install combined-stream\n```\n\n## Usage\n\nHere is a simple example that shows how you can use combined-stream to combine\ntwo files into one:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nWhile the example above works great, it will pause all source streams until\nthey are needed. If you don't want that to happen, you can set `pauseStreams`\nto `false`:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create({pauseStreams: false});\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nHowever, what if you don't have all the source streams yet, or you don't want\nto allocate the resources (file descriptors, memory, etc.) for them right away?\nWell, in that case you can simply provide a callback that supplies the stream\nby calling a `next()` function:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file1.txt'));\n});\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file2.txt'));\n});\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\n## API\n\n### CombinedStream.create([options])\n\nReturns a new combined stream object. Available options are:\n\n* `maxDataSize`\n* `pauseStreams`\n\nThe effect of those options is described below.\n\n### combinedStream.pauseStreams = `true`\n\nWhether to apply back pressure to the underlaying streams. If set to `false`,\nthe underlaying streams will never be paused. If set to `true`, the\nunderlaying streams will be paused right after being appended, as well as when\n`delayedStream.pipe()` wants to throttle.\n\n### combinedStream.maxDataSize = `2 * 1024 * 1024`\n\nThe maximum amount of bytes (or characters) to buffer for all source streams.\nIf this value is exceeded, `combinedStream` emits an `'error'` event.\n\n### combinedStream.dataSize = `0`\n\nThe amount of bytes (or characters) currently buffered by `combinedStream`.\n\n### combinedStream.append(stream)\n\nAppends the given `stream` to the combinedStream object. If `pauseStreams` is\nset to `true, this stream will also be paused right away.\n\n`streams` can also be a function that takes one parameter called `next`. `next`\nis a function that must be invoked in order to provide the `next` stream, see\nexample above.\n\nRegardless of how the `stream` is appended, combined-stream always attaches an\n`'error'` listener to it, so you don't have to do that manually.\n\nSpecial case: `stream` can also be a String or Buffer.\n\n### combinedStream.write(data)\n\nYou should not call this, `combinedStream` takes care of piping the appended\nstreams into itself for you.\n\n### combinedStream.resume()\n\nCauses `combinedStream` to start drain the streams it manages. The function is\nidempotent, and also emits a `'resume'` event each time which usually goes to\nthe stream that is currently being drained.\n\n### combinedStream.pause();\n\nIf `combinedStream.pauseStreams` is set to `false`, this does nothing.\nOtherwise a `'pause'` event is emitted, this goes to the stream that is\ncurrently being drained, so you can use it to apply back pressure.\n\n### combinedStream.end();\n\nSets `combinedStream.writable` to false, emits an `'end'` event, and removes\nall streams from the queue.\n\n### combinedStream.destroy();\n\nSame as `combinedStream.end()`, except it emits a `'close'` event instead of\n`'end'`.\n\n## License\n\ncombined-stream is licensed under the MIT license.\n",
                      "readmeFilename": "Readme.md",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/combined-stream",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "combined-stream"
                    },
                    "mime-types": {
                      "_args": [
                        [
                          "mime-types@2.1.27",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "mime-types@2.1.27",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "mime-types@2.1.27",
                      "_id": "mime-types@2.1.27",
                      "_integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
                      "_location": "/mime-types",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "mime-types@2.1.27",
                        "name": "mime-types",
                        "escapedName": "mime-types",
                        "rawSpec": "2.1.27",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.1.27"
                      },
                      "_requiredBy": [
                        "/form-data",
                        "/request"
                      ],
                      "_resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
                      "_spec": "2.1.27",
                      "_where": "/path/to/project/packages/shared",
                      "bugs": {
                        "url": "https://github.com/jshttp/mime-types/issues"
                      },
                      "contributors": [
                        {
                          "name": "Douglas Christopher Wilson",
                          "email": "doug@somethingdoug.com"
                        },
                        {
                          "name": "Jeremiah Senkpiel",
                          "email": "fishrock123@rocketmail.com",
                          "url": "https://searchbeam.jit.su"
                        },
                        {
                          "name": "Jonathan Ong",
                          "email": "me@jongleberry.com",
                          "url": "http://jongleberry.com"
                        }
                      ],
                      "dependencies": {},
                      "description": "The ultimate javascript content-type utility.",
                      "devDependencies": {
                        "eslint": "6.8.0",
                        "eslint-config-standard": "14.1.1",
                        "eslint-plugin-import": "2.20.2",
                        "eslint-plugin-markdown": "1.0.2",
                        "eslint-plugin-node": "11.1.0",
                        "eslint-plugin-promise": "4.2.1",
                        "eslint-plugin-standard": "4.0.1",
                        "mocha": "7.1.1",
                        "nyc": "15.0.1"
                      },
                      "engines": {
                        "node": ">= 0.6"
                      },
                      "files": [
                        "HISTORY.md",
                        "LICENSE",
                        "index.js"
                      ],
                      "homepage": "https://github.com/jshttp/mime-types#readme",
                      "keywords": [
                        "mime",
                        "types"
                      ],
                      "license": "MIT",
                      "name": "mime-types",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/jshttp/mime-types.git"
                      },
                      "scripts": {
                        "lint": "eslint --plugin markdown --ext js,md .",
                        "test": "mocha --reporter spec test/test.js",
                        "test-cov": "nyc --reporter=html --reporter=text npm test",
                        "test-travis": "nyc --reporter=text npm test"
                      },
                      "version": "2.1.27",
                      "readme": "# mime-types\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nThe ultimate javascript content-type utility.\n\nSimilar to [the `mime@1.x` module](https://www.npmjs.com/package/mime), except:\n\n- __No fallbacks.__ Instead of naively returning the first available type,\n  `mime-types` simply returns `false`, so do\n  `var type = mime.lookup('unrecognized') || 'application/octet-stream'`.\n- No `new Mime()` business, so you could do `var lookup = require('mime-types').lookup`.\n- No `.define()` functionality\n- Bug fixes for `.lookup(path)`\n\nOtherwise, the API is compatible with `mime` 1.x.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install mime-types\n```\n\n## Adding Types\n\nAll mime types are based on [mime-db](https://www.npmjs.com/package/mime-db),\nso open a PR there if you'd like to add mime types.\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar mime = require('mime-types')\n```\n\nAll functions return `false` if input is invalid or not found.\n\n### mime.lookup(path)\n\nLookup the content-type associated with a file.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n```\n\n### mime.contentType(type)\n\nCreate a full content-type header given a content-type or extension.\nWhen given an extension, `mime.lookup` is used to get the matching\ncontent-type, otherwise the given content-type is used. Then if the\ncontent-type does not already have a `charset` parameter, `mime.charset`\nis used to get the default charset and add to the returned content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n```\n\n### mime.extension(type)\n\nGet the default extension for a content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.extension('application/octet-stream') // 'bin'\n```\n\n### mime.charset(type)\n\nLookup the implied default charset of a content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.charset('text/markdown') // 'UTF-8'\n```\n\n### var type = mime.types[extension]\n\nA map of content-types by extension.\n\n### [extensions...] = mime.extensions[type]\n\nA map of extensions by content-type.\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-types/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-types?branch=master\n[node-version-image]: https://badgen.net/npm/node/mime-types\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-types\n[npm-url]: https://npmjs.org/package/mime-types\n[npm-version-image]: https://badgen.net/npm/v/mime-types\n[travis-image]: https://badgen.net/travis/jshttp/mime-types/master\n[travis-url]: https://travis-ci.org/jshttp/mime-types\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "mime-db": "1.44.0"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/mime-types",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "mime-types"
                    }
                  },
                  "description": "A library to create readable \"multipart/form-data\" streams. Can be used to submit forms and file uploads to other web applications.",
                  "devDependencies": {
                    "browserify": "^13.1.1",
                    "browserify-istanbul": "^2.0.0",
                    "coveralls": "^2.11.14",
                    "cross-spawn": "^4.0.2",
                    "eslint": "^3.9.1",
                    "fake": "^0.2.2",
                    "far": "^0.0.7",
                    "formidable": "^1.0.17",
                    "in-publish": "^2.0.0",
                    "is-node-modern": "^1.0.0",
                    "istanbul": "^0.4.5",
                    "obake": "^0.1.2",
                    "phantomjs-prebuilt": "^2.1.13",
                    "pkgfiles": "^2.3.0",
                    "pre-commit": "^1.1.3",
                    "request": "2.76.0",
                    "rimraf": "^2.5.4",
                    "tape": "^4.6.2"
                  },
                  "engines": {
                    "node": ">= 0.12"
                  },
                  "homepage": "https://github.com/form-data/form-data#readme",
                  "license": "MIT",
                  "main": "./lib/form_data",
                  "name": "form-data",
                  "pre-commit": [
                    "lint",
                    "ci-test",
                    "check"
                  ],
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/form-data/form-data.git"
                  },
                  "scripts": {
                    "browser": "browserify -t browserify-istanbul test/run-browser.js | obake --coverage",
                    "check": "istanbul check-coverage coverage/coverage*.json",
                    "ci-lint": "is-node-modern 6 && npm run lint || is-node-not-modern 6",
                    "ci-test": "npm run test && npm run browser && npm run report",
                    "debug": "verbose=1 ./test/run.js",
                    "files": "pkgfiles --sort=name",
                    "get-version": "node -e \"console.log(require('./package.json').version)\"",
                    "lint": "eslint lib/*.js test/*.js test/integration/*.js",
                    "postpublish": "npm run restore-readme",
                    "posttest": "istanbul report lcov text",
                    "predebug": "rimraf coverage test/tmp",
                    "prepublish": "in-publish && npm run update-readme || not-in-publish",
                    "pretest": "rimraf coverage test/tmp",
                    "report": "istanbul report lcov text",
                    "restore-readme": "mv README.md.bak README.md",
                    "test": "istanbul cover test/run.js",
                    "update-readme": "sed -i.bak 's/\\/master\\.svg/\\/v'$(npm --silent run get-version)'.svg/g' README.md"
                  },
                  "version": "2.3.3",
                  "readme": "# Form-Data [![NPM Module](https://img.shields.io/npm/v/form-data.svg)](https://www.npmjs.com/package/form-data) [![Join the chat at https://gitter.im/form-data/form-data](http://form-data.github.io/images/gitterbadge.svg)](https://gitter.im/form-data/form-data)\n\nA library to create readable ```\"multipart/form-data\"``` streams. Can be used to submit forms and file uploads to other web applications.\n\nThe API of this library is inspired by the [XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n[![Linux Build](https://img.shields.io/travis/form-data/form-data/v2.3.3.svg?label=linux:4.x-9.x)](https://travis-ci.org/form-data/form-data)\n[![MacOS Build](https://img.shields.io/travis/form-data/form-data/v2.3.3.svg?label=macos:4.x-9.x)](https://travis-ci.org/form-data/form-data)\n[![Windows Build](https://img.shields.io/appveyor/ci/alexindigo/form-data/v2.3.3.svg?label=windows:4.x-9.x)](https://ci.appveyor.com/project/alexindigo/form-data)\n\n[![Coverage Status](https://img.shields.io/coveralls/form-data/form-data/v2.3.3.svg?label=code+coverage)](https://coveralls.io/github/form-data/form-data?branch=master)\n[![Dependency Status](https://img.shields.io/david/form-data/form-data.svg)](https://david-dm.org/form-data/form-data)\n[![bitHound Overall Score](https://www.bithound.io/github/form-data/form-data/badges/score.svg)](https://www.bithound.io/github/form-data/form-data)\n\n## Install\n\n```\nnpm install --save form-data\n```\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's [request](https://github.com/request/request) stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, call ```submit(url, [callback])``` method:\n\n``` javascript\nform.submit('http://example.org/', function(err, res) {\n  // res – response object (http.IncomingMessage)  //\n  res.resume();\n});\n\n```\n\nFor more advanced request manipulations ```submit()``` method returns ```http.ClientRequest``` object, or you can choose from one of the alternative submission methods.\n\n### Custom options\n\nYou can provide custom options, such as `maxDataSize`:\n\n``` javascript\nvar FormData = require('form-data');\n\nvar form = new FormData({ maxDataSize: 20971520 });\nform.append('my_field', 'my value');\nform.append('my_buffer', /* something big */);\n```\n\nList of available options could be found in [combined-stream](https://github.com/felixge/node-combined-stream/blob/master/lib/combined_stream.js#L7-L15)\n\n### Alternative submission methods\n\nYou can use node's http client interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData();\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options);\n\nform.submit('http://example.com/', function(err, res) {\n  if (err) throw err;\n  console.log('Done');\n});\n```\n\nForm-Data can recognize and fetch all the required information from common types of streams (```fs.readStream```, ```http.response``` and ```mikeal's request```), for some other types of streams you'd need to provide \"file\"-related information manually:\n\n``` javascript\nsomeModule.stream(function(err, stdout, stderr) {\n  if (err) throw err;\n\n  var form = new FormData();\n\n  form.append('file', stdout, {\n    filename: 'unicycle.jpg', // ... or:\n    filepath: 'photos/toys/unicycle.jpg',\n    contentType: 'image/jpeg',\n    knownLength: 19806\n  });\n\n  form.submit('http://example.com/', function(err, res) {\n    if (err) throw err;\n    console.log('Done');\n  });\n});\n```\n\nThe `filepath` property overrides `filename` and may contain a relative path. This is typically used when uploading [multiple files from a directory](https://wicg.github.io/entries-api/#dom-htmlinputelement-webkitdirectory).\n\nFor edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/probably.php?extra=params',\n  auth: 'username:password'\n}, function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nIn case you need to also send custom HTTP headers with the POST request, you can use the `headers` key in first parameter of `form.submit()`:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/surelynot.php',\n  headers: {'x-test-header': 'test-header-value'}\n}, function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n### Integration with other libraries\n\n#### Request\n\nForm submission using  [request](https://github.com/request/request):\n\n```javascript\nvar formData = {\n  my_field: 'my_value',\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n};\n\nrequest.post({url:'http://service.com/upload', formData: formData}, function(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});\n```\n\nFor more details see [request readme](https://github.com/request/request#multipartform-data-multipart-form-uploads).\n\n#### node-fetch\n\nYou can also submit a form using [node-fetch](https://github.com/bitinn/node-fetch):\n\n```javascript\nvar form = new FormData();\n\nform.append('a', 1);\n\nfetch('http://example.com', { method: 'POST', body: form })\n    .then(function(res) {\n        return res.json();\n    }).then(function(json) {\n        console.log(json);\n    });\n```\n\n## Notes\n\n- ```getLengthSync()``` method DOESN'T calculate length for streams, use ```knownLength``` options as workaround.\n- Starting version `2.x` FormData has dropped support for `node@0.10.x`.\n\n## License\n\nForm-Data is released under the [MIT](License) license.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "asynckit": "^0.4.0",
                    "combined-stream": "^1.0.6",
                    "mime-types": "^2.1.12"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/form-data",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "har-validator": {
                  "_args": [
                    [
                      "har-validator@5.1.3",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "har-validator@5.1.3",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "har-validator@5.1.3",
                  "_id": "har-validator@5.1.3",
                  "_integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
                  "_location": "/har-validator",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "har-validator@5.1.3",
                    "name": "har-validator",
                    "escapedName": "har-validator",
                    "rawSpec": "5.1.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.1.3"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
                  "_spec": "5.1.3",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Ahmad Nassri",
                    "email": "ahmad@ahmadnassri.com",
                    "url": "https://www.ahmadnassri.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/ahmadnassri/node-har-validator/issues"
                  },
                  "dependencies": {
                    "ajv": {
                      "_args": [
                        [
                          "ajv@6.12.2",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "ajv@6.12.2",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "ajv@6.12.2",
                      "_id": "ajv@6.12.2",
                      "_integrity": "sha512-k+V+hzjm5q/Mr8ef/1Y9goCmlsK4I6Sm74teeyGvFk1XrOsbsKLjEdrvny42CZ+a8sXbk8KWpY/bDwS+FLL2UQ==",
                      "_location": "/ajv",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "ajv@6.12.2",
                        "name": "ajv",
                        "escapedName": "ajv",
                        "rawSpec": "6.12.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "6.12.2"
                      },
                      "_requiredBy": [
                        "/har-validator"
                      ],
                      "_resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.2.tgz",
                      "_spec": "6.12.2",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Evgeny Poberezkin"
                      },
                      "bugs": {
                        "url": "https://github.com/epoberezkin/ajv/issues"
                      },
                      "collective": {
                        "type": "opencollective",
                        "url": "https://opencollective.com/ajv"
                      },
                      "dependencies": {
                        "fast-deep-equal": {
                          "_args": [
                            [
                              "fast-deep-equal@3.1.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "fast-deep-equal@3.1.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "fast-deep-equal@3.1.1",
                          "_id": "fast-deep-equal@3.1.1",
                          "_integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
                          "_location": "/fast-deep-equal",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "fast-deep-equal@3.1.1",
                            "name": "fast-deep-equal",
                            "escapedName": "fast-deep-equal",
                            "rawSpec": "3.1.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "3.1.1"
                          },
                          "_requiredBy": [
                            "/ajv"
                          ],
                          "_resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
                          "_spec": "3.1.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Evgeny Poberezkin"
                          },
                          "bugs": {
                            "url": "https://github.com/epoberezkin/fast-deep-equal/issues"
                          },
                          "description": "Fast deep equal",
                          "devDependencies": {
                            "coveralls": "^2.13.1",
                            "dot": "^1.1.2",
                            "eslint": "^4.0.0",
                            "mocha": "^3.4.2",
                            "nyc": "^11.0.2",
                            "pre-commit": "^1.2.2",
                            "react": "^16.12.0",
                            "react-test-renderer": "^16.12.0",
                            "sinon": "^7.5.0",
                            "typescript": "^2.6.1"
                          },
                          "files": [
                            "index.js",
                            "index.d.ts",
                            "react.js",
                            "react.d.ts",
                            "es6/"
                          ],
                          "homepage": "https://github.com/epoberezkin/fast-deep-equal#readme",
                          "keywords": [
                            "fast",
                            "equal",
                            "deep-equal"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "fast-deep-equal",
                          "nyc": {
                            "exclude": [
                              "**/spec/**",
                              "node_modules"
                            ],
                            "reporter": [
                              "lcov",
                              "text-summary"
                            ]
                          },
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/epoberezkin/fast-deep-equal.git"
                          },
                          "scripts": {
                            "benchmark": "npm i && npm run build && cd ./benchmark && npm i && node ./",
                            "build": "node build",
                            "eslint": "eslint *.js benchmark/*.js spec/*.js",
                            "prepublish": "npm run build",
                            "test": "npm run build && npm run eslint && npm run test-ts && npm run test-cov",
                            "test-cov": "nyc npm run test-spec",
                            "test-spec": "mocha spec/*.spec.js -R spec",
                            "test-ts": "tsc --target ES5 --noImplicitAny index.d.ts"
                          },
                          "types": "index.d.ts",
                          "version": "3.1.1",
                          "readme": "# fast-deep-equal\nThe fastest deep equal with ES6 Map, Set and Typed arrays support.\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-deep-equal.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-deep-equal)\n[![npm](https://img.shields.io/npm/v/fast-deep-equal.svg)](https://www.npmjs.com/package/fast-deep-equal)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-deep-equal/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-deep-equal?branch=master)\n\n\n## Install\n\n```bash\nnpm install fast-deep-equal\n```\n\n\n## Features\n\n- ES5 compatible\n- works in node.js (8+) and browsers (IE9+)\n- checks equality of Date and RegExp objects by value.\n\nES6 equal (`require('fast-deep-equal/es6')`) also supports:\n- Maps\n- Sets\n- Typed arrays\n\n\n## Usage\n\n```javascript\nvar equal = require('fast-deep-equal');\nconsole.log(equal({foo: 'bar'}, {foo: 'bar'})); // true\n```\n\nTo support ES6 Maps, Sets and Typed arrays equality use:\n\n```javascript\nvar equal = require('fast-deep-equal/es6');\nconsole.log(equal(Int16Array([1, 2]), Int16Array([1, 2]))); // true\n```\n\nTo use with React (avoiding the traversal of React elements' _owner\nproperty that contains circular references and is not needed when\ncomparing the elements - borrowed from [react-fast-compare](https://github.com/FormidableLabs/react-fast-compare)):\n\n```javascript\nvar equal = require('fast-deep-equal/react');\nvar equal = require('fast-deep-equal/es6/react');\n```\n\n\n## Performance benchmark\n\nNode.js v12.6.0:\n\n```\nfast-deep-equal x 261,950 ops/sec ±0.52% (89 runs sampled)\nfast-deep-equal/es6 x 212,991 ops/sec ±0.34% (92 runs sampled)\nfast-equals x 230,957 ops/sec ±0.83% (85 runs sampled)\nnano-equal x 187,995 ops/sec ±0.53% (88 runs sampled)\nshallow-equal-fuzzy x 138,302 ops/sec ±0.49% (90 runs sampled)\nunderscore.isEqual x 74,423 ops/sec ±0.38% (89 runs sampled)\nlodash.isEqual x 36,637 ops/sec ±0.72% (90 runs sampled)\ndeep-equal x 2,310 ops/sec ±0.37% (90 runs sampled)\ndeep-eql x 35,312 ops/sec ±0.67% (91 runs sampled)\nramda.equals x 12,054 ops/sec ±0.40% (91 runs sampled)\nutil.isDeepStrictEqual x 46,440 ops/sec ±0.43% (90 runs sampled)\nassert.deepStrictEqual x 456 ops/sec ±0.71% (88 runs sampled)\n\nThe fastest is fast-deep-equal\n```\n\nTo run benchmark (requires node.js 6+):\n\n```bash\nnpm run benchmark\n```\n\n__Please note__: this benchmark runs against the available test cases. To choose the most performant library for your application, it is recommended to benchmark against your data and to NOT expect this benchmark to reflect the performance difference in your application.\n\n\n## Enterprise support\n\nfast-deep-equal package is a part of [Tidelift enterprise subscription](https://tidelift.com/subscription/pkg/npm-fast-deep-equal?utm_source=npm-fast-deep-equal&utm_medium=referral&utm_campaign=enterprise&utm_term=repo) - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.\n\n\n## Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/fast-deep-equal/blob/master/LICENSE)\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/fast-deep-equal",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "fast-json-stable-stringify": {
                          "_args": [
                            [
                              "fast-json-stable-stringify@2.1.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "fast-json-stable-stringify@2.1.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "fast-json-stable-stringify@2.1.0",
                          "_id": "fast-json-stable-stringify@2.1.0",
                          "_integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
                          "_location": "/fast-json-stable-stringify",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "fast-json-stable-stringify@2.1.0",
                            "name": "fast-json-stable-stringify",
                            "escapedName": "fast-json-stable-stringify",
                            "rawSpec": "2.1.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "2.1.0"
                          },
                          "_requiredBy": [
                            "/ajv"
                          ],
                          "_resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
                          "_spec": "2.1.0",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "James Halliday",
                            "email": "mail@substack.net",
                            "url": "http://substack.net"
                          },
                          "bugs": {
                            "url": "https://github.com/epoberezkin/fast-json-stable-stringify/issues"
                          },
                          "dependencies": {},
                          "description": "deterministic `JSON.stringify()` - a faster version of substack's json-stable-strigify without jsonify",
                          "devDependencies": {
                            "benchmark": "^2.1.4",
                            "coveralls": "^3.0.0",
                            "eslint": "^6.7.0",
                            "fast-stable-stringify": "latest",
                            "faster-stable-stringify": "latest",
                            "json-stable-stringify": "latest",
                            "nyc": "^14.1.0",
                            "pre-commit": "^1.2.2",
                            "tape": "^4.11.0"
                          },
                          "homepage": "https://github.com/epoberezkin/fast-json-stable-stringify",
                          "keywords": [
                            "json",
                            "stringify",
                            "deterministic",
                            "hash",
                            "stable"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "fast-json-stable-stringify",
                          "nyc": {
                            "exclude": [
                              "test",
                              "node_modules"
                            ],
                            "reporter": [
                              "lcov",
                              "text-summary"
                            ]
                          },
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/epoberezkin/fast-json-stable-stringify.git"
                          },
                          "scripts": {
                            "eslint": "eslint index.js test",
                            "test": "npm run eslint && nyc npm run test-spec",
                            "test-spec": "tape test/*.js"
                          },
                          "types": "index.d.ts",
                          "version": "2.1.0",
                          "readme": "# fast-json-stable-stringify\n\nDeterministic `JSON.stringify()` - a faster version of [@substack](https://github.com/substack)'s json-stable-strigify without [jsonify](https://github.com/substack/jsonify).\n\nYou can also pass in a custom comparison function.\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-json-stable-stringify.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-json-stable-stringify)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-json-stable-stringify/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-json-stable-stringify?branch=master)\n\n# example\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n\n# methods\n\n``` js\nvar stringify = require('fast-json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### cycles\n\nPass `true` in `opts.cycles` to stringify circular property as `__cycle__` - the result will not be a valid JSON string in this case.\n\nTypeError will be thrown in case of circular object without this option.\n\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install fast-json-stable-stringify\n```\n\n\n# benchmark\n\nTo run benchmark (requires Node.js 6+):\n```\nnode benchmark\n```\n\nResults:\n```\nfast-json-stable-stringify x 17,189 ops/sec ±1.43% (83 runs sampled)\njson-stable-stringify x 13,634 ops/sec ±1.39% (85 runs sampled)\nfast-stable-stringify x 20,212 ops/sec ±1.20% (84 runs sampled)\nfaster-stable-stringify x 15,549 ops/sec ±1.12% (84 runs sampled)\nThe fastest is fast-stable-stringify\n```\n\n\n## Enterprise support\n\nfast-json-stable-stringify package is a part of [Tidelift enterprise subscription](https://tidelift.com/subscription/pkg/npm-fast-json-stable-stringify?utm_source=npm-fast-json-stable-stringify&utm_medium=referral&utm_campaign=enterprise&utm_term=repo) - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.\n\n\n## Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.\n\n\n# license\n\n[MIT](https://github.com/epoberezkin/fast-json-stable-stringify/blob/master/LICENSE)\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/fast-json-stable-stringify",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "json-schema-traverse": {
                          "_args": [
                            [
                              "json-schema-traverse@0.4.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "json-schema-traverse@0.4.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "json-schema-traverse@0.4.1",
                          "_id": "json-schema-traverse@0.4.1",
                          "_integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
                          "_location": "/json-schema-traverse",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "json-schema-traverse@0.4.1",
                            "name": "json-schema-traverse",
                            "escapedName": "json-schema-traverse",
                            "rawSpec": "0.4.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.4.1"
                          },
                          "_requiredBy": [
                            "/ajv"
                          ],
                          "_resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
                          "_spec": "0.4.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Evgeny Poberezkin"
                          },
                          "bugs": {
                            "url": "https://github.com/epoberezkin/json-schema-traverse/issues"
                          },
                          "description": "Traverse JSON Schema passing each schema object to callback",
                          "devDependencies": {
                            "coveralls": "^2.13.1",
                            "eslint": "^3.19.0",
                            "mocha": "^3.4.2",
                            "nyc": "^11.0.2",
                            "pre-commit": "^1.2.2"
                          },
                          "homepage": "https://github.com/epoberezkin/json-schema-traverse#readme",
                          "keywords": [
                            "JSON-Schema",
                            "traverse",
                            "iterate"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "json-schema-traverse",
                          "nyc": {
                            "exclude": [
                              "**/spec/**",
                              "node_modules"
                            ],
                            "reporter": [
                              "lcov",
                              "text-summary"
                            ]
                          },
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/epoberezkin/json-schema-traverse.git"
                          },
                          "scripts": {
                            "eslint": "eslint index.js spec",
                            "test": "npm run eslint && nyc npm run test-spec",
                            "test-spec": "mocha spec -R spec"
                          },
                          "version": "0.4.1",
                          "readme": "# json-schema-traverse\nTraverse JSON Schema passing each schema object to callback\n\n[![Build Status](https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master)](https://travis-ci.org/epoberezkin/json-schema-traverse)\n[![npm version](https://badge.fury.io/js/json-schema-traverse.svg)](https://www.npmjs.com/package/json-schema-traverse)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/json-schema-traverse?branch=master)\n\n\n## Install\n\n```\nnpm install json-schema-traverse\n```\n\n\n## Usage\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  properties: {\n    foo: {type: 'string'},\n    bar: {type: 'integer'}\n  }\n};\n\ntraverse(schema, {cb});\n// cb is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n\n// Or:\n\ntraverse(schema, {cb: {pre, post}});\n// pre is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n//\n// post is called 3 times with:\n// 1. {type: 'string'}\n// 2. {type: 'integer'}\n// 3. root schema\n\n```\n\nCallback function `cb` is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is.  Alternatively, you can pass a `{pre, post}` object as `cb`, and then `pre` will be called before traversing child elements, and `post` will be called after all child elements have been traversed.\n\nCallback is passed these parameters:\n\n- _schema_: the current schema object\n- _JSON pointer_: from the root schema to the current schema object\n- _root schema_: the schema passed to `traverse` object\n- _parent JSON pointer_: from the root schema to the parent schema object (see below)\n- _parent keyword_: the keyword inside which this schema appears (e.g. `properties`, `anyOf`, etc.)\n- _parent schema_: not necessarily parent object/array; in the example above the parent schema for `{type: 'string'}` is the root schema\n- _index/property_: index or property name in the array/object containing multiple schemas; in the example above for `{type: 'string'}` the property name is `'foo'`\n\n\n## Traverse objects in all unknown keywords\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  mySchema: {\n    minimum: 1,\n    maximum: 2\n  }\n};\n\ntraverse(schema, {allKeys: true, cb});\n// cb is called 2 times with:\n// 1. root schema\n// 2. mySchema\n```\n\nWithout option `allKeys: true` callback will be called only with root schema.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/json-schema-traverse/blob/master/LICENSE)\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/json-schema-traverse",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "uri-js": {
                          "_args": [
                            [
                              "uri-js@4.2.2",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "uri-js@4.2.2",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "uri-js@4.2.2",
                          "_id": "uri-js@4.2.2",
                          "_integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
                          "_location": "/uri-js",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "uri-js@4.2.2",
                            "name": "uri-js",
                            "escapedName": "uri-js",
                            "rawSpec": "4.2.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "4.2.2"
                          },
                          "_requiredBy": [
                            "/ajv"
                          ],
                          "_resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
                          "_spec": "4.2.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Gary Court",
                            "email": "gary.court@gmail.com"
                          },
                          "bugs": {
                            "url": "https://github.com/garycourt/uri-js/issues"
                          },
                          "dependencies": {
                            "punycode": {
                              "_args": [
                                [
                                  "punycode@2.1.1",
                                  "/path/to/project/packages/shared"
                                ],
                                [
                                  "punycode@2.1.1",
                                  "/path/to/project/packages/shared"
                                ]
                              ],
                              "_from": "punycode@2.1.1",
                              "_id": "punycode@2.1.1",
                              "_integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
                              "_location": "/uri-js/punycode",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "punycode@2.1.1",
                                "name": "punycode",
                                "escapedName": "punycode",
                                "rawSpec": "2.1.1",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "2.1.1"
                              },
                              "_requiredBy": [
                                "/uri-js"
                              ],
                              "_resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
                              "_spec": "2.1.1",
                              "_where": "/path/to/project/packages/shared",
                              "author": {
                                "name": "Mathias Bynens",
                                "url": "https://mathiasbynens.be/"
                              },
                              "bugs": {
                                "url": "https://github.com/bestiejs/punycode.js/issues"
                              },
                              "contributors": [
                                {
                                  "name": "Mathias Bynens",
                                  "url": "https://mathiasbynens.be/"
                                }
                              ],
                              "description": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.",
                              "devDependencies": {
                                "codecov": "^1.0.1",
                                "istanbul": "^0.4.1",
                                "mocha": "^2.5.3"
                              },
                              "engines": {
                                "node": ">=6"
                              },
                              "files": [
                                "LICENSE-MIT.txt",
                                "punycode.js",
                                "punycode.es6.js"
                              ],
                              "homepage": "https://mths.be/punycode",
                              "jsnext:main": "punycode.es6.js",
                              "jspm": {
                                "map": {
                                  "./punycode.js": {
                                    "node": "@node/punycode"
                                  }
                                }
                              },
                              "keywords": [
                                "punycode",
                                "unicode",
                                "idn",
                                "idna",
                                "dns",
                                "url",
                                "domain"
                              ],
                              "license": "MIT",
                              "main": "punycode.js",
                              "module": "punycode.es6.js",
                              "name": "punycode",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/bestiejs/punycode.js.git"
                              },
                              "scripts": {
                                "prepublish": "node scripts/prepublish.js",
                                "test": "mocha tests"
                              },
                              "version": "2.1.1",
                              "readme": "# Punycode.js [![Build status](https://travis-ci.org/bestiejs/punycode.js.svg?branch=master)](https://travis-ci.org/bestiejs/punycode.js) [![Code coverage status](http://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg)](https://codecov.io/gh/bestiejs/punycode.js) [![Dependency status](https://gemnasium.com/bestiejs/punycode.js.svg)](https://gemnasium.com/bestiejs/punycode.js)\n\nPunycode.js is a robust Punycode converter that fully complies to [RFC 3492](https://tools.ietf.org/html/rfc3492) and [RFC 5891](https://tools.ietf.org/html/rfc5891).\n\nThis JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:\n\n* [The C example code from RFC 3492](https://tools.ietf.org/html/rfc3492#appendix-C)\n* [`punycode.c` by _Markus W. Scherer_ (IBM)](http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c)\n* [`punycode.c` by _Ben Noordhuis_](https://github.com/bnoordhuis/punycode/blob/master/punycode.c)\n* [JavaScript implementation by _some_](http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287)\n* [`punycode.js` by _Ben Noordhuis_](https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js) (note: [not fully compliant](https://github.com/joyent/node/issues/2072))\n\nThis project was [bundled](https://github.com/joyent/node/blob/master/lib/punycode.js) with Node.js from [v0.6.2+](https://github.com/joyent/node/compare/975f1930b1...61e796decc) until [v7](https://github.com/nodejs/node/pull/7941) (soft-deprecated).\n\nThe current version supports recent versions of Node.js only. It provides a CommonJS module and an ES6 module. For the old version that offers the same functionality with broader support, including Rhino, Ringo, Narwhal, and web browsers, see [v1.4.1](https://github.com/bestiejs/punycode.js/releases/tag/v1.4.1).\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install punycode --save\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst punycode = require('punycode');\n```\n\n## API\n\n### `punycode.decode(string)`\n\nConverts a Punycode string of ASCII symbols to a string of Unicode symbols.\n\n```js\n// decode domain name parts\npunycode.decode('maana-pta'); // 'mañana'\npunycode.decode('--dqo34k'); // '☃-⌘'\n```\n\n### `punycode.encode(string)`\n\nConverts a string of Unicode symbols to a Punycode string of ASCII symbols.\n\n```js\n// encode domain name parts\npunycode.encode('mañana'); // 'maana-pta'\npunycode.encode('☃-⌘'); // '--dqo34k'\n```\n\n### `punycode.toUnicode(input)`\n\nConverts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn’t matter if you call it on a string that has already been converted to Unicode.\n\n```js\n// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// → 'mañana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// → '☃-⌘.com'\n\n// decode email addresses\npunycode.toUnicode('джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// → 'джумла@джpумлатест.bрфa'\n```\n\n### `punycode.toASCII(input)`\n\nConverts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn’t matter if you call it with a domain that’s already in ASCII.\n\n```js\n// encode domain names\npunycode.toASCII('mañana.com');\n// → 'xn--maana-pta.com'\npunycode.toASCII('☃-⌘.com');\n// → 'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('джумла@джpумлатест.bрфa');\n// → 'джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n```\n\n### `punycode.ucs2`\n\n#### `punycode.ucs2.decode(string)`\n\nCreates an array containing the numeric code point values of each Unicode symbol in the string. While [JavaScript uses UCS-2 internally](https://mathiasbynens.be/notes/javascript-encoding), this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\n\n```js\npunycode.ucs2.decode('abc');\n// → [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// → [0x1D306]\n```\n\n#### `punycode.ucs2.encode(codePoints)`\n\nCreates a string based on an array of numeric code point values.\n\n```js\npunycode.ucs2.encode([0x61, 0x62, 0x63]);\n// → 'abc'\npunycode.ucs2.encode([0x1D306]);\n// → '\\uD834\\uDF06'\n```\n\n### `punycode.version`\n\nA string representing the current Punycode.js version number.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nPunycode.js is available under the [MIT](https://mths.be/mit) license.\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/path/to/project/packages/shared/node_modules/uri-js/node_modules/punycode",
                              "error": "[Circular]",
                              "extraneous": false
                            }
                          },
                          "description": "An RFC 3986/3987 compliant, scheme extendable URI/IRI parsing/validating/resolving library for JavaScript.",
                          "devDependencies": {
                            "babel-cli": "^6.26.0",
                            "babel-plugin-external-helpers": "^6.22.0",
                            "babel-preset-latest": "^6.24.1",
                            "mocha": "^3.2.0",
                            "mocha-qunit-ui": "^0.1.3",
                            "rollup": "^0.41.6",
                            "rollup-plugin-babel": "^2.7.1",
                            "rollup-plugin-node-resolve": "^2.0.0",
                            "sorcery": "^0.10.0",
                            "typescript": "^2.8.1",
                            "uglify-js": "^2.8.14"
                          },
                          "directories": {
                            "test": "tests"
                          },
                          "homepage": "https://github.com/garycourt/uri-js",
                          "keywords": [
                            "URI",
                            "IRI",
                            "IDN",
                            "URN",
                            "UUID",
                            "HTTP",
                            "HTTPS",
                            "MAILTO",
                            "RFC3986",
                            "RFC3987",
                            "RFC5891",
                            "RFC2616",
                            "RFC2818",
                            "RFC2141",
                            "RFC4122",
                            "RFC4291",
                            "RFC5952",
                            "RFC6068",
                            "RFC6874"
                          ],
                          "license": "BSD-2-Clause",
                          "main": "dist/es5/uri.all.js",
                          "name": "uri-js",
                          "repository": {
                            "type": "git",
                            "url": "git+ssh://git@github.com/garycourt/uri-js.git"
                          },
                          "scripts": {
                            "build": "npm run build:esnext && npm run build:es5 && npm run build:es5:min",
                            "build:es5": "rollup -c && cp dist/esnext/uri.d.ts dist/es5/uri.all.d.ts && npm run build:es5:fix-sourcemap",
                            "build:es5:fix-sourcemap": "sorcery -i dist/es5/uri.all.js",
                            "build:es5:min": "uglifyjs dist/es5/uri.all.js --support-ie8 --output dist/es5/uri.all.min.js --in-source-map dist/es5/uri.all.js.map --source-map uri.all.min.js.map --comments --compress --mangle --pure-funcs merge subexp  && mv uri.all.min.js.map dist/es5/ && cp dist/es5/uri.all.d.ts dist/es5/uri.all.min.d.ts",
                            "build:esnext": "tsc",
                            "test": "mocha -u mocha-qunit-ui dist/es5/uri.all.js tests/tests.js"
                          },
                          "types": "dist/es5/uri.all.d.ts",
                          "version": "4.2.2",
                          "readme": "# URI.js\n\nURI.js is an [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt) compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc).\nIt is also compliant with the IRI ([RFC 3987](http://www.ietf.org/rfc/rfc3987.txt)), IDNA ([RFC 5890](http://www.ietf.org/rfc/rfc5890.txt)), IPv6 Address ([RFC 5952](http://www.ietf.org/rfc/rfc5952.txt)), IPv6 Zone Identifier ([RFC 6874](http://www.ietf.org/rfc/rfc6874.txt)) specifications.\n\nURI.js has an extensive test suite, and works in all (Node.js, web) environments. It weighs in at 6.2kb (gzipped, 16kb deflated).\n\n## API\n\n### Parsing\n\n\tURI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\");\n\t//returns:\n\t//{\n\t//  scheme : \"uri\",\n\t//  userinfo : \"user:pass\",\n\t//  host : \"example.com\",\n\t//  port : 123,\n\t//  path : \"/one/two.three\",\n\t//  query : \"q1=a1&q2=a2\",\n\t//  fragment : \"body\"\n\t//}\n\n### Serializing\n\n\tURI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\"\n\n### Resolving\n\n\tURI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\"\n\n### Normalizing\n\n\tURI.normalize(\"HTTP://ABC.com:80/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\"\n\n### Comparison\n\n\tURI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true\n\n### IP Support\n\n\t//IPv4 normalization\n\tURI.normalize(\"//192.068.001.000\") === \"//192.68.1.0\"\n\n\t//IPv6 normalization\n\tURI.normalize(\"//[2001:0:0DB8::0:0001]\") === \"//[2001:0:db8::1]\"\n\n\t//IPv6 zone identifier support\n\tURI.parse(\"//[2001:db8::7%25en1]\");\n\t//returns:\n\t//{\n\t//  host : \"2001:db8::7%en1\"\n\t//}\n\n### IRI Support\n\n\t//convert IRI to URI\n\tURI.serialize(URI.parse(\"http://examplé.org/rosé\")) === \"http://xn--exampl-gva.org/ros%C3%A9\"\n\t//convert URI to IRI\n\tURI.serialize(URI.parse(\"http://xn--exampl-gva.org/ros%C3%A9\"), {iri:true}) === \"http://examplé.org/rosé\"\n\n### Options\n\nAll of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties:\n\n*\t`scheme` (string)\n\n\tIndicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior.\n\n*\t`reference` (string)\n\n\tIf set to `\"suffix\"`, it indicates that the URI is in the suffix format, and the validator will use the option's `scheme` property to determine the URI's scheme.\n\n*\t`tolerant` (boolean, false)\n\n\tIf set to `true`, the parser will relax URI resolving rules.\n\n*\t`absolutePath` (boolean, false)\n\n\tIf set to `true`, the serializer will not resolve a relative `path` component.\n\n*\t`iri` (boolean, false)\n\n\tIf set to `true`, the serializer will unescape non-ASCII characters as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`unicodeSupport` (boolean, false)\n\n\tIf set to `true`, the parser will unescape non-ASCII characters in the parsed output as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`domainHost` (boolean, false)\n\n\tIf set to `true`, the library will treat the `host` component as a domain name, and convert IDNs (International Domain Names) as per [RFC 5891](http://www.ietf.org/rfc/rfc5891.txt).\n\n## Scheme Extendable\n\nURI.js supports inserting custom [scheme](http://en.wikipedia.org/wiki/URI_scheme) dependent processing rules. Currently, URI.js has built in support for the following schemes:\n\n*\thttp \\[[RFC 2616](http://www.ietf.org/rfc/rfc2616.txt)\\]\n*\thttps \\[[RFC 2818](http://www.ietf.org/rfc/rfc2818.txt)\\]\n*\tmailto \\[[RFC 6068](http://www.ietf.org/rfc/rfc6068.txt)\\]\n*\turn \\[[RFC 2141](http://www.ietf.org/rfc/rfc2141.txt)\\]\n*\turn:uuid \\[[RFC 4122](http://www.ietf.org/rfc/rfc4122.txt)\\]\n\n### HTTP Support\n\n\tURI.equal(\"HTTP://ABC.COM:80\", \"http://abc.com/\") === true\n\n### Mailto Support\n\n\tURI.parse(\"mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!\");\n\t//returns:\n\t//{\n\t//\tscheme : \"mailto\",\n\t//\tto : [\"alpha@example.com\", \"bravo@example.com\"],\n\t//\tsubject : \"SUBSCRIBE\",\n\t//\tbody : \"Sign me up!\"\n\t//}\n\n\tURI.serialize({\n\t\tscheme : \"mailto\",\n\t\tto : [\"alpha@example.com\"],\n\t\tsubject : \"REMOVE\",\n\t\tbody : \"Please remove me\",\n\t\theaders : {\n\t\t\tcc : \"charlie@example.com\"\n\t\t}\n\t}) === \"mailto:alpha@example.com?cc=charlie@example.com&subject=REMOVE&body=Please%20remove%20me\"\n\n### URN Support\n\n\tURI.parse(\"urn:example:foo\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tnss : \"foo\",\n\t//}\n\n#### URN UUID Support\n\n\tURI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tuuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\",\n\t//}\n\n## Usage\n\nTo load in a browser, use the following tag:\n\n\t<script type=\"text/javascript\" src=\"uri-js/dist/es5/uri.all.min.js\"></script>\n\nTo load in a CommonJS (Node.js) environment, first install with npm by running on the command line:\n\n\tnpm install uri-js\n\nThen, in your code, load it using:\n\n\tconst URI = require(\"uri-js\");\n\nIf you are writing your code in ES6+ (ESNEXT) or TypeScript, you would load it using:\n\n\timport * as URI from \"uri-js\";\n\nOr you can load just what you need using named exports:\n\n\timport { parse, serialize, resolve, resolveComponents, normalize, equal, removeDotSegments, pctEncChar, pctDecChars, escapeComponent, unescapeComponent } from \"uri-js\";\n\n## Breaking changes\n\n### Breaking changes from 3.x\n\nURN parsing has been completely changed to better align with the specification. Scheme is now always `urn`, but has two new properties: `nid` which contains the Namspace Identifier, and `nss` which contains the Namespace Specific String. The `nss` property will be removed by higher order scheme handlers, such as the UUID URN scheme handler.\n\nThe UUID of a URN can now be found in the `uuid` property.\n\n### Breaking changes from 2.x\n\nURI validation has been removed as it was slow, exposed a vulnerabilty, and was generally not useful.\n\n### Breaking changes from 1.x\n\nThe `errors` array on parsed components is now an `error` string.\n\n## License ([Simplified BSD](http://en.wikipedia.org/wiki/BSD_licenses#2-clause))\n\nCopyright 2011 Gary Court. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1.\tRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2.\tRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY GARY COURT \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Gary Court.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "punycode": "^2.1.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/uri-js",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Another JSON Schema Validator",
                      "devDependencies": {
                        "ajv-async": "^1.0.0",
                        "bluebird": "^3.5.3",
                        "brfs": "^2.0.0",
                        "browserify": "^16.2.0",
                        "chai": "^4.0.1",
                        "coveralls": "^3.0.1",
                        "del-cli": "^3.0.0",
                        "dot": "^1.0.3",
                        "eslint": "^6.0.0",
                        "gh-pages-generator": "^0.2.3",
                        "glob": "^7.0.0",
                        "if-node-version": "^1.0.0",
                        "js-beautify": "^1.7.3",
                        "jshint": "^2.10.2",
                        "json-schema-test": "^2.0.0",
                        "karma": "^5.0.0",
                        "karma-chrome-launcher": "^3.0.0",
                        "karma-mocha": "^2.0.0",
                        "karma-sauce-launcher": "^4.1.3",
                        "mocha": "^7.0.1",
                        "nyc": "^15.0.0",
                        "pre-commit": "^1.1.1",
                        "require-globify": "^1.3.0",
                        "typescript": "^2.8.3",
                        "uglify-js": "^3.6.9",
                        "watch": "^1.0.0"
                      },
                      "files": [
                        "lib/",
                        "dist/",
                        "scripts/",
                        "LICENSE",
                        ".tonic_example.js"
                      ],
                      "homepage": "https://github.com/epoberezkin/ajv",
                      "keywords": [
                        "JSON",
                        "schema",
                        "validator",
                        "validation",
                        "jsonschema",
                        "json-schema",
                        "json-schema-validator",
                        "json-schema-validation"
                      ],
                      "license": "MIT",
                      "main": "lib/ajv.js",
                      "name": "ajv",
                      "nyc": {
                        "exclude": [
                          "**/spec/**",
                          "node_modules"
                        ],
                        "reporter": [
                          "lcov",
                          "text-summary"
                        ]
                      },
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/epoberezkin/ajv.git"
                      },
                      "scripts": {
                        "build": "del-cli lib/dotjs/*.js \"!lib/dotjs/index.js\" && node scripts/compile-dots.js",
                        "bundle": "del-cli dist && node ./scripts/bundle.js . Ajv pure_getters",
                        "bundle-beautify": "node ./scripts/bundle.js js-beautify",
                        "eslint": "eslint lib/{compile/,}*.js spec/{**/,}*.js scripts --ignore-pattern spec/JSON-Schema-Test-Suite",
                        "jshint": "jshint lib/{compile/,}*.js",
                        "lint": "npm run jshint && npm run eslint",
                        "prepublish": "npm run build && npm run bundle",
                        "test": "npm run lint && npm run build && npm run test-all",
                        "test-all": "npm run test-cov && if-node-version 10 npm run test-browser",
                        "test-browser": "del-cli .browser && npm run bundle && scripts/prepare-tests && npm run test-karma",
                        "test-cov": "nyc npm run test-spec",
                        "test-debug": "npm run test-spec -- --inspect-brk",
                        "test-fast": "AJV_FAST_TEST=true npm run test-spec",
                        "test-karma": "karma start",
                        "test-spec": "mocha spec/{**/,}*.spec.js -R spec",
                        "test-ts": "tsc --target ES5 --noImplicitAny --noEmit spec/typescript/index.ts",
                        "watch": "watch \"npm run build\" ./lib/dot"
                      },
                      "tonicExampleFilename": ".tonic_example.js",
                      "typings": "lib/ajv.d.ts",
                      "version": "6.12.2",
                      "readme": "<img align=\"right\" alt=\"Ajv logo\" width=\"160\" src=\"http://epoberezkin.github.io/ajv/images/ajv_logo.png\">\n\n# Ajv: Another JSON Schema Validator\n\nThe fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv)\n[![npm](https://img.shields.io/npm/v/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![npm downloads](https://img.shields.io/npm/dm/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![Coverage Status](https://coveralls.io/repos/epoberezkin/ajv/badge.svg?branch=master&service=github)](https://coveralls.io/github/epoberezkin/ajv?branch=master)\n[![Gitter](https://img.shields.io/gitter/room/ajv-validator/ajv.svg)](https://gitter.im/ajv-validator/ajv)\n[![GitHub Sponsors](https://img.shields.io/badge/$-sponsors-brightgreen)](https://github.com/sponsors/epoberezkin)\n\n## Please [sponsor Ajv](https://github.com/sponsors/epoberezkin)\n\nDear Ajv users! ❤️\n\nI ask you to support the development of Ajv with donations. 🙏\n\nSince 2015 Ajv has become widely used, thanks to your help and contributions:\n\n- **90** contributors 🏗\n- **5,000** dependent npm packages ⚙️\n- **7,000** github stars, from GitHub users [all over the world](https://www.google.com/maps/d/u/0/viewer?mid=1MGRV8ciFUGIbO1l0EKFWNJGYE7iSkDxP&ll=-3.81666561775622e-14%2C4.821737100000007&z=2) ⭐️\n- **5,000,000** dependent repositories on GitHub 🚀\n- **120,000,000** npm downloads per month! 💯\n\nYour donations will fund futher development - small and large improvements, support of the next versions of JSON Schema specification, and, possibly, the code should be migrated to TypeScript to make it more maintainable.\n\nI will greatly appreciate anything you can help with to make it happen:\n\n- a **personal** donation - from $2 ☕️\n- your **company** donation - from $10 🍔\n- a **sponsorship** to get promoted on Ajv or related packages - from $50 💰\n- an **introduction** to a sponsor who would benefit from the promotion on Ajv page 🤝\n\n| Please [make donations via my GitHub sponsors page](https://github.com/sponsors/epoberezkin)<br>‼️ **GitHub will DOUBLE them** ‼️ |\n|---|\n\n#### Open Collective sponsors\n\n<a href=\"https://opencollective.com/ajv\"><img src=\"https://opencollective.com/ajv/individuals.svg?width=890\"></a>\n\n<a href=\"https://opencollective.com/ajv/organization/0/website\"><img src=\"https://opencollective.com/ajv/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/1/website\"><img src=\"https://opencollective.com/ajv/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/2/website\"><img src=\"https://opencollective.com/ajv/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/3/website\"><img src=\"https://opencollective.com/ajv/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/4/website\"><img src=\"https://opencollective.com/ajv/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/5/website\"><img src=\"https://opencollective.com/ajv/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/6/website\"><img src=\"https://opencollective.com/ajv/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/7/website\"><img src=\"https://opencollective.com/ajv/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/8/website\"><img src=\"https://opencollective.com/ajv/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/ajv/organization/9/website\"><img src=\"https://opencollective.com/ajv/organization/9/avatar.svg\"></a>\n\n\n## Using version 6\n\n[JSON Schema draft-07](http://json-schema.org/latest/json-schema-validation.html) is published.\n\n[Ajv version 6.0.0](https://github.com/epoberezkin/ajv/releases/tag/v6.0.0) that supports draft-07 is released. It may require either migrating your schemas or updating your code (to continue using draft-04 and v5 schemas, draft-06 schemas will be supported without changes).\n\n__Please note__: To use Ajv with draft-06 schemas you need to explicitly add the meta-schema to the validator instance:\n\n```javascript\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n```\n\nTo use Ajv with draft-04 schemas in addition to explicitly adding meta-schema you also need to use option schemaId:\n\n```javascript\nvar ajv = new Ajv({schemaId: 'id'});\n// If you want to use both draft-04 and draft-06/07 schemas:\n// var ajv = new Ajv({schemaId: 'auto'});\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json'));\n```\n\n\n## Contents\n\n- [Performance](#performance)\n- [Features](#features)\n- [Getting started](#getting-started)\n- [Frequently Asked Questions](https://github.com/epoberezkin/ajv/blob/master/FAQ.md)\n- [Using in browser](#using-in-browser)\n- [Command line interface](#command-line-interface)\n- Validation\n  - [Keywords](#validation-keywords)\n  - [Annotation keywords](#annotation-keywords)\n  - [Formats](#formats)\n  - [Combining schemas with $ref](#ref)\n  - [$data reference](#data-reference)\n  - NEW: [$merge and $patch keywords](#merge-and-patch-keywords)\n  - [Defining custom keywords](#defining-custom-keywords)\n  - [Asynchronous schema compilation](#asynchronous-schema-compilation)\n  - [Asynchronous validation](#asynchronous-validation)\n- [Security considerations](#security-considerations)\n  - [Security contact](#security-contact)\n  - [Untrusted schemas](#untrusted-schemas)\n  - [Circular references in objects](#circular-references-in-javascript-objects)\n  - [Trusted schemas](#security-risks-of-trusted-schemas)\n  - [ReDoS attack](#redos-attack)\n- Modifying data during validation\n  - [Filtering data](#filtering-data)\n  - [Assigning defaults](#assigning-defaults)\n  - [Coercing data types](#coercing-data-types)\n- API\n  - [Methods](#api)\n  - [Options](#options)\n  - [Validation errors](#validation-errors)\n- [Plugins](#plugins)\n- [Related packages](#related-packages)\n- [Some packages using Ajv](#some-packages-using-ajv)\n- [Tests, Contributing, History, Support, License](#tests)\n\n\n## Performance\n\nAjv generates code using [doT templates](https://github.com/olado/doT) to turn JSON Schemas into super-fast validation functions that are efficient for v8 optimization.\n\nCurrently Ajv is the fastest and the most standard compliant validator according to these benchmarks:\n\n- [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark) - 50% faster than the second place\n- [jsck benchmark](https://github.com/pandastrike/jsck#benchmarks) - 20-190% faster\n- [z-schema benchmark](https://rawgit.com/zaggino/z-schema/master/benchmark/results.html)\n- [themis benchmark](https://cdn.rawgit.com/playlyfe/themis/master/benchmark/results.html)\n\n\nPerformance of different validators by [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark):\n\n[![performance](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh=32,4,1&chs=600x416&chxl=-1:|djv|ajv|json-schema-validator-generator|jsen|is-my-json-valid|themis|z-schema|jsck|skeemas|json-schema-library|tv4&chd=t:100,98,72.1,66.8,50.1,15.1,6.1,3.8,1.2,0.7,0.2)](https://github.com/ebdrup/json-schema-benchmark/blob/master/README.md#performance)\n\n\n## Features\n\n- Ajv implements full JSON Schema [draft-06/07](http://json-schema.org/) and draft-04 standards:\n  - all validation keywords (see [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md))\n  - full support of remote refs (remote schemas have to be added with `addSchema` or compiled to be available)\n  - support of circular references between schemas\n  - correct string lengths for strings with unicode pairs (can be turned off)\n  - [formats](#formats) defined by JSON Schema draft-07 standard and custom formats (can be turned off)\n  - [validates schemas against meta-schema](#api-validateschema)\n- supports [browsers](#using-in-browser) and Node.js 0.10-8.x\n- [asynchronous loading](#asynchronous-schema-compilation) of referenced schemas during compilation\n- \"All errors\" validation mode with [option allErrors](#options)\n- [error messages with parameters](#validation-errors) describing error reasons to allow creating custom error messages\n- i18n error messages support with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package\n- [filtering data](#filtering-data) from additional properties\n- [assigning defaults](#assigning-defaults) to missing properties and items\n- [coercing data](#coercing-data-types) to the types specified in `type` keywords\n- [custom keywords](#defining-custom-keywords)\n- draft-06/07 keywords `const`, `contains`, `propertyNames` and `if/then/else`\n- draft-06 boolean schemas (`true`/`false` as a schema to always pass/fail).\n- keywords `switch`, `patternRequired`, `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum` from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) with [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package\n- [$data reference](#data-reference) to use values from the validated data as values for the schema keywords\n- [asynchronous validation](#asynchronous-validation) of custom formats and keywords\n\nCurrently Ajv is the only validator that passes all the tests from [JSON Schema Test Suite](https://github.com/json-schema/JSON-Schema-Test-Suite) (according to [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark), apart from the test that requires that `1.0` is not an integer that is impossible to satisfy in JavaScript).\n\n\n## Install\n\n```\nnpm install ajv\n```\n\n\n## <a name=\"usage\"></a>Getting started\n\nTry it in the Node.js REPL: https://tonicdev.com/npm/ajv\n\n\nThe fastest validation call:\n\n```javascript\n// Node.js require:\nvar Ajv = require('ajv');\n// or ESM/TypeScript import\nimport Ajv from 'ajv';\n\nvar ajv = new Ajv(); // options can be passed, e.g. {allErrors: true}\nvar validate = ajv.compile(schema);\nvar valid = validate(data);\nif (!valid) console.log(validate.errors);\n```\n\nor with less code\n\n```javascript\n// ...\nvar valid = ajv.validate(schema, data);\nif (!valid) console.log(ajv.errors);\n// ...\n```\n\nor\n\n```javascript\n// ...\nvar valid = ajv.addSchema(schema, 'mySchema')\n               .validate('mySchema', data);\nif (!valid) console.log(ajv.errorsText());\n// ...\n```\n\nSee [API](#api) and [Options](#options) for more details.\n\nAjv compiles schemas to functions and caches them in all cases (using schema serialized with [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) or a custom function as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again.\n\nThe best performance is achieved when using compiled functions returned by `compile` or `getSchema` methods (there is no additional function call).\n\n__Please note__: every time a validation function or `ajv.validate` are called `errors` property is overwritten. You need to copy `errors` array reference to another variable if you want to use it later (e.g., in the callback). See [Validation errors](#validation-errors)\n\n__Note for TypeScript users__: `ajv` provides its own TypeScript declarations\nout of the box, so you don't need to install the deprecated `@types/ajv`\nmodule.\n\n\n## Using in browser\n\nYou can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle.\n\nIf you need to use Ajv in several bundles you can create a separate UMD bundle using `npm run bundle` script (thanks to [siddo420](https://github.com/siddo420)).\n\nThen you need to load Ajv in the browser:\n```html\n<script src=\"ajv.min.js\"></script>\n```\n\nThis bundle can be used with different module systems; it creates global `Ajv` if no module system is found.\n\nThe browser bundle is available on [cdnjs](https://cdnjs.com/libraries/ajv).\n\nAjv is tested with these browsers:\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/epoberezkin.svg)](https://saucelabs.com/u/epoberezkin)\n\n__Please note__: some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue [#234](https://github.com/epoberezkin/ajv/issues/234)).\n\n\n## Command line interface\n\nCLI is available as a separate npm package [ajv-cli](https://github.com/jessedc/ajv-cli). It supports:\n\n- compiling JSON Schemas to test their validity\n- BETA: generating standalone module exporting a validation function to be used without Ajv (using [ajv-pack](https://github.com/epoberezkin/ajv-pack))\n- migrate schemas to draft-07 (using [json-schema-migrate](https://github.com/epoberezkin/json-schema-migrate))\n- validating data file(s) against JSON Schema\n- testing expected validity of data against JSON Schema\n- referenced schemas\n- custom meta-schemas\n- files in JSON and JavaScript format\n- all Ajv options\n- reporting changes in data after validation in [JSON-patch](https://tools.ietf.org/html/rfc6902) format\n\n\n## Validation keywords\n\nAjv supports all validation keywords from draft-07 of JSON Schema standard:\n\n- [type](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#type)\n- [for numbers](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-numbers) - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf\n- [for strings](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-strings) - maxLength, minLength, pattern, format\n- [for arrays](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-arrays) - maxItems, minItems, uniqueItems, items, additionalItems, [contains](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#contains)\n- [for objects](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-objects) - maxProperties, minProperties, required, properties, patternProperties, additionalProperties, dependencies, [propertyNames](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#propertynames)\n- [for all types](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-all-types) - enum, [const](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#const)\n- [compound keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#compound-keywords) - not, oneOf, anyOf, allOf, [if/then/else](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#ifthenelse)\n\nWith [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package Ajv also supports validation keywords from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) for JSON Schema standard:\n\n- [patternRequired](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#patternrequired-proposed) - like `required` but with patterns that some property should match.\n- [formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#formatmaximum--formatminimum-and-exclusiveformatmaximum--exclusiveformatminimum-proposed) - setting limits for date, time, etc.\n\nSee [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md) for more details.\n\n\n## Annotation keywords\n\nJSON Schema specification defines several annotation keywords that describe schema itself but do not perform any validation.\n\n- `title` and `description`: information about the data represented by that schema\n- `$comment` (NEW in draft-07): information for developers. With option `$comment` Ajv logs or passes the comment string to the user-supplied function. See [Options](#options).\n- `default`: a default value of the data instance, see [Assigning defaults](#assigning-defaults).\n- `examples` (NEW in draft-06): an array of data instances. Ajv does not check the validity of these instances against the schema.\n- `readOnly` and `writeOnly` (NEW in draft-07): marks data-instance as read-only or write-only in relation to the source of the data (database, api, etc.).\n- `contentEncoding`: [RFC 2045](https://tools.ietf.org/html/rfc2045#section-6.1 ), e.g., \"base64\".\n- `contentMediaType`: [RFC 2046](https://tools.ietf.org/html/rfc2046), e.g., \"image/png\".\n\n__Please note__:  Ajv does not implement validation of the keywords `examples`, `contentEncoding` and `contentMediaType` but it reserves them. If you want to create a plugin that implements some of them, it should remove these keywords from the instance.\n\n\n## Formats\n\nAjv implements formats defined by JSON Schema specification and several other formats. It is recommended NOT to use \"format\" keyword implementations with untrusted data, as they use potentially unsafe regular expressions - see [ReDoS attack](#redos-attack).\n\n__Please note__: if you need to use \"format\" keyword to validate untrusted data, you MUST assess their suitability and safety for your validation scenarios.\n\nThe following formats are implemented for string validation with \"format\" keyword:\n\n- _date_: full-date according to [RFC3339](http://tools.ietf.org/html/rfc3339#section-5.6).\n- _time_: time with optional time-zone.\n- _date-time_: date-time from the same source (time-zone is mandatory). `date`, `time` and `date-time` validate ranges in `full` mode and only regexp in `fast` mode (see [options](#options)).\n- _uri_: full URI.\n- _uri-reference_: URI reference, including full and relative URIs.\n- _uri-template_: URI template according to [RFC6570](https://tools.ietf.org/html/rfc6570)\n- _url_ (deprecated): [URL record](https://url.spec.whatwg.org/#concept-url).\n- _email_: email address.\n- _hostname_: host name according to [RFC1034](http://tools.ietf.org/html/rfc1034#section-3.5).\n- _ipv4_: IP address v4.\n- _ipv6_: IP address v6.\n- _regex_: tests whether a string is a valid regular expression by passing it to RegExp constructor.\n- _uuid_: Universally Unique IDentifier according to [RFC4122](http://tools.ietf.org/html/rfc4122).\n- _json-pointer_: JSON-pointer according to [RFC6901](https://tools.ietf.org/html/rfc6901).\n- _relative-json-pointer_: relative JSON-pointer according to [this draft](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00).\n\n__Please note__: JSON Schema draft-07 also defines formats `iri`, `iri-reference`, `idn-hostname` and `idn-email` for URLs, hostnames and emails with international characters. Ajv does not implement these formats. If you create Ajv plugin that implements them please make a PR to mention this plugin here.\n\nThere are two modes of format validation: `fast` and `full`. This mode affects formats `date`, `time`, `date-time`, `uri`, `uri-reference`, and `email`. See [Options](#options) for details.\n\nYou can add additional formats and replace any of the formats above using [addFormat](#api-addformat) method.\n\nThe option `unknownFormats` allows changing the default behaviour when an unknown format is encountered. In this case Ajv can either fail schema compilation (default) or ignore it (default in versions before 5.0.0). You also can whitelist specific format(s) to be ignored. See [Options](#options) for details.\n\nYou can find regular expressions used for format validation and the sources that were used in [formats.js](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js).\n\n\n## <a name=\"ref\"></a>Combining schemas with $ref\n\nYou can structure your validation logic across multiple schema files and have schemas reference each other using `$ref` keyword.\n\nExample:\n\n```javascript\nvar schema = {\n  \"$id\": \"http://example.com/schemas/schema.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"$ref\": \"defs.json#/definitions/int\" },\n    \"bar\": { \"$ref\": \"defs.json#/definitions/str\" }\n  }\n};\n\nvar defsSchema = {\n  \"$id\": \"http://example.com/schemas/defs.json\",\n  \"definitions\": {\n    \"int\": { \"type\": \"integer\" },\n    \"str\": { \"type\": \"string\" }\n  }\n};\n```\n\nNow to compile your schema you can either pass all schemas to Ajv instance:\n\n```javascript\nvar ajv = new Ajv({schemas: [schema, defsSchema]});\nvar validate = ajv.getSchema('http://example.com/schemas/schema.json');\n```\n\nor use `addSchema` method:\n\n```javascript\nvar ajv = new Ajv;\nvar validate = ajv.addSchema(defsSchema)\n                  .compile(schema);\n```\n\nSee [Options](#options) and [addSchema](#api) method.\n\n__Please note__:\n- `$ref` is resolved as the uri-reference using schema $id as the base URI (see the example).\n- References can be recursive (and mutually recursive) to implement the schemas for different data structures (such as linked lists, trees, graphs, etc.).\n- You don't have to host your schema files at the URIs that you use as schema $id. These URIs are only used to identify the schemas, and according to JSON Schema specification validators should not expect to be able to download the schemas from these URIs.\n- The actual location of the schema file in the file system is not used.\n- You can pass the identifier of the schema as the second parameter of `addSchema` method or as a property name in `schemas` option. This identifier can be used instead of (or in addition to) schema $id.\n- You cannot have the same $id (or the schema identifier) used for more than one schema - the exception will be thrown.\n- You can implement dynamic resolution of the referenced schemas using `compileAsync` method. In this way you can store schemas in any system (files, web, database, etc.) and reference them without explicitly adding to Ajv instance. See [Asynchronous schema compilation](#asynchronous-schema-compilation).\n\n\n## $data reference\n\nWith `$data` option you can use values from the validated data as the values for the schema keywords. See [proposal](https://github.com/json-schema-org/json-schema-spec/issues/51) for more information about how it works.\n\n`$data` reference is supported in the keywords: const, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems.\n\nThe value of \"$data\" should be a [JSON-pointer](https://tools.ietf.org/html/rfc6901) to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a [relative JSON-pointer](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00) (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema).\n\nExamples.\n\nThis schema requires that the value in property `smaller` is less or equal than the value in the property larger:\n\n```javascript\nvar ajv = new Ajv({$data: true});\n\nvar schema = {\n  \"properties\": {\n    \"smaller\": {\n      \"type\": \"number\",\n      \"maximum\": { \"$data\": \"1/larger\" }\n    },\n    \"larger\": { \"type\": \"number\" }\n  }\n};\n\nvar validData = {\n  smaller: 5,\n  larger: 7\n};\n\najv.validate(schema, validData); // true\n```\n\nThis schema requires that the properties have the same format as their field names:\n\n```javascript\nvar schema = {\n  \"additionalProperties\": {\n    \"type\": \"string\",\n    \"format\": { \"$data\": \"0#\" }\n  }\n};\n\nvar validData = {\n  'date-time': '1963-06-19T08:30:06.283185Z',\n  email: 'joe.bloggs@example.com'\n}\n```\n\n`$data` reference is resolved safely - it won't throw even if some property is undefined. If `$data` resolves to `undefined` the validation succeeds (with the exclusion of `const` keyword). If `$data` resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails.\n\n\n## $merge and $patch keywords\n\nWith the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) you can use the keywords `$merge` and `$patch` that allow extending JSON Schemas with patches using formats [JSON Merge Patch (RFC 7396)](https://tools.ietf.org/html/rfc7396) and [JSON Patch (RFC 6902)](https://tools.ietf.org/html/rfc6902).\n\nTo add keywords `$merge` and `$patch` to Ajv instance use this code:\n\n```javascript\nrequire('ajv-merge-patch')(ajv);\n```\n\nExamples.\n\nUsing `$merge`:\n\n```json\n{\n  \"$merge\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": {\n      \"properties\": { \"q\": { \"type\": \"number\" } }\n    }\n  }\n}\n```\n\nUsing `$patch`:\n\n```json\n{\n  \"$patch\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": [\n      { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } }\n    ]\n  }\n}\n```\n\nThe schemas above are equivalent to this schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"p\": { \"type\": \"string\" },\n    \"q\": { \"type\": \"number\" }\n  },\n  \"additionalProperties\": false\n}\n```\n\nThe properties `source` and `with` in the keywords `$merge` and `$patch` can use absolute or relative `$ref` to point to other schemas previously added to the Ajv instance or to the fragments of the current schema.\n\nSee the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) for more information.\n\n\n## Defining custom keywords\n\nThe advantages of using custom keywords are:\n\n- allow creating validation scenarios that cannot be expressed using JSON Schema\n- simplify your schemas\n- help bringing a bigger part of the validation logic to your schemas\n- make your schemas more expressive, less verbose and closer to your application domain\n- implement custom data processors that modify your data (`modifying` option MUST be used in keyword definition) and/or create side effects while the data is being validated\n\nIf a keyword is used only for side-effects and its validation result is pre-defined, use option `valid: true/false` in keyword definition to simplify both generated code (no error handling in case of `valid: true`) and your keyword functions (no need to return any validation result).\n\nThe concerns you have to be aware of when extending JSON Schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas.\n\nYou can define custom keywords with [addKeyword](#api-addkeyword) method. Keywords are defined on the `ajv` instance level - new instances will not have previously defined keywords.\n\nAjv allows defining keywords with:\n- validation function\n- compilation function\n- macro function\n- inline compilation function that should return code (as string) that will be inlined in the currently compiled schema.\n\nExample. `range` and `exclusiveRange` keywords using compiled schema:\n\n```javascript\najv.addKeyword('range', {\n  type: 'number',\n  compile: function (sch, parentSchema) {\n    var min = sch[0];\n    var max = sch[1];\n\n    return parentSchema.exclusiveRange === true\n            ? function (data) { return data > min && data < max; }\n            : function (data) { return data >= min && data <= max; }\n  }\n});\n\nvar schema = { \"range\": [2, 4], \"exclusiveRange\": true };\nvar validate = ajv.compile(schema);\nconsole.log(validate(2.01)); // true\nconsole.log(validate(3.99)); // true\nconsole.log(validate(2)); // false\nconsole.log(validate(4)); // false\n```\n\nSeveral custom keywords (typeof, instanceof, range and propertyNames) are defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package - they can be used for your schemas and as a starting point for your own custom keywords.\n\nSee [Defining custom keywords](https://github.com/epoberezkin/ajv/blob/master/CUSTOM.md) for more details.\n\n\n## Asynchronous schema compilation\n\nDuring asynchronous compilation remote references are loaded using supplied function. See `compileAsync` [method](#api-compileAsync) and `loadSchema` [option](#options).\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ loadSchema: loadSchema });\n\najv.compileAsync(schema).then(function (validate) {\n  var valid = validate(data);\n  // ...\n});\n\nfunction loadSchema(uri) {\n  return request.json(uri).then(function (res) {\n    if (res.statusCode >= 400)\n      throw new Error('Loading error: ' + res.statusCode);\n    return res.body;\n  });\n}\n```\n\n__Please note__: [Option](#options) `missingRefs` should NOT be set to `\"ignore\"` or `\"fail\"` for asynchronous compilation to work.\n\n\n## Asynchronous validation\n\nExample in Node.js REPL: https://tonicdev.com/esp/ajv-asynchronous-validation\n\nYou can define custom formats and keywords that perform validation asynchronously by accessing database or some other service. You should add `async: true` in the keyword or format definition (see [addFormat](#api-addformat), [addKeyword](#api-addkeyword) and [Defining custom keywords](#defining-custom-keywords)).\n\nIf your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have `\"$async\": true` keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without `$async` keyword Ajv will throw an exception during schema compilation.\n\n__Please note__: all asynchronous subschemas that are referenced from the current or other schemas should have `\"$async\": true` keyword as well, otherwise the schema compilation will fail.\n\nValidation function for an asynchronous custom format/keyword should return a promise that resolves with `true` or `false` (or rejects with `new Ajv.ValidationError(errors)` if you want to return custom errors from the keyword function).\n\nAjv compiles asynchronous schemas to [es7 async functions](http://tc39.github.io/ecmascript-asyncawait/) that can optionally be transpiled with [nodent](https://github.com/MatAtBread/nodent). Async functions are supported in Node.js 7+ and all modern browsers. You can also supply any other transpiler as a function via `processCode` option. See [Options](#options).\n\nThe compiled validation function has `$async: true` property (if the schema is asynchronous), so you can differentiate these functions if you are using both synchronous and asynchronous schemas.\n\nValidation result will be a promise that resolves with validated data or rejects with an exception `Ajv.ValidationError` that contains the array of validation errors in `errors` property.\n\n\nExample:\n\n```javascript\nvar ajv = new Ajv;\n// require('ajv-async')(ajv);\n\najv.addKeyword('idExists', {\n  async: true,\n  type: 'number',\n  validate: checkIdExists\n});\n\n\nfunction checkIdExists(schema, data) {\n  return knex(schema.table)\n  .select('id')\n  .where('id', data)\n  .then(function (rows) {\n    return !!rows.length; // true if record is found\n  });\n}\n\nvar schema = {\n  \"$async\": true,\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"users\" }\n    },\n    \"postId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"posts\" }\n    }\n  }\n};\n\nvar validate = ajv.compile(schema);\n\nvalidate({ userId: 1, postId: 19 })\n.then(function (data) {\n  console.log('Data is valid', data); // { userId: 1, postId: 19 }\n})\n.catch(function (err) {\n  if (!(err instanceof Ajv.ValidationError)) throw err;\n  // data is invalid\n  console.log('Validation errors:', err.errors);\n});\n```\n\n### Using transpilers with asynchronous validation functions.\n\n[ajv-async](https://github.com/epoberezkin/ajv-async) uses [nodent](https://github.com/MatAtBread/nodent) to transpile async functions. To use another transpiler you should separately install it (or load its bundle in the browser).\n\n\n#### Using nodent\n\n```javascript\nvar ajv = new Ajv;\nrequire('ajv-async')(ajv);\n// in the browser if you want to load ajv-async bundle separately you can:\n// window.ajvAsync(ajv);\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\n\n#### Using other transpilers\n\n```javascript\nvar ajv = new Ajv({ processCode: transpileFunc });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\nSee [Options](#options).\n\n\n## Security considerations\n\nJSON Schema, if properly used, can replace data sanitisation. It doesn't replace other API security considerations. It also introduces additional security aspects to consider.\n\n\n##### Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerabilities via GitHub issues.\n\n\n##### Untrusted schemas\n\nAjv treats JSON schemas as trusted as your application code. This security model is based on the most common use case, when the schemas are static and bundled together with the application.\n\nIf your schemas are received from untrusted sources (or generated from untrusted data) there are several scenarios you need to prevent:\n- compiling schemas can cause stack overflow (if they are too deep)\n- compiling schemas can be slow (e.g. [#557](https://github.com/epoberezkin/ajv/issues/557))\n- validating certain data can be slow\n\nIt is difficult to predict all the scenarios, but at the very least it may help to limit the size of untrusted schemas (e.g. limit JSON string length) and also the maximum schema object depth (that can be high for relatively small JSON strings). You also may want to mitigate slow regular expressions in `pattern` and `patternProperties` keywords.\n\nRegardless the measures you take, using untrusted schemas increases security risks.\n\n\n##### Circular references in JavaScript objects\n\nAjv does not support schemas and validated data that have circular references in objects. See [issue #802](https://github.com/epoberezkin/ajv/issues/802).\n\nAn attempt to compile such schemas or validate such data would cause stack overflow (or will not complete in case of asynchronous validation). Depending on the parser you use, untrusted data can lead to circular references.\n\n\n##### Security risks of trusted schemas\n\nSome keywords in JSON Schemas can lead to very slow validation for certain data. These keywords include (but may be not limited to):\n\n- `pattern` and `format` for large strings - in some cases using `maxLength` can help mitigate it, but certain regular expressions can lead to exponential validation time even with relatively short strings (see [ReDoS attack](#redos-attack)).\n- `patternProperties` for large property names - use `propertyNames` to mitigate, but some regular expressions can have exponential evaluation time as well.\n- `uniqueItems` for large non-scalar arrays - use `maxItems` to mitigate\n\n__Please note__: The suggestions above to prevent slow validation would only work if you do NOT use `allErrors: true` in production code (using it would continue validation after validation errors).\n\nYou can validate your JSON schemas against [this meta-schema](https://github.com/epoberezkin/ajv/blob/master/lib/refs/json-schema-secure.json) to check that these recommendations are followed:\n\n```javascript\nconst isSchemaSecure = ajv.compile(require('ajv/lib/refs/json-schema-secure.json'));\n\nconst schema1 = {format: 'email'};\nisSchemaSecure(schema1); // false\n\nconst schema2 = {format: 'email', maxLength: MAX_LENGTH};\nisSchemaSecure(schema2); // true\n```\n\n__Please note__: following all these recommendation is not a guarantee that validation of untrusted data is safe - it can still lead to some undesirable results.\n\n\n## ReDoS attack\n\nCertain regular expressions can lead to the exponential evaluation time even with relatively short strings.\n\nPlease assess the regular expressions you use in the schemas on their vulnerability to this attack - see [safe-regex](https://github.com/substack/safe-regex), for example.\n\n__Please note__: some formats that Ajv implements use [regular expressions](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js) that can be vulnerable to ReDoS attack, so if you use Ajv to validate data from untrusted sources __it is strongly recommended__ to consider the following:\n\n- making assessment of \"format\" implementations in Ajv.\n- using `format: 'fast'` option that simplifies some of the regular expressions (although it does not guarantee that they are safe).\n- replacing format implementations provided by Ajv with your own implementations of \"format\" keyword that either uses different regular expressions or another approach to format validation. Please see [addFormat](#api-addformat) method.\n- disabling format validation by ignoring \"format\" keyword with option `format: false`\n\nWhatever mitigation you choose, please assume all formats provided by Ajv as potentially unsafe and make your own assessment of their suitability for your validation scenarios.\n\n\n## Filtering data\n\nWith [option `removeAdditional`](#options) (added by [andyscott](https://github.com/andyscott)) you can filter data during the validation.\n\nThis option modifies original data.\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ removeAdditional: true });\nvar schema = {\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": {\n      \"additionalProperties\": { \"type\": \"number\" },\n      \"properties\": {\n        \"baz\": { \"type\": \"string\" }\n      }\n    }\n  }\n}\n\nvar data = {\n  \"foo\": 0,\n  \"additional1\": 1, // will be removed; `additionalProperties` == false\n  \"bar\": {\n    \"baz\": \"abc\",\n    \"additional2\": 2 // will NOT be removed; `additionalProperties` != false\n  },\n}\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 }\n```\n\nIf `removeAdditional` option in the example above were `\"all\"` then both `additional1` and `additional2` properties would have been removed.\n\nIf the option were `\"failing\"` then property `additional1` would have been removed regardless of its value and property `additional2` would have been removed only if its value were failing the schema in the inner `additionalProperties` (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed).\n\n__Please note__: If you use `removeAdditional` option with `additionalProperties` keyword inside `anyOf`/`oneOf` keywords your validation can fail with this schema, for example:\n\n```json\n{\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"foo\": { \"type\": \"string\" }\n      },\n      \"required\": [ \"foo\" ],\n      \"additionalProperties\": false\n    },\n    {\n      \"properties\": {\n        \"bar\": { \"type\": \"integer\" }\n      },\n      \"required\": [ \"bar\" ],\n      \"additionalProperties\": false\n    }\n  ]\n}\n```\n\nThe intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties.\n\nWith the option `removeAdditional: true` the validation will pass for the object `{ \"foo\": \"abc\"}` but will fail for the object `{\"bar\": 1}`. It happens because while the first subschema in `oneOf` is validated, the property `bar` is removed because it is an additional property according to the standard (because it is not included in `properties` keyword in the same schema).\n\nWhile this behaviour is unexpected (issues [#129](https://github.com/epoberezkin/ajv/issues/129), [#134](https://github.com/epoberezkin/ajv/issues/134)), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"string\" },\n    \"bar\": { \"type\": \"integer\" }\n  },\n  \"additionalProperties\": false,\n  \"oneOf\": [\n    { \"required\": [ \"foo\" ] },\n    { \"required\": [ \"bar\" ] }\n  ]\n}\n```\n\nThe schema above is also more efficient - it will compile into a faster function.\n\n\n## Assigning defaults\n\nWith [option `useDefaults`](#options) Ajv will assign values from `default` keyword in the schemas of `properties` and `items` (when it is the array of schemas) to the missing properties and items.\n\nWith the option value `\"empty\"` properties and items equal to `null` or `\"\"` (empty string) will be considered missing and assigned defaults.\n\nThis option modifies original data.\n\n__Please note__: the default value is inserted in the generated validation code as a literal, so the value inserted in the data will be the deep clone of the default in the schema.\n\n\nExample 1 (`default` in `properties`):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"string\", \"default\": \"baz\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": 1 };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": \"baz\" }\n```\n\nExample 2 (`default` in `items`):\n\n```javascript\nvar schema = {\n  \"type\": \"array\",\n  \"items\": [\n    { \"type\": \"number\" },\n    { \"type\": \"string\", \"default\": \"foo\" }\n  ]\n}\n\nvar data = [ 1 ];\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // [ 1, \"foo\" ]\n```\n\n`default` keywords in other cases are ignored:\n\n- not in `properties` or `items` subschemas\n- in schemas inside `anyOf`, `oneOf` and `not` (see [#42](https://github.com/epoberezkin/ajv/issues/42))\n- in `if` subschema of `switch` keyword\n- in schemas generated by custom macro keywords\n\nThe [`strictDefaults` option](#options) customizes Ajv's behavior for the defaults that Ajv ignores (`true` raises an error, and `\"log\"` outputs a warning).\n\n\n## Coercing data types\n\nWhen you are validating user inputs all your data properties are usually strings. The option `coerceTypes` allows you to have your data types coerced to the types specified in your schema `type` keywords, both to pass the validation and to use the correctly typed data afterwards.\n\nThis option modifies original data.\n\n__Please note__: if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value.\n\n\nExample 1:\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"boolean\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": \"1\", \"bar\": \"false\" };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": false }\n```\n\nExample 2 (array coercions):\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: 'array' });\nvar schema = {\n  \"properties\": {\n    \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } },\n    \"bar\": { \"type\": \"boolean\" }\n  }\n};\n\nvar data = { \"foo\": \"1\", \"bar\": [\"false\"] };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": [1], \"bar\": false }\n```\n\nThe coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords).\n\nSee [Coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md) for details.\n\n\n## API\n\n##### new Ajv(Object options) -&gt; Object\n\nCreate Ajv instance.\n\n\n##### .compile(Object schema) -&gt; Function&lt;Object data&gt;\n\nGenerate validating function and cache the compiled schema for future use.\n\nValidating function returns a boolean value. This function has properties `errors` and `schema`. Errors encountered during the last validation are assigned to `errors` property (it is assigned `null` if there was no errors). `schema` property contains the reference to the original schema.\n\nThe schema passed to this method will be validated against meta-schema unless `validateSchema` option is false. If schema is invalid, an error will be thrown. See [options](#options).\n\n\n##### <a name=\"api-compileAsync\"></a>.compileAsync(Object schema [, Boolean meta] [, Function callback]) -&gt; Promise\n\nAsynchronous version of `compile` method that loads missing remote schemas using asynchronous function in `options.loadSchema`. This function returns a Promise that resolves to a validation function. An optional callback passed to `compileAsync` will be called with 2 parameters: error (or null) and validating function. The returned promise will reject (and the callback will be called with an error) when:\n\n- missing schema can't be loaded (`loadSchema` returns a Promise that rejects).\n- a schema containing a missing reference is loaded, but the reference cannot be resolved.\n- schema (or some loaded/referenced schema) is invalid.\n\nThe function compiles schema and loads the first missing schema (or meta-schema) until all missing schemas are loaded.\n\nYou can asynchronously compile meta-schema by passing `true` as the second parameter.\n\nSee example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### .validate(Object schema|String key|String ref, data) -&gt; Boolean\n\nValidate data using passed schema (it will be compiled and cached).\n\nInstead of the schema you can use the key that was previously passed to `addSchema`, the schema id if it was present in the schema or any previously resolved reference.\n\nValidation errors will be available in the `errors` property of Ajv instance (`null` if there were no errors).\n\n__Please note__: every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later.\n\nIf the schema is asynchronous (has `$async` keyword on the top level) this method returns a Promise. See [Asynchronous validation](#asynchronous-validation).\n\n\n##### .addSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdd schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole.\n\nArray of schemas can be passed (schemas should have ids), the second parameter will be ignored.\n\nKey can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key.\n\n\nOnce the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data.\n\nAlthough `addSchema` does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time.\n\nBy default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by `validateSchema` option.\n\n__Please note__: Ajv uses the [method chaining syntax](https://en.wikipedia.org/wiki/Method_chaining) for all methods with the prefix `add*` and `remove*`.\nThis allows you to do nice things like the following.\n\n```javascript\nvar validate = new Ajv().addSchema(schema).addFormat(name, regex).getSchema(uri);\n```\n\n##### .addMetaSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdds meta schema(s) that can be used to validate other schemas. That function should be used instead of `addSchema` because there may be instance options that would compile a meta schema incorrectly (at the moment it is `removeAdditional` option).\n\nThere is no need to explicitly add draft-07 meta schema (http://json-schema.org/draft-07/schema) - it is added by default, unless option `meta` is set to `false`. You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See `validateSchema`.\n\n\n##### <a name=\"api-validateschema\"></a>.validateSchema(Object schema) -&gt; Boolean\n\nValidates schema. This method should be used to validate schemas rather than `validate` due to the inconsistency of `uri` format in JSON Schema standard.\n\nBy default this method is called automatically when the schema is added, so you rarely need to use it directly.\n\nIf schema doesn't have `$schema` property, it is validated against draft 6 meta-schema (option `meta` should not be false).\n\nIf schema has `$schema` property, then the schema with this id (that should be previously added) is used to validate passed schema.\n\nErrors will be available at `ajv.errors`.\n\n\n##### .getSchema(String key) -&gt; Function&lt;Object data&gt;\n\nRetrieve compiled schema previously added with `addSchema` by the key passed to `addSchema` or by its full reference (id). The returned validating function has `schema` property with the reference to the original schema.\n\n\n##### .removeSchema([Object schema|String key|String ref|RegExp pattern]) -&gt; Ajv\n\nRemove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references.\n\nSchema can be removed using:\n- key passed to `addSchema`\n- it's full reference (id)\n- RegExp that should match schema id or key (meta-schemas won't be removed)\n- actual schema object that will be stable-stringified to remove schema from cache\n\nIf no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared.\n\n\n##### <a name=\"api-addformat\"></a>.addFormat(String name, String|RegExp|Function|Object format) -&gt; Ajv\n\nAdd custom format to validate strings or numbers. It can also be used to replace pre-defined formats for Ajv instance.\n\nStrings are converted to RegExp.\n\nFunction should return validation result as `true` or `false`.\n\nIf object is passed it should have properties `validate`, `compare` and `async`:\n\n- _validate_: a string, RegExp or a function as described above.\n- _compare_: an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords `formatMaximum`/`formatMinimum` (defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package). It should return `1` if the first value is bigger than the second value, `-1` if it is smaller and `0` if it is equal.\n- _async_: an optional `true` value if `validate` is an asynchronous function; in this case it should return a promise that resolves with a value `true` or `false`.\n- _type_: an optional type of data that the format applies to. It can be `\"string\"` (default) or `\"number\"` (see https://github.com/epoberezkin/ajv/issues/291#issuecomment-259923858). If the type of data is different, the validation will pass.\n\nCustom formats can be also added via `formats` option.\n\n\n##### <a name=\"api-addkeyword\"></a>.addKeyword(String keyword, Object definition) -&gt; Ajv\n\nAdd custom validation keyword to Ajv instance.\n\nKeyword should be different from all standard JSON Schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance.\n\nKeyword must start with a letter, `_` or `$`, and may continue with letters, numbers, `_`, `$`, or `-`.\nIt is recommended to use an application-specific prefix for keywords to avoid current and future name collisions.\n\nExample Keywords:\n- `\"xyz-example\"`: valid, and uses prefix for the xyz project to avoid name collisions.\n- `\"example\"`: valid, but not recommended as it could collide with future versions of JSON Schema etc.\n- `\"3-example\"`: invalid as numbers are not allowed to be the first character in a keyword\n\nKeyword definition is an object with the following properties:\n\n- _type_: optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types.\n- _validate_: validating function\n- _compile_: compiling function\n- _macro_: macro function\n- _inline_: compiling function that returns code (as string)\n- _schema_: an optional `false` value used with \"validate\" keyword to not pass schema\n- _metaSchema_: an optional meta-schema for keyword schema\n- _dependencies_: an optional list of properties that must be present in the parent schema - it will be checked during schema compilation\n- _modifying_: `true` MUST be passed if keyword modifies data\n- _statements_: `true` can be passed in case inline keyword generates statements (as opposed to expression)\n- _valid_: pass `true`/`false` to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords.\n- _$data_: an optional `true` value to support [$data reference](#data-reference) as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function).\n- _async_: an optional `true` value if the validation function is asynchronous (whether it is compiled or passed in _validate_ property); in this case it should return a promise that resolves with a value `true` or `false`. This option is ignored in case of \"macro\" and \"inline\" keywords.\n- _errors_: an optional boolean or string `\"full\"` indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation.\n\n_compile_, _macro_ and _inline_ are mutually exclusive, only one should be used at a time. _validate_ can be used separately or in addition to them to support $data reference.\n\n__Please note__: If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate `type` keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed.\n\nSee [Defining custom keywords](#defining-custom-keywords) for more details.\n\n\n##### .getKeyword(String keyword) -&gt; Object|Boolean\n\nReturns custom keyword definition, `true` for pre-defined keywords and `false` if the keyword is unknown.\n\n\n##### .removeKeyword(String keyword) -&gt; Ajv\n\nRemoves custom or pre-defined keyword so you can redefine them.\n\nWhile this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results.\n\n__Please note__: schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use `removeSchema` method and compile them again.\n\n\n##### .errorsText([Array&lt;Object&gt; errors [, Object options]]) -&gt; String\n\nReturns the text with all errors in a String.\n\nOptions can have properties `separator` (string used to separate errors, \", \" by default) and `dataVar` (the variable name that dataPaths are prefixed with, \"data\" by default).\n\n\n## Options\n\nDefaults:\n\n```javascript\n{\n  // validation and reporting options:\n  $data:            false,\n  allErrors:        false,\n  verbose:          false,\n  $comment:         false, // NEW in Ajv version 6.0\n  jsonPointers:     false,\n  uniqueItems:      true,\n  unicode:          true,\n  nullable:         false,\n  format:           'fast',\n  formats:          {},\n  unknownFormats:   true,\n  schemas:          {},\n  logger:           undefined,\n  // referenced schema options:\n  schemaId:         '$id',\n  missingRefs:      true,\n  extendRefs:       'ignore', // recommended 'fail'\n  loadSchema:       undefined, // function(uri: string): Promise {}\n  // options to modify validated data:\n  removeAdditional: false,\n  useDefaults:      false,\n  coerceTypes:      false,\n  // strict mode options\n  strictDefaults:   false,\n  strictKeywords:   false,\n  // asynchronous validation options:\n  transpile:        undefined, // requires ajv-async package\n  // advanced options:\n  meta:             true,\n  validateSchema:   true,\n  addUsedSchema:    true,\n  inlineRefs:       true,\n  passContext:      false,\n  loopRequired:     Infinity,\n  ownProperties:    false,\n  multipleOfPrecision: false,\n  errorDataPath:    'object', // deprecated\n  messages:         true,\n  sourceCode:       false,\n  processCode:      undefined, // function (str: string): string {}\n  cache:            new Cache,\n  serialize:        undefined\n}\n```\n\n##### Validation and reporting options\n\n- _$data_: support [$data references](#data-reference). Draft 6 meta-schema that is added by default will be extended to allow them. If you want to use another meta-schema you need to use $dataMetaSchema method to add support for $data reference. See [API](#api).\n- _allErrors_: check all rules collecting all errors. Default is to return after the first error.\n- _verbose_: include the reference to the part of the schema (`schema` and `parentSchema`) and validated data in errors (false by default).\n- _$comment_ (NEW in Ajv version 6.0): log or pass the value of `$comment` keyword to a function. Option values:\n  - `false` (default): ignore $comment keyword.\n  - `true`: log the keyword value to console.\n  - function: pass the keyword value, its schema path and root schema to the specified function\n- _jsonPointers_: set `dataPath` property of errors using [JSON Pointers](https://tools.ietf.org/html/rfc6901) instead of JavaScript property access notation.\n- _uniqueItems_: validate `uniqueItems` keyword (true by default).\n- _unicode_: calculate correct length of strings with unicode pairs (true by default). Pass `false` to use `.length` of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters.\n- _nullable_: support keyword \"nullable\" from [Open API 3 specification](https://swagger.io/docs/specification/data-models/data-types/).\n- _format_: formats validation mode. Option values:\n  - `\"fast\"` (default) - simplified and fast validation (see [Formats](#formats) for details of which formats are available and affected by this option).\n  - `\"full\"` - more restrictive and slow validation. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode.\n  - `false` - ignore all format keywords.\n- _formats_: an object with custom formats. Keys and values will be passed to `addFormat` method.\n- _keywords_: an object with custom keywords. Keys and values will be passed to `addKeyword` method.\n- _unknownFormats_: handling of unknown formats. Option values:\n  - `true` (default) - if an unknown format is encountered the exception is thrown during schema compilation. If `format` keyword value is [$data reference](#data-reference) and it is unknown the validation will fail.\n  - `[String]` - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if another unknown format is used. If `format` keyword value is [$data reference](#data-reference) and it is not in this array the validation will fail.\n  - `\"ignore\"` - to log warning during schema compilation and always pass validation (the default behaviour in versions before 5.0.0). This option is not recommended, as it allows to mistype format name and it won't be validated without any error message. This behaviour is required by JSON Schema specification.\n- _schemas_: an array or object of schemas that will be added to the instance. In case you pass the array the schemas must have IDs in them. When the object is passed the method `addSchema(value, key)` will be called for each schema in this object.\n- _logger_: sets the logging method. Default is the global `console` object that should have methods `log`, `warn` and `error`. See [Error logging](#error-logging). Option values:\n  - custom logger - it should have methods `log`, `warn` and `error`. If any of these methods is missing an exception will be thrown.\n  - `false` - logging is disabled.\n\n\n##### Referenced schema options\n\n- _schemaId_: this option defines which keywords are used as schema URI. Option value:\n  - `\"$id\"` (default) - only use `$id` keyword as schema URI (as specified in JSON Schema draft-06/07), ignore `id` keyword (if it is present a warning will be logged).\n  - `\"id\"` - only use `id` keyword as schema URI (as specified in JSON Schema draft-04), ignore `$id` keyword (if it is present a warning will be logged).\n  - `\"auto\"` - use both `$id` and `id` keywords as schema URI. If both are present (in the same schema object) and different the exception will be thrown during schema compilation.\n- _missingRefs_: handling of missing referenced schemas. Option values:\n  - `true` (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties `missingRef` (with hash fragment) and `missingSchema` (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted).\n  - `\"ignore\"` - to log error during compilation and always pass validation.\n  - `\"fail\"` - to log error and successfully compile schema but fail validation if this rule is checked.\n- _extendRefs_: validation of other keywords when `$ref` is present in the schema. Option values:\n  - `\"ignore\"` (default) - when `$ref` is used other keywords are ignored (as per [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03#section-3) standard). A warning will be logged during the schema compilation.\n  - `\"fail\"` (recommended) - if other validation keywords are used together with `$ref` the exception will be thrown when the schema is compiled. This option is recommended to make sure schema has no keywords that are ignored, which can be confusing.\n  - `true` - validate all keywords in the schemas with `$ref` (the default behaviour in versions before 5.0.0).\n- _loadSchema_: asynchronous function that will be used to load remote schemas when `compileAsync` [method](#api-compileAsync) is used and some reference is missing (option `missingRefs` should NOT be 'fail' or 'ignore'). This function should accept remote schema uri as a parameter and return a Promise that resolves to a schema. See example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### Options to modify validated data\n\n- _removeAdditional_: remove additional properties - see example in [Filtering data](#filtering-data). This option is not used if schema is added with `addMetaSchema` method. Option values:\n  - `false` (default) - not to remove additional properties\n  - `\"all\"` - all additional properties are removed, regardless of `additionalProperties` keyword in schema (and no validation is made for them).\n  - `true` - only additional properties with `additionalProperties` keyword equal to `false` are removed.\n  - `\"failing\"` - additional properties that fail schema validation will be removed (where `additionalProperties` keyword is `false` or schema).\n- _useDefaults_: replace missing or undefined properties and items with the values from corresponding `default` keywords. Default behaviour is to ignore `default` keywords. This option is not used if schema is added with `addMetaSchema` method. See examples in [Assigning defaults](#assigning-defaults). Option values:\n  - `false` (default) - do not use defaults\n  - `true` - insert defaults by value (object literal is used).\n  - `\"empty\"` - in addition to missing or undefined, use defaults for properties and items that are equal to `null` or `\"\"` (an empty string).\n  - `\"shared\"` (deprecated) - insert defaults by reference. If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well.\n- _coerceTypes_: change data type of data to match `type` keyword. See the example in [Coercing data types](#coercing-data-types) and [coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md). Option values:\n  - `false` (default) - no type coercion.\n  - `true` - coerce scalar data types.\n  - `\"array\"` - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema).\n\n\n##### Strict mode options\n\n- _strictDefaults_: report ignored `default` keywords in schemas. Option values:\n  - `false` (default) - ignored defaults are not reported\n  - `true` - if an ignored default is present, throw an error\n  - `\"log\"` - if an ignored default is present, log warning\n- _strictKeywords_: report unknown keywords in schemas. Option values:\n  - `false` (default) - unknown keywords are not reported\n  - `true` - if an unknown keyword is present, throw an error\n  - `\"log\"` - if an unknown keyword is present, log warning\n\n\n##### Asynchronous validation options\n\n- _transpile_: Requires [ajv-async](https://github.com/epoberezkin/ajv-async) package. It determines whether Ajv transpiles compiled asynchronous validation function. Option values:\n  - `undefined` (default) - transpile with [nodent](https://github.com/MatAtBread/nodent) if async functions are not supported.\n  - `true` - always transpile with nodent.\n  - `false` - do not transpile; if async functions are not supported an exception will be thrown.\n\n\n##### Advanced options\n\n- _meta_: add [meta-schema](http://json-schema.org/documentation.html) so it can be used by other schemas (true by default). If an object is passed, it will be used as the default meta-schema for schemas that have no `$schema` keyword. This default meta-schema MUST have `$schema` keyword.\n- _validateSchema_: validate added/compiled schemas against meta-schema (true by default). `$schema` property in the schema can be http://json-schema.org/draft-07/schema or absent (draft-07 meta-schema will be used) or can be a reference to the schema previously added with `addMetaSchema` method. Option values:\n  - `true` (default) -  if the validation fails, throw the exception.\n  - `\"log\"` - if the validation fails, log error.\n  - `false` - skip schema validation.\n- _addUsedSchema_: by default methods `compile` and `validate` add schemas to the instance if they have `$id` (or `id`) property that doesn't start with \"#\". If `$id` is present and it is not unique the exception will be thrown. Set this option to `false` to skip adding schemas to the instance and the `$id` uniqueness check when these methods are used. This option does not affect `addSchema` method.\n- _inlineRefs_: Affects compilation of referenced schemas. Option values:\n  - `true` (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions.\n  - `false` - to not inline referenced schemas (they will be compiled as separate functions).\n  - integer number - to limit the maximum number of keywords of the schema that will be inlined.\n- _passContext_: pass validation context to custom keyword functions. If this option is `true` and you pass some context to the compiled validation function with `validate.call(context, data)`, the `context` will be available as `this` in your custom keywords. By default `this` is Ajv instance.\n- _loopRequired_: by default `required` keyword is compiled into a single expression (or a sequence of statements in `allErrors` mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which `required` keyword will be validated in a loop - smaller validation function size but also worse performance.\n- _ownProperties_: by default Ajv iterates over all enumerable object properties; when this option is `true` only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Contributed by @mbroadst.\n- _multipleOfPrecision_: by default `multipleOf` keyword is validated by comparing the result of division with parseInt() of that result. It works for dividers that are bigger than 1. For small dividers such as 0.01 the result of the division is usually not integer (even when it should be integer, see issue [#84](https://github.com/epoberezkin/ajv/issues/84)). If you need to use fractional dividers set this option to some positive integer N to have `multipleOf` validated using this formula: `Math.abs(Math.round(division) - division) < 1e-N` (it is slower but allows for float arithmetics deviations).\n- _errorDataPath_ (deprecated): set `dataPath` to point to 'object' (default) or to 'property' when validating keywords `required`, `additionalProperties` and `dependencies`.\n- _messages_: Include human-readable messages in errors. `true` by default. `false` can be passed when custom messages are used (e.g. with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n)).\n- _sourceCode_: add `sourceCode` property to validating function (for debugging; this code can be different from the result of toString call).\n- _processCode_: an optional function to process generated code before it is passed to Function constructor. It can be used to either beautify (the validating function is generated without line-breaks) or to transpile code. Starting from version 5.0.0 this option replaced options:\n  - `beautify` that formatted the generated function using [js-beautify](https://github.com/beautify-web/js-beautify). If you want to beautify the generated code pass `require('js-beautify').js_beautify`.\n  - `transpile` that transpiled asynchronous validation function. You can still use `transpile` option with [ajv-async](https://github.com/epoberezkin/ajv-async) package. See [Asynchronous validation](#asynchronous-validation) for more information.\n- _cache_: an optional instance of cache to store compiled schemas using stable-stringified schema as a key. For example, set-associative cache [sacjs](https://github.com/epoberezkin/sacjs) can be used. If not passed then a simple hash is used which is good enough for the common use case (a limited number of statically defined schemas). Cache should have methods `put(key, value)`, `get(key)`, `del(key)` and `clear()`.\n- _serialize_: an optional function to serialize schema to cache key. Pass `false` to use schema itself as a key (e.g., if WeakMap used as a cache). By default [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used.\n\n\n## Validation errors\n\nIn case of validation failure, Ajv assigns the array of errors to `errors` property of validation function (or to `errors` property of Ajv instance when `validate` or `validateSchema` methods were called). In case of [asynchronous validation](#asynchronous-validation), the returned promise is rejected with exception `Ajv.ValidationError` that has `errors` property.\n\n\n### Error objects\n\nEach error is an object with the following properties:\n\n- _keyword_: validation keyword.\n- _dataPath_: the path to the part of the data that was validated. By default `dataPath` uses JavaScript property access notation (e.g., `\".prop[1].subProp\"`). When the option `jsonPointers` is true (see [Options](#options)) `dataPath` will be set using JSON pointer standard (e.g., `\"/prop/1/subProp\"`).\n- _schemaPath_: the path (JSON-pointer as a URI fragment) to the schema of the keyword that failed validation.\n- _params_: the object with the additional information about error that can be used to create custom error messages (e.g., using [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package). See below for parameters set by all keywords.\n- _message_: the standard error message (can be excluded with option `messages` set to false).\n- _schema_: the schema of the keyword (added with `verbose` option).\n- _parentSchema_: the schema containing the keyword (added with `verbose` option)\n- _data_: the data validated by the keyword (added with `verbose` option).\n\n__Please note__: `propertyNames` keyword schema validation errors have an additional property `propertyName`, `dataPath` points to the object. After schema validation for each property name, if it is invalid an additional error is added with the property `keyword` equal to `\"propertyNames\"`.\n\n\n### Error parameters\n\nProperties of `params` object in errors depend on the keyword that failed validation.\n\n- `maxItems`, `minItems`, `maxLength`, `minLength`, `maxProperties`, `minProperties` - property `limit` (number, the schema of the keyword).\n- `additionalItems` - property `limit` (the maximum number of allowed items in case when `items` keyword is an array of schemas and `additionalItems` is false).\n- `additionalProperties` - property `additionalProperty` (the property not used in `properties` and `patternProperties` keywords).\n- `dependencies` - properties:\n  - `property` (dependent property),\n  - `missingProperty` (required missing dependency - only the first one is reported currently)\n  - `deps` (required dependencies, comma separated list as a string),\n  - `depsCount` (the number of required dependencies).\n- `format` - property `format` (the schema of the keyword).\n- `maximum`, `minimum` - properties:\n  - `limit` (number, the schema of the keyword),\n  - `exclusive` (boolean, the schema of `exclusiveMaximum` or `exclusiveMinimum`),\n  - `comparison` (string, comparison operation to compare the data to the limit, with the data on the left and the limit on the right; can be \"<\", \"<=\", \">\", \">=\")\n- `multipleOf` - property `multipleOf` (the schema of the keyword)\n- `pattern` - property `pattern` (the schema of the keyword)\n- `required` - property `missingProperty` (required property that is missing).\n- `propertyNames` - property `propertyName` (an invalid property name).\n- `patternRequired` (in ajv-keywords) - property `missingPattern` (required pattern that did not match any property).\n- `type` - property `type` (required type(s), a string, can be a comma-separated list)\n- `uniqueItems` - properties `i` and `j` (indices of duplicate items).\n- `const` - property `allowedValue` pointing to the value (the schema of the keyword).\n- `enum` - property `allowedValues` pointing to the array of values (the schema of the keyword).\n- `$ref` - property `ref` with the referenced schema URI.\n- `oneOf` - property `passingSchemas` (array of indices of passing schemas, null if no schema passes).\n- custom keywords (in case keyword definition doesn't create errors) - property `keyword` (the keyword name).\n\n\n### Error logging\n\nUsing the `logger` option when initiallizing Ajv will allow you to define custom logging. Here you can build upon the exisiting logging. The use of other logging packages is supported as long as the package or its associated wrapper exposes the required methods. If any of the required methods are missing an exception will be thrown.\n- **Required Methods**: `log`, `warn`, `error`\n\n```javascript\nvar otherLogger = new OtherLogger();\nvar ajv = new Ajv({\n  logger: {\n    log: console.log.bind(console),\n    warn: function warn() {\n      otherLogger.logWarn.apply(otherLogger, arguments);\n    },\n    error: function error() {\n      otherLogger.logError.apply(otherLogger, arguments);\n      console.error.apply(console, arguments);\n    }\n  }\n});\n```\n\n\n## Plugins\n\nAjv can be extended with plugins that add custom keywords, formats or functions to process generated code. When such plugin is published as npm package it is recommended that it follows these conventions:\n\n- it exports a function\n- this function accepts ajv instance as the first parameter and returns the same instance to allow chaining\n- this function can accept an optional configuration as the second parameter\n\nIf you have published a useful plugin please submit a PR to add it to the next section.\n\n\n## Related packages\n\n- [ajv-async](https://github.com/epoberezkin/ajv-async) - plugin to configure async validation mode\n- [ajv-bsontype](https://github.com/BoLaMN/ajv-bsontype) - plugin to validate mongodb's bsonType formats\n- [ajv-cli](https://github.com/jessedc/ajv-cli) - command line interface\n- [ajv-errors](https://github.com/epoberezkin/ajv-errors) - plugin for custom error messages\n- [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) - internationalised error messages\n- [ajv-istanbul](https://github.com/epoberezkin/ajv-istanbul) - plugin to instrument generated validation code to measure test coverage of your schemas\n- [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) - plugin with custom validation keywords (select, typeof, etc.)\n- [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) - plugin with keywords $merge and $patch\n- [ajv-pack](https://github.com/epoberezkin/ajv-pack) - produces a compact module exporting validation functions\n- [ajv-formats-draft2019](https://github.com/luzlab/ajv-formats-draft2019) - format validators for draft2019 that aren't already included in ajv (ie. `idn-hostname`, `idn-email`, `iri`, `iri-reference` and `duration`).\n\n## Some packages using Ajv\n\n- [webpack](https://github.com/webpack/webpack) - a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser\n- [jsonscript-js](https://github.com/JSONScript/jsonscript-js) - the interpreter for [JSONScript](http://www.jsonscript.org) - scripted processing of existing endpoints and services\n- [osprey-method-handler](https://github.com/mulesoft-labs/osprey-method-handler) - Express middleware for validating requests and responses based on a RAML method object, used in [osprey](https://github.com/mulesoft/osprey) - validating API proxy generated from a RAML definition\n- [har-validator](https://github.com/ahmadnassri/har-validator) - HTTP Archive (HAR) validator\n- [jsoneditor](https://github.com/josdejong/jsoneditor) - a web-based tool to view, edit, format, and validate JSON http://jsoneditoronline.org\n- [JSON Schema Lint](https://github.com/nickcmaynard/jsonschemalint) - a web tool to validate JSON/YAML document against a single JSON Schema http://jsonschemalint.com\n- [objection](https://github.com/vincit/objection.js) - SQL-friendly ORM for Node.js\n- [table](https://github.com/gajus/table) - formats data into a string table\n- [ripple-lib](https://github.com/ripple/ripple-lib) - a JavaScript API for interacting with [Ripple](https://ripple.com) in Node.js and the browser\n- [restbase](https://github.com/wikimedia/restbase) - distributed storage with REST API & dispatcher for backend services built to provide a low-latency & high-throughput API for Wikipedia / Wikimedia content\n- [hippie-swagger](https://github.com/CacheControl/hippie-swagger) - [Hippie](https://github.com/vesln/hippie) wrapper that provides end to end API testing with swagger validation\n- [react-form-controlled](https://github.com/seeden/react-form-controlled) - React controlled form components with validation\n- [rabbitmq-schema](https://github.com/tjmehta/rabbitmq-schema) - a schema definition module for RabbitMQ graphs and messages\n- [@query/schema](https://www.npmjs.com/package/@query/schema) - stream filtering with a URI-safe query syntax parsing to JSON Schema\n- [chai-ajv-json-schema](https://github.com/peon374/chai-ajv-json-schema) - chai plugin to us JSON Schema with expect in mocha tests\n- [grunt-jsonschema-ajv](https://github.com/SignpostMarv/grunt-jsonschema-ajv) - Grunt plugin for validating files against JSON Schema\n- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) - extract text from bundle into a file\n- [electron-builder](https://github.com/electron-userland/electron-builder) - a solution to package and build a ready for distribution Electron app\n- [addons-linter](https://github.com/mozilla/addons-linter) - Mozilla Add-ons Linter\n- [gh-pages-generator](https://github.com/epoberezkin/gh-pages-generator) - multi-page site generator converting markdown files to GitHub pages\n- [ESLint](https://github.com/eslint/eslint) - the pluggable linting utility for JavaScript and JSX\n\n\n## Tests\n\n```\nnpm install\ngit submodule update --init\nnpm test\n```\n\n## Contributing\n\nAll validation functions are generated using doT templates in [dot](https://github.com/epoberezkin/ajv/tree/master/lib/dot) folder. Templates are precompiled so doT is not a run-time dependency.\n\n`npm run build` - compiles templates to [dotjs](https://github.com/epoberezkin/ajv/tree/master/lib/dotjs) folder.\n\n`npm run watch` - automatically compiles templates when files in dot folder change\n\nPlease see [Contributing guidelines](https://github.com/epoberezkin/ajv/blob/master/CONTRIBUTING.md)\n\n\n## Changes history\n\nSee https://github.com/epoberezkin/ajv/releases\n\n__Please note__: [Changes in version 6.0.0](https://github.com/epoberezkin/ajv/releases/tag/v6.0.0).\n\n[Version 5.0.0](https://github.com/epoberezkin/ajv/releases/tag/5.0.0).\n\n[Version 4.0.0](https://github.com/epoberezkin/ajv/releases/tag/4.0.0).\n\n[Version 3.0.0](https://github.com/epoberezkin/ajv/releases/tag/3.0.0).\n\n[Version 2.0.0](https://github.com/epoberezkin/ajv/releases/tag/2.0.0).\n\n\n## Open-source software support\n\nAjv is a part of [Tidelift subscription](https://tidelift.com/subscription/pkg/npm-ajv?utm_source=npm-ajv&utm_medium=referral&utm_campaign=readme) - it provides a centralised support to open-source software users, in addition to the support provided by software maintainers.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/ajv/blob/master/LICENSE)\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "fast-deep-equal": "^3.1.1",
                        "fast-json-stable-stringify": "^2.0.0",
                        "json-schema-traverse": "^0.4.1",
                        "uri-js": "^4.2.2"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/ajv",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "har-schema": {
                      "_args": [
                        [
                          "har-schema@2.0.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "har-schema@2.0.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "har-schema@2.0.0",
                      "_id": "har-schema@2.0.0",
                      "_integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
                      "_location": "/har-schema",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "har-schema@2.0.0",
                        "name": "har-schema",
                        "escapedName": "har-schema",
                        "rawSpec": "2.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.0.0"
                      },
                      "_requiredBy": [
                        "/har-validator"
                      ],
                      "_resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
                      "_spec": "2.0.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Ahmad Nassri",
                        "email": "ahmad@ahmadnassri.com",
                        "url": "https://www.ahmadnassri.com/"
                      },
                      "bugs": {
                        "url": "https://github.com/ahmadnassri/har-schema/issues"
                      },
                      "config": {
                        "commitizen": {
                          "path": "./node_modules/cz-conventional-changelog"
                        }
                      },
                      "contributors": [
                        {
                          "name": "Evgeny Poberezkin",
                          "email": "e.poberezkin@me.com"
                        }
                      ],
                      "description": "JSON Schema for HTTP Archive (HAR)",
                      "devDependencies": {
                        "ajv": "^5.0.0",
                        "codeclimate-test-reporter": "^0.4.0",
                        "cz-conventional-changelog": "^1.2.0",
                        "echint": "^2.1.0",
                        "semantic-release": "^6.3.2",
                        "snazzy": "^5.0.0",
                        "tap": "^8.0.1"
                      },
                      "engines": {
                        "node": ">=4"
                      },
                      "files": [
                        "lib"
                      ],
                      "homepage": "https://github.com/ahmadnassri/har-schema",
                      "keywords": [
                        "har",
                        "http",
                        "archive",
                        "JSON",
                        "schema",
                        "JSON-schema"
                      ],
                      "license": "ISC",
                      "main": "lib/index.js",
                      "name": "har-schema",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/ahmadnassri/har-schema.git"
                      },
                      "scripts": {
                        "codeclimate": "tap --coverage-report=text-lcov | codeclimate-test-reporter",
                        "coverage": "tap test --reporter silent --coverage",
                        "pretest": "snazzy && echint",
                        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
                        "test": "tap test --reporter spec"
                      },
                      "version": "2.0.0",
                      "readme": "# HAR Schema [![version][npm-version]][npm-url] [![License][npm-license]][license-url]\n\n> JSON Schema for HTTP Archive ([HAR][spec]).\n\n[![Build Status][travis-image]][travis-url]\n[![Downloads][npm-downloads]][npm-url]\n[![Code Climate][codeclimate-quality]][codeclimate-url]\n[![Coverage Status][codeclimate-coverage]][codeclimate-url]\n[![Dependency Status][dependencyci-image]][dependencyci-url]\n[![Dependencies][david-image]][david-url]\n\n## Install\n\n```bash\nnpm install --only=production --save har-schema\n```\n\n## Usage\n\nCompatible with any [JSON Schema validation tool][validator].\n\n----\n> :copyright: [ahmadnassri.com](https://www.ahmadnassri.com/) &nbsp;&middot;&nbsp;\n> License: [ISC][license-url] &nbsp;&middot;&nbsp;\n> Github: [@ahmadnassri](https://github.com/ahmadnassri) &nbsp;&middot;&nbsp;\n> Twitter: [@ahmadnassri](https://twitter.com/ahmadnassri)\n\n[license-url]: http://choosealicense.com/licenses/isc/\n\n[travis-url]: https://travis-ci.org/ahmadnassri/har-schema\n[travis-image]: https://img.shields.io/travis/ahmadnassri/har-schema.svg?style=flat-square\n\n[npm-url]: https://www.npmjs.com/package/har-schema\n[npm-license]: https://img.shields.io/npm/l/har-schema.svg?style=flat-square\n[npm-version]: https://img.shields.io/npm/v/har-schema.svg?style=flat-square\n[npm-downloads]: https://img.shields.io/npm/dm/har-schema.svg?style=flat-square\n\n[codeclimate-url]: https://codeclimate.com/github/ahmadnassri/har-schema\n[codeclimate-quality]: https://img.shields.io/codeclimate/github/ahmadnassri/har-schema.svg?style=flat-square\n[codeclimate-coverage]: https://img.shields.io/codeclimate/coverage/github/ahmadnassri/har-schema.svg?style=flat-square\n\n[david-url]: https://david-dm.org/ahmadnassri/har-schema\n[david-image]: https://img.shields.io/david/ahmadnassri/har-schema.svg?style=flat-square\n\n[dependencyci-url]: https://dependencyci.com/github/ahmadnassri/har-schema\n[dependencyci-image]: https://dependencyci.com/github/ahmadnassri/har-schema/badge?style=flat-square\n\n[spec]: https://github.com/ahmadnassri/har-spec/blob/master/versions/1.2.md\n[validator]: https://github.com/ahmadnassri/har-validator\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/har-schema",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Extremely fast HTTP Archive (HAR) validator using JSON Schema",
                  "devDependencies": {
                    "tap": "^12.0.1"
                  },
                  "engines": {
                    "node": ">=6"
                  },
                  "files": [
                    "lib"
                  ],
                  "homepage": "https://github.com/ahmadnassri/node-har-validator",
                  "keywords": [
                    "har",
                    "cli",
                    "ajv",
                    "http",
                    "archive",
                    "validate",
                    "validator"
                  ],
                  "license": "MIT",
                  "main": "lib/promise.js",
                  "name": "har-validator",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/ahmadnassri/node-har-validator.git"
                  },
                  "scripts": {
                    "lint": "npx run-p lint:*",
                    "lint:deps": "npx updated",
                    "lint:ec": "npx editorconfig-checker .",
                    "lint:js": "npx eslint .",
                    "lint:md": "npx remark --quiet --frail .",
                    "open:coverage": "opener coverage/lcov-report/index.html",
                    "test": "tap test --coverage-report=lcov --no-browser"
                  },
                  "version": "5.1.3",
                  "readme": "# HAR Validator\n\n[![License][license-image]][license-url] [![version][npm-image]][npm-url] [![Build Status][circle-image]][circle-url]\n\n> Extremely fast HTTP Archive ([HAR](https://github.com/ahmadnassri/har-spec/blob/master/versions/1.2.md)) validator using JSON Schema.\n\n## Install\n\n```bash\nnpm install har-validator\n```\n\n## CLI Usage\n\nPlease refer to [`har-cli`](https://github.com/ahmadnassri/har-cli) for more info.\n\n## API\n\n**Note**: as of [`v2.0.0`](https://github.com/ahmadnassri/node-har-validator/releases/tag/v2.0.0) this module defaults to Promise based API. _For backward compatibility with `v1.x` an [async/callback API](docs/async.md) is also provided_\n\n- [async API](docs/async.md)\n- [callback API](docs/async.md)\n- [Promise API](docs/promise.md) _(default)_\n\n---\n> Author: [Ahmad Nassri](https://www.ahmadnassri.com/) &bull; \n> Github: [@ahmadnassri](https://github.com/ahmadnassri) &bull; \n> Twitter: [@ahmadnassri](https://twitter.com/ahmadnassri)\n\n[license-url]: LICENSE\n[license-image]: https://img.shields.io/github/license/ahmadnassri/node-har-validator.svg?style=for-the-badge&logo=circleci\n\n[circle-url]: https://circleci.com/gh/ahmadnassri/workflows/node-har-validator\n[circle-image]: https://img.shields.io/circleci/project/github/ahmadnassri/node-har-validator/master.svg?style=for-the-badge&logo=circleci\n\n[npm-url]: https://www.npmjs.com/package/har-validator\n[npm-image]: https://img.shields.io/npm/v/har-validator.svg?style=for-the-badge&logo=npm\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "ajv": "^6.5.5",
                    "har-schema": "^2.0.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/har-validator",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "http-signature": {
                  "_args": [
                    [
                      "http-signature@1.2.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "http-signature@1.2.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "http-signature@1.2.0",
                  "_id": "http-signature@1.2.0",
                  "_integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
                  "_location": "/http-signature",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "http-signature@1.2.0",
                    "name": "http-signature",
                    "escapedName": "http-signature",
                    "rawSpec": "1.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.2.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
                  "_spec": "1.2.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Joyent, Inc"
                  },
                  "bugs": {
                    "url": "https://github.com/joyent/node-http-signature/issues"
                  },
                  "contributors": [
                    {
                      "name": "Mark Cavage",
                      "email": "mcavage@gmail.com"
                    },
                    {
                      "name": "David I. Lehn",
                      "email": "dil@lehn.org"
                    },
                    {
                      "name": "Patrick Mooney",
                      "email": "patrick.f.mooney@gmail.com"
                    }
                  ],
                  "dependencies": {
                    "assert-plus": {
                      "_args": [
                        [
                          "assert-plus@1.0.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "assert-plus@1.0.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "assert-plus@1.0.0",
                      "_id": "assert-plus@1.0.0",
                      "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                      "_location": "/assert-plus",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "assert-plus@1.0.0",
                        "name": "assert-plus",
                        "escapedName": "assert-plus",
                        "rawSpec": "1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.0"
                      },
                      "_requiredBy": [
                        "/dashdash",
                        "/getpass",
                        "/http-signature",
                        "/jsprim",
                        "/sshpk",
                        "/verror"
                      ],
                      "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                      "_spec": "1.0.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Mark Cavage",
                        "email": "mcavage@gmail.com"
                      },
                      "bugs": {
                        "url": "https://github.com/mcavage/node-assert-plus/issues"
                      },
                      "contributors": [
                        {
                          "name": "Dave Eddy",
                          "email": "dave@daveeddy.com"
                        },
                        {
                          "name": "Fred Kuo",
                          "email": "fred.kuo@joyent.com"
                        },
                        {
                          "name": "Lars-Magnus Skog",
                          "email": "ralphtheninja@riseup.net"
                        },
                        {
                          "name": "Mark Cavage",
                          "email": "mcavage@gmail.com"
                        },
                        {
                          "name": "Patrick Mooney",
                          "email": "pmooney@pfmooney.com"
                        },
                        {
                          "name": "Rob Gulewich",
                          "email": "robert.gulewich@joyent.com"
                        }
                      ],
                      "dependencies": {},
                      "description": "Extra assertions on top of node's assert module",
                      "devDependencies": {
                        "faucet": "0.0.1",
                        "tape": "4.2.2"
                      },
                      "engines": {
                        "node": ">=0.8"
                      },
                      "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                      "license": "MIT",
                      "main": "./assert.js",
                      "name": "assert-plus",
                      "optionalDependencies": {},
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/mcavage/node-assert-plus.git"
                      },
                      "scripts": {
                        "test": "tape tests/*.js | ./node_modules/.bin/faucet"
                      },
                      "version": "1.0.0",
                      "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                      "readmeFilename": "README.md",
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "jsprim": {
                      "_args": [
                        [
                          "jsprim@1.4.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "jsprim@1.4.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "jsprim@1.4.1",
                      "_id": "jsprim@1.4.1",
                      "_integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
                      "_location": "/jsprim",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "jsprim@1.4.1",
                        "name": "jsprim",
                        "escapedName": "jsprim",
                        "rawSpec": "1.4.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.4.1"
                      },
                      "_requiredBy": [
                        "/http-signature"
                      ],
                      "_resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
                      "_spec": "1.4.1",
                      "_where": "/path/to/project/packages/shared",
                      "bugs": {
                        "url": "https://github.com/joyent/node-jsprim/issues"
                      },
                      "dependencies": {
                        "assert-plus": {
                          "_args": "[Circular]",
                          "_from": "assert-plus@1.0.0",
                          "_id": "assert-plus@1.0.0",
                          "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                          "_location": "/assert-plus",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "assert-plus@1.0.0",
                            "name": "assert-plus",
                            "escapedName": "assert-plus",
                            "rawSpec": "1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.0"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                          "_spec": "1.0.0",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "contributors": "[Circular]",
                          "dependencies": {},
                          "description": "Extra assertions on top of node's assert module",
                          "devDependencies": "[Circular]",
                          "engines": "[Circular]",
                          "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                          "license": "MIT",
                          "main": "./assert.js",
                          "name": "assert-plus",
                          "optionalDependencies": "[Circular]",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "1.0.0",
                          "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                          "readmeFilename": "README.md",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "assert-plus"
                        },
                        "extsprintf": {
                          "_args": [
                            [
                              "extsprintf@1.3.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "extsprintf@1.3.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "extsprintf@1.3.0",
                          "_id": "extsprintf@1.3.0",
                          "_integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
                          "_location": "/extsprintf",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "extsprintf@1.3.0",
                            "name": "extsprintf",
                            "escapedName": "extsprintf",
                            "rawSpec": "1.3.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.3.0"
                          },
                          "_requiredBy": [
                            "/jsprim",
                            "/verror"
                          ],
                          "_resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
                          "_spec": "1.3.0",
                          "_where": "/path/to/project/packages/shared",
                          "bugs": {
                            "url": "https://github.com/davepacheco/node-extsprintf/issues"
                          },
                          "description": "extended POSIX-style sprintf",
                          "engines": [
                            "node >=0.6.0"
                          ],
                          "homepage": "https://github.com/davepacheco/node-extsprintf#readme",
                          "license": "MIT",
                          "main": "./lib/extsprintf.js",
                          "name": "extsprintf",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/davepacheco/node-extsprintf.git"
                          },
                          "version": "1.3.0",
                          "readme": "# extsprintf: extended POSIX-style sprintf\n\nStripped down version of s[n]printf(3c).  We make a best effort to throw an\nexception when given a format string we don't understand, rather than ignoring\nit, so that we won't break existing programs if/when we go implement the rest\nof this.\n\nThis implementation currently supports specifying\n\n* field alignment ('-' flag),\n* zero-pad ('0' flag)\n* always show numeric sign ('+' flag),\n* field width\n* conversions for strings, decimal integers, and floats (numbers).\n* argument size specifiers.  These are all accepted but ignored, since\n  Javascript has no notion of the physical size of an argument.\n\nEverything else is currently unsupported, most notably: precision, unsigned\nnumbers, non-decimal numbers, and characters.\n\nBesides the usual POSIX conversions, this implementation supports:\n\n* `%j`: pretty-print a JSON object (using node's \"inspect\")\n* `%r`: pretty-print an Error object\n\n# Example\n\nFirst, install it:\n\n    # npm install extsprintf\n\nNow, use it:\n\n    var mod_extsprintf = require('extsprintf');\n    console.log(mod_extsprintf.sprintf('hello %25s', 'world'));\n\noutputs:\n\n    hello                     world\n\n# Also supported\n\n**printf**: same args as sprintf, but prints the result to stdout\n\n**fprintf**: same args as sprintf, preceded by a Node stream.  Prints the result\nto the given stream.\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "devDependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/extsprintf",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "json-schema": {
                          "_args": [
                            [
                              "json-schema@0.2.3",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "json-schema@0.2.3",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "json-schema@0.2.3",
                          "_id": "json-schema@0.2.3",
                          "_integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=",
                          "_location": "/json-schema",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "json-schema@0.2.3",
                            "name": "json-schema",
                            "escapedName": "json-schema",
                            "rawSpec": "0.2.3",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.2.3"
                          },
                          "_requiredBy": [
                            "/jsprim"
                          ],
                          "_resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
                          "_spec": "0.2.3",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Kris Zyp"
                          },
                          "bugs": {
                            "url": "https://github.com/kriszyp/json-schema/issues"
                          },
                          "description": "JSON Schema validation and specifications",
                          "devDependencies": {
                            "vows": "*"
                          },
                          "directories": {
                            "lib": "./lib"
                          },
                          "homepage": "https://github.com/kriszyp/json-schema#readme",
                          "keywords": [
                            "json",
                            "schema"
                          ],
                          "licenses": [
                            {
                              "type": "AFLv2.1",
                              "url": "http://trac.dojotoolkit.org/browser/dojo/trunk/LICENSE#L43"
                            },
                            {
                              "type": "BSD",
                              "url": "http://trac.dojotoolkit.org/browser/dojo/trunk/LICENSE#L13"
                            }
                          ],
                          "main": "./lib/validate.js",
                          "maintainers": [
                            {
                              "name": "Kris Zyp",
                              "email": "kriszyp@gmail.com"
                            }
                          ],
                          "name": "json-schema",
                          "repository": {
                            "type": "git",
                            "url": "git+ssh://git@github.com/kriszyp/json-schema.git"
                          },
                          "scripts": {
                            "test": "echo TESTS DISABLED vows --spec test/*.js"
                          },
                          "version": "0.2.3",
                          "readme": "JSON Schema is a repository for the JSON Schema specification, reference schemas and a CommonJS implementation of JSON Schema (not the only JavaScript implementation of JSON Schema, JSV is another excellent JavaScript validator).\r\n\r\nCode is licensed under the AFL or BSD license as part of the Persevere \r\nproject which is administered under the Dojo foundation,\r\nand all contributions require a Dojo CLA.",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/json-schema",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "verror": {
                          "_args": [
                            [
                              "verror@1.10.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "verror@1.10.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "verror@1.10.0",
                          "_id": "verror@1.10.0",
                          "_integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
                          "_location": "/verror",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "verror@1.10.0",
                            "name": "verror",
                            "escapedName": "verror",
                            "rawSpec": "1.10.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.10.0"
                          },
                          "_requiredBy": [
                            "/jsprim"
                          ],
                          "_resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
                          "_spec": "1.10.0",
                          "_where": "/path/to/project/packages/shared",
                          "bugs": {
                            "url": "https://github.com/davepacheco/node-verror/issues"
                          },
                          "dependencies": {
                            "assert-plus": {
                              "_args": "[Circular]",
                              "_from": "assert-plus@1.0.0",
                              "_id": "assert-plus@1.0.0",
                              "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                              "_location": "/assert-plus",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "assert-plus@1.0.0",
                                "name": "assert-plus",
                                "escapedName": "assert-plus",
                                "rawSpec": "1.0.0",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.0.0"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                              "_spec": "1.0.0",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "contributors": "[Circular]",
                              "dependencies": {},
                              "description": "Extra assertions on top of node's assert module",
                              "devDependencies": "[Circular]",
                              "engines": "[Circular]",
                              "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                              "license": "MIT",
                              "main": "./assert.js",
                              "name": "assert-plus",
                              "optionalDependencies": "[Circular]",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "1.0.0",
                              "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                              "readmeFilename": "README.md",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "assert-plus"
                            },
                            "core-util-is": {
                              "_args": [
                                [
                                  "core-util-is@1.0.2",
                                  "/path/to/project/packages/shared"
                                ],
                                [
                                  "core-util-is@1.0.2",
                                  "/path/to/project/packages/shared"
                                ]
                              ],
                              "_from": "core-util-is@1.0.2",
                              "_id": "core-util-is@1.0.2",
                              "_integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
                              "_location": "/core-util-is",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "core-util-is@1.0.2",
                                "name": "core-util-is",
                                "escapedName": "core-util-is",
                                "rawSpec": "1.0.2",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.0.2"
                              },
                              "_requiredBy": [
                                "/verror",
                                "/winston-transport/readable-stream"
                              ],
                              "_resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
                              "_spec": "1.0.2",
                              "_where": "/path/to/project/packages/shared",
                              "author": {
                                "name": "Isaac Z. Schlueter",
                                "email": "i@izs.me",
                                "url": "http://blog.izs.me/"
                              },
                              "bugs": {
                                "url": "https://github.com/isaacs/core-util-is/issues"
                              },
                              "description": "The `util.is*` functions introduced in Node v0.12.",
                              "devDependencies": {
                                "tap": "^2.3.0"
                              },
                              "homepage": "https://github.com/isaacs/core-util-is#readme",
                              "keywords": [
                                "util",
                                "isBuffer",
                                "isArray",
                                "isNumber",
                                "isString",
                                "isRegExp",
                                "isThis",
                                "isThat",
                                "polyfill"
                              ],
                              "license": "MIT",
                              "main": "lib/util.js",
                              "name": "core-util-is",
                              "repository": {
                                "type": "git",
                                "url": "git://github.com/isaacs/core-util-is.git"
                              },
                              "scripts": {
                                "test": "tap test.js"
                              },
                              "version": "1.0.2",
                              "readme": "# core-util-is\n\nThe `util.is*` functions introduced in Node v0.12.\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/path/to/project/packages/shared/node_modules/core-util-is",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "core-util-is"
                            },
                            "extsprintf": {
                              "_args": "[Circular]",
                              "_from": "extsprintf@1.3.0",
                              "_id": "extsprintf@1.3.0",
                              "_integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
                              "_location": "/extsprintf",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "extsprintf@1.3.0",
                                "name": "extsprintf",
                                "escapedName": "extsprintf",
                                "rawSpec": "1.3.0",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.3.0"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
                              "_spec": "1.3.0",
                              "_where": "/path/to/project/packages/shared",
                              "bugs": "[Circular]",
                              "description": "extended POSIX-style sprintf",
                              "engines": "[Circular]",
                              "homepage": "https://github.com/davepacheco/node-extsprintf#readme",
                              "license": "MIT",
                              "main": "./lib/extsprintf.js",
                              "name": "extsprintf",
                              "repository": "[Circular]",
                              "version": "1.3.0",
                              "readme": "# extsprintf: extended POSIX-style sprintf\n\nStripped down version of s[n]printf(3c).  We make a best effort to throw an\nexception when given a format string we don't understand, rather than ignoring\nit, so that we won't break existing programs if/when we go implement the rest\nof this.\n\nThis implementation currently supports specifying\n\n* field alignment ('-' flag),\n* zero-pad ('0' flag)\n* always show numeric sign ('+' flag),\n* field width\n* conversions for strings, decimal integers, and floats (numbers).\n* argument size specifiers.  These are all accepted but ignored, since\n  Javascript has no notion of the physical size of an argument.\n\nEverything else is currently unsupported, most notably: precision, unsigned\nnumbers, non-decimal numbers, and characters.\n\nBesides the usual POSIX conversions, this implementation supports:\n\n* `%j`: pretty-print a JSON object (using node's \"inspect\")\n* `%r`: pretty-print an Error object\n\n# Example\n\nFirst, install it:\n\n    # npm install extsprintf\n\nNow, use it:\n\n    var mod_extsprintf = require('extsprintf');\n    console.log(mod_extsprintf.sprintf('hello %25s', 'world'));\n\noutputs:\n\n    hello                     world\n\n# Also supported\n\n**printf**: same args as sprintf, but prints the result to stdout\n\n**fprintf**: same args as sprintf, preceded by a Node stream.  Prints the result\nto the given stream.\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "devDependencies": "[Circular]",
                              "optionalDependencies": "[Circular]",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/extsprintf",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "extsprintf"
                            }
                          },
                          "description": "richer JavaScript errors",
                          "engines": [
                            "node >=0.6.0"
                          ],
                          "homepage": "https://github.com/davepacheco/node-verror#readme",
                          "license": "MIT",
                          "main": "./lib/verror.js",
                          "name": "verror",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/davepacheco/node-verror.git"
                          },
                          "scripts": {
                            "test": "make test"
                          },
                          "version": "1.10.0",
                          "readme": "# verror: rich JavaScript errors\n\nThis module provides several classes in support of Joyent's [Best Practices for\nError Handling in Node.js](http://www.joyent.com/developers/node/design/errors).\nIf you find any of the behavior here confusing or surprising, check out that\ndocument first.\n\nThe error classes here support:\n\n* printf-style arguments for the message\n* chains of causes\n* properties to provide extra information about the error\n* creating your own subclasses that support all of these\n\nThe classes here are:\n\n* **VError**, for chaining errors while preserving each one's error message.\n  This is useful in servers and command-line utilities when you want to\n  propagate an error up a call stack, but allow various levels to add their own\n  context.  See examples below.\n* **WError**, for wrapping errors while hiding the lower-level messages from the\n  top-level error.  This is useful for API endpoints where you don't want to\n  expose internal error messages, but you still want to preserve the error chain\n  for logging and debugging.\n* **SError**, which is just like VError but interprets printf-style arguments\n  more strictly.\n* **MultiError**, which is just an Error that encapsulates one or more other\n  errors.  (This is used for parallel operations that return several errors.)\n\n\n# Quick start\n\nFirst, install the package:\n\n    npm install verror\n\nIf nothing else, you can use VError as a drop-in replacement for the built-in\nJavaScript Error class, with the addition of printf-style messages:\n\n```javascript\nvar err = new VError('missing file: \"%s\"', '/etc/passwd');\nconsole.log(err.message);\n```\n\nThis prints:\n\n    missing file: \"/etc/passwd\"\n\nYou can also pass a `cause` argument, which is any other Error object:\n\n```javascript\nvar fs = require('fs');\nvar filename = '/nonexistent';\nfs.stat(filename, function (err1) {\n\tvar err2 = new VError(err1, 'stat \"%s\"', filename);\n\tconsole.error(err2.message);\n});\n```\n\nThis prints out:\n\n    stat \"/nonexistent\": ENOENT, stat '/nonexistent'\n\nwhich resembles how Unix programs typically report errors:\n\n    $ sort /nonexistent\n    sort: open failed: /nonexistent: No such file or directory\n\nTo match the Unixy feel, when you print out the error, just prepend the\nprogram's name to the VError's `message`.  Or just call\n[node-cmdutil.fail(your_verror)](https://github.com/joyent/node-cmdutil), which\ndoes this for you.\n\nYou can get the next-level Error using `err.cause()`:\n\n```javascript\nconsole.error(err2.cause().message);\n```\n\nprints:\n\n    ENOENT, stat '/nonexistent'\n\nOf course, you can chain these as many times as you want, and it works with any\nkind of Error:\n\n```javascript\nvar err1 = new Error('No such file or directory');\nvar err2 = new VError(err1, 'failed to stat \"%s\"', '/junk');\nvar err3 = new VError(err2, 'request failed');\nconsole.error(err3.message);\n```\n\nThis prints:\n\n    request failed: failed to stat \"/junk\": No such file or directory\n\nThe idea is that each layer in the stack annotates the error with a description\nof what it was doing.  The end result is a message that explains what happened\nat each level.\n\nYou can also decorate Error objects with additional information so that callers\ncan not only handle each kind of error differently, but also construct their own\nerror messages (e.g., to localize them, format them, group them by type, and so\non).  See the example below.\n\n\n# Deeper dive\n\nThe two main goals for VError are:\n\n* **Make it easy to construct clear, complete error messages intended for\n  people.**  Clear error messages greatly improve both user experience and\n  debuggability, so we wanted to make it easy to build them.  That's why the\n  constructor takes printf-style arguments.\n* **Make it easy to construct objects with programmatically-accessible\n  metadata** (which we call _informational properties_).  Instead of just saying\n  \"connection refused while connecting to 192.168.1.2:80\", you can add\n  properties like `\"ip\": \"192.168.1.2\"` and `\"tcpPort\": 80`.  This can be used\n  for feeding into monitoring systems, analyzing large numbers of Errors (as\n  from a log file), or localizing error messages.\n\nTo really make this useful, it also needs to be easy to compose Errors:\nhigher-level code should be able to augment the Errors reported by lower-level\ncode to provide a more complete description of what happened.  Instead of saying\n\"connection refused\", you can say \"operation X failed: connection refused\".\nThat's why VError supports `causes`.\n\nIn order for all this to work, programmers need to know that it's generally safe\nto wrap lower-level Errors with higher-level ones.  If you have existing code\nthat handles Errors produced by a library, you should be able to wrap those\nErrors with a VError to add information without breaking the error handling\ncode.  There are two obvious ways that this could break such consumers:\n\n* The error's name might change.  People typically use `name` to determine what\n  kind of Error they've got.  To ensure compatibility, you can create VErrors\n  with custom names, but this approach isn't great because it prevents you from\n  representing complex failures.  For this reason, VError provides\n  `findCauseByName`, which essentially asks: does this Error _or any of its\n  causes_ have this specific type?  If error handling code uses\n  `findCauseByName`, then subsystems can construct very specific causal chains\n  for debuggability and still let people handle simple cases easily.  There's an\n  example below.\n* The error's properties might change.  People often hang additional properties\n  off of Error objects.  If we wrap an existing Error in a new Error, those\n  properties would be lost unless we copied them.  But there are a variety of\n  both standard and non-standard Error properties that should _not_ be copied in\n  this way: most obviously `name`, `message`, and `stack`, but also `fileName`,\n  `lineNumber`, and a few others.  Plus, it's useful for some Error subclasses\n  to have their own private properties -- and there'd be no way to know whether\n  these should be copied.  For these reasons, VError first-classes these\n  information properties.  You have to provide them in the constructor, you can\n  only fetch them with the `info()` function, and VError takes care of making\n  sure properties from causes wind up in the `info()` output.\n\nLet's put this all together with an example from the node-fast RPC library.\nnode-fast implements a simple RPC protocol for Node programs.  There's a server\nand client interface, and clients make RPC requests to servers.  Let's say the\nserver fails with an UnauthorizedError with message \"user 'bob' is not\nauthorized\".  The client wraps all server errors with a FastServerError.  The\nclient also wraps all request errors with a FastRequestError that includes the\nname of the RPC call being made.  The result of this failed RPC might look like\nthis:\n\n    name: FastRequestError\n    message: \"request failed: server error: user 'bob' is not authorized\"\n    rpcMsgid: <unique identifier for this request>\n    rpcMethod: GetObject\n    cause:\n        name: FastServerError\n        message: \"server error: user 'bob' is not authorized\"\n        cause:\n            name: UnauthorizedError\n            message: \"user 'bob' is not authorized\"\n            rpcUser: \"bob\"\n\nWhen the caller uses `VError.info()`, the information properties are collapsed\nso that it looks like this:\n\n    message: \"request failed: server error: user 'bob' is not authorized\"\n    rpcMsgid: <unique identifier for this request>\n    rpcMethod: GetObject\n    rpcUser: \"bob\"\n\nTaking this apart:\n\n* The error's message is a complete description of the problem.  The caller can\n  report this directly to its caller, which can potentially make its way back to\n  an end user (if appropriate).  It can also be logged.\n* The caller can tell that the request failed on the server, rather than as a\n  result of a client problem (e.g., failure to serialize the request), a\n  transport problem (e.g., failure to connect to the server), or something else\n  (e.g., a timeout).  They do this using `findCauseByName('FastServerError')`\n  rather than checking the `name` field directly.\n* If the caller logs this error, the logs can be analyzed to aggregate\n  errors by cause, by RPC method name, by user, or whatever.  Or the\n  error can be correlated with other events for the same rpcMsgid.\n* It wasn't very hard for any part of the code to contribute to this Error.\n  Each part of the stack has just a few lines to provide exactly what it knows,\n  with very little boilerplate.\n\nIt's not expected that you'd use these complex forms all the time.  Despite\nsupporting the complex case above, you can still just do:\n\n   new VError(\"my service isn't working\");\n\nfor the simple cases.\n\n\n# Reference: VError, WError, SError\n\nVError, WError, and SError are convenient drop-in replacements for `Error` that\nsupport printf-style arguments, first-class causes, informational properties,\nand other useful features.\n\n\n## Constructors\n\nThe VError constructor has several forms:\n\n```javascript\n/*\n * This is the most general form.  You can specify any supported options\n * (including \"cause\" and \"info\") this way.\n */\nnew VError(options, sprintf_args...)\n\n/*\n * This is a useful shorthand when the only option you need is \"cause\".\n */\nnew VError(cause, sprintf_args...)\n\n/*\n * This is a useful shorthand when you don't need any options at all.\n */\nnew VError(sprintf_args...)\n```\n\nAll of these forms construct a new VError that behaves just like the built-in\nJavaScript `Error` class, with some additional methods described below.\n\nIn the first form, `options` is a plain object with any of the following\noptional properties:\n\nOption name      | Type             | Meaning\n---------------- | ---------------- | -------\n`name`           | string           | Describes what kind of error this is.  This is intended for programmatic use to distinguish between different kinds of errors.  Note that in modern versions of Node.js, this name is ignored in the `stack` property value, but callers can still use the `name` property to get at it.\n`cause`          | any Error object | Indicates that the new error was caused by `cause`.  See `cause()` below.  If unspecified, the cause will be `null`.\n`strict`         | boolean          | If true, then `null` and `undefined` values in `sprintf_args` are passed through to `sprintf()`.  Otherwise, these are replaced with the strings `'null'`, and '`undefined`', respectively.\n`constructorOpt` | function         | If specified, then the stack trace for this error ends at function `constructorOpt`.  Functions called by `constructorOpt` will not show up in the stack.  This is useful when this class is subclassed.\n`info`           | object           | Specifies arbitrary informational properties that are available through the `VError.info(err)` static class method.  See that method for details.\n\nThe second form is equivalent to using the first form with the specified `cause`\nas the error's cause.  This form is distinguished from the first form because\nthe first argument is an Error.\n\nThe third form is equivalent to using the first form with all default option\nvalues.  This form is distinguished from the other forms because the first\nargument is not an object or an Error.\n\nThe `WError` constructor is used exactly the same way as the `VError`\nconstructor.  The `SError` constructor is also used the same way as the\n`VError` constructor except that in all cases, the `strict` property is\noverriden to `true.\n\n\n## Public properties\n\n`VError`, `WError`, and `SError` all provide the same public properties as\nJavaScript's built-in Error objects.\n\nProperty name | Type   | Meaning\n------------- | ------ | -------\n`name`        | string | Programmatically-usable name of the error.\n`message`     | string | Human-readable summary of the failure.  Programmatically-accessible details are provided through `VError.info(err)` class method.\n`stack`       | string | Human-readable stack trace where the Error was constructed.\n\nFor all of these classes, the printf-style arguments passed to the constructor\nare processed with `sprintf()` to form a message.  For `WError`, this becomes\nthe complete `message` property.  For `SError` and `VError`, this message is\nprepended to the message of the cause, if any (with a suitable separator), and\nthe result becomes the `message` property.\n\nThe `stack` property is managed entirely by the underlying JavaScript\nimplementation.  It's generally implemented using a getter function because\nconstructing the human-readable stack trace is somewhat expensive.\n\n## Class methods\n\nThe following methods are defined on the `VError` class and as exported\nfunctions on the `verror` module.  They're defined this way rather than using\nmethods on VError instances so that they can be used on Errors not created with\n`VError`.\n\n### `VError.cause(err)`\n\nThe `cause()` function returns the next Error in the cause chain for `err`, or\n`null` if there is no next error.  See the `cause` argument to the constructor.\nErrors can have arbitrarily long cause chains.  You can walk the `cause` chain\nby invoking `VError.cause(err)` on each subsequent return value.  If `err` is\nnot a `VError`, the cause is `null`.\n\n### `VError.info(err)`\n\nReturns an object with all of the extra error information that's been associated\nwith this Error and all of its causes.  These are the properties passed in using\nthe `info` option to the constructor.  Properties not specified in the\nconstructor for this Error are implicitly inherited from this error's cause.\n\nThese properties are intended to provide programmatically-accessible metadata\nabout the error.  For an error that indicates a failure to resolve a DNS name,\ninformational properties might include the DNS name to be resolved, or even the\nlist of resolvers used to resolve it.  The values of these properties should\ngenerally be plain objects (i.e., consisting only of null, undefined, numbers,\nbooleans, strings, and objects and arrays containing only other plain objects).\n\n### `VError.fullStack(err)`\n\nReturns a string containing the full stack trace, with all nested errors recursively\nreported as `'caused by:' + err.stack`.\n\n### `VError.findCauseByName(err, name)`\n\nThe `findCauseByName()` function traverses the cause chain for `err`, looking\nfor an error whose `name` property matches the passed in `name` value. If no\nmatch is found, `null` is returned.\n\nIf all you want is to know _whether_ there's a cause (and you don't care what it\nis), you can use `VError.hasCauseWithName(err, name)`.\n\nIf a vanilla error or a non-VError error is passed in, then there is no cause\nchain to traverse. In this scenario, the function will check the `name`\nproperty of only `err`.\n\n### `VError.hasCauseWithName(err, name)`\n\nReturns true if and only if `VError.findCauseByName(err, name)` would return\na non-null value.  This essentially determines whether `err` has any cause in\nits cause chain that has name `name`.\n\n### `VError.errorFromList(errors)`\n\nGiven an array of Error objects (possibly empty), return a single error\nrepresenting the whole collection of errors.  If the list has:\n\n* 0 elements, returns `null`\n* 1 element, returns the sole error\n* more than 1 element, returns a MultiError referencing the whole list\n\nThis is useful for cases where an operation may produce any number of errors,\nand you ultimately want to implement the usual `callback(err)` pattern.  You can\naccumulate the errors in an array and then invoke\n`callback(VError.errorFromList(errors))` when the operation is complete.\n\n\n### `VError.errorForEach(err, func)`\n\nConvenience function for iterating an error that may itself be a MultiError.\n\nIn all cases, `err` must be an Error.  If `err` is a MultiError, then `func` is\ninvoked as `func(errorN)` for each of the underlying errors of the MultiError.\nIf `err` is any other kind of error, `func` is invoked once as `func(err)`.  In\nall cases, `func` is invoked synchronously.\n\nThis is useful for cases where an operation may produce any number of warnings\nthat may be encapsulated with a MultiError -- but may not be.\n\nThis function does not iterate an error's cause chain.\n\n\n## Examples\n\nThe \"Demo\" section above covers several basic cases.  Here's a more advanced\ncase:\n\n```javascript\nvar err1 = new VError('something bad happened');\n/* ... */\nvar err2 = new VError({\n    'name': 'ConnectionError',\n    'cause': err1,\n    'info': {\n        'errno': 'ECONNREFUSED',\n        'remote_ip': '127.0.0.1',\n        'port': 215\n    }\n}, 'failed to connect to \"%s:%d\"', '127.0.0.1', 215);\n\nconsole.log(err2.message);\nconsole.log(err2.name);\nconsole.log(VError.info(err2));\nconsole.log(err2.stack);\n```\n\nThis outputs:\n\n    failed to connect to \"127.0.0.1:215\": something bad happened\n    ConnectionError\n    { errno: 'ECONNREFUSED', remote_ip: '127.0.0.1', port: 215 }\n    ConnectionError: failed to connect to \"127.0.0.1:215\": something bad happened\n        at Object.<anonymous> (/home/dap/node-verror/examples/info.js:5:12)\n        at Module._compile (module.js:456:26)\n        at Object.Module._extensions..js (module.js:474:10)\n        at Module.load (module.js:356:32)\n        at Function.Module._load (module.js:312:12)\n        at Function.Module.runMain (module.js:497:10)\n        at startup (node.js:119:16)\n        at node.js:935:3\n\nInformation properties are inherited up the cause chain, with values at the top\nof the chain overriding same-named values lower in the chain.  To continue that\nexample:\n\n```javascript\nvar err3 = new VError({\n    'name': 'RequestError',\n    'cause': err2,\n    'info': {\n        'errno': 'EBADREQUEST'\n    }\n}, 'request failed');\n\nconsole.log(err3.message);\nconsole.log(err3.name);\nconsole.log(VError.info(err3));\nconsole.log(err3.stack);\n```\n\nThis outputs:\n\n    request failed: failed to connect to \"127.0.0.1:215\": something bad happened\n    RequestError\n    { errno: 'EBADREQUEST', remote_ip: '127.0.0.1', port: 215 }\n    RequestError: request failed: failed to connect to \"127.0.0.1:215\": something bad happened\n        at Object.<anonymous> (/home/dap/node-verror/examples/info.js:20:12)\n        at Module._compile (module.js:456:26)\n        at Object.Module._extensions..js (module.js:474:10)\n        at Module.load (module.js:356:32)\n        at Function.Module._load (module.js:312:12)\n        at Function.Module.runMain (module.js:497:10)\n        at startup (node.js:119:16)\n        at node.js:935:3\n\nYou can also print the complete stack trace of combined `Error`s by using\n`VError.fullStack(err).`\n\n```javascript\nvar err1 = new VError('something bad happened');\n/* ... */\nvar err2 = new VError(err1, 'something really bad happened here');\n\nconsole.log(VError.fullStack(err2));\n```\n\nThis outputs:\n\n    VError: something really bad happened here: something bad happened\n        at Object.<anonymous> (/home/dap/node-verror/examples/fullStack.js:5:12)\n        at Module._compile (module.js:409:26)\n        at Object.Module._extensions..js (module.js:416:10)\n        at Module.load (module.js:343:32)\n        at Function.Module._load (module.js:300:12)\n        at Function.Module.runMain (module.js:441:10)\n        at startup (node.js:139:18)\n        at node.js:968:3\n    caused by: VError: something bad happened\n        at Object.<anonymous> (/home/dap/node-verror/examples/fullStack.js:3:12)\n        at Module._compile (module.js:409:26)\n        at Object.Module._extensions..js (module.js:416:10)\n        at Module.load (module.js:343:32)\n        at Function.Module._load (module.js:300:12)\n        at Function.Module.runMain (module.js:441:10)\n        at startup (node.js:139:18)\n        at node.js:968:3\n\n`VError.fullStack` is also safe to use on regular `Error`s, so feel free to use\nit whenever you need to extract the stack trace from an `Error`, regardless if\nit's a `VError` or not.\n\n# Reference: MultiError\n\nMultiError is an Error class that represents a group of Errors.  This is used\nwhen you logically need to provide a single Error, but you want to preserve\ninformation about multiple underying Errors.  A common case is when you execute\nseveral operations in parallel and some of them fail.\n\nMultiErrors are constructed as:\n\n```javascript\nnew MultiError(error_list)\n```\n\n`error_list` is an array of at least one `Error` object.\n\nThe cause of the MultiError is the first error provided.  None of the other\n`VError` options are supported.  The `message` for a MultiError consists the\n`message` from the first error, prepended with a message indicating that there\nwere other errors.\n\nFor example:\n\n```javascript\nerr = new MultiError([\n    new Error('failed to resolve DNS name \"abc.example.com\"'),\n    new Error('failed to resolve DNS name \"def.example.com\"'),\n]);\n\nconsole.error(err.message);\n```\n\noutputs:\n\n    first of 2 errors: failed to resolve DNS name \"abc.example.com\"\n\nSee the convenience function `VError.errorFromList`, which is sometimes simpler\nto use than this constructor.\n\n## Public methods\n\n\n### `errors()`\n\nReturns an array of the errors used to construct this MultiError.\n\n\n# Contributing\n\nSee separate [contribution guidelines](CONTRIBUTING.md).\n",
                          "readmeFilename": "README.md",
                          "devDependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {
                            "assert-plus": "^1.0.0",
                            "core-util-is": "1.0.2",
                            "extsprintf": "^1.2.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/verror",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "utilities for primitive JavaScript types",
                      "engines": [
                        "node >=0.6.0"
                      ],
                      "homepage": "https://github.com/joyent/node-jsprim#readme",
                      "license": "MIT",
                      "main": "./lib/jsprim.js",
                      "name": "jsprim",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/joyent/node-jsprim.git"
                      },
                      "version": "1.4.1",
                      "readme": "# jsprim: utilities for primitive JavaScript types\n\nThis module provides miscellaneous facilities for working with strings,\nnumbers, dates, and objects and arrays of these basic types.\n\n\n### deepCopy(obj)\n\nCreates a deep copy of a primitive type, object, or array of primitive types.\n\n\n### deepEqual(obj1, obj2)\n\nReturns whether two objects are equal.\n\n\n### isEmpty(obj)\n\nReturns true if the given object has no properties and false otherwise.  This\nis O(1) (unlike `Object.keys(obj).length === 0`, which is O(N)).\n\n### hasKey(obj, key)\n\nReturns true if the given object has an enumerable, non-inherited property\ncalled `key`.  [For information on enumerability and ownership of properties, see\nthe MDN\ndocumentation.](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties)\n\n### forEachKey(obj, callback)\n\nLike Array.forEach, but iterates enumerable, owned properties of an object\nrather than elements of an array.  Equivalent to:\n\n    for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    callback(key, obj[key]);\n            }\n    }\n\n\n### flattenObject(obj, depth)\n\nFlattens an object up to a given level of nesting, returning an array of arrays\nof length \"depth + 1\", where the first \"depth\" elements correspond to flattened\ncolumns and the last element contains the remaining object .  For example:\n\n    flattenObject({\n        'I': {\n            'A': {\n                'i': {\n                    'datum1': [ 1, 2 ],\n                    'datum2': [ 3, 4 ]\n                },\n                'ii': {\n                    'datum1': [ 3, 4 ]\n                }\n            },\n            'B': {\n                'i': {\n                    'datum1': [ 5, 6 ]\n                },\n                'ii': {\n                    'datum1': [ 7, 8 ],\n                    'datum2': [ 3, 4 ],\n                },\n                'iii': {\n                }\n            }\n        },\n        'II': {\n            'A': {\n                'i': {\n                    'datum1': [ 1, 2 ],\n                    'datum2': [ 3, 4 ]\n                }\n            }\n        }\n    }, 3)\n\nbecomes:\n\n    [\n        [ 'I',  'A', 'i',   { 'datum1': [ 1, 2 ], 'datum2': [ 3, 4 ] } ],\n        [ 'I',  'A', 'ii',  { 'datum1': [ 3, 4 ] } ],\n        [ 'I',  'B', 'i',   { 'datum1': [ 5, 6 ] } ],\n        [ 'I',  'B', 'ii',  { 'datum1': [ 7, 8 ], 'datum2': [ 3, 4 ] } ],\n        [ 'I',  'B', 'iii', {} ],\n        [ 'II', 'A', 'i',   { 'datum1': [ 1, 2 ], 'datum2': [ 3, 4 ] } ]\n    ]\n\nThis function is strict: \"depth\" must be a non-negative integer and \"obj\" must\nbe a non-null object with at least \"depth\" levels of nesting under all keys.\n\n\n### flattenIter(obj, depth, func)\n\nThis is similar to `flattenObject` except that instead of returning an array,\nthis function invokes `func(entry)` for each `entry` in the array that\n`flattenObject` would return.  `flattenIter(obj, depth, func)` is logically\nequivalent to `flattenObject(obj, depth).forEach(func)`.  Importantly, this\nversion never constructs the full array.  Its memory usage is O(depth) rather\nthan O(n) (where `n` is the number of flattened elements).\n\nThere's another difference between `flattenObject` and `flattenIter` that's\nrelated to the special case where `depth === 0`.  In this case, `flattenObject`\nomits the array wrapping `obj` (which is regrettable).\n\n\n### pluck(obj, key)\n\nFetch nested property \"key\" from object \"obj\", traversing objects as needed.\nFor example, `pluck(obj, \"foo.bar.baz\")` is roughly equivalent to\n`obj.foo.bar.baz`, except that:\n\n1. If traversal fails, the resulting value is undefined, and no error is\n   thrown.  For example, `pluck({}, \"foo.bar\")` is just undefined.\n2. If \"obj\" has property \"key\" directly (without traversing), the\n   corresponding property is returned.  For example,\n   `pluck({ 'foo.bar': 1 }, 'foo.bar')` is 1, not undefined.  This is also\n   true recursively, so `pluck({ 'a': { 'foo.bar': 1 } }, 'a.foo.bar')` is\n   also 1, not undefined.\n\n\n### randElt(array)\n\nReturns an element from \"array\" selected uniformly at random.  If \"array\" is\nempty, throws an Error.\n\n\n### startsWith(str, prefix)\n\nReturns true if the given string starts with the given prefix and false\notherwise.\n\n\n### endsWith(str, suffix)\n\nReturns true if the given string ends with the given suffix and false\notherwise.\n\n\n### parseInteger(str, options)\n\nParses the contents of `str` (a string) as an integer. On success, the integer\nvalue is returned (as a number). On failure, an error is **returned** describing\nwhy parsing failed.\n\nBy default, leading and trailing whitespace characters are not allowed, nor are\ntrailing characters that are not part of the numeric representation. This\nbehaviour can be toggled by using the options below. The empty string (`''`) is\nnot considered valid input. If the return value cannot be precisely represented\nas a number (i.e., is smaller than `Number.MIN_SAFE_INTEGER` or larger than\n`Number.MAX_SAFE_INTEGER`), an error is returned. Additionally, the string\n`'-0'` will be parsed as the integer `0`, instead of as the IEEE floating point\nvalue `-0`.\n\nThis function accepts both upper and lowercase characters for digits, similar to\n`parseInt()`, `Number()`, and [strtol(3C)](https://illumos.org/man/3C/strtol).\n\nThe following may be specified in `options`:\n\nOption             | Type    | Default | Meaning\n------------------ | ------- | ------- | ---------------------------\nbase               | number  | 10      | numeric base (radix) to use, in the range 2 to 36\nallowSign          | boolean | true    | whether to interpret any leading `+` (positive) and `-` (negative) characters\nallowImprecise     | boolean | false   | whether to accept values that may have lost precision (past `MAX_SAFE_INTEGER` or below `MIN_SAFE_INTEGER`)\nallowPrefix        | boolean | false   | whether to interpret the prefixes `0b` (base 2), `0o` (base 8), `0t` (base 10), or `0x` (base 16)\nallowTrailing      | boolean | false   | whether to ignore trailing characters\ntrimWhitespace     | boolean | false   | whether to trim any leading or trailing whitespace/line terminators\nleadingZeroIsOctal | boolean | false   | whether a leading zero indicates octal\n\nNote that if `base` is unspecified, and `allowPrefix` or `leadingZeroIsOctal`\nare, then the leading characters can change the default base from 10. If `base`\nis explicitly specified and `allowPrefix` is true, then the prefix will only be\naccepted if it matches the specified base. `base` and `leadingZeroIsOctal`\ncannot be used together.\n\n**Context:** It's tricky to parse integers with JavaScript's built-in facilities\nfor several reasons:\n\n- `parseInt()` and `Number()` by default allow the base to be specified in the\n  input string by a prefix (e.g., `0x` for hex).\n- `parseInt()` allows trailing nonnumeric characters.\n- `Number(str)` returns 0 when `str` is the empty string (`''`).\n- Both functions return incorrect values when the input string represents a\n  valid integer outside the range of integers that can be represented precisely.\n  Specifically, `parseInt('9007199254740993')` returns 9007199254740992.\n- Both functions always accept `-` and `+` signs before the digit.\n- Some older JavaScript engines always interpret a leading 0 as indicating\n  octal, which can be surprising when parsing input from users who expect a\n  leading zero to be insignificant.\n\nWhile each of these may be desirable in some contexts, there are also times when\nnone of them are wanted. `parseInteger()` grants greater control over what\ninput's permissible.\n\n### iso8601(date)\n\nConverts a Date object to an ISO8601 date string of the form\n\"YYYY-MM-DDTHH:MM:SS.sssZ\".  This format is not customizable.\n\n\n### parseDateTime(str)\n\nParses a date expressed as a string, as either a number of milliseconds since\nthe epoch or any string format that Date accepts, giving preference to the\nformer where these two sets overlap (e.g., strings containing small numbers).\n\n\n### hrtimeDiff(timeA, timeB)\n\nGiven two hrtime readings (as from Node's `process.hrtime()`), where timeA is\nlater than timeB, compute the difference and return that as an hrtime.  It is\nillegal to invoke this for a pair of times where timeB is newer than timeA.\n\n### hrtimeAdd(timeA, timeB)\n\nAdd two hrtime intervals (as from Node's `process.hrtime()`), returning a new\nhrtime interval array.  This function does not modify either input argument.\n\n\n### hrtimeAccum(timeA, timeB)\n\nAdd two hrtime intervals (as from Node's `process.hrtime()`), storing the\nresult in `timeA`.  This function overwrites (and returns) the first argument\npassed in.\n\n\n### hrtimeNanosec(timeA), hrtimeMicrosec(timeA), hrtimeMillisec(timeA)\n\nThis suite of functions converts a hrtime interval (as from Node's\n`process.hrtime()`) into a scalar number of nanoseconds, microseconds or\nmilliseconds.  Results are truncated, as with `Math.floor()`.\n\n\n### validateJsonObject(schema, object)\n\nUses JSON validation (via JSV) to validate the given object against the given\nschema.  On success, returns null.  On failure, *returns* (does not throw) a\nuseful Error object.\n\n\n### extraProperties(object, allowed)\n\nCheck an object for unexpected properties.  Accepts the object to check, and an\narray of allowed property name strings.  If extra properties are detected, an\narray of extra property names is returned.  If no properties other than those\nin the allowed list are present on the object, the returned array will be of\nzero length.\n\n### mergeObjects(provided, overrides, defaults)\n\nMerge properties from objects \"provided\", \"overrides\", and \"defaults\".  The\nintended use case is for functions that accept named arguments in an \"args\"\nobject, but want to provide some default values and override other values.  In\nthat case, \"provided\" is what the caller specified, \"overrides\" are what the\nfunction wants to override, and \"defaults\" contains default values.\n\nThe function starts with the values in \"defaults\", overrides them with the\nvalues in \"provided\", and then overrides those with the values in \"overrides\".\nFor convenience, any of these objects may be falsey, in which case they will be\nignored.  The input objects are never modified, but properties in the returned\nobject are not deep-copied.\n\nFor example:\n\n    mergeObjects(undefined, { 'objectMode': true }, { 'highWaterMark': 0 })\n\nreturns:\n\n    { 'objectMode': true, 'highWaterMark': 0 }\n\nFor another example:\n\n    mergeObjects(\n        { 'highWaterMark': 16, 'objectMode': 7 }, /* from caller */\n        { 'objectMode': true },                   /* overrides */\n        { 'highWaterMark': 0 });                  /* default */\n\nreturns:\n\n    { 'objectMode': true, 'highWaterMark': 16 }\n\n\n# Contributing\n\nSee separate [contribution guidelines](CONTRIBUTING.md).\n",
                      "readmeFilename": "README.md",
                      "devDependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {
                        "assert-plus": "1.0.0",
                        "extsprintf": "1.3.0",
                        "json-schema": "0.2.3",
                        "verror": "1.10.0"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/jsprim",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "sshpk": {
                      "_args": [
                        [
                          "sshpk@1.16.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "sshpk@1.16.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "sshpk@1.16.1",
                      "_id": "sshpk@1.16.1",
                      "_integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
                      "_location": "/sshpk",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "sshpk@1.16.1",
                        "name": "sshpk",
                        "escapedName": "sshpk",
                        "rawSpec": "1.16.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.16.1"
                      },
                      "_requiredBy": [
                        "/http-signature"
                      ],
                      "_resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
                      "_spec": "1.16.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Joyent, Inc"
                      },
                      "bin": {
                        "sshpk-conv": "bin/sshpk-conv",
                        "sshpk-sign": "bin/sshpk-sign",
                        "sshpk-verify": "bin/sshpk-verify"
                      },
                      "bugs": {
                        "url": "https://github.com/arekinath/node-sshpk/issues"
                      },
                      "contributors": [
                        {
                          "name": "Dave Eddy",
                          "email": "dave@daveeddy.com"
                        },
                        {
                          "name": "Mark Cavage",
                          "email": "mcavage@gmail.com"
                        },
                        {
                          "name": "Alex Wilson",
                          "email": "alex@cooperi.net"
                        }
                      ],
                      "dependencies": {
                        "asn1": {
                          "_args": [
                            [
                              "asn1@0.2.4",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "asn1@0.2.4",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "asn1@0.2.4",
                          "_id": "asn1@0.2.4",
                          "_integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
                          "_location": "/asn1",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "asn1@0.2.4",
                            "name": "asn1",
                            "escapedName": "asn1",
                            "rawSpec": "0.2.4",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.2.4"
                          },
                          "_requiredBy": [
                            "/sshpk"
                          ],
                          "_resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
                          "_spec": "0.2.4",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Joyent",
                            "url": "joyent.com"
                          },
                          "bugs": {
                            "url": "https://github.com/joyent/node-asn1/issues"
                          },
                          "contributors": [
                            {
                              "name": "Mark Cavage",
                              "email": "mcavage@gmail.com"
                            },
                            {
                              "name": "David Gwynne",
                              "email": "loki@animata.net"
                            },
                            {
                              "name": "Yunong Xiao",
                              "email": "yunong@joyent.com"
                            },
                            {
                              "name": "Alex Wilson",
                              "email": "alex.wilson@joyent.com"
                            }
                          ],
                          "dependencies": {
                            "safer-buffer": {
                              "_args": "[Circular]",
                              "_from": "safer-buffer@2.1.2",
                              "_id": "safer-buffer@2.1.2",
                              "_integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
                              "_location": "/safer-buffer",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "safer-buffer@2.1.2",
                                "name": "safer-buffer",
                                "escapedName": "safer-buffer",
                                "rawSpec": "2.1.2",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "2.1.2"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
                              "_spec": "2.1.2",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "description": "Modern Buffer API polyfill without footguns",
                              "devDependencies": "[Circular]",
                              "files": "[Circular]",
                              "homepage": "https://github.com/ChALkeR/safer-buffer#readme",
                              "license": "MIT",
                              "main": "safer.js",
                              "name": "safer-buffer",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "2.1.2",
                              "readme": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing,\n«fixing» the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API — a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing…\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case — just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled — use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## «Without footguns»?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule).\n",
                              "readmeFilename": "Readme.md",
                              "dependencies": {},
                              "optionalDependencies": "[Circular]",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/safer-buffer",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "safer-buffer"
                            }
                          },
                          "description": "Contains parsers and serializers for ASN.1 (currently BER only)",
                          "devDependencies": {
                            "eslint": "2.13.1",
                            "eslint-plugin-joyent": "~1.3.0",
                            "faucet": "0.0.1",
                            "istanbul": "^0.3.6",
                            "tape": "^3.5.0"
                          },
                          "homepage": "https://github.com/joyent/node-asn1#readme",
                          "license": "MIT",
                          "main": "lib/index.js",
                          "name": "asn1",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/joyent/node-asn1.git"
                          },
                          "scripts": {
                            "test": "tape ./test/ber/*.test.js"
                          },
                          "version": "0.2.4",
                          "readme": "node-asn1 is a library for encoding and decoding ASN.1 datatypes in pure JS.\nCurrently BER encoding is supported; at some point I'll likely have to do DER.\n\n## Usage\n\nMostly, if you're *actually* needing to read and write ASN.1, you probably don't\nneed this readme to explain what and why.  If you have no idea what ASN.1 is,\nsee this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\n\nThe source is pretty much self-explanatory, and has read/write methods for the\ncommon types out there.\n\n### Decoding\n\nThe following reads an ASN.1 sequence with a boolean.\n\n    var Ber = require('asn1').Ber;\n\n    var reader = new Ber.Reader(Buffer.from([0x30, 0x03, 0x01, 0x01, 0xff]));\n\n    reader.readSequence();\n    console.log('Sequence len: ' + reader.length);\n    if (reader.peek() === Ber.Boolean)\n      console.log(reader.readBoolean());\n\n### Encoding\n\nThe following generates the same payload as above.\n\n    var Ber = require('asn1').Ber;\n\n    var writer = new Ber.Writer();\n\n    writer.startSequence();\n    writer.writeBoolean(true);\n    writer.endSequence();\n\n    console.log(writer.buffer);\n\n## Installation\n\n    npm install asn1\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/joyent/node-asn1/issues>.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "safer-buffer": "~2.1.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/asn1",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "assert-plus": {
                          "_args": "[Circular]",
                          "_from": "assert-plus@1.0.0",
                          "_id": "assert-plus@1.0.0",
                          "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                          "_location": "/assert-plus",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "assert-plus@1.0.0",
                            "name": "assert-plus",
                            "escapedName": "assert-plus",
                            "rawSpec": "1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.0"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                          "_spec": "1.0.0",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "contributors": "[Circular]",
                          "dependencies": {},
                          "description": "Extra assertions on top of node's assert module",
                          "devDependencies": "[Circular]",
                          "engines": "[Circular]",
                          "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                          "license": "MIT",
                          "main": "./assert.js",
                          "name": "assert-plus",
                          "optionalDependencies": "[Circular]",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "1.0.0",
                          "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                          "readmeFilename": "README.md",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "assert-plus"
                        },
                        "bcrypt-pbkdf": {
                          "_args": [
                            [
                              "bcrypt-pbkdf@1.0.2",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "bcrypt-pbkdf@1.0.2",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "bcrypt-pbkdf@1.0.2",
                          "_id": "bcrypt-pbkdf@1.0.2",
                          "_integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
                          "_location": "/bcrypt-pbkdf",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "bcrypt-pbkdf@1.0.2",
                            "name": "bcrypt-pbkdf",
                            "escapedName": "bcrypt-pbkdf",
                            "rawSpec": "1.0.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.2"
                          },
                          "_requiredBy": [
                            "/sshpk"
                          ],
                          "_resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
                          "_spec": "1.0.2",
                          "_where": "/path/to/project/packages/shared",
                          "bugs": {
                            "url": "https://github.com/joyent/node-bcrypt-pbkdf/issues"
                          },
                          "dependencies": {
                            "tweetnacl": {
                              "_args": [
                                [
                                  "tweetnacl@0.14.5",
                                  "/path/to/project/packages/shared"
                                ],
                                [
                                  "tweetnacl@0.14.5",
                                  "/path/to/project/packages/shared"
                                ]
                              ],
                              "_from": "tweetnacl@0.14.5",
                              "_id": "tweetnacl@0.14.5",
                              "_integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
                              "_location": "/tweetnacl",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "tweetnacl@0.14.5",
                                "name": "tweetnacl",
                                "escapedName": "tweetnacl",
                                "rawSpec": "0.14.5",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "0.14.5"
                              },
                              "_requiredBy": [
                                "/bcrypt-pbkdf",
                                "/sshpk"
                              ],
                              "_resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
                              "_spec": "0.14.5",
                              "_where": "/path/to/project/packages/shared",
                              "author": {
                                "name": "TweetNaCl-js contributors"
                              },
                              "browser": {
                                "buffer": false,
                                "crypto": false
                              },
                              "bugs": {
                                "url": "https://github.com/dchest/tweetnacl-js/issues"
                              },
                              "description": "Port of TweetNaCl cryptographic library to JavaScript",
                              "devDependencies": {
                                "browserify": "^13.0.0",
                                "eslint": "^2.2.0",
                                "faucet": "^0.0.1",
                                "tap-browser-color": "^0.1.2",
                                "tape": "^4.4.0",
                                "tape-run": "^2.1.3",
                                "tweetnacl-util": "^0.13.3",
                                "uglify-js": "^2.6.1"
                              },
                              "directories": {
                                "test": "test"
                              },
                              "homepage": "https://tweetnacl.js.org",
                              "keywords": [
                                "crypto",
                                "cryptography",
                                "curve25519",
                                "ed25519",
                                "encrypt",
                                "hash",
                                "key",
                                "nacl",
                                "poly1305",
                                "public",
                                "salsa20",
                                "signatures"
                              ],
                              "license": "Unlicense",
                              "main": "nacl-fast.js",
                              "name": "tweetnacl",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/dchest/tweetnacl-js.git"
                              },
                              "scripts": {
                                "bench": "node test/benchmark/bench.js",
                                "build": "uglifyjs nacl.js -c -m -o nacl.min.js && uglifyjs nacl-fast.js -c -m -o nacl-fast.min.js",
                                "build-test-browser": "browserify test/browser/init.js test/*.js | uglifyjs -c -m -o test/browser/_bundle.js 2>/dev/null && browserify test/browser/init.js test/*.quick.js | uglifyjs -c -m -o test/browser/_bundle-quick.js 2>/dev/null",
                                "lint": "eslint nacl.js nacl-fast.js test/*.js test/benchmark/*.js",
                                "test": "npm run test-node-all && npm run test-browser",
                                "test-browser": "NACL_SRC=${NACL_SRC:='nacl.min.js'} && npm run build-test-browser && cat $NACL_SRC test/browser/_bundle.js | tape-run | faucet",
                                "test-node": "tape test/*.js | faucet",
                                "test-node-all": "make -C test/c && tape test/*.js test/c/*.js | faucet"
                              },
                              "types": "nacl.d.ts",
                              "version": "0.14.5",
                              "readme": "TweetNaCl.js\n============\n\nPort of [TweetNaCl](http://tweetnacl.cr.yp.to) / [NaCl](http://nacl.cr.yp.to/)\nto JavaScript for modern browsers and Node.js. Public domain.\n\n[![Build Status](https://travis-ci.org/dchest/tweetnacl-js.svg?branch=master)\n](https://travis-ci.org/dchest/tweetnacl-js)\n\nDemo: <https://tweetnacl.js.org>\n\n**:warning: The library is stable and API is frozen, however it has not been\nindependently reviewed. If you can help reviewing it, please [contact\nme](mailto:dmitry@codingrobots.com).**\n\nDocumentation\n=============\n\n* [Overview](#overview)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Public-key authenticated encryption (box)](#public-key-authenticated-encryption-box)\n  * [Secret-key authenticated encryption (secretbox)](#secret-key-authenticated-encryption-secretbox)\n  * [Scalar multiplication](#scalar-multiplication)\n  * [Signatures](#signatures)\n  * [Hashing](#hashing)\n  * [Random bytes generation](#random-bytes-generation)\n  * [Constant-time comparison](#constant-time-comparison)\n* [System requirements](#system-requirements)\n* [Development and testing](#development-and-testing)\n* [Benchmarks](#benchmarks)\n* [Contributors](#contributors)\n* [Who uses it](#who-uses-it)\n\n\nOverview\n--------\n\nThe primary goal of this project is to produce a translation of TweetNaCl to\nJavaScript which is as close as possible to the original C implementation, plus\na thin layer of idiomatic high-level API on top of it.\n\nThere are two versions, you can use either of them:\n\n* `nacl.js` is the port of TweetNaCl with minimum differences from the\n  original + high-level API.\n\n* `nacl-fast.js` is like `nacl.js`, but with some functions replaced with\n  faster versions.\n\n\nInstallation\n------------\n\nYou can install TweetNaCl.js via a package manager:\n\n[Bower](http://bower.io):\n\n    $ bower install tweetnacl\n\n[NPM](https://www.npmjs.org/):\n\n    $ npm install tweetnacl\n\nor [download source code](https://github.com/dchest/tweetnacl-js/releases).\n\n\nUsage\n-----\n\nAll API functions accept and return bytes as `Uint8Array`s.  If you need to\nencode or decode strings, use functions from\n<https://github.com/dchest/tweetnacl-util-js> or one of the more robust codec\npackages.\n\nIn Node.js v4 and later `Buffer` objects are backed by `Uint8Array`s, so you\ncan freely pass them to TweetNaCl.js functions as arguments. The returned\nobjects are still `Uint8Array`s, so if you need `Buffer`s, you'll have to\nconvert them manually; make sure to convert using copying: `new Buffer(array)`,\ninstead of sharing: `new Buffer(array.buffer)`, because some functions return\nsubarrays of their buffers.\n\n\n### Public-key authenticated encryption (box)\n\nImplements *curve25519-xsalsa20-poly1305*.\n\n#### nacl.box.keyPair()\n\nGenerates a new random key pair for box and returns it as an object with\n`publicKey` and `secretKey` members:\n\n    {\n       publicKey: ...,  // Uint8Array with 32-byte public key\n       secretKey: ...   // Uint8Array with 32-byte secret key\n    }\n\n\n#### nacl.box.keyPair.fromSecretKey(secretKey)\n\nReturns a key pair for box with public key corresponding to the given secret\nkey.\n\n#### nacl.box(message, nonce, theirPublicKey, mySecretKey)\n\nEncrypt and authenticates message using peer's public key, our secret key, and\nthe given nonce, which must be unique for each distinct message for a key pair.\n\nReturns an encrypted and authenticated message, which is\n`nacl.box.overheadLength` longer than the original message.\n\n#### nacl.box.open(box, nonce, theirPublicKey, mySecretKey)\n\nAuthenticates and decrypts the given box with peer's public key, our secret\nkey, and the given nonce.\n\nReturns the original message, or `false` if authentication fails.\n\n#### nacl.box.before(theirPublicKey, mySecretKey)\n\nReturns a precomputed shared key which can be used in `nacl.box.after` and\n`nacl.box.open.after`.\n\n#### nacl.box.after(message, nonce, sharedKey)\n\nSame as `nacl.box`, but uses a shared key precomputed with `nacl.box.before`.\n\n#### nacl.box.open.after(box, nonce, sharedKey)\n\nSame as `nacl.box.open`, but uses a shared key precomputed with `nacl.box.before`.\n\n#### nacl.box.publicKeyLength = 32\n\nLength of public key in bytes.\n\n#### nacl.box.secretKeyLength = 32\n\nLength of secret key in bytes.\n\n#### nacl.box.sharedKeyLength = 32\n\nLength of precomputed shared key in bytes.\n\n#### nacl.box.nonceLength = 24\n\nLength of nonce in bytes.\n\n#### nacl.box.overheadLength = 16\n\nLength of overhead added to box compared to original message.\n\n\n### Secret-key authenticated encryption (secretbox)\n\nImplements *xsalsa20-poly1305*.\n\n#### nacl.secretbox(message, nonce, key)\n\nEncrypt and authenticates message using the key and the nonce. The nonce must\nbe unique for each distinct message for this key.\n\nReturns an encrypted and authenticated message, which is\n`nacl.secretbox.overheadLength` longer than the original message.\n\n#### nacl.secretbox.open(box, nonce, key)\n\nAuthenticates and decrypts the given secret box using the key and the nonce.\n\nReturns the original message, or `false` if authentication fails.\n\n#### nacl.secretbox.keyLength = 32\n\nLength of key in bytes.\n\n#### nacl.secretbox.nonceLength = 24\n\nLength of nonce in bytes.\n\n#### nacl.secretbox.overheadLength = 16\n\nLength of overhead added to secret box compared to original message.\n\n\n### Scalar multiplication\n\nImplements *curve25519*.\n\n#### nacl.scalarMult(n, p)\n\nMultiplies an integer `n` by a group element `p` and returns the resulting\ngroup element.\n\n#### nacl.scalarMult.base(n)\n\nMultiplies an integer `n` by a standard group element and returns the resulting\ngroup element.\n\n#### nacl.scalarMult.scalarLength = 32\n\nLength of scalar in bytes.\n\n#### nacl.scalarMult.groupElementLength = 32\n\nLength of group element in bytes.\n\n\n### Signatures\n\nImplements [ed25519](http://ed25519.cr.yp.to).\n\n#### nacl.sign.keyPair()\n\nGenerates new random key pair for signing and returns it as an object with\n`publicKey` and `secretKey` members:\n\n    {\n       publicKey: ...,  // Uint8Array with 32-byte public key\n       secretKey: ...   // Uint8Array with 64-byte secret key\n    }\n\n#### nacl.sign.keyPair.fromSecretKey(secretKey)\n\nReturns a signing key pair with public key corresponding to the given\n64-byte secret key. The secret key must have been generated by\n`nacl.sign.keyPair` or `nacl.sign.keyPair.fromSeed`.\n\n#### nacl.sign.keyPair.fromSeed(seed)\n\nReturns a new signing key pair generated deterministically from a 32-byte seed.\nThe seed must contain enough entropy to be secure. This method is not\nrecommended for general use: instead, use `nacl.sign.keyPair` to generate a new\nkey pair from a random seed.\n\n#### nacl.sign(message, secretKey)\n\nSigns the message using the secret key and returns a signed message.\n\n#### nacl.sign.open(signedMessage, publicKey)\n\nVerifies the signed message and returns the message without signature.\n\nReturns `null` if verification failed.\n\n#### nacl.sign.detached(message, secretKey)\n\nSigns the message using the secret key and returns a signature.\n\n#### nacl.sign.detached.verify(message, signature, publicKey)\n\nVerifies the signature for the message and returns `true` if verification\nsucceeded or `false` if it failed.\n\n#### nacl.sign.publicKeyLength = 32\n\nLength of signing public key in bytes.\n\n#### nacl.sign.secretKeyLength = 64\n\nLength of signing secret key in bytes.\n\n#### nacl.sign.seedLength = 32\n\nLength of seed for `nacl.sign.keyPair.fromSeed` in bytes.\n\n#### nacl.sign.signatureLength = 64\n\nLength of signature in bytes.\n\n\n### Hashing\n\nImplements *SHA-512*.\n\n#### nacl.hash(message)\n\nReturns SHA-512 hash of the message.\n\n#### nacl.hash.hashLength = 64\n\nLength of hash in bytes.\n\n\n### Random bytes generation\n\n#### nacl.randomBytes(length)\n\nReturns a `Uint8Array` of the given length containing random bytes of\ncryptographic quality.\n\n**Implementation note**\n\nTweetNaCl.js uses the following methods to generate random bytes,\ndepending on the platform it runs on:\n\n* `window.crypto.getRandomValues` (WebCrypto standard)\n* `window.msCrypto.getRandomValues` (Internet Explorer 11)\n* `crypto.randomBytes` (Node.js)\n\nIf the platform doesn't provide a suitable PRNG, the following functions,\nwhich require random numbers, will throw exception:\n\n* `nacl.randomBytes`\n* `nacl.box.keyPair`\n* `nacl.sign.keyPair`\n\nOther functions are deterministic and will continue working.\n\nIf a platform you are targeting doesn't implement secure random number\ngenerator, but you somehow have a cryptographically-strong source of entropy\n(not `Math.random`!), and you know what you are doing, you can plug it into\nTweetNaCl.js like this:\n\n    nacl.setPRNG(function(x, n) {\n      // ... copy n random bytes into x ...\n    });\n\nNote that `nacl.setPRNG` *completely replaces* internal random byte generator\nwith the one provided.\n\n\n### Constant-time comparison\n\n#### nacl.verify(x, y)\n\nCompares `x` and `y` in constant time and returns `true` if their lengths are\nnon-zero and equal, and their contents are equal.\n\nReturns `false` if either of the arguments has zero length, or arguments have\ndifferent lengths, or their contents differ.\n\n\nSystem requirements\n-------------------\n\nTweetNaCl.js supports modern browsers that have a cryptographically secure\npseudorandom number generator and typed arrays, including the latest versions\nof:\n\n* Chrome\n* Firefox\n* Safari (Mac, iOS)\n* Internet Explorer 11\n\nOther systems:\n\n* Node.js\n\n\nDevelopment and testing\n------------------------\n\nInstall NPM modules needed for development:\n\n    $ npm install\n\nTo build minified versions:\n\n    $ npm run build\n\nTests use minified version, so make sure to rebuild it every time you change\n`nacl.js` or `nacl-fast.js`.\n\n### Testing\n\nTo run tests in Node.js:\n\n    $ npm run test-node\n\nBy default all tests described here work on `nacl.min.js`. To test other\nversions, set environment variable `NACL_SRC` to the file name you want to test.\nFor example, the following command will test fast minified version:\n\n    $ NACL_SRC=nacl-fast.min.js npm run test-node\n\nTo run full suite of tests in Node.js, including comparing outputs of\nJavaScript port to outputs of the original C version:\n\n    $ npm run test-node-all\n\nTo prepare tests for browsers:\n\n    $ npm run build-test-browser\n\nand then open `test/browser/test.html` (or `test/browser/test-fast.html`) to\nrun them.\n\nTo run headless browser tests with `tape-run` (powered by Electron):\n\n    $ npm run test-browser\n\n(If you get `Error: spawn ENOENT`, install *xvfb*: `sudo apt-get install xvfb`.)\n\nTo run tests in both Node and Electron:\n\n    $ npm test\n\n### Benchmarking\n\nTo run benchmarks in Node.js:\n\n    $ npm run bench\n    $ NACL_SRC=nacl-fast.min.js npm run bench\n\nTo run benchmarks in a browser, open `test/benchmark/bench.html` (or\n`test/benchmark/bench-fast.html`).\n\n\nBenchmarks\n----------\n\nFor reference, here are benchmarks from MacBook Pro (Retina, 13-inch, Mid 2014)\nlaptop with 2.6 GHz Intel Core i5 CPU (Intel) in Chrome 53/OS X and Xiaomi Redmi\nNote 3 smartphone with 1.8 GHz Qualcomm Snapdragon 650 64-bit CPU (ARM) in\nChrome 52/Android:\n\n|               | nacl.js Intel | nacl-fast.js Intel  |   nacl.js ARM | nacl-fast.js ARM  |\n| ------------- |:-------------:|:-------------------:|:-------------:|:-----------------:|\n| salsa20       | 1.3 MB/s      | 128 MB/s            |  0.4 MB/s     |  43 MB/s          |\n| poly1305      | 13 MB/s       | 171 MB/s            |  4 MB/s       |  52 MB/s          |\n| hash          | 4 MB/s        | 34 MB/s             |  0.9 MB/s     |  12 MB/s          |\n| secretbox 1K  | 1113 op/s     | 57583 op/s          |  334 op/s     |  14227 op/s       |\n| box 1K        | 145 op/s      | 718 op/s            |  37 op/s      |  368 op/s         |\n| scalarMult    | 171 op/s      | 733 op/s            |  56 op/s      |  380 op/s         |\n| sign          | 77  op/s      | 200 op/s            |  20 op/s      |  61 op/s          |\n| sign.open     | 39  op/s      | 102  op/s           |  11 op/s      |  31 op/s          |\n\n(You can run benchmarks on your devices by clicking on the links at the bottom\nof the [home page](https://tweetnacl.js.org)).\n\nIn short, with *nacl-fast.js* and 1024-byte messages you can expect to encrypt and\nauthenticate more than 57000 messages per second on a typical laptop or more than\n14000 messages per second on a $170 smartphone, sign about 200 and verify 100\nmessages per second on a laptop or 60 and 30 messages per second on a smartphone,\nper CPU core (with Web Workers you can do these operations in parallel),\nwhich is good enough for most applications.\n\n\nContributors\n------------\n\nSee AUTHORS.md file.\n\n\nThird-party libraries based on TweetNaCl.js\n-------------------------------------------\n\n* [forward-secrecy](https://github.com/alax/forward-secrecy) — Axolotl ratchet implementation\n* [nacl-stream](https://github.com/dchest/nacl-stream-js) - streaming encryption\n* [tweetnacl-auth-js](https://github.com/dchest/tweetnacl-auth-js) — implementation of [`crypto_auth`](http://nacl.cr.yp.to/auth.html)\n* [chloride](https://github.com/dominictarr/chloride) - unified API for various NaCl modules\n\n\nWho uses it\n-----------\n\nSome notable users of TweetNaCl.js:\n\n* [miniLock](http://minilock.io/)\n* [Stellar](https://www.stellar.org/)\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/path/to/project/packages/shared/node_modules/tweetnacl",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "tweetnacl"
                            }
                          },
                          "description": "Port of the OpenBSD bcrypt_pbkdf function to pure JS",
                          "devDependencies": {},
                          "homepage": "https://github.com/joyent/node-bcrypt-pbkdf#readme",
                          "license": "BSD-3-Clause",
                          "main": "index.js",
                          "name": "bcrypt-pbkdf",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/joyent/node-bcrypt-pbkdf.git"
                          },
                          "version": "1.0.2",
                          "readme": "Port of the OpenBSD `bcrypt_pbkdf` function to pure Javascript. `npm`-ified\nversion of [Devi Mandiri's port](https://github.com/devi/tmp/blob/master/js/bcrypt_pbkdf.js),\nwith some minor performance improvements. The code is copied verbatim (and\nun-styled) from Devi's work.\n\nThis product includes software developed by Niels Provos.\n\n## API\n\n### `bcrypt_pbkdf.pbkdf(pass, passlen, salt, saltlen, key, keylen, rounds)`\n\nDerive a cryptographic key of arbitrary length from a given password and salt,\nusing the OpenBSD `bcrypt_pbkdf` function. This is a combination of Blowfish and\nSHA-512.\n\nSee [this article](http://www.tedunangst.com/flak/post/bcrypt-pbkdf) for\nfurther information.\n\nParameters:\n\n * `pass`, a Uint8Array of length `passlen`\n * `passlen`, an integer Number\n * `salt`, a Uint8Array of length `saltlen`\n * `saltlen`, an integer Number\n * `key`, a Uint8Array of length `keylen`, will be filled with output\n * `keylen`, an integer Number\n * `rounds`, an integer Number, number of rounds of the PBKDF to run\n\n### `bcrypt_pbkdf.hash(sha2pass, sha2salt, out)`\n\nCalculate a Blowfish hash, given SHA2-512 output of a password and salt. Used as\npart of the inner round function in the PBKDF.\n\nParameters:\n\n * `sha2pass`, a Uint8Array of length 64\n * `sha2salt`, a Uint8Array of length 64\n * `out`, a Uint8Array of length 32, will be filled with output\n\n## License\n\nThis source form is a 1:1 port from the OpenBSD `blowfish.c` and `bcrypt_pbkdf.c`.\nAs a result, it retains the original copyright and license. The two files are\nunder slightly different (but compatible) licenses, and are here combined in\none file. For each of the full license texts see `LICENSE`.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "tweetnacl": "^0.14.3"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/bcrypt-pbkdf",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "dashdash": {
                          "_args": [
                            [
                              "dashdash@1.14.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "dashdash@1.14.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "dashdash@1.14.1",
                          "_id": "dashdash@1.14.1",
                          "_integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
                          "_location": "/dashdash",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "dashdash@1.14.1",
                            "name": "dashdash",
                            "escapedName": "dashdash",
                            "rawSpec": "1.14.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.14.1"
                          },
                          "_requiredBy": [
                            "/sshpk"
                          ],
                          "_resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
                          "_spec": "1.14.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Trent Mick",
                            "email": "trentm@gmail.com",
                            "url": "http://trentm.com"
                          },
                          "bugs": {
                            "url": "https://github.com/trentm/node-dashdash/issues"
                          },
                          "dependencies": {
                            "assert-plus": {
                              "_args": "[Circular]",
                              "_from": "assert-plus@1.0.0",
                              "_id": "assert-plus@1.0.0",
                              "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                              "_location": "/assert-plus",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "assert-plus@1.0.0",
                                "name": "assert-plus",
                                "escapedName": "assert-plus",
                                "rawSpec": "1.0.0",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.0.0"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                              "_spec": "1.0.0",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "contributors": "[Circular]",
                              "dependencies": {},
                              "description": "Extra assertions on top of node's assert module",
                              "devDependencies": "[Circular]",
                              "engines": "[Circular]",
                              "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                              "license": "MIT",
                              "main": "./assert.js",
                              "name": "assert-plus",
                              "optionalDependencies": "[Circular]",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "1.0.0",
                              "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                              "readmeFilename": "README.md",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "assert-plus"
                            }
                          },
                          "description": "A light, featureful and explicit option parsing library.",
                          "devDependencies": {
                            "nodeunit": "0.9.x"
                          },
                          "engines": {
                            "node": ">=0.10"
                          },
                          "homepage": "https://github.com/trentm/node-dashdash#readme",
                          "keywords": [
                            "option",
                            "parser",
                            "parsing",
                            "cli",
                            "command",
                            "args",
                            "bash",
                            "completion"
                          ],
                          "license": "MIT",
                          "main": "./lib/dashdash.js",
                          "name": "dashdash",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/trentm/node-dashdash.git"
                          },
                          "scripts": {
                            "test": "nodeunit test/*.test.js"
                          },
                          "version": "1.14.1",
                          "readme": "A light, featureful and explicit option parsing library for node.js.\n\n[Why another one? See below](#why). tl;dr: The others I've tried are one of\ntoo loosey goosey (not explicit), too big/too many deps, or ill specified.\nYMMV.\n\nFollow <a href=\"https://twitter.com/intent/user?screen_name=trentmick\" target=\"_blank\">@trentmick</a>\nfor updates to node-dashdash.\n\n# Install\n\n    npm install dashdash\n\n\n# Usage\n\n```javascript\nvar dashdash = require('dashdash');\n\n// Specify the options. Minimally `name` (or `names`) and `type`\n// must be given for each.\nvar options = [\n    {\n        // `names` or a single `name`. First element is the `opts.KEY`.\n        names: ['help', 'h'],\n        // See \"Option specs\" below for types.\n        type: 'bool',\n        help: 'Print this help and exit.'\n    }\n];\n\n// Shortcut form. As called it infers `process.argv`. See below for\n// the longer form to use methods like `.help()` on the Parser object.\nvar opts = dashdash.parse({options: options});\n\nconsole.log(\"opts:\", opts);\nconsole.log(\"args:\", opts._args);\n```\n\n\n# Longer Example\n\nA more realistic [starter script \"foo.js\"](./examples/foo.js) is as follows.\nThis also shows using `parser.help()` for formatted option help.\n\n```javascript\nvar dashdash = require('./lib/dashdash');\n\nvar options = [\n    {\n        name: 'version',\n        type: 'bool',\n        help: 'Print tool version and exit.'\n    },\n    {\n        names: ['help', 'h'],\n        type: 'bool',\n        help: 'Print this help and exit.'\n    },\n    {\n        names: ['verbose', 'v'],\n        type: 'arrayOfBool',\n        help: 'Verbose output. Use multiple times for more verbose.'\n    },\n    {\n        names: ['file', 'f'],\n        type: 'string',\n        help: 'File to process',\n        helpArg: 'FILE'\n    }\n];\n\nvar parser = dashdash.createParser({options: options});\ntry {\n    var opts = parser.parse(process.argv);\n} catch (e) {\n    console.error('foo: error: %s', e.message);\n    process.exit(1);\n}\n\nconsole.log(\"# opts:\", opts);\nconsole.log(\"# args:\", opts._args);\n\n// Use `parser.help()` for formatted options help.\nif (opts.help) {\n    var help = parser.help({includeEnv: true}).trimRight();\n    console.log('usage: node foo.js [OPTIONS]\\n'\n                + 'options:\\n'\n                + help);\n    process.exit(0);\n}\n\n// ...\n```\n\n\nSome example output from this script (foo.js):\n\n```\n$ node foo.js -h\n# opts: { help: true,\n  _order: [ { name: 'help', value: true, from: 'argv' } ],\n  _args: [] }\n# args: []\nusage: node foo.js [OPTIONS]\noptions:\n    --version             Print tool version and exit.\n    -h, --help            Print this help and exit.\n    -v, --verbose         Verbose output. Use multiple times for more verbose.\n    -f FILE, --file=FILE  File to process\n\n$ node foo.js -v\n# opts: { verbose: [ true ],\n  _order: [ { name: 'verbose', value: true, from: 'argv' } ],\n  _args: [] }\n# args: []\n\n$ node foo.js --version arg1\n# opts: { version: true,\n  _order: [ { name: 'version', value: true, from: 'argv' } ],\n  _args: [ 'arg1' ] }\n# args: [ 'arg1' ]\n\n$ node foo.js -f bar.txt\n# opts: { file: 'bar.txt',\n  _order: [ { name: 'file', value: 'bar.txt', from: 'argv' } ],\n  _args: [] }\n# args: []\n\n$ node foo.js -vvv --file=blah\n# opts: { verbose: [ true, true, true ],\n  file: 'blah',\n  _order:\n   [ { name: 'verbose', value: true, from: 'argv' },\n     { name: 'verbose', value: true, from: 'argv' },\n     { name: 'verbose', value: true, from: 'argv' },\n     { name: 'file', value: 'blah', from: 'argv' } ],\n  _args: [] }\n# args: []\n```\n\n\nSee the [\"examples\"](examples/) dir for a number of starter examples using\nsome of dashdash's features.\n\n\n# Environment variable integration\n\nIf you want to allow environment variables to specify options to your tool,\ndashdash makes this easy. We can change the 'verbose' option in the example\nabove to include an 'env' field:\n\n```javascript\n    {\n        names: ['verbose', 'v'],\n        type: 'arrayOfBool',\n        env: 'FOO_VERBOSE',         // <--- add this line\n        help: 'Verbose output. Use multiple times for more verbose.'\n    },\n```\n\nthen the **\"FOO_VERBOSE\" environment variable** can be used to set this\noption:\n\n```shell\n$ FOO_VERBOSE=1 node foo.js\n# opts: { verbose: [ true ],\n  _order: [ { name: 'verbose', value: true, from: 'env' } ],\n  _args: [] }\n# args: []\n```\n\nBoolean options will interpret the empty string as unset, '0' as false\nand anything else as true.\n\n```shell\n$ FOO_VERBOSE= node examples/foo.js                 # not set\n# opts: { _order: [], _args: [] }\n# args: []\n\n$ FOO_VERBOSE=0 node examples/foo.js                # '0' is false\n# opts: { verbose: [ false ],\n  _order: [ { key: 'verbose', value: false, from: 'env' } ],\n  _args: [] }\n# args: []\n\n$ FOO_VERBOSE=1 node examples/foo.js                # true\n# opts: { verbose: [ true ],\n  _order: [ { key: 'verbose', value: true, from: 'env' } ],\n  _args: [] }\n# args: []\n\n$ FOO_VERBOSE=boogabooga node examples/foo.js       # true\n# opts: { verbose: [ true ],\n  _order: [ { key: 'verbose', value: true, from: 'env' } ],\n  _args: [] }\n# args: []\n```\n\nNon-booleans can be used as well. Strings:\n\n```shell\n$ FOO_FILE=data.txt node examples/foo.js\n# opts: { file: 'data.txt',\n  _order: [ { key: 'file', value: 'data.txt', from: 'env' } ],\n  _args: [] }\n# args: []\n```\n\nNumbers:\n\n```shell\n$ FOO_TIMEOUT=5000 node examples/foo.js\n# opts: { timeout: 5000,\n  _order: [ { key: 'timeout', value: 5000, from: 'env' } ],\n  _args: [] }\n# args: []\n\n$ FOO_TIMEOUT=blarg node examples/foo.js\nfoo: error: arg for \"FOO_TIMEOUT\" is not a positive integer: \"blarg\"\n```\n\nWith the `includeEnv: true` config to `parser.help()` the environment\nvariable can also be included in **help output**:\n\n    usage: node foo.js [OPTIONS]\n    options:\n        --version             Print tool version and exit.\n        -h, --help            Print this help and exit.\n        -v, --verbose         Verbose output. Use multiple times for more verbose.\n                              Environment: FOO_VERBOSE=1\n        -f FILE, --file=FILE  File to process\n\n\n# Bash completion\n\nDashdash provides a simple way to create a Bash completion file that you\ncan place in your \"bash_completion.d\" directory -- sometimes that is\n\"/usr/local/etc/bash_completion.d/\"). Features:\n\n- Support for short and long opts\n- Support for knowing which options take arguments\n- Support for subcommands (e.g. 'git log <TAB>' to show just options for the\n  log subcommand). See\n  [node-cmdln](https://github.com/trentm/node-cmdln#bash-completion) for\n  how to integrate that.\n- Does the right thing with \"--\" to stop options.\n- Custom optarg and arg types for custom completions.\n\nDashdash will return bash completion file content given a parser instance:\n\n    var parser = dashdash.createParser({options: options});\n    console.log( parser.bashCompletion({name: 'mycli'}) );\n\nor directly from a `options` array of options specs:\n\n    var code = dashdash.bashCompletionFromOptions({\n        name: 'mycli',\n        options: OPTIONS\n    });\n\nWrite that content to \"/usr/local/etc/bash_completion.d/mycli\" and you will\nhave Bash completions for `mycli`. Alternatively you can write it to\nany file (e.g. \"~/.bashrc\") and source it.\n\nYou could add a `--completion` hidden option to your tool that emits the\ncompletion content and document for your users to call that to install\nBash completions.\n\nSee [examples/ddcompletion.js](examples/ddcompletion.js) for a complete\nexample, including how one can define bash functions for completion of custom\noption types. Also see [node-cmdln](https://github.com/trentm/node-cmdln) for\nhow it uses this for Bash completion for full multi-subcommand tools.\n\n- TODO: document specExtra\n- TODO: document includeHidden\n- TODO: document custom types, `function complete\\_FOO` guide, completionType\n- TODO: document argtypes\n\n\n# Parser config\n\nParser construction (i.e. `dashdash.createParser(CONFIG)`) takes the\nfollowing fields:\n\n- `options` (Array of option specs). Required. See the\n  [Option specs](#option-specs) section below.\n\n- `interspersed` (Boolean). Optional. Default is true. If true this allows\n  interspersed arguments and options. I.e.:\n\n        node ./tool.js -v arg1 arg2 -h   # '-h' is after interspersed args\n\n  Set it to false to have '-h' **not** get parsed as an option in the above\n  example.\n\n- `allowUnknown` (Boolean).  Optional.  Default is false.  If false, this causes\n  unknown arguments to throw an error.  I.e.:\n\n        node ./tool.js -v arg1 --afe8asefksjefhas\n\n  Set it to true to treat the unknown option as a positional\n  argument.\n\n  **Caveat**: When a shortopt group, such as `-xaz` contains a mix of\n  known and unknown options, the *entire* group is passed through\n  unmolested as a positional argument.\n\n  Consider if you have a known short option `-a`, and parse the\n  following command line:\n\n        node ./tool.js -xaz\n\n  where `-x` and `-z` are unknown.  There are multiple ways to\n  interpret this:\n\n    1. `-x` takes a value: `{x: 'az'}`\n    2. `-x` and `-z` are both booleans: `{x:true,a:true,z:true}`\n\n  Since dashdash does not know what `-x` and `-z` are, it can't know\n  if you'd prefer to receive `{a:true,_args:['-x','-z']}` or\n  `{x:'az'}`, or `{_args:['-xaz']}`. Leaving the positional arg unprocessed\n  is the easiest mistake for the user to recover from.\n\n\n# Option specs\n\nExample using all fields (required fields are noted):\n\n```javascript\n{\n    names: ['file', 'f'],       // Required (one of `names` or `name`).\n    type: 'string',             // Required.\n    completionType: 'filename',\n    env: 'MYTOOL_FILE',\n    help: 'Config file to load before running \"mytool\"',\n    helpArg: 'PATH',\n    helpWrap: false,\n    default: path.resolve(process.env.HOME, '.mytoolrc')\n}\n```\n\nEach option spec in the `options` array must/can have the following fields:\n\n- `name` (String) or `names` (Array). Required. These give the option name\n  and aliases. The first name (if more than one given) is the key for the\n  parsed `opts` object.\n\n- `type` (String). Required. One of:\n\n    - bool\n    - string\n    - number\n    - integer\n    - positiveInteger\n    - date (epoch seconds, e.g. 1396031701, or ISO 8601 format\n      `YYYY-MM-DD[THH:MM:SS[.sss][Z]]`, e.g. \"2014-03-28T18:35:01.489Z\")\n    - arrayOfBool\n    - arrayOfString\n    - arrayOfNumber\n    - arrayOfInteger\n    - arrayOfPositiveInteger\n    - arrayOfDate\n\n  FWIW, these names attempt to match with asserts on\n  [assert-plus](https://github.com/mcavage/node-assert-plus).\n  You can add your own custom option types with `dashdash.addOptionType`.\n  See below.\n\n- `completionType` (String). Optional. This is used for [Bash\n  completion](#bash-completion) for an option argument. If not specified,\n  then the value of `type` is used. Any string may be specified, but only the\n  following values have meaning:\n\n    - `none`: Provide no completions.\n    - `file`: Bash's default completion (i.e. `complete -o default`), which\n      includes filenames.\n    - *Any string FOO for which a `function complete_FOO` Bash function is\n      defined.* This is for custom completions for a given tool. Typically\n      these custom functions are provided in the `specExtra` argument to\n      `dashdash.bashCompletionFromOptions()`. See\n      [\"examples/ddcompletion.js\"](examples/ddcompletion.js) for an example.\n\n- `env` (String or Array of String). Optional. An environment variable name\n  (or names) that can be used as a fallback for this option. For example,\n  given a \"foo.js\" like this:\n\n        var options = [{names: ['dry-run', 'n'], env: 'FOO_DRY_RUN'}];\n        var opts = dashdash.parse({options: options});\n\n  Both `node foo.js --dry-run` and `FOO_DRY_RUN=1 node foo.js` would result\n  in `opts.dry_run = true`.\n\n  An environment variable is only used as a fallback, i.e. it is ignored if\n  the associated option is given in `argv`.\n\n- `help` (String). Optional. Used for `parser.help()` output.\n\n- `helpArg` (String). Optional. Used in help output as the placeholder for\n  the option argument, e.g. the \"PATH\" in:\n\n        ...\n        -f PATH, --file=PATH    File to process\n        ...\n\n- `helpWrap` (Boolean). Optional, default true. Set this to `false` to have\n  that option's `help` *not* be text wrapped in `<parser>.help()` output.\n\n- `default`. Optional. A default value used for this option, if the\n  option isn't specified in argv.\n\n- `hidden` (Boolean). Optional, default false. If true, help output will not\n  include this option. See also the `includeHidden` option to\n  `bashCompletionFromOptions()` for [Bash completion](#bash-completion).\n\n\n# Option group headings\n\nYou can add headings between option specs in the `options` array.  To do so,\nsimply add an object with only a `group` property -- the string to print as\nthe heading for the subsequent options in the array.  For example:\n\n```javascript\nvar options = [\n    {\n        group: 'Armament Options'\n    },\n    {\n        names: [ 'weapon', 'w' ],\n        type: 'string'\n    },\n    {\n        group: 'General Options'\n    },\n    {\n        names: [ 'help', 'h' ],\n        type: 'bool'\n    }\n];\n...\n```\n\nNote: You can use an empty string, `{group: ''}`, to get a blank line in help\noutput between groups of options.\n\n\n# Help config\n\nThe `parser.help(...)` function is configurable as follows:\n\n        Options:\n          Armament Options:\n        ^^  -w WEAPON, --weapon=WEAPON  Weapon with which to crush. One of: |\n       /                                sword, spear, maul                  |\n      /   General Options:                                                  |\n     /      -h, --help                  Print this help and exit.           |\n    /   ^^^^                            ^                                   |\n    \\       `-- indent                   `-- helpCol              maxCol ---'\n     `-- headingIndent\n\n- `indent` (Number or String). Default 4. Set to a number (for that many\n  spaces) or a string for the literal indent.\n- `headingIndent` (Number or String). Default half length of `indent`. Set to\n  a number (for that many spaces) or a string for the literal indent. This\n  indent applies to group heading lines, between normal option lines.\n- `nameSort` (String). Default is 'length'. By default the names are\n  sorted to put the short opts first (i.e. '-h, --help' preferred\n  to '--help, -h'). Set to 'none' to not do this sorting.\n- `maxCol` (Number). Default 80. Note that reflow is just done on whitespace\n  so a long token in the option help can overflow maxCol.\n- `helpCol` (Number). If not set a reasonable value will be determined\n  between `minHelpCol` and `maxHelpCol`.\n- `minHelpCol` (Number). Default 20.\n- `maxHelpCol` (Number). Default 40.\n- `helpWrap` (Boolean). Default true. Set to `false` to have option `help`\n  strings *not* be textwrapped to the helpCol..maxCol range.\n- `includeEnv` (Boolean). Default false. If the option has associated\n  environment variables (via the `env` option spec attribute), then\n  append mentioned of those envvars to the help string.\n- `includeDefault` (Boolean). Default false. If the option has a default value\n  (via the `default` option spec attribute, or a default on the option's type),\n  then a \"Default: VALUE\" string will be appended to the help string.\n\n\n# Custom option types\n\nDashdash includes a good starter set of option types that it will parse for\nyou. However, you can add your own via:\n\n    var dashdash = require('dashdash');\n    dashdash.addOptionType({\n        name: '...',\n        takesArg: true,\n        helpArg: '...',\n        parseArg: function (option, optstr, arg) {\n            ...\n        },\n        array: false,  // optional\n        arrayFlatten: false,  // optional\n        default: ...,   // optional\n        completionType: ...  // optional\n    });\n\nFor example, a simple option type that accepts 'yes', 'y', 'no' or 'n' as\na boolean argument would look like:\n\n    var dashdash = require('dashdash');\n\n    function parseYesNo(option, optstr, arg) {\n        var argLower = arg.toLowerCase()\n        if (~['yes', 'y'].indexOf(argLower)) {\n            return true;\n        } else if (~['no', 'n'].indexOf(argLower)) {\n            return false;\n        } else {\n            throw new Error(format(\n                'arg for \"%s\" is not \"yes\" or \"no\": \"%s\"',\n                optstr, arg));\n        }\n    }\n\n    dashdash.addOptionType({\n        name: 'yesno'\n        takesArg: true,\n        helpArg: '<yes|no>',\n        parseArg: parseYesNo\n    });\n\n    var options = {\n        {names: ['answer', 'a'], type: 'yesno'}\n    };\n    var opts = dashdash.parse({options: options});\n\nSee \"examples/custom-option-\\*.js\" for other examples.\nSee the `addOptionType` block comment in \"lib/dashdash.js\" for more details.\nPlease let me know [with an\nissue](https://github.com/trentm/node-dashdash/issues/new) if you write a\ngenerally useful one.\n\n\n\n# Why\n\nWhy another node.js option parsing lib?\n\n- `nopt` really is just for \"tools like npm\". Implicit opts (e.g. '--no-foo'\n  works for every '--foo'). Can't disable abbreviated opts. Can't do multiple\n  usages of same opt, e.g. '-vvv' (I think). Can't do grouped short opts.\n\n- `optimist` has surprise interpretation of options (at least to me).\n  Implicit opts mean ambiguities and poor error handling for fat-fingering.\n  `process.exit` calls makes it hard to use as a libary.\n\n- `optparse` Incomplete docs. Is this an attempted clone of Python's `optparse`.\n  Not clear. Some divergence. `parser.on(\"name\", ...)` API is weird.\n\n- `argparse` Dep on underscore. No thanks just for option processing.\n  `find lib | wc -l` -> `26`. Overkill.\n  Argparse is a bit different anyway. Not sure I want that.\n\n- `posix-getopt` No type validation. Though that isn't a killer. AFAIK can't\n  have a long opt without a short alias. I.e. no `getopt_long` semantics.\n  Also, no whizbang features like generated help output.\n\n- [\"commander.js\"](https://github.com/visionmedia/commander.js): I wrote\n  [a critique](http://trentm.com/2014/01/a-critique-of-commander-for-nodejs.html)\n  a while back. It seems fine, but last I checked had\n  [an outstanding bug](https://github.com/visionmedia/commander.js/pull/121)\n  that would prevent me from using it.\n\n\n# License\n\nMIT. See LICENSE.txt.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "assert-plus": "^1.0.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/dashdash",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "ecc-jsbn": {
                          "_args": [
                            [
                              "ecc-jsbn@0.1.2",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "ecc-jsbn@0.1.2",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "ecc-jsbn@0.1.2",
                          "_id": "ecc-jsbn@0.1.2",
                          "_integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
                          "_location": "/ecc-jsbn",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "ecc-jsbn@0.1.2",
                            "name": "ecc-jsbn",
                            "escapedName": "ecc-jsbn",
                            "rawSpec": "0.1.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.1.2"
                          },
                          "_requiredBy": [
                            "/sshpk"
                          ],
                          "_resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
                          "_spec": "0.1.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Jeremie Miller",
                            "email": "jeremie@jabber.org",
                            "url": "http://jeremie.com/"
                          },
                          "bugs": {
                            "url": "https://github.com/quartzjer/ecc-jsbn/issues"
                          },
                          "dependencies": {
                            "jsbn": {
                              "_args": [
                                [
                                  "jsbn@0.1.1",
                                  "/path/to/project/packages/shared"
                                ],
                                [
                                  "jsbn@0.1.1",
                                  "/path/to/project/packages/shared"
                                ]
                              ],
                              "_from": "jsbn@0.1.1",
                              "_id": "jsbn@0.1.1",
                              "_integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
                              "_location": "/jsbn",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "jsbn@0.1.1",
                                "name": "jsbn",
                                "escapedName": "jsbn",
                                "rawSpec": "0.1.1",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "0.1.1"
                              },
                              "_requiredBy": [
                                "/ecc-jsbn",
                                "/sshpk"
                              ],
                              "_resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
                              "_spec": "0.1.1",
                              "_where": "/path/to/project/packages/shared",
                              "author": {
                                "name": "Tom Wu"
                              },
                              "bugs": {
                                "url": "https://github.com/andyperlitch/jsbn/issues"
                              },
                              "description": "The jsbn library is a fast, portable implementation of large-number math in pure JavaScript, enabling public-key crypto and other applications on desktop and mobile browsers.",
                              "homepage": "https://github.com/andyperlitch/jsbn#readme",
                              "keywords": [
                                "biginteger",
                                "bignumber",
                                "big",
                                "integer"
                              ],
                              "license": "MIT",
                              "main": "index.js",
                              "name": "jsbn",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/andyperlitch/jsbn.git"
                              },
                              "scripts": {
                                "test": "mocha test.js"
                              },
                              "version": "0.1.1",
                              "readme": "# jsbn: javascript big number\n\n[Tom Wu's Original Website](http://www-cs-students.stanford.edu/~tjw/jsbn/)\n\nI felt compelled to put this on github and publish to npm. I haven't tested every other big integer library out there, but the few that I have tested in comparison to this one have not even come close in performance. I am aware of the `bi` module on npm, however it has been modified and I wanted to publish the original without modifications. This is jsbn and jsbn2 from Tom Wu's original website above, with the modular pattern applied to prevent global leaks and to allow for use with node.js on the server side.\n\n## usage\n\n    var BigInteger = require('jsbn');\n    \n    var a = new BigInteger('91823918239182398123');\n    alert(a.bitLength()); // 67\n\n\n## API\n\n### bi.toString()\n\nreturns the base-10 number as a string\n\n### bi.negate()\n\nreturns a new BigInteger equal to the negation of `bi`\n\n### bi.abs\n\nreturns new BI of absolute value\n\n### bi.compareTo\n\n\n\n### bi.bitLength\n\n\n\n### bi.mod\n\n\n\n### bi.modPowInt\n\n\n\n### bi.clone\n\n\n\n### bi.intValue\n\n\n\n### bi.byteValue\n\n\n\n### bi.shortValue\n\n\n\n### bi.signum\n\n\n\n### bi.toByteArray\n\n\n\n### bi.equals\n\n\n\n### bi.min\n\n\n\n### bi.max\n\n\n\n### bi.and\n\n\n\n### bi.or\n\n\n\n### bi.xor\n\n\n\n### bi.andNot\n\n\n\n### bi.not\n\n\n\n### bi.shiftLeft\n\n\n\n### bi.shiftRight\n\n\n\n### bi.getLowestSetBit\n\n\n\n### bi.bitCount\n\n\n\n### bi.testBit\n\n\n\n### bi.setBit\n\n\n\n### bi.clearBit\n\n\n\n### bi.flipBit\n\n\n\n### bi.add\n\n\n\n### bi.subtract\n\n\n\n### bi.multiply\n\n\n\n### bi.divide\n\n\n\n### bi.remainder\n\n\n\n### bi.divideAndRemainder\n\n\n\n### bi.modPow\n\n\n\n### bi.modInverse\n\n\n\n### bi.pow\n\n\n\n### bi.gcd\n\n\n\n### bi.isProbablePrime\n\n\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "devDependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/path/to/project/packages/shared/node_modules/jsbn",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "jsbn"
                            },
                            "safer-buffer": {
                              "_args": "[Circular]",
                              "_from": "safer-buffer@2.1.2",
                              "_id": "safer-buffer@2.1.2",
                              "_integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
                              "_location": "/safer-buffer",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "safer-buffer@2.1.2",
                                "name": "safer-buffer",
                                "escapedName": "safer-buffer",
                                "rawSpec": "2.1.2",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "2.1.2"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
                              "_spec": "2.1.2",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "description": "Modern Buffer API polyfill without footguns",
                              "devDependencies": "[Circular]",
                              "files": "[Circular]",
                              "homepage": "https://github.com/ChALkeR/safer-buffer#readme",
                              "license": "MIT",
                              "main": "safer.js",
                              "name": "safer-buffer",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "2.1.2",
                              "readme": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing,\n«fixing» the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API — a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing…\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case — just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled — use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## «Without footguns»?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule).\n",
                              "readmeFilename": "Readme.md",
                              "dependencies": {},
                              "optionalDependencies": "[Circular]",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/safer-buffer",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "safer-buffer"
                            }
                          },
                          "description": "ECC JS code based on JSBN",
                          "homepage": "https://github.com/quartzjer/ecc-jsbn",
                          "keywords": [
                            "jsbn",
                            "ecc",
                            "browserify"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "maintainers": [
                            {
                              "name": "Jeremie Miller",
                              "email": "jeremie@jabber.org",
                              "url": "http://jeremie.com/"
                            },
                            {
                              "name": "Ryan Bennett",
                              "url": "https://github.com/rynomad"
                            }
                          ],
                          "name": "ecc-jsbn",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/quartzjer/ecc-jsbn.git"
                          },
                          "version": "0.1.2",
                          "readme": "ecc-jsbn\n========\n\nECC package based on [jsbn](https://github.com/andyperlitch/jsbn) from [Tom Wu](http://www-cs-students.stanford.edu/~tjw/).\n\nThis is a subset of the same interface as the [node compiled module](https://github.com/quartzjer/ecc), but works in the browser too.\n\nAlso uses point compression now from [https://github.com/kaielvin](https://github.com/kaielvin/jsbn-ec-point-compression).\n",
                          "readmeFilename": "README.md",
                          "devDependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {
                            "jsbn": "~0.1.0",
                            "safer-buffer": "^2.1.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/ecc-jsbn",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "getpass": {
                          "_args": [
                            [
                              "getpass@0.1.7",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "getpass@0.1.7",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "getpass@0.1.7",
                          "_id": "getpass@0.1.7",
                          "_integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
                          "_location": "/getpass",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "getpass@0.1.7",
                            "name": "getpass",
                            "escapedName": "getpass",
                            "rawSpec": "0.1.7",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.1.7"
                          },
                          "_requiredBy": [
                            "/sshpk"
                          ],
                          "_resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
                          "_spec": "0.1.7",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Alex Wilson",
                            "email": "alex.wilson@joyent.com"
                          },
                          "bugs": {
                            "url": "https://github.com/arekinath/node-getpass/issues"
                          },
                          "dependencies": {
                            "assert-plus": {
                              "_args": "[Circular]",
                              "_from": "assert-plus@1.0.0",
                              "_id": "assert-plus@1.0.0",
                              "_integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
                              "_location": "/assert-plus",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "assert-plus@1.0.0",
                                "name": "assert-plus",
                                "escapedName": "assert-plus",
                                "rawSpec": "1.0.0",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.0.0"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
                              "_spec": "1.0.0",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "contributors": "[Circular]",
                              "dependencies": {},
                              "description": "Extra assertions on top of node's assert module",
                              "devDependencies": "[Circular]",
                              "engines": "[Circular]",
                              "homepage": "https://github.com/mcavage/node-assert-plus#readme",
                              "license": "MIT",
                              "main": "./assert.js",
                              "name": "assert-plus",
                              "optionalDependencies": "[Circular]",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "1.0.0",
                              "readme": "# assert-plus\n\nThis library is a super small wrapper over node's assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE\\_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, 'myArg')`.  As a simple example, most of my code looks\nlike this:\n\n```javascript\n    var assert = require('assert-plus');\n\n    function fooAccount(options, callback) {\n        assert.object(options, 'options');\n        assert.number(options.id, 'options.id');\n        assert.bool(options.isManager, 'options.isManager');\n        assert.string(options.name, 'options.name');\n        assert.arrayOfString(options.email, 'options.email');\n        assert.func(callback, 'callback');\n\n        // Do stuff\n        callback(null, {});\n    }\n```\n\n# API\n\nAll methods that *aren't* part of node's core assert API are simply assumed to\ntake an argument, and then a string 'name' that's not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n    at test (/home/mark/work/foo/foo.js:3:9)\n    at Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n    at Module._compile (module.js:446:26)\n    at Object..js (module.js:464:10)\n    at Module.load (module.js:353:31)\n    at Function._load (module.js:311:12)\n    at Array.0 (module.js:484:10)\n    at EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n```javascript\n    function test(foo) {\n        assert.string(foo, 'foo');\n    }\n```\n\nThere you go.  You can check that arrays are of a homogeneous type with `Arrayof$Type`:\n\n```javascript\n    function test(foo) {\n        assert.arrayOfString(foo, 'foo');\n    }\n```\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n```javascript\n    assert.optionalString(foo, 'foo');\n```\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don't want to pay `typeof ()` taxes to v8 in\nproduction.  Be advised:  The standard functions re-exported from `assert` are\nalso disabled in assert-plus if NDEBUG is specified.  Using them directly from\nthe `assert` module avoids this behavior.\n\nThe complete list of APIs is:\n\n* assert.array\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.finite\n* assert.object\n* assert.string\n* assert.stream\n* assert.date\n* assert.regexp\n* assert.uuid\n* assert.arrayOfArray\n* assert.arrayOfBool\n* assert.arrayOfBuffer\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfFinite\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.arrayOfStream\n* assert.arrayOfDate\n* assert.arrayOfRegexp\n* assert.arrayOfUuid\n* assert.optionalArray\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalFinite\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalStream\n* assert.optionalDate\n* assert.optionalRegexp\n* assert.optionalUuid\n* assert.optionalArrayOfArray\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfBuffer\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfFinite\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.optionalArrayOfStream\n* assert.optionalArrayOfDate\n* assert.optionalArrayOfRegexp\n* assert.optionalArrayOfUuid\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n",
                              "readmeFilename": "README.md",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/assert-plus",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "assert-plus"
                            }
                          },
                          "description": "getpass for node.js",
                          "homepage": "https://github.com/arekinath/node-getpass#readme",
                          "license": "MIT",
                          "main": "lib/index.js",
                          "name": "getpass",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/arekinath/node-getpass.git"
                          },
                          "scripts": {
                            "test": "tape test/*.test.js"
                          },
                          "version": "0.1.7",
                          "readme": "## getpass\n\nGet a password from the terminal. Sounds simple? Sounds like the `readline`\nmodule should be able to do it? NOPE.\n\n## Install and use it\n\n```bash\nnpm install --save getpass\n```\n\n```javascript\nconst mod_getpass = require('getpass');\n```\n\n## API\n\n### `mod_getpass.getPass([options, ]callback)`\n\nGets a password from the terminal. If available, this uses `/dev/tty` to avoid\ninterfering with any data being piped in or out of stdio.\n\nThis function prints a prompt (by default `Password:`) and then accepts input\nwithout echoing.\n\nParameters:\n\n * `options`, an Object, with properties:\n   * `prompt`, an optional String\n * `callback`, a `Func(error, password)`, with arguments:\n   * `error`, either `null` (no error) or an `Error` instance\n   * `password`, a String\n",
                          "readmeFilename": "README.md",
                          "devDependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {
                            "assert-plus": "^1.0.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/getpass",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "jsbn": {
                          "_args": "[Circular]",
                          "_from": "jsbn@0.1.1",
                          "_id": "jsbn@0.1.1",
                          "_integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
                          "_location": "/jsbn",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "jsbn@0.1.1",
                            "name": "jsbn",
                            "escapedName": "jsbn",
                            "rawSpec": "0.1.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.1.1"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
                          "_spec": "0.1.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "description": "The jsbn library is a fast, portable implementation of large-number math in pure JavaScript, enabling public-key crypto and other applications on desktop and mobile browsers.",
                          "homepage": "https://github.com/andyperlitch/jsbn#readme",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "main": "index.js",
                          "name": "jsbn",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "0.1.1",
                          "readme": "# jsbn: javascript big number\n\n[Tom Wu's Original Website](http://www-cs-students.stanford.edu/~tjw/jsbn/)\n\nI felt compelled to put this on github and publish to npm. I haven't tested every other big integer library out there, but the few that I have tested in comparison to this one have not even come close in performance. I am aware of the `bi` module on npm, however it has been modified and I wanted to publish the original without modifications. This is jsbn and jsbn2 from Tom Wu's original website above, with the modular pattern applied to prevent global leaks and to allow for use with node.js on the server side.\n\n## usage\n\n    var BigInteger = require('jsbn');\n    \n    var a = new BigInteger('91823918239182398123');\n    alert(a.bitLength()); // 67\n\n\n## API\n\n### bi.toString()\n\nreturns the base-10 number as a string\n\n### bi.negate()\n\nreturns a new BigInteger equal to the negation of `bi`\n\n### bi.abs\n\nreturns new BI of absolute value\n\n### bi.compareTo\n\n\n\n### bi.bitLength\n\n\n\n### bi.mod\n\n\n\n### bi.modPowInt\n\n\n\n### bi.clone\n\n\n\n### bi.intValue\n\n\n\n### bi.byteValue\n\n\n\n### bi.shortValue\n\n\n\n### bi.signum\n\n\n\n### bi.toByteArray\n\n\n\n### bi.equals\n\n\n\n### bi.min\n\n\n\n### bi.max\n\n\n\n### bi.and\n\n\n\n### bi.or\n\n\n\n### bi.xor\n\n\n\n### bi.andNot\n\n\n\n### bi.not\n\n\n\n### bi.shiftLeft\n\n\n\n### bi.shiftRight\n\n\n\n### bi.getLowestSetBit\n\n\n\n### bi.bitCount\n\n\n\n### bi.testBit\n\n\n\n### bi.setBit\n\n\n\n### bi.clearBit\n\n\n\n### bi.flipBit\n\n\n\n### bi.add\n\n\n\n### bi.subtract\n\n\n\n### bi.multiply\n\n\n\n### bi.divide\n\n\n\n### bi.remainder\n\n\n\n### bi.divideAndRemainder\n\n\n\n### bi.modPow\n\n\n\n### bi.modInverse\n\n\n\n### bi.pow\n\n\n\n### bi.gcd\n\n\n\n### bi.isProbablePrime\n\n\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "devDependencies": "[Circular]",
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/jsbn",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "safer-buffer": {
                          "_args": "[Circular]",
                          "_from": "safer-buffer@2.1.2",
                          "_id": "safer-buffer@2.1.2",
                          "_integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
                          "_location": "/safer-buffer",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "safer-buffer@2.1.2",
                            "name": "safer-buffer",
                            "escapedName": "safer-buffer",
                            "rawSpec": "2.1.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "2.1.2"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
                          "_spec": "2.1.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "description": "Modern Buffer API polyfill without footguns",
                          "devDependencies": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/ChALkeR/safer-buffer#readme",
                          "license": "MIT",
                          "main": "safer.js",
                          "name": "safer-buffer",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "2.1.2",
                          "readme": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing,\n«fixing» the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API — a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing…\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case — just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled — use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## «Without footguns»?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule).\n",
                          "readmeFilename": "Readme.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/safer-buffer",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "safer-buffer"
                        },
                        "tweetnacl": {
                          "_args": "[Circular]",
                          "_from": "tweetnacl@0.14.5",
                          "_id": "tweetnacl@0.14.5",
                          "_integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
                          "_location": "/tweetnacl",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "tweetnacl@0.14.5",
                            "name": "tweetnacl",
                            "escapedName": "tweetnacl",
                            "rawSpec": "0.14.5",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.14.5"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
                          "_spec": "0.14.5",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "browser": "[Circular]",
                          "bugs": "[Circular]",
                          "description": "Port of TweetNaCl cryptographic library to JavaScript",
                          "devDependencies": "[Circular]",
                          "directories": "[Circular]",
                          "homepage": "https://tweetnacl.js.org",
                          "keywords": "[Circular]",
                          "license": "Unlicense",
                          "main": "nacl-fast.js",
                          "name": "tweetnacl",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "types": "nacl.d.ts",
                          "version": "0.14.5",
                          "readme": "TweetNaCl.js\n============\n\nPort of [TweetNaCl](http://tweetnacl.cr.yp.to) / [NaCl](http://nacl.cr.yp.to/)\nto JavaScript for modern browsers and Node.js. Public domain.\n\n[![Build Status](https://travis-ci.org/dchest/tweetnacl-js.svg?branch=master)\n](https://travis-ci.org/dchest/tweetnacl-js)\n\nDemo: <https://tweetnacl.js.org>\n\n**:warning: The library is stable and API is frozen, however it has not been\nindependently reviewed. If you can help reviewing it, please [contact\nme](mailto:dmitry@codingrobots.com).**\n\nDocumentation\n=============\n\n* [Overview](#overview)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Public-key authenticated encryption (box)](#public-key-authenticated-encryption-box)\n  * [Secret-key authenticated encryption (secretbox)](#secret-key-authenticated-encryption-secretbox)\n  * [Scalar multiplication](#scalar-multiplication)\n  * [Signatures](#signatures)\n  * [Hashing](#hashing)\n  * [Random bytes generation](#random-bytes-generation)\n  * [Constant-time comparison](#constant-time-comparison)\n* [System requirements](#system-requirements)\n* [Development and testing](#development-and-testing)\n* [Benchmarks](#benchmarks)\n* [Contributors](#contributors)\n* [Who uses it](#who-uses-it)\n\n\nOverview\n--------\n\nThe primary goal of this project is to produce a translation of TweetNaCl to\nJavaScript which is as close as possible to the original C implementation, plus\na thin layer of idiomatic high-level API on top of it.\n\nThere are two versions, you can use either of them:\n\n* `nacl.js` is the port of TweetNaCl with minimum differences from the\n  original + high-level API.\n\n* `nacl-fast.js` is like `nacl.js`, but with some functions replaced with\n  faster versions.\n\n\nInstallation\n------------\n\nYou can install TweetNaCl.js via a package manager:\n\n[Bower](http://bower.io):\n\n    $ bower install tweetnacl\n\n[NPM](https://www.npmjs.org/):\n\n    $ npm install tweetnacl\n\nor [download source code](https://github.com/dchest/tweetnacl-js/releases).\n\n\nUsage\n-----\n\nAll API functions accept and return bytes as `Uint8Array`s.  If you need to\nencode or decode strings, use functions from\n<https://github.com/dchest/tweetnacl-util-js> or one of the more robust codec\npackages.\n\nIn Node.js v4 and later `Buffer` objects are backed by `Uint8Array`s, so you\ncan freely pass them to TweetNaCl.js functions as arguments. The returned\nobjects are still `Uint8Array`s, so if you need `Buffer`s, you'll have to\nconvert them manually; make sure to convert using copying: `new Buffer(array)`,\ninstead of sharing: `new Buffer(array.buffer)`, because some functions return\nsubarrays of their buffers.\n\n\n### Public-key authenticated encryption (box)\n\nImplements *curve25519-xsalsa20-poly1305*.\n\n#### nacl.box.keyPair()\n\nGenerates a new random key pair for box and returns it as an object with\n`publicKey` and `secretKey` members:\n\n    {\n       publicKey: ...,  // Uint8Array with 32-byte public key\n       secretKey: ...   // Uint8Array with 32-byte secret key\n    }\n\n\n#### nacl.box.keyPair.fromSecretKey(secretKey)\n\nReturns a key pair for box with public key corresponding to the given secret\nkey.\n\n#### nacl.box(message, nonce, theirPublicKey, mySecretKey)\n\nEncrypt and authenticates message using peer's public key, our secret key, and\nthe given nonce, which must be unique for each distinct message for a key pair.\n\nReturns an encrypted and authenticated message, which is\n`nacl.box.overheadLength` longer than the original message.\n\n#### nacl.box.open(box, nonce, theirPublicKey, mySecretKey)\n\nAuthenticates and decrypts the given box with peer's public key, our secret\nkey, and the given nonce.\n\nReturns the original message, or `false` if authentication fails.\n\n#### nacl.box.before(theirPublicKey, mySecretKey)\n\nReturns a precomputed shared key which can be used in `nacl.box.after` and\n`nacl.box.open.after`.\n\n#### nacl.box.after(message, nonce, sharedKey)\n\nSame as `nacl.box`, but uses a shared key precomputed with `nacl.box.before`.\n\n#### nacl.box.open.after(box, nonce, sharedKey)\n\nSame as `nacl.box.open`, but uses a shared key precomputed with `nacl.box.before`.\n\n#### nacl.box.publicKeyLength = 32\n\nLength of public key in bytes.\n\n#### nacl.box.secretKeyLength = 32\n\nLength of secret key in bytes.\n\n#### nacl.box.sharedKeyLength = 32\n\nLength of precomputed shared key in bytes.\n\n#### nacl.box.nonceLength = 24\n\nLength of nonce in bytes.\n\n#### nacl.box.overheadLength = 16\n\nLength of overhead added to box compared to original message.\n\n\n### Secret-key authenticated encryption (secretbox)\n\nImplements *xsalsa20-poly1305*.\n\n#### nacl.secretbox(message, nonce, key)\n\nEncrypt and authenticates message using the key and the nonce. The nonce must\nbe unique for each distinct message for this key.\n\nReturns an encrypted and authenticated message, which is\n`nacl.secretbox.overheadLength` longer than the original message.\n\n#### nacl.secretbox.open(box, nonce, key)\n\nAuthenticates and decrypts the given secret box using the key and the nonce.\n\nReturns the original message, or `false` if authentication fails.\n\n#### nacl.secretbox.keyLength = 32\n\nLength of key in bytes.\n\n#### nacl.secretbox.nonceLength = 24\n\nLength of nonce in bytes.\n\n#### nacl.secretbox.overheadLength = 16\n\nLength of overhead added to secret box compared to original message.\n\n\n### Scalar multiplication\n\nImplements *curve25519*.\n\n#### nacl.scalarMult(n, p)\n\nMultiplies an integer `n` by a group element `p` and returns the resulting\ngroup element.\n\n#### nacl.scalarMult.base(n)\n\nMultiplies an integer `n` by a standard group element and returns the resulting\ngroup element.\n\n#### nacl.scalarMult.scalarLength = 32\n\nLength of scalar in bytes.\n\n#### nacl.scalarMult.groupElementLength = 32\n\nLength of group element in bytes.\n\n\n### Signatures\n\nImplements [ed25519](http://ed25519.cr.yp.to).\n\n#### nacl.sign.keyPair()\n\nGenerates new random key pair for signing and returns it as an object with\n`publicKey` and `secretKey` members:\n\n    {\n       publicKey: ...,  // Uint8Array with 32-byte public key\n       secretKey: ...   // Uint8Array with 64-byte secret key\n    }\n\n#### nacl.sign.keyPair.fromSecretKey(secretKey)\n\nReturns a signing key pair with public key corresponding to the given\n64-byte secret key. The secret key must have been generated by\n`nacl.sign.keyPair` or `nacl.sign.keyPair.fromSeed`.\n\n#### nacl.sign.keyPair.fromSeed(seed)\n\nReturns a new signing key pair generated deterministically from a 32-byte seed.\nThe seed must contain enough entropy to be secure. This method is not\nrecommended for general use: instead, use `nacl.sign.keyPair` to generate a new\nkey pair from a random seed.\n\n#### nacl.sign(message, secretKey)\n\nSigns the message using the secret key and returns a signed message.\n\n#### nacl.sign.open(signedMessage, publicKey)\n\nVerifies the signed message and returns the message without signature.\n\nReturns `null` if verification failed.\n\n#### nacl.sign.detached(message, secretKey)\n\nSigns the message using the secret key and returns a signature.\n\n#### nacl.sign.detached.verify(message, signature, publicKey)\n\nVerifies the signature for the message and returns `true` if verification\nsucceeded or `false` if it failed.\n\n#### nacl.sign.publicKeyLength = 32\n\nLength of signing public key in bytes.\n\n#### nacl.sign.secretKeyLength = 64\n\nLength of signing secret key in bytes.\n\n#### nacl.sign.seedLength = 32\n\nLength of seed for `nacl.sign.keyPair.fromSeed` in bytes.\n\n#### nacl.sign.signatureLength = 64\n\nLength of signature in bytes.\n\n\n### Hashing\n\nImplements *SHA-512*.\n\n#### nacl.hash(message)\n\nReturns SHA-512 hash of the message.\n\n#### nacl.hash.hashLength = 64\n\nLength of hash in bytes.\n\n\n### Random bytes generation\n\n#### nacl.randomBytes(length)\n\nReturns a `Uint8Array` of the given length containing random bytes of\ncryptographic quality.\n\n**Implementation note**\n\nTweetNaCl.js uses the following methods to generate random bytes,\ndepending on the platform it runs on:\n\n* `window.crypto.getRandomValues` (WebCrypto standard)\n* `window.msCrypto.getRandomValues` (Internet Explorer 11)\n* `crypto.randomBytes` (Node.js)\n\nIf the platform doesn't provide a suitable PRNG, the following functions,\nwhich require random numbers, will throw exception:\n\n* `nacl.randomBytes`\n* `nacl.box.keyPair`\n* `nacl.sign.keyPair`\n\nOther functions are deterministic and will continue working.\n\nIf a platform you are targeting doesn't implement secure random number\ngenerator, but you somehow have a cryptographically-strong source of entropy\n(not `Math.random`!), and you know what you are doing, you can plug it into\nTweetNaCl.js like this:\n\n    nacl.setPRNG(function(x, n) {\n      // ... copy n random bytes into x ...\n    });\n\nNote that `nacl.setPRNG` *completely replaces* internal random byte generator\nwith the one provided.\n\n\n### Constant-time comparison\n\n#### nacl.verify(x, y)\n\nCompares `x` and `y` in constant time and returns `true` if their lengths are\nnon-zero and equal, and their contents are equal.\n\nReturns `false` if either of the arguments has zero length, or arguments have\ndifferent lengths, or their contents differ.\n\n\nSystem requirements\n-------------------\n\nTweetNaCl.js supports modern browsers that have a cryptographically secure\npseudorandom number generator and typed arrays, including the latest versions\nof:\n\n* Chrome\n* Firefox\n* Safari (Mac, iOS)\n* Internet Explorer 11\n\nOther systems:\n\n* Node.js\n\n\nDevelopment and testing\n------------------------\n\nInstall NPM modules needed for development:\n\n    $ npm install\n\nTo build minified versions:\n\n    $ npm run build\n\nTests use minified version, so make sure to rebuild it every time you change\n`nacl.js` or `nacl-fast.js`.\n\n### Testing\n\nTo run tests in Node.js:\n\n    $ npm run test-node\n\nBy default all tests described here work on `nacl.min.js`. To test other\nversions, set environment variable `NACL_SRC` to the file name you want to test.\nFor example, the following command will test fast minified version:\n\n    $ NACL_SRC=nacl-fast.min.js npm run test-node\n\nTo run full suite of tests in Node.js, including comparing outputs of\nJavaScript port to outputs of the original C version:\n\n    $ npm run test-node-all\n\nTo prepare tests for browsers:\n\n    $ npm run build-test-browser\n\nand then open `test/browser/test.html` (or `test/browser/test-fast.html`) to\nrun them.\n\nTo run headless browser tests with `tape-run` (powered by Electron):\n\n    $ npm run test-browser\n\n(If you get `Error: spawn ENOENT`, install *xvfb*: `sudo apt-get install xvfb`.)\n\nTo run tests in both Node and Electron:\n\n    $ npm test\n\n### Benchmarking\n\nTo run benchmarks in Node.js:\n\n    $ npm run bench\n    $ NACL_SRC=nacl-fast.min.js npm run bench\n\nTo run benchmarks in a browser, open `test/benchmark/bench.html` (or\n`test/benchmark/bench-fast.html`).\n\n\nBenchmarks\n----------\n\nFor reference, here are benchmarks from MacBook Pro (Retina, 13-inch, Mid 2014)\nlaptop with 2.6 GHz Intel Core i5 CPU (Intel) in Chrome 53/OS X and Xiaomi Redmi\nNote 3 smartphone with 1.8 GHz Qualcomm Snapdragon 650 64-bit CPU (ARM) in\nChrome 52/Android:\n\n|               | nacl.js Intel | nacl-fast.js Intel  |   nacl.js ARM | nacl-fast.js ARM  |\n| ------------- |:-------------:|:-------------------:|:-------------:|:-----------------:|\n| salsa20       | 1.3 MB/s      | 128 MB/s            |  0.4 MB/s     |  43 MB/s          |\n| poly1305      | 13 MB/s       | 171 MB/s            |  4 MB/s       |  52 MB/s          |\n| hash          | 4 MB/s        | 34 MB/s             |  0.9 MB/s     |  12 MB/s          |\n| secretbox 1K  | 1113 op/s     | 57583 op/s          |  334 op/s     |  14227 op/s       |\n| box 1K        | 145 op/s      | 718 op/s            |  37 op/s      |  368 op/s         |\n| scalarMult    | 171 op/s      | 733 op/s            |  56 op/s      |  380 op/s         |\n| sign          | 77  op/s      | 200 op/s            |  20 op/s      |  61 op/s          |\n| sign.open     | 39  op/s      | 102  op/s           |  11 op/s      |  31 op/s          |\n\n(You can run benchmarks on your devices by clicking on the links at the bottom\nof the [home page](https://tweetnacl.js.org)).\n\nIn short, with *nacl-fast.js* and 1024-byte messages you can expect to encrypt and\nauthenticate more than 57000 messages per second on a typical laptop or more than\n14000 messages per second on a $170 smartphone, sign about 200 and verify 100\nmessages per second on a laptop or 60 and 30 messages per second on a smartphone,\nper CPU core (with Web Workers you can do these operations in parallel),\nwhich is good enough for most applications.\n\n\nContributors\n------------\n\nSee AUTHORS.md file.\n\n\nThird-party libraries based on TweetNaCl.js\n-------------------------------------------\n\n* [forward-secrecy](https://github.com/alax/forward-secrecy) — Axolotl ratchet implementation\n* [nacl-stream](https://github.com/dchest/nacl-stream-js) - streaming encryption\n* [tweetnacl-auth-js](https://github.com/dchest/tweetnacl-auth-js) — implementation of [`crypto_auth`](http://nacl.cr.yp.to/auth.html)\n* [chloride](https://github.com/dominictarr/chloride) - unified API for various NaCl modules\n\n\nWho uses it\n-----------\n\nSome notable users of TweetNaCl.js:\n\n* [miniLock](http://minilock.io/)\n* [Stellar](https://www.stellar.org/)\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/tweetnacl",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "A library for finding and using SSH public keys",
                      "devDependencies": {
                        "benchmark": "^1.0.0",
                        "sinon": "^1.17.2",
                        "tape": "^3.5.0",
                        "temp": "^0.8.2"
                      },
                      "directories": {
                        "bin": "./bin",
                        "lib": "./lib",
                        "man": "./man/man1"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "homepage": "https://github.com/arekinath/node-sshpk#readme",
                      "license": "MIT",
                      "main": "lib/index.js",
                      "man": [
                        "/path/to/project/packages/shared/node_modules/sshpk/man/man1/sshpk-conv.1",
                        "/path/to/project/packages/shared/node_modules/sshpk/man/man1/sshpk-sign.1",
                        "/path/to/project/packages/shared/node_modules/sshpk/man/man1/sshpk-verify.1"
                      ],
                      "name": "sshpk",
                      "optionalDependencies": {},
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/joyent/node-sshpk.git"
                      },
                      "scripts": {
                        "test": "tape test/*.js"
                      },
                      "version": "1.16.1",
                      "readme": "sshpk\n=========\n\nParse, convert, fingerprint and use SSH keys (both public and private) in pure\nnode -- no `ssh-keygen` or other external dependencies.\n\nSupports RSA, DSA, ECDSA (nistp-\\*) and ED25519 key types, in PEM (PKCS#1, \nPKCS#8) and OpenSSH formats.\n\nThis library has been extracted from\n[`node-http-signature`](https://github.com/joyent/node-http-signature)\n(work by [Mark Cavage](https://github.com/mcavage) and\n[Dave Eddy](https://github.com/bahamas10)) and\n[`node-ssh-fingerprint`](https://github.com/bahamas10/node-ssh-fingerprint)\n(work by Dave Eddy), with additions (including ECDSA support) by\n[Alex Wilson](https://github.com/arekinath).\n\nInstall\n-------\n\n```\nnpm install sshpk\n```\n\nExamples\n--------\n\n```js\nvar sshpk = require('sshpk');\n\nvar fs = require('fs');\n\n/* Read in an OpenSSH-format public key */\nvar keyPub = fs.readFileSync('id_rsa.pub');\nvar key = sshpk.parseKey(keyPub, 'ssh');\n\n/* Get metadata about the key */\nconsole.log('type => %s', key.type);\nconsole.log('size => %d bits', key.size);\nconsole.log('comment => %s', key.comment);\n\n/* Compute key fingerprints, in new OpenSSH (>6.7) format, and old MD5 */\nconsole.log('fingerprint => %s', key.fingerprint().toString());\nconsole.log('old-style fingerprint => %s', key.fingerprint('md5').toString());\n```\n\nExample output:\n\n```\ntype => rsa\nsize => 2048 bits\ncomment => foo@foo.com\nfingerprint => SHA256:PYC9kPVC6J873CSIbfp0LwYeczP/W4ffObNCuDJ1u5w\nold-style fingerprint => a0:c8:ad:6c:32:9a:32:fa:59:cc:a9:8c:0a:0d:6e:bd\n```\n\nMore examples: converting between formats:\n\n```js\n/* Read in a PEM public key */\nvar keyPem = fs.readFileSync('id_rsa.pem');\nvar key = sshpk.parseKey(keyPem, 'pem');\n\n/* Convert to PEM PKCS#8 public key format */\nvar pemBuf = key.toBuffer('pkcs8');\n\n/* Convert to SSH public key format (and return as a string) */\nvar sshKey = key.toString('ssh');\n```\n\nSigning and verifying:\n\n```js\n/* Read in an OpenSSH/PEM *private* key */\nvar keyPriv = fs.readFileSync('id_ecdsa');\nvar key = sshpk.parsePrivateKey(keyPriv, 'pem');\n\nvar data = 'some data';\n\n/* Sign some data with the key */\nvar s = key.createSign('sha1');\ns.update(data);\nvar signature = s.sign();\n\n/* Now load the public key (could also use just key.toPublic()) */\nvar keyPub = fs.readFileSync('id_ecdsa.pub');\nkey = sshpk.parseKey(keyPub, 'ssh');\n\n/* Make a crypto.Verifier with this key */\nvar v = key.createVerify('sha1');\nv.update(data);\nvar valid = v.verify(signature);\n/* => true! */\n```\n\nMatching fingerprints with keys:\n\n```js\nvar fp = sshpk.parseFingerprint('SHA256:PYC9kPVC6J873CSIbfp0LwYeczP/W4ffObNCuDJ1u5w');\n\nvar keys = [sshpk.parseKey(...), sshpk.parseKey(...), ...];\n\nkeys.forEach(function (key) {\n\tif (fp.matches(key))\n\t\tconsole.log('found it!');\n});\n```\n\nUsage\n-----\n\n## Public keys\n\n### `parseKey(data[, format = 'auto'[, options]])`\n\nParses a key from a given data format and returns a new `Key` object.\n\nParameters\n\n- `data` -- Either a Buffer or String, containing the key\n- `format` -- String name of format to use, valid options are:\n  - `auto`: choose automatically from all below\n  - `pem`: supports both PKCS#1 and PKCS#8\n  - `ssh`: standard OpenSSH format,\n  - `pkcs1`, `pkcs8`: variants of `pem`\n  - `rfc4253`: raw OpenSSH wire format\n  - `openssh`: new post-OpenSSH 6.5 internal format, produced by \n               `ssh-keygen -o`\n  - `dnssec`: `.key` file format output by `dnssec-keygen` etc\n  - `putty`: the PuTTY `.ppk` file format (supports truncated variant without\n             all the lines from `Private-Lines:` onwards)\n- `options` -- Optional Object, extra options, with keys:\n  - `filename` -- Optional String, name for the key being parsed \n                  (eg. the filename that was opened). Used to generate\n                  Error messages\n  - `passphrase` -- Optional String, encryption passphrase used to decrypt an\n                    encrypted PEM file\n\n### `Key.isKey(obj)`\n\nReturns `true` if the given object is a valid `Key` object created by a version\nof `sshpk` compatible with this one.\n\nParameters\n\n- `obj` -- Object to identify\n\n### `Key#type`\n\nString, the type of key. Valid options are `rsa`, `dsa`, `ecdsa`.\n\n### `Key#size`\n\nInteger, \"size\" of the key in bits. For RSA/DSA this is the size of the modulus;\nfor ECDSA this is the bit size of the curve in use.\n\n### `Key#comment`\n\nOptional string, a key comment used by some formats (eg the `ssh` format).\n\n### `Key#curve`\n\nOnly present if `this.type === 'ecdsa'`, string containing the name of the\nnamed curve used with this key. Possible values include `nistp256`, `nistp384`\nand `nistp521`.\n\n### `Key#toBuffer([format = 'ssh'])`\n\nConvert the key into a given data format and return the serialized key as\na Buffer.\n\nParameters\n\n- `format` -- String name of format to use, for valid options see `parseKey()`\n\n### `Key#toString([format = 'ssh])`\n\nSame as `this.toBuffer(format).toString()`.\n\n### `Key#fingerprint([algorithm = 'sha256'[, hashType = 'ssh']])`\n\nCreates a new `Fingerprint` object representing this Key's fingerprint.\n\nParameters\n\n- `algorithm` -- String name of hash algorithm to use, valid options are `md5`,\n                 `sha1`, `sha256`, `sha384`, `sha512`\n- `hashType` -- String name of fingerprint hash type to use, valid options are\n                `ssh` (the type of fingerprint used by OpenSSH, e.g. in\n                `ssh-keygen`), `spki` (used by HPKP, some OpenSSL applications)\n\n### `Key#createVerify([hashAlgorithm])`\n\nCreates a `crypto.Verifier` specialized to use this Key (and the correct public\nkey algorithm to match it). The returned Verifier has the same API as a regular\none, except that the `verify()` function takes only the target signature as an\nargument.\n\nParameters\n\n- `hashAlgorithm` -- optional String name of hash algorithm to use, any\n                     supported by OpenSSL are valid, usually including\n                     `sha1`, `sha256`.\n\n`v.verify(signature[, format])` Parameters\n\n- `signature` -- either a Signature object, or a Buffer or String\n- `format` -- optional String, name of format to interpret given String with.\n              Not valid if `signature` is a Signature or Buffer.\n\n### `Key#createDiffieHellman()`\n### `Key#createDH()`\n\nCreates a Diffie-Hellman key exchange object initialized with this key and all\nnecessary parameters. This has the same API as a `crypto.DiffieHellman`\ninstance, except that functions take `Key` and `PrivateKey` objects as\narguments, and return them where indicated for.\n\nThis is only valid for keys belonging to a cryptosystem that supports DHE\nor a close analogue (i.e. `dsa`, `ecdsa` and `curve25519` keys). An attempt\nto call this function on other keys will yield an `Error`.\n\n## Private keys\n\n### `parsePrivateKey(data[, format = 'auto'[, options]])`\n\nParses a private key from a given data format and returns a new\n`PrivateKey` object.\n\nParameters\n\n- `data` -- Either a Buffer or String, containing the key\n- `format` -- String name of format to use, valid options are:\n  - `auto`: choose automatically from all below\n  - `pem`: supports both PKCS#1 and PKCS#8\n  - `ssh`, `openssh`: new post-OpenSSH 6.5 internal format, produced by\n                      `ssh-keygen -o`\n  - `pkcs1`, `pkcs8`: variants of `pem`\n  - `rfc4253`: raw OpenSSH wire format\n  - `dnssec`: `.private` format output by `dnssec-keygen` etc.\n- `options` -- Optional Object, extra options, with keys:\n  - `filename` -- Optional String, name for the key being parsed\n                  (eg. the filename that was opened). Used to generate\n                  Error messages\n  - `passphrase` -- Optional String, encryption passphrase used to decrypt an\n                    encrypted PEM file\n\n### `generatePrivateKey(type[, options])`\n\nGenerates a new private key of a certain key type, from random data.\n\nParameters\n\n- `type` -- String, type of key to generate. Currently supported are `'ecdsa'`\n            and `'ed25519'`\n- `options` -- optional Object, with keys:\n  - `curve` -- optional String, for `'ecdsa'` keys, specifies the curve to use.\n               If ECDSA is specified and this option is not given, defaults to\n               using `'nistp256'`.\n\n### `PrivateKey.isPrivateKey(obj)`\n\nReturns `true` if the given object is a valid `PrivateKey` object created by a\nversion of `sshpk` compatible with this one.\n\nParameters\n\n- `obj` -- Object to identify\n\n### `PrivateKey#type`\n\nString, the type of key. Valid options are `rsa`, `dsa`, `ecdsa`.\n\n### `PrivateKey#size`\n\nInteger, \"size\" of the key in bits. For RSA/DSA this is the size of the modulus;\nfor ECDSA this is the bit size of the curve in use.\n\n### `PrivateKey#curve`\n\nOnly present if `this.type === 'ecdsa'`, string containing the name of the\nnamed curve used with this key. Possible values include `nistp256`, `nistp384`\nand `nistp521`.\n\n### `PrivateKey#toBuffer([format = 'pkcs1'])`\n\nConvert the key into a given data format and return the serialized key as\na Buffer.\n\nParameters\n\n- `format` -- String name of format to use, valid options are listed under \n              `parsePrivateKey`. Note that ED25519 keys default to `openssh`\n              format instead (as they have no `pkcs1` representation).\n\n### `PrivateKey#toString([format = 'pkcs1'])`\n\nSame as `this.toBuffer(format).toString()`.\n\n### `PrivateKey#toPublic()`\n\nExtract just the public part of this private key, and return it as a `Key`\nobject.\n\n### `PrivateKey#fingerprint([algorithm = 'sha256'])`\n\nSame as `this.toPublic().fingerprint()`.\n\n### `PrivateKey#createVerify([hashAlgorithm])`\n\nSame as `this.toPublic().createVerify()`.\n\n### `PrivateKey#createSign([hashAlgorithm])`\n\nCreates a `crypto.Sign` specialized to use this PrivateKey (and the correct\nkey algorithm to match it). The returned Signer has the same API as a regular\none, except that the `sign()` function takes no arguments, and returns a\n`Signature` object.\n\nParameters\n\n- `hashAlgorithm` -- optional String name of hash algorithm to use, any\n                     supported by OpenSSL are valid, usually including\n                     `sha1`, `sha256`.\n\n`v.sign()` Parameters\n\n- none\n\n### `PrivateKey#derive(newType)`\n\nDerives a related key of type `newType` from this key. Currently this is\nonly supported to change between `ed25519` and `curve25519` keys which are\nstored with the same private key (but usually distinct public keys in order\nto avoid degenerate keys that lead to a weak Diffie-Hellman exchange).\n\nParameters\n\n- `newType` -- String, type of key to derive, either `ed25519` or `curve25519`\n\n## Fingerprints\n\n### `parseFingerprint(fingerprint[, options])`\n\nPre-parses a fingerprint, creating a `Fingerprint` object that can be used to\nquickly locate a key by using the `Fingerprint#matches` function.\n\nParameters\n\n- `fingerprint` -- String, the fingerprint value, in any supported format\n- `options` -- Optional Object, with properties:\n  - `algorithms` -- Array of strings, names of hash algorithms to limit\n                support to. If `fingerprint` uses a hash algorithm not on\n                this list, throws `InvalidAlgorithmError`.\n  - `hashType` -- String, the type of hash the fingerprint uses, either `ssh`\n                  or `spki` (normally auto-detected based on the format, but\n                  can be overridden)\n  - `type` -- String, the entity this fingerprint identifies, either `key` or\n              `certificate`\n\n### `Fingerprint.isFingerprint(obj)`\n\nReturns `true` if the given object is a valid `Fingerprint` object created by a\nversion of `sshpk` compatible with this one.\n\nParameters\n\n- `obj` -- Object to identify\n\n### `Fingerprint#toString([format])`\n\nReturns a fingerprint as a string, in the given format.\n\nParameters\n\n- `format` -- Optional String, format to use, valid options are `hex` and\n              `base64`. If this `Fingerprint` uses the `md5` algorithm, the\n              default format is `hex`. Otherwise, the default is `base64`.\n\n### `Fingerprint#matches(keyOrCertificate)`\n\nVerifies whether or not this `Fingerprint` matches a given `Key` or\n`Certificate`. This function uses double-hashing to avoid leaking timing\ninformation. Returns a boolean.\n\nNote that a `Key`-type Fingerprint will always return `false` if asked to match\na `Certificate` and vice versa.\n\nParameters\n\n- `keyOrCertificate` -- a `Key` object or `Certificate` object, the entity to\n                        match this fingerprint against\n\n## Signatures\n\n### `parseSignature(signature, algorithm, format)`\n\nParses a signature in a given format, creating a `Signature` object. Useful\nfor converting between the SSH and ASN.1 (PKCS/OpenSSL) signature formats, and\nalso returned as output from `PrivateKey#createSign().sign()`.\n\nA Signature object can also be passed to a verifier produced by\n`Key#createVerify()` and it will automatically be converted internally into the\ncorrect format for verification.\n\nParameters\n\n- `signature` -- a Buffer (binary) or String (base64), data of the actual\n                 signature in the given format\n- `algorithm` -- a String, name of the algorithm to be used, possible values\n                 are `rsa`, `dsa`, `ecdsa`\n- `format` -- a String, either `asn1` or `ssh`\n\n### `Signature.isSignature(obj)`\n\nReturns `true` if the given object is a valid `Signature` object created by a\nversion of `sshpk` compatible with this one.\n\nParameters\n\n- `obj` -- Object to identify\n\n### `Signature#toBuffer([format = 'asn1'])`\n\nConverts a Signature to the given format and returns it as a Buffer.\n\nParameters\n\n- `format` -- a String, either `asn1` or `ssh`\n\n### `Signature#toString([format = 'asn1'])`\n\nSame as `this.toBuffer(format).toString('base64')`.\n\n## Certificates\n\n`sshpk` includes basic support for parsing certificates in X.509 (PEM) format\nand the OpenSSH certificate format. This feature is intended to be used mainly\nto access basic metadata about certificates, extract public keys from them, and\nalso to generate simple self-signed certificates from an existing key.\n\nNotably, there is no implementation of CA chain-of-trust verification, and only\nvery minimal support for key usage restrictions. Please do the security world\na favour, and DO NOT use this code for certificate verification in the\ntraditional X.509 CA chain style.\n\n### `parseCertificate(data, format)`\n\nParameters\n\n - `data` -- a Buffer or String\n - `format` -- a String, format to use, one of `'openssh'`, `'pem'` (X.509 in a\n               PEM wrapper), or `'x509'` (raw DER encoded)\n\n### `createSelfSignedCertificate(subject, privateKey[, options])`\n\nParameters\n\n - `subject` -- an Identity, the subject of the certificate\n - `privateKey` -- a PrivateKey, the key of the subject: will be used both to be\n                   placed in the certificate and also to sign it (since this is\n                   a self-signed certificate)\n - `options` -- optional Object, with keys:\n   - `lifetime` -- optional Number, lifetime of the certificate from now in\n                   seconds\n   - `validFrom`, `validUntil` -- optional Dates, beginning and end of\n                                  certificate validity period. If given\n                                  `lifetime` will be ignored\n   - `serial` -- optional Buffer, the serial number of the certificate\n   - `purposes` -- optional Array of String, X.509 key usage restrictions\n\n### `createCertificate(subject, key, issuer, issuerKey[, options])`\n\nParameters\n\n - `subject` -- an Identity, the subject of the certificate\n - `key` -- a Key, the public key of the subject\n - `issuer` -- an Identity, the issuer of the certificate who will sign it\n - `issuerKey` -- a PrivateKey, the issuer's private key for signing\n - `options` -- optional Object, with keys:\n   - `lifetime` -- optional Number, lifetime of the certificate from now in\n                   seconds\n   - `validFrom`, `validUntil` -- optional Dates, beginning and end of\n                                  certificate validity period. If given\n                                  `lifetime` will be ignored\n   - `serial` -- optional Buffer, the serial number of the certificate\n   - `purposes` -- optional Array of String, X.509 key usage restrictions\n\n### `Certificate#subjects`\n\nArray of `Identity` instances describing the subject of this certificate.\n\n### `Certificate#issuer`\n\nThe `Identity` of the Certificate's issuer (signer).\n\n### `Certificate#subjectKey`\n\nThe public key of the subject of the certificate, as a `Key` instance.\n\n### `Certificate#issuerKey`\n\nThe public key of the signing issuer of this certificate, as a `Key` instance.\nMay be `undefined` if the issuer's key is unknown (e.g. on an X509 certificate).\n\n### `Certificate#serial`\n\nThe serial number of the certificate. As this is normally a 64-bit or wider\ninteger, it is returned as a Buffer.\n\n### `Certificate#purposes`\n\nArray of Strings indicating the X.509 key usage purposes that this certificate\nis valid for. The possible strings at the moment are:\n\n * `'signature'` -- key can be used for digital signatures\n * `'identity'` -- key can be used to attest about the identity of the signer\n                   (X.509 calls this `nonRepudiation`)\n * `'codeSigning'` -- key can be used to sign executable code\n * `'keyEncryption'` -- key can be used to encrypt other keys\n * `'encryption'` -- key can be used to encrypt data (only applies for RSA)\n * `'keyAgreement'` -- key can be used for key exchange protocols such as\n                       Diffie-Hellman\n * `'ca'` -- key can be used to sign other certificates (is a Certificate\n             Authority)\n * `'crl'` -- key can be used to sign Certificate Revocation Lists (CRLs)\n\n### `Certificate#getExtension(nameOrOid)`\n\nRetrieves information about a certificate extension, if present, or returns\n`undefined` if not. The string argument `nameOrOid` should be either the OID\n(for X509 extensions) or the name (for OpenSSH extensions) of the extension\nto retrieve.\n\nThe object returned will have the following properties:\n\n * `format` -- String, set to either `'x509'` or `'openssh'`\n * `name` or `oid` -- String, only one set based on value of `format`\n * `data` -- Buffer, the raw data inside the extension\n\n### `Certificate#getExtensions()`\n\nReturns an Array of all present certificate extensions, in the same manner and\nformat as `getExtension()`.\n\n### `Certificate#isExpired([when])`\n\nTests whether the Certificate is currently expired (i.e. the `validFrom` and\n`validUntil` dates specify a range of time that does not include the current\ntime).\n\nParameters\n\n - `when` -- optional Date, if specified, tests whether the Certificate was or\n             will be expired at the specified time instead of now\n\nReturns a Boolean.\n\n### `Certificate#isSignedByKey(key)`\n\nTests whether the Certificate was validly signed by the given (public) Key.\n\nParameters\n\n - `key` -- a Key instance\n\nReturns a Boolean.\n\n### `Certificate#isSignedBy(certificate)`\n\nTests whether this Certificate was validly signed by the subject of the given\ncertificate. Also tests that the issuer Identity of this Certificate and the\nsubject Identity of the other Certificate are equivalent.\n\nParameters\n\n - `certificate` -- another Certificate instance\n\nReturns a Boolean.\n\n### `Certificate#fingerprint([hashAlgo])`\n\nReturns the X509-style fingerprint of the entire certificate (as a Fingerprint\ninstance). This matches what a web-browser or similar would display as the\ncertificate fingerprint and should not be confused with the fingerprint of the\nsubject's public key.\n\nParameters\n\n - `hashAlgo` -- an optional String, any hash function name\n\n### `Certificate#toBuffer([format])`\n\nSerializes the Certificate to a Buffer and returns it.\n\nParameters\n\n - `format` -- an optional String, output format, one of `'openssh'`, `'pem'` or\n               `'x509'`. Defaults to `'x509'`.\n\nReturns a Buffer.\n\n### `Certificate#toString([format])`\n\n - `format` -- an optional String, output format, one of `'openssh'`, `'pem'` or\n               `'x509'`. Defaults to `'pem'`.\n\nReturns a String.\n\n## Certificate identities\n\n### `identityForHost(hostname)`\n\nConstructs a host-type Identity for a given hostname.\n\nParameters\n\n - `hostname` -- the fully qualified DNS name of the host\n\nReturns an Identity instance.\n\n### `identityForUser(uid)`\n\nConstructs a user-type Identity for a given UID.\n\nParameters\n\n - `uid` -- a String, user identifier (login name)\n\nReturns an Identity instance.\n\n### `identityForEmail(email)`\n\nConstructs an email-type Identity for a given email address.\n\nParameters\n\n - `email` -- a String, email address\n\nReturns an Identity instance.\n\n### `identityFromDN(dn)`\n\nParses an LDAP-style DN string (e.g. `'CN=foo, C=US'`) and turns it into an\nIdentity instance.\n\nParameters\n\n - `dn` -- a String\n\nReturns an Identity instance.\n\n### `identityFromArray(arr)`\n\nConstructs an Identity from an array of DN components (see `Identity#toArray()`\nfor the format).\n\nParameters\n\n - `arr` -- an Array of Objects, DN components with `name` and `value`\n\nReturns an Identity instance.\n\n\nSupported attributes in DNs:\n\n| Attribute name | OID |\n| -------------- | --- |\n| `cn` | `2.5.4.3` |\n| `o` | `2.5.4.10` |\n| `ou` | `2.5.4.11` |\n| `l` | `2.5.4.7` |\n| `s` | `2.5.4.8` |\n| `c` | `2.5.4.6` |\n| `sn` | `2.5.4.4` |\n| `postalCode` | `2.5.4.17` |\n| `serialNumber` | `2.5.4.5` |\n| `street` | `2.5.4.9` |\n| `x500UniqueIdentifier` | `2.5.4.45` |\n| `role` | `2.5.4.72` |\n| `telephoneNumber` | `2.5.4.20` |\n| `description` | `2.5.4.13` |\n| `dc` | `0.9.2342.19200300.100.1.25` |\n| `uid` | `0.9.2342.19200300.100.1.1` |\n| `mail` | `0.9.2342.19200300.100.1.3` |\n| `title` | `2.5.4.12` |\n| `gn` | `2.5.4.42` |\n| `initials` | `2.5.4.43` |\n| `pseudonym` | `2.5.4.65` |\n\n### `Identity#toString()`\n\nReturns the identity as an LDAP-style DN string.\ne.g. `'CN=foo, O=bar corp, C=us'`\n\n### `Identity#type`\n\nThe type of identity. One of `'host'`, `'user'`, `'email'` or `'unknown'`\n\n### `Identity#hostname`\n### `Identity#uid`\n### `Identity#email`\n\nSet when `type` is `'host'`, `'user'`, or `'email'`, respectively. Strings.\n\n### `Identity#cn`\n\nThe value of the first `CN=` in the DN, if any. It's probably better to use\nthe `#get()` method instead of this property.\n\n### `Identity#get(name[, asArray])`\n\nReturns the value of a named attribute in the Identity DN. If there is no\nattribute of the given name, returns `undefined`. If multiple components\nof the DN contain an attribute of this name, an exception is thrown unless\nthe `asArray` argument is given as `true` -- then they will be returned as\nan Array in the same order they appear in the DN.\n\nParameters\n\n - `name` -- a String\n - `asArray` -- an optional Boolean\n\n### `Identity#toArray()`\n\nReturns the Identity as an Array of DN component objects. This looks like:\n\n```js\n[ {\n  \"name\": \"cn\",\n  \"value\": \"Joe Bloggs\"\n},\n{\n  \"name\": \"o\",\n  \"value\": \"Organisation Ltd\"\n} ]\n```\n\nEach object has a `name` and a `value` property. The returned objects may be\nsafely modified.\n\nErrors\n------\n\n### `InvalidAlgorithmError`\n\nThe specified algorithm is not valid, either because it is not supported, or\nbecause it was not included on a list of allowed algorithms.\n\nThrown by `Fingerprint.parse`, `Key#fingerprint`.\n\nProperties\n\n- `algorithm` -- the algorithm that could not be validated\n\n### `FingerprintFormatError`\n\nThe fingerprint string given could not be parsed as a supported fingerprint\nformat, or the specified fingerprint format is invalid.\n\nThrown by `Fingerprint.parse`, `Fingerprint#toString`.\n\nProperties\n\n- `fingerprint` -- if caused by a fingerprint, the string value given\n- `format` -- if caused by an invalid format specification, the string value given\n\n### `KeyParseError`\n\nThe key data given could not be parsed as a valid key.\n\nProperties\n\n- `keyName` -- `filename` that was given to `parseKey`\n- `format` -- the `format` that was trying to parse the key (see `parseKey`)\n- `innerErr` -- the inner Error thrown by the format parser\n\n### `KeyEncryptedError`\n\nThe key is encrypted with a symmetric key (ie, it is password protected). The\nparsing operation would succeed if it was given the `passphrase` option.\n\nProperties\n\n- `keyName` -- `filename` that was given to `parseKey`\n- `format` -- the `format` that was trying to parse the key (currently can only\n              be `\"pem\"`)\n\n### `CertificateParseError`\n\nThe certificate data given could not be parsed as a valid certificate.\n\nProperties\n\n- `certName` -- `filename` that was given to `parseCertificate`\n- `format` -- the `format` that was trying to parse the key\n              (see `parseCertificate`)\n- `innerErr` -- the inner Error thrown by the format parser\n\nFriends of sshpk\n----------------\n\n * [`sshpk-agent`](https://github.com/arekinath/node-sshpk-agent) is a library\n   for speaking the `ssh-agent` protocol from node.js, which uses `sshpk`\n",
                      "readmeFilename": "README.md",
                      "_dependencies": {
                        "asn1": "~0.2.3",
                        "assert-plus": "^1.0.0",
                        "bcrypt-pbkdf": "^1.0.0",
                        "dashdash": "^1.12.0",
                        "ecc-jsbn": "~0.1.1",
                        "getpass": "^0.1.1",
                        "jsbn": "~0.1.0",
                        "safer-buffer": "^2.0.2",
                        "tweetnacl": "~0.14.0"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/sshpk",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Reference implementation of Joyent's HTTP Signature scheme.",
                  "devDependencies": {
                    "tap": "0.4.2",
                    "uuid": "^2.0.2"
                  },
                  "engines": {
                    "node": ">=0.8",
                    "npm": ">=1.3.7"
                  },
                  "homepage": "https://github.com/joyent/node-http-signature/",
                  "keywords": [
                    "https",
                    "request"
                  ],
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "http-signature",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/joyent/node-http-signature.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "1.2.0",
                  "readme": "# node-http-signature\n\nnode-http-signature is a node.js library that has client and server components\nfor Joyent's [HTTP Signature Scheme](http_signing.md).\n\n## Usage\n\nNote the example below signs a request with the same key/cert used to start an\nHTTP server. This is almost certainly not what you actually want, but is just\nused to illustrate the API calls; you will need to provide your own key\nmanagement in addition to this library.\n\n### Client\n\n```js\nvar fs = require('fs');\nvar https = require('https');\nvar httpSignature = require('http-signature');\n\nvar key = fs.readFileSync('./key.pem', 'ascii');\n\nvar options = {\n  host: 'localhost',\n  port: 8443,\n  path: '/',\n  method: 'GET',\n  headers: {}\n};\n\n// Adds a 'Date' header in, signs it, and adds the\n// 'Authorization' header in.\nvar req = https.request(options, function(res) {\n  console.log(res.statusCode);\n});\n\n\nhttpSignature.sign(req, {\n  key: key,\n  keyId: './cert.pem'\n});\n\nreq.end();\n```\n\n### Server\n\n```js\nvar fs = require('fs');\nvar https = require('https');\nvar httpSignature = require('http-signature');\n\nvar options = {\n  key: fs.readFileSync('./key.pem'),\n  cert: fs.readFileSync('./cert.pem')\n};\n\nhttps.createServer(options, function (req, res) {\n  var rc = 200;\n  var parsed = httpSignature.parseRequest(req);\n  var pub = fs.readFileSync(parsed.keyId, 'ascii');\n  if (!httpSignature.verifySignature(parsed, pub))\n    rc = 401;\n\n  res.writeHead(rc);\n  res.end();\n}).listen(8443);\n```\n\n## Installation\n\n    npm install http-signature\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/joyent/node-http-signature/issues>.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "assert-plus": "^1.0.0",
                    "jsprim": "^1.2.2",
                    "sshpk": "^1.7.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/http-signature",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "is-typedarray": {
                  "_args": [
                    [
                      "is-typedarray@1.0.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "is-typedarray@1.0.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "is-typedarray@1.0.0",
                  "_id": "is-typedarray@1.0.0",
                  "_integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",
                  "_location": "/is-typedarray",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "is-typedarray@1.0.0",
                    "name": "is-typedarray",
                    "escapedName": "is-typedarray",
                    "rawSpec": "1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
                  "_spec": "1.0.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Hugh Kennedy",
                    "email": "hughskennedy@gmail.com",
                    "url": "http://hughsk.io/"
                  },
                  "bugs": {
                    "url": "https://github.com/hughsk/is-typedarray/issues"
                  },
                  "dependencies": {},
                  "description": "Detect whether or not an object is a Typed Array",
                  "devDependencies": {
                    "tape": "^2.13.1"
                  },
                  "homepage": "https://github.com/hughsk/is-typedarray",
                  "keywords": [
                    "typed",
                    "array",
                    "detect",
                    "is",
                    "util"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "is-typedarray",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/hughsk/is-typedarray.git"
                  },
                  "scripts": {
                    "test": "node test"
                  },
                  "version": "1.0.0",
                  "readme": "# is-typedarray [![locked](http://badges.github.io/stability-badges/dist/locked.svg)](http://github.com/badges/stability-badges)\n\nDetect whether or not an object is a\n[Typed Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays).\n\n## Usage\n\n[![NPM](https://nodei.co/npm/is-typedarray.png)](https://nodei.co/npm/is-typedarray/)\n\n### isTypedArray(array)\n\nReturns `true` when array is a Typed Array, and `false` when it is not.\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/is-typedarray/blob/master/LICENSE.md) for details.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/is-typedarray",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "isstream": {
                  "_args": [
                    [
                      "isstream@0.1.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "isstream@0.1.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "isstream@0.1.2",
                  "_id": "isstream@0.1.2",
                  "_integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
                  "_location": "/isstream",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "isstream@0.1.2",
                    "name": "isstream",
                    "escapedName": "isstream",
                    "rawSpec": "0.1.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.1.2"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
                  "_spec": "0.1.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Rod Vagg",
                    "email": "rod@vagg.org"
                  },
                  "bugs": {
                    "url": "https://github.com/rvagg/isstream/issues"
                  },
                  "description": "Determine if an object is a Stream",
                  "devDependencies": {
                    "core-util-is": "~1.0.0",
                    "inherits": "~2.0.1",
                    "isarray": "0.0.1",
                    "string_decoder": "~0.10.x",
                    "tape": "~2.12.3"
                  },
                  "homepage": "https://github.com/rvagg/isstream",
                  "keywords": [
                    "stream",
                    "type",
                    "streams",
                    "readable-stream",
                    "hippo"
                  ],
                  "license": "MIT",
                  "main": "isstream.js",
                  "name": "isstream",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/rvagg/isstream.git"
                  },
                  "scripts": {
                    "test": "tar --xform 's/^package/readable-stream-1.0/' -zxf readable-stream-1.0.*.tgz && tar --xform 's/^package/readable-stream-1.1/' -zxf readable-stream-1.1.*.tgz && node test.js; rm -rf readable-stream-1.?/"
                  },
                  "version": "0.1.2",
                  "readme": "# isStream\n\n[![Build Status](https://secure.travis-ci.org/rvagg/isstream.png)](http://travis-ci.org/rvagg/isstream)\n\n**Test if an object is a `Stream`**\n\n[![NPM](https://nodei.co/npm/isstream.svg)](https://nodei.co/npm/isstream/)\n\nThe missing `Stream.isStream(obj)`: determine if an object is standard Node.js `Stream`. Works for Node-core `Stream` objects (for 0.8, 0.10, 0.11, and in theory, older and newer versions) and all versions of **[readable-stream](https://github.com/isaacs/readable-stream)**.\n\n## Usage:\n\n```js\nvar isStream = require('isstream')\nvar Stream = require('stream')\n\nisStream(new Stream()) // true\n\nisStream({}) // false\n\nisStream(new Stream.Readable())    // true\nisStream(new Stream.Writable())    // true\nisStream(new Stream.Duplex())      // true\nisStream(new Stream.Transform())   // true\nisStream(new Stream.PassThrough()) // true\n```\n\n## But wait! There's more!\n\nYou can also test for `isReadable(obj)`, `isWritable(obj)` and `isDuplex(obj)` to test for implementations of Streams2 (and Streams3) base classes.\n\n```js\nvar isReadable = require('isstream').isReadable\nvar isWritable = require('isstream').isWritable\nvar isDuplex = require('isstream').isDuplex\nvar Stream = require('stream')\n\nisReadable(new Stream()) // false\nisWritable(new Stream()) // false\nisDuplex(new Stream())   // false\n\nisReadable(new Stream.Readable())    // true\nisReadable(new Stream.Writable())    // false\nisReadable(new Stream.Duplex())      // true\nisReadable(new Stream.Transform())   // true\nisReadable(new Stream.PassThrough()) // true\n\nisWritable(new Stream.Readable())    // false\nisWritable(new Stream.Writable())    // true\nisWritable(new Stream.Duplex())      // true\nisWritable(new Stream.Transform())   // true\nisWritable(new Stream.PassThrough()) // true\n\nisDuplex(new Stream.Readable())    // false\nisDuplex(new Stream.Writable())    // false\nisDuplex(new Stream.Duplex())      // true\nisDuplex(new Stream.Transform())   // true\nisDuplex(new Stream.PassThrough()) // true\n```\n\n*Reminder: when implementing your own streams, please [use **readable-stream** rather than core streams](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).*\n\n\n## License\n\n**isStream** is Copyright (c) 2015 Rod Vagg [@rvagg](https://twitter.com/rvagg) and licenced under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE.md file for more details.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/isstream",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "json-stringify-safe": {
                  "_args": [
                    [
                      "json-stringify-safe@5.0.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "json-stringify-safe@5.0.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "json-stringify-safe@5.0.1",
                  "_id": "json-stringify-safe@5.0.1",
                  "_integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
                  "_location": "/json-stringify-safe",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "json-stringify-safe@5.0.1",
                    "name": "json-stringify-safe",
                    "escapedName": "json-stringify-safe",
                    "rawSpec": "5.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.0.1"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
                  "_spec": "5.0.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me"
                  },
                  "bugs": {
                    "url": "https://github.com/isaacs/json-stringify-safe/issues"
                  },
                  "contributors": [
                    {
                      "name": "Andri Möll",
                      "email": "andri@dot.ee",
                      "url": "http://themoll.com"
                    }
                  ],
                  "description": "Like JSON.stringify, but doesn't blow up on circular refs.",
                  "devDependencies": {
                    "mocha": ">= 2.1.0 < 3",
                    "must": ">= 0.12 < 0.13",
                    "sinon": ">= 1.12.2 < 2"
                  },
                  "homepage": "https://github.com/isaacs/json-stringify-safe",
                  "keywords": [
                    "json",
                    "stringify",
                    "circular",
                    "safe"
                  ],
                  "license": "ISC",
                  "main": "stringify.js",
                  "name": "json-stringify-safe",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/json-stringify-safe.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "version": "5.0.1",
                  "readme": "# json-stringify-safe\n\nLike JSON.stringify, but doesn't throw on circular references.\n\n## Usage\n\nTakes the same arguments as `JSON.stringify`.\n\n```javascript\nvar stringify = require('json-stringify-safe');\nvar circularObj = {};\ncircularObj.circularRef = circularObj;\ncircularObj.list = [ circularObj, circularObj ];\nconsole.log(stringify(circularObj, null, 2));\n```\n\nOutput:\n\n```json\n{\n  \"circularRef\": \"[Circular]\",\n  \"list\": [\n    \"[Circular]\",\n    \"[Circular]\"\n  ]\n}\n```\n\n## Details\n\n```\nstringify(obj, serializer, indent, decycler)\n```\n\nThe first three arguments are the same as to JSON.stringify.  The last\nis an argument that's only used when the object has been seen already.\n\nThe default `decycler` function returns the string `'[Circular]'`.\nIf, for example, you pass in `function(k,v){}` (return nothing) then it\nwill prune cycles.  If you pass in `function(k,v){ return {foo: 'bar'}}`,\nthen cyclical objects will always be represented as `{\"foo\":\"bar\"}` in\nthe result.\n\n```\nstringify.getSerialize(serializer, decycler)\n```\n\nReturns a serializer that can be used elsewhere.  This is the actual\nfunction that's passed to JSON.stringify.\n\n**Note** that the function returned from `getSerialize` is stateful for now, so\ndo **not** use it more than once.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/json-stringify-safe",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "mime-types": {
                  "_args": "[Circular]",
                  "_from": "mime-types@2.1.27",
                  "_id": "mime-types@2.1.27",
                  "_integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
                  "_location": "/mime-types",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "mime-types@2.1.27",
                    "name": "mime-types",
                    "escapedName": "mime-types",
                    "rawSpec": "2.1.27",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.1.27"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
                  "_spec": "2.1.27",
                  "_where": "/path/to/project/packages/shared",
                  "bugs": "[Circular]",
                  "contributors": "[Circular]",
                  "dependencies": {
                    "mime-db": {
                      "_args": [
                        [
                          "mime-db@1.44.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "mime-db@1.44.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "mime-db@1.44.0",
                      "_id": "mime-db@1.44.0",
                      "_integrity": "sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg==",
                      "_location": "/mime-db",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "mime-db@1.44.0",
                        "name": "mime-db",
                        "escapedName": "mime-db",
                        "rawSpec": "1.44.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.44.0"
                      },
                      "_requiredBy": [
                        "/mime-types"
                      ],
                      "_resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz",
                      "_spec": "1.44.0",
                      "_where": "/path/to/project/packages/shared",
                      "bugs": {
                        "url": "https://github.com/jshttp/mime-db/issues"
                      },
                      "contributors": [
                        {
                          "name": "Douglas Christopher Wilson",
                          "email": "doug@somethingdoug.com"
                        },
                        {
                          "name": "Jonathan Ong",
                          "email": "me@jongleberry.com",
                          "url": "http://jongleberry.com"
                        },
                        {
                          "name": "Robert Kieffer",
                          "email": "robert@broofa.com",
                          "url": "http://github.com/broofa"
                        }
                      ],
                      "description": "Media Type Database",
                      "devDependencies": {
                        "bluebird": "3.7.2",
                        "co": "4.6.0",
                        "cogent": "1.0.1",
                        "csv-parse": "4.8.9",
                        "eslint": "6.8.0",
                        "eslint-config-standard": "14.1.1",
                        "eslint-plugin-import": "2.20.2",
                        "eslint-plugin-markdown": "1.0.2",
                        "eslint-plugin-node": "11.1.0",
                        "eslint-plugin-promise": "4.2.1",
                        "eslint-plugin-standard": "4.0.1",
                        "gnode": "0.1.2",
                        "mocha": "7.1.1",
                        "nyc": "15.0.1",
                        "raw-body": "2.4.1",
                        "stream-to-array": "2.3.0"
                      },
                      "engines": {
                        "node": ">= 0.6"
                      },
                      "files": [
                        "HISTORY.md",
                        "LICENSE",
                        "README.md",
                        "db.json",
                        "index.js"
                      ],
                      "homepage": "https://github.com/jshttp/mime-db#readme",
                      "keywords": [
                        "mime",
                        "db",
                        "type",
                        "types",
                        "database",
                        "charset",
                        "charsets"
                      ],
                      "license": "MIT",
                      "name": "mime-db",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/jshttp/mime-db.git"
                      },
                      "scripts": {
                        "build": "node scripts/build",
                        "fetch": "node scripts/fetch-apache && gnode scripts/fetch-iana && node scripts/fetch-nginx",
                        "lint": "eslint --plugin markdown --ext js,md .",
                        "test": "mocha --reporter spec --bail --check-leaks test/",
                        "test-cov": "nyc --reporter=html --reporter=text npm test",
                        "test-travis": "nyc --reporter=text npm test",
                        "update": "npm run fetch && npm run build",
                        "version": "node scripts/version-history.js && git add HISTORY.md"
                      },
                      "version": "1.44.0",
                      "readme": "# mime-db\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][travis-image]][travis-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nThis is a database of all mime types.\nIt consists of a single, public JSON file and does not include any logic,\nallowing it to remain as un-opinionated as possible with an API.\nIt aggregates data from the following sources:\n\n- http://www.iana.org/assignments/media-types/media-types.xhtml\n- http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\n- http://hg.nginx.org/nginx/raw-file/default/conf/mime.types\n\n## Installation\n\n```bash\nnpm install mime-db\n```\n\n### Database Download\n\nIf you're crazy enough to use this in the browser, you can just grab the\nJSON file using [jsDelivr](https://www.jsdelivr.com/). It is recommended to\nreplace `master` with [a release tag](https://github.com/jshttp/mime-db/tags)\nas the JSON format may change in the future.\n\n```\nhttps://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json\n```\n\n## Usage\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar db = require('mime-db')\n\n// grab data on .js files\nvar data = db['application/javascript']\n```\n\n## Data Structure\n\nThe JSON file is a map lookup for lowercased mime types.\nEach mime type has the following properties:\n\n- `.source` - where the mime type is defined.\n    If not set, it's probably a custom media type.\n    - `apache` - [Apache common media types](http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)\n    - `iana` - [IANA-defined media types](http://www.iana.org/assignments/media-types/media-types.xhtml)\n    - `nginx` - [nginx media types](http://hg.nginx.org/nginx/raw-file/default/conf/mime.types)\n- `.extensions[]` - known extensions associated with this mime type.\n- `.compressible` - whether a file of this type can be gzipped.\n- `.charset` - the default charset associated with this type, if any.\n\nIf unknown, every property could be `undefined`.\n\n## Contributing\n\nTo edit the database, only make PRs against `src/custom.json` or\n`src/custom-suffix.json`.\n\nThe `src/custom.json` file is a JSON object with the MIME type as the keys\nand the values being an object with the following keys:\n\n- `compressible` - leave out if you don't know, otherwise `true`/`false` to\n  indicate whether the data represented by the type is typically compressible.\n- `extensions` - include an array of file extensions that are associated with\n  the type.\n- `notes` - human-readable notes about the type, typically what the type is.\n- `sources` - include an array of URLs of where the MIME type and the associated\n  extensions are sourced from. This needs to be a [primary source](https://en.wikipedia.org/wiki/Primary_source);\n  links to type aggregating sites and Wikipedia are _not acceptable_.\n\nTo update the build, run `npm run build`.\n\n### Adding Custom Media Types\n\nThe best way to get new media types included in this library is to register\nthem with the IANA. The community registration procedure is outlined in\n[RFC 6838 section 5](http://tools.ietf.org/html/rfc6838#section-5). Types\nregistered with the IANA are automatically pulled into this library.\n\nIf that is not possible / feasible, they can be added directly here as a\n\"custom\" type. To do this, it is required to have a primary source that\ndefinitively lists the media type. If an extension is going to be listed as\nassociateed with this media type, the source must definitively link the\nmedia type and extension as well.\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-db/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-db?branch=master\n[node-image]: https://badgen.net/npm/node/mime-db\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-db\n[npm-url]: https://npmjs.org/package/mime-db\n[npm-version-image]: https://badgen.net/npm/v/mime-db\n[travis-image]: https://badgen.net/travis/jshttp/mime-db/master\n[travis-url]: https://travis-ci.org/jshttp/mime-db\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/mime-db",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "The ultimate javascript content-type utility.",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/jshttp/mime-types#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "mime-types",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.1.27",
                  "readme": "# mime-types\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nThe ultimate javascript content-type utility.\n\nSimilar to [the `mime@1.x` module](https://www.npmjs.com/package/mime), except:\n\n- __No fallbacks.__ Instead of naively returning the first available type,\n  `mime-types` simply returns `false`, so do\n  `var type = mime.lookup('unrecognized') || 'application/octet-stream'`.\n- No `new Mime()` business, so you could do `var lookup = require('mime-types').lookup`.\n- No `.define()` functionality\n- Bug fixes for `.lookup(path)`\n\nOtherwise, the API is compatible with `mime` 1.x.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install mime-types\n```\n\n## Adding Types\n\nAll mime types are based on [mime-db](https://www.npmjs.com/package/mime-db),\nso open a PR there if you'd like to add mime types.\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar mime = require('mime-types')\n```\n\nAll functions return `false` if input is invalid or not found.\n\n### mime.lookup(path)\n\nLookup the content-type associated with a file.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n```\n\n### mime.contentType(type)\n\nCreate a full content-type header given a content-type or extension.\nWhen given an extension, `mime.lookup` is used to get the matching\ncontent-type, otherwise the given content-type is used. Then if the\ncontent-type does not already have a `charset` parameter, `mime.charset`\nis used to get the default charset and add to the returned content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n```\n\n### mime.extension(type)\n\nGet the default extension for a content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.extension('application/octet-stream') // 'bin'\n```\n\n### mime.charset(type)\n\nLookup the implied default charset of a content-type.\n\n<!-- eslint-disable no-undef -->\n\n```js\nmime.charset('text/markdown') // 'UTF-8'\n```\n\n### var type = mime.types[extension]\n\nA map of content-types by extension.\n\n### [extensions...] = mime.extensions[type]\n\nA map of extensions by content-type.\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-types/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-types?branch=master\n[node-version-image]: https://badgen.net/npm/node/mime-types\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-types\n[npm-url]: https://npmjs.org/package/mime-types\n[npm-version-image]: https://badgen.net/npm/v/mime-types\n[travis-image]: https://badgen.net/travis/jshttp/mime-types/master\n[travis-url]: https://travis-ci.org/jshttp/mime-types\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/mime-types",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "oauth-sign": {
                  "_args": [
                    [
                      "oauth-sign@0.9.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "oauth-sign@0.9.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "oauth-sign@0.9.0",
                  "_id": "oauth-sign@0.9.0",
                  "_integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
                  "_location": "/oauth-sign",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "oauth-sign@0.9.0",
                    "name": "oauth-sign",
                    "escapedName": "oauth-sign",
                    "rawSpec": "0.9.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.9.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
                  "_spec": "0.9.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Mikeal Rogers",
                    "email": "mikeal.rogers@gmail.com",
                    "url": "http://www.futurealoof.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mikeal/oauth-sign/issues"
                  },
                  "dependencies": {},
                  "description": "OAuth 1 signing. Formerly a vendor lib in mikeal/request, now a standalone module.",
                  "devDependencies": {},
                  "engines": {
                    "node": "*"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/mikeal/oauth-sign#readme",
                  "license": "Apache-2.0",
                  "main": "index.js",
                  "name": "oauth-sign",
                  "optionalDependencies": {},
                  "repository": {
                    "url": "git+https://github.com/mikeal/oauth-sign.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "version": "0.9.0",
                  "readme": "oauth-sign\n==========\n\nOAuth 1 signing. Formerly a vendor lib in mikeal/request, now a standalone module. \n\n## Supported Method Signatures\n\n- HMAC-SHA1\n- HMAC-SHA256\n- RSA-SHA1\n- PLAINTEXT",
                  "readmeFilename": "README.md",
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/oauth-sign",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "performance-now": {
                  "_args": [
                    [
                      "performance-now@2.1.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "performance-now@2.1.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "performance-now@2.1.0",
                  "_id": "performance-now@2.1.0",
                  "_integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
                  "_location": "/performance-now",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "performance-now@2.1.0",
                    "name": "performance-now",
                    "escapedName": "performance-now",
                    "rawSpec": "2.1.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.1.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
                  "_spec": "2.1.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Braveg1rl",
                    "email": "braveg1rl@outlook.com"
                  },
                  "bugs": {
                    "url": "https://github.com/braveg1rl/performance-now/issues"
                  },
                  "dependencies": {},
                  "description": "Implements performance.now (based on process.hrtime).",
                  "devDependencies": {
                    "bluebird": "^3.4.7",
                    "call-delayed": "^1.0.0",
                    "chai": "^3.5.0",
                    "chai-increasing": "^1.2.0",
                    "coffee-script": "~1.12.2",
                    "mocha": "~3.2.0",
                    "pre-commit": "^1.2.2"
                  },
                  "homepage": "https://github.com/braveg1rl/performance-now",
                  "keywords": [],
                  "license": "MIT",
                  "main": "lib/performance-now.js",
                  "name": "performance-now",
                  "optionalDependencies": {},
                  "private": false,
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/braveg1rl/performance-now.git"
                  },
                  "scripts": {
                    "build": "mkdir -p lib && rm -rf lib/* && node_modules/.bin/coffee --compile -m --output lib/ src/",
                    "prepublish": "npm test",
                    "pretest": "npm run build",
                    "test": "mocha",
                    "watch": "coffee --watch --compile --output lib/ src/"
                  },
                  "typings": "src/index.d.ts",
                  "version": "2.1.0",
                  "readme": "# performance-now [![Build Status](https://travis-ci.org/braveg1rl/performance-now.png?branch=master)](https://travis-ci.org/braveg1rl/performance-now) [![Dependency Status](https://david-dm.org/braveg1rl/performance-now.png)](https://david-dm.org/braveg1rl/performance-now)\n\nImplements a function similar to `performance.now` (based on `process.hrtime`).\n\nModern browsers have a `window.performance` object with - among others - a `now` method which gives time in milliseconds, but with sub-millisecond precision. This module offers the same function based on the Node.js native `process.hrtime` function.\n\nUsing `process.hrtime` means that the reported time will be monotonically increasing, and not subject to clock-drift.\n\nAccording to the [High Resolution Time specification](http://www.w3.org/TR/hr-time/), the number of milliseconds reported by `performance.now` should be relative to the value of `performance.timing.navigationStart`.\n\nIn the current version of the module (2.0) the reported time is relative to the time the current Node process has started (inferred from `process.uptime()`).\n\nVersion 1.0 reported a different time. The reported time was relative to the time the module was loaded (i.e. the time it was first `require`d). If you need this functionality, version 1.0 is still available on NPM.\n\n## Example usage\n\n```javascript\nvar now = require(\"performance-now\")\nvar start = now()\nvar end = now()\nconsole.log(start.toFixed(3)) // the number of milliseconds the current node process is running\nconsole.log((start-end).toFixed(3)) // ~ 0.002 on my system\n```\n\nRunning the now function two times right after each other yields a time difference of a few microseconds. Given this overhead, I think it's best to assume that the precision of intervals computed with this method is not higher than 10 microseconds, if you don't know the exact overhead on your own system.\n\n## License\n\nperformance-now is released under the [MIT License](http://opensource.org/licenses/MIT).\nCopyright (c) 2017 Braveg1rl\n",
                  "readmeFilename": "README.md",
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/performance-now",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "qs": {
                  "_args": [
                    [
                      "qs@6.5.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "qs@6.5.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "qs@6.5.2",
                  "_id": "qs@6.5.2",
                  "_integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
                  "_location": "/qs",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "qs@6.5.2",
                    "name": "qs",
                    "escapedName": "qs",
                    "rawSpec": "6.5.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "6.5.2"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
                  "_spec": "6.5.2",
                  "_where": "/path/to/project/packages/shared",
                  "bugs": {
                    "url": "https://github.com/ljharb/qs/issues"
                  },
                  "contributors": [
                    {
                      "name": "Jordan Harband",
                      "email": "ljharb@gmail.com",
                      "url": "http://ljharb.codes"
                    }
                  ],
                  "dependencies": {},
                  "description": "A querystring parser that supports nesting and arrays, with a depth limit",
                  "devDependencies": {
                    "@ljharb/eslint-config": "^12.2.1",
                    "browserify": "^16.2.0",
                    "covert": "^1.1.0",
                    "editorconfig-tools": "^0.1.1",
                    "eslint": "^4.19.1",
                    "evalmd": "^0.0.17",
                    "iconv-lite": "^0.4.21",
                    "mkdirp": "^0.5.1",
                    "qs-iconv": "^1.0.4",
                    "safe-publish-latest": "^1.1.1",
                    "safer-buffer": "^2.1.2",
                    "tape": "^4.9.0"
                  },
                  "engines": {
                    "node": ">=0.6"
                  },
                  "homepage": "https://github.com/ljharb/qs",
                  "keywords": [
                    "querystring",
                    "qs"
                  ],
                  "license": "BSD-3-Clause",
                  "main": "lib/index.js",
                  "name": "qs",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/ljharb/qs.git"
                  },
                  "scripts": {
                    "coverage": "covert test",
                    "dist": "mkdirp dist && browserify --standalone Qs lib/index.js > dist/qs.js",
                    "lint": "eslint lib/*.js test/*.js",
                    "prelint": "editorconfig-tools check * lib/* test/*",
                    "prepublish": "safe-publish-latest && npm run dist",
                    "pretest": "npm run --silent readme && npm run --silent lint",
                    "readme": "evalmd README.md",
                    "test": "npm run --silent coverage",
                    "tests-only": "node test"
                  },
                  "version": "6.5.2",
                  "readme": "# qs <sup>[![Version Badge][2]][1]</sup>\n\n[![Build Status][3]][4]\n[![dependency status][5]][6]\n[![dev dependency status][7]][8]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][11]][1]\n\nA querystring parsing and stringifying library with some added security.\n\nLead Maintainer: [Jordan Harband](https://github.com/ljharb)\n\nThe **qs** module was originally created and maintained by [TJ Holowaychuk](https://github.com/visionmedia/node-querystring).\n\n## Usage\n\n```javascript\nvar qs = require('qs');\nvar assert = require('assert');\n\nvar obj = qs.parse('a=c');\nassert.deepEqual(obj, { a: 'c' });\n\nvar str = qs.stringify(obj);\nassert.equal(str, 'a=c');\n```\n\n### Parsing Objects\n\n[](#preventEval)\n```javascript\nqs.parse(string, [options]);\n```\n\n**qs** allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets `[]`.\nFor example, the string `'foo[bar]=baz'` converts to:\n\n```javascript\nassert.deepEqual(qs.parse('foo[bar]=baz'), {\n    foo: {\n        bar: 'baz'\n    }\n});\n```\n\nWhen using the `plainObjects` option the parsed value is returned as a null object, created via `Object.create(null)` and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:\n\n```javascript\nvar nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });\nassert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });\n```\n\nBy default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties. *WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.\n\n```javascript\nvar protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });\nassert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });\n```\n\nURI encoded strings work too:\n\n```javascript\nassert.deepEqual(qs.parse('a%5Bb%5D=c'), {\n    a: { b: 'c' }\n});\n```\n\nYou can also nest your objects, like `'foo[bar][baz]=foobarbaz'`:\n\n```javascript\nassert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {\n    foo: {\n        bar: {\n            baz: 'foobarbaz'\n        }\n    }\n});\n```\n\nBy default, when nesting objects **qs** will only parse up to 5 children deep. This means if you attempt to parse a string like\n`'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:\n\n```javascript\nvar expected = {\n    a: {\n        b: {\n            c: {\n                d: {\n                    e: {\n                        f: {\n                            '[g][h][i]': 'j'\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nvar string = 'a[b][c][d][e][f][g][h][i]=j';\nassert.deepEqual(qs.parse(string), expected);\n```\n\nThis depth can be overridden by passing a `depth` option to `qs.parse(string, [options])`:\n\n```javascript\nvar deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\nassert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });\n```\n\nThe depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number.\n\nFor similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:\n\n```javascript\nvar limited = qs.parse('a=b&c=d', { parameterLimit: 1 });\nassert.deepEqual(limited, { a: 'b' });\n```\n\nTo bypass the leading question mark, use `ignoreQueryPrefix`:\n\n```javascript\nvar prefixed = qs.parse('?a=b&c=d', { ignoreQueryPrefix: true });\nassert.deepEqual(prefixed, { a: 'b', c: 'd' });\n```\n\nAn optional delimiter can also be passed:\n\n```javascript\nvar delimited = qs.parse('a=b;c=d', { delimiter: ';' });\nassert.deepEqual(delimited, { a: 'b', c: 'd' });\n```\n\nDelimiters can be a regular expression too:\n\n```javascript\nvar regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });\nassert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });\n```\n\nOption `allowDots` can be used to enable dot notation:\n\n```javascript\nvar withDots = qs.parse('a.b=c', { allowDots: true });\nassert.deepEqual(withDots, { a: { b: 'c' } });\n```\n\n### Parsing Arrays\n\n**qs** can also parse arrays using a similar `[]` notation:\n\n```javascript\nvar withArray = qs.parse('a[]=b&a[]=c');\nassert.deepEqual(withArray, { a: ['b', 'c'] });\n```\n\nYou may specify an index as well:\n\n```javascript\nvar withIndexes = qs.parse('a[1]=c&a[0]=b');\nassert.deepEqual(withIndexes, { a: ['b', 'c'] });\n```\n\nNote that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number\nto create an array. When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving\ntheir order:\n\n```javascript\nvar noSparse = qs.parse('a[1]=b&a[15]=c');\nassert.deepEqual(noSparse, { a: ['b', 'c'] });\n```\n\nNote that an empty string is also a value, and will be preserved:\n\n```javascript\nvar withEmptyString = qs.parse('a[]=&a[]=b');\nassert.deepEqual(withEmptyString, { a: ['', 'b'] });\n\nvar withIndexedEmptyString = qs.parse('a[0]=b&a[1]=&a[2]=c');\nassert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });\n```\n\n**qs** will also limit specifying indices in an array to a maximum index of `20`. Any array members with an index of greater than `20` will\ninstead be converted to an object with the index as the key:\n\n```javascript\nvar withMaxIndex = qs.parse('a[100]=b');\nassert.deepEqual(withMaxIndex, { a: { '100': 'b' } });\n```\n\nThis limit can be overridden by passing an `arrayLimit` option:\n\n```javascript\nvar withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });\nassert.deepEqual(withArrayLimit, { a: { '1': 'b' } });\n```\n\nTo disable array parsing entirely, set `parseArrays` to `false`.\n\n```javascript\nvar noParsingArrays = qs.parse('a[]=b', { parseArrays: false });\nassert.deepEqual(noParsingArrays, { a: { '0': 'b' } });\n```\n\nIf you mix notations, **qs** will merge the two items into an object:\n\n```javascript\nvar mixedNotation = qs.parse('a[0]=b&a[b]=c');\nassert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });\n```\n\nYou can also create arrays of objects:\n\n```javascript\nvar arraysOfObjects = qs.parse('a[][b]=c');\nassert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });\n```\n\n### Stringifying\n\n[](#preventEval)\n```javascript\nqs.stringify(object, [options]);\n```\n\nWhen stringifying, **qs** by default URI encodes output. Objects are stringified as you would expect:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b' }), 'a=b');\nassert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n```\n\nThis encoding can be disabled by setting the `encode` option to `false`:\n\n```javascript\nvar unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });\nassert.equal(unencoded, 'a[b]=c');\n```\n\nEncoding can be disabled for keys by setting the `encodeValuesOnly` option to `true`:\n```javascript\nvar encodedValues = qs.stringify(\n    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n    { encodeValuesOnly: true }\n);\nassert.equal(encodedValues,'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');\n```\n\nThis encoding can also be replaced by a custom encoding method set as `encoder` option:\n\n```javascript\nvar encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {\n    // Passed in values `a`, `b`, `c`\n    return // Return encoded string\n}})\n```\n\n_(Note: the `encoder` option does not apply if `encode` is `false`)_\n\nAnalogue to the `encoder` there is a `decoder` option for `parse` to override decoding of properties and values:\n\n```javascript\nvar decoded = qs.parse('x=z', { decoder: function (str) {\n    // Passed in values `x`, `z`\n    return // Return decoded string\n}})\n```\n\nExamples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases *will* be URI encoded during real usage.\n\nWhen arrays are stringified, by default they are given explicit indices:\n\n```javascript\nqs.stringify({ a: ['b', 'c', 'd'] });\n// 'a[0]=b&a[1]=c&a[2]=d'\n```\n\nYou may override this by setting the `indices` option to `false`:\n\n```javascript\nqs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });\n// 'a=b&a=c&a=d'\n```\n\nYou may use the `arrayFormat` option to specify the format of the output array:\n\n```javascript\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })\n// 'a[0]=b&a[1]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })\n// 'a[]=b&a[]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })\n// 'a=b&a=c'\n```\n\nWhen objects are stringified, by default they use bracket notation:\n\n```javascript\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } });\n// 'a[b][c]=d&a[b][e]=f'\n```\n\nYou may override this to use dot notation by setting the `allowDots` option to `true`:\n\n```javascript\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });\n// 'a.b.c=d&a.b.e=f'\n```\n\nEmpty strings and null values will omit the value, but the equals sign (=) remains in place:\n\n```javascript\nassert.equal(qs.stringify({ a: '' }), 'a=');\n```\n\nKey with no values (such as an empty object or array) will return nothing:\n\n```javascript\nassert.equal(qs.stringify({ a: [] }), '');\nassert.equal(qs.stringify({ a: {} }), '');\nassert.equal(qs.stringify({ a: [{}] }), '');\nassert.equal(qs.stringify({ a: { b: []} }), '');\nassert.equal(qs.stringify({ a: { b: {}} }), '');\n```\n\nProperties that are set to `undefined` will be omitted entirely:\n\n```javascript\nassert.equal(qs.stringify({ a: null, b: undefined }), 'a=');\n```\n\nThe query string may optionally be prepended with a question mark:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&c=d');\n```\n\nThe delimiter may be overridden with stringify as well:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n```\n\nIf you only want to override the serialization of `Date` objects, you can provide a `serializeDate` option:\n\n```javascript\nvar date = new Date(7);\nassert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));\nassert.equal(\n    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),\n    'a=7'\n);\n```\n\nYou may use the `sort` option to affect the order of parameter keys:\n\n```javascript\nfunction alphabeticalSort(a, b) {\n    return a.localeCompare(b);\n}\nassert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&b=f&z=y');\n```\n\nFinally, you can use the `filter` option to restrict which keys will be included in the stringified output.\nIf you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you\npass an array, it will be used to select properties and array indices for stringification:\n\n```javascript\nfunction filterFunc(prefix, value) {\n    if (prefix == 'b') {\n        // Return an `undefined` value to omit a property.\n        return;\n    }\n    if (prefix == 'e[f]') {\n        return value.getTime();\n    }\n    if (prefix == 'e[g][0]') {\n        return value * 2;\n    }\n    return value;\n}\nqs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });\n// 'a=b&c=d&e[f]=123&e[g][0]=4'\nqs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });\n// 'a=b&e=f'\nqs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });\n// 'a[0]=b&a[2]=d'\n```\n\n### Handling of `null` values\n\nBy default, `null` values are treated like empty strings:\n\n```javascript\nvar withNull = qs.stringify({ a: null, b: '' });\nassert.equal(withNull, 'a=&b=');\n```\n\nParsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.\n\n```javascript\nvar equalsInsensitive = qs.parse('a&b=');\nassert.deepEqual(equalsInsensitive, { a: '', b: '' });\n```\n\nTo distinguish between `null` values and empty strings use the `strictNullHandling` flag. In the result string the `null`\nvalues have no `=` sign:\n\n```javascript\nvar strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });\nassert.equal(strictNull, 'a&b=');\n```\n\nTo parse values without `=` back to `null` use the `strictNullHandling` flag:\n\n```javascript\nvar parsedStrictNull = qs.parse('a&b=', { strictNullHandling: true });\nassert.deepEqual(parsedStrictNull, { a: null, b: '' });\n```\n\nTo completely skip rendering keys with `null` values, use the `skipNulls` flag:\n\n```javascript\nvar nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });\nassert.equal(nullsSkipped, 'a=b');\n```\n\n### Dealing with special character sets\n\nBy default the encoding and decoding of characters is done in `utf-8`. If you\nwish to encode querystrings to a different character set (i.e.\n[Shift JIS](https://en.wikipedia.org/wiki/Shift_JIS)) you can use the\n[`qs-iconv`](https://github.com/martinheidegger/qs-iconv) library:\n\n```javascript\nvar encoder = require('qs-iconv/encoder')('shift_jis');\nvar shiftJISEncoded = qs.stringify({ a: 'こんにちは！' }, { encoder: encoder });\nassert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');\n```\n\nThis also works for decoding of query strings:\n\n```javascript\nvar decoder = require('qs-iconv/decoder')('shift_jis');\nvar obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });\nassert.deepEqual(obj, { a: 'こんにちは！' });\n```\n\n### RFC 3986 and RFC 1738 space encoding\n\nRFC3986 used as default option and encodes ' ' to *%20* which is backward compatible.\nIn the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.\n\n```\nassert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');\n```\n\n[1]: https://npmjs.org/package/qs\n[2]: http://versionbadg.es/ljharb/qs.svg\n[3]: https://api.travis-ci.org/ljharb/qs.svg\n[4]: https://travis-ci.org/ljharb/qs\n[5]: https://david-dm.org/ljharb/qs.svg\n[6]: https://david-dm.org/ljharb/qs\n[7]: https://david-dm.org/ljharb/qs/dev-status.svg\n[8]: https://david-dm.org/ljharb/qs?type=dev\n[9]: https://ci.testling.com/ljharb/qs.png\n[10]: https://ci.testling.com/ljharb/qs\n[11]: https://nodei.co/npm/qs.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/qs.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/qs.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=qs\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/qs",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "safe-buffer": {
                  "_args": "[Circular]",
                  "_from": "safe-buffer@5.2.0",
                  "_id": "safe-buffer@5.2.0",
                  "_integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
                  "_location": "/safe-buffer",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "safe-buffer@5.2.0",
                    "name": "safe-buffer",
                    "escapedName": "safe-buffer",
                    "rawSpec": "5.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "5.2.0"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
                  "_spec": "5.2.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "description": "Safer Node.js Buffer API",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/feross/safe-buffer",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "index.js",
                  "name": "safe-buffer",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "types": "index.d.ts",
                  "version": "5.2.0",
                  "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n[Get supported safe-buffer with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-safe-buffer?utm_source=npm-safe-buffer&utm_medium=referral&utm_campaign=readme)\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/safe-buffer",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "safe-buffer"
                },
                "tough-cookie": {
                  "_args": [
                    [
                      "tough-cookie@2.5.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "tough-cookie@2.5.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "tough-cookie@2.5.0",
                  "_id": "tough-cookie@2.5.0",
                  "_integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
                  "_location": "/tough-cookie",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "tough-cookie@2.5.0",
                    "name": "tough-cookie",
                    "escapedName": "tough-cookie",
                    "rawSpec": "2.5.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.5.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
                  "_spec": "2.5.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Jeremy Stashewsky",
                    "email": "jstash@gmail.com"
                  },
                  "bugs": {
                    "url": "https://github.com/salesforce/tough-cookie/issues"
                  },
                  "contributors": [
                    {
                      "name": "Alexander Savin"
                    },
                    {
                      "name": "Ian Livingstone"
                    },
                    {
                      "name": "Ivan Nikulin"
                    },
                    {
                      "name": "Lalit Kapoor"
                    },
                    {
                      "name": "Sam Thompson"
                    },
                    {
                      "name": "Sebastian Mayr"
                    }
                  ],
                  "dependencies": {
                    "psl": {
                      "_args": [
                        [
                          "psl@1.8.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "psl@1.8.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "psl@1.8.0",
                      "_id": "psl@1.8.0",
                      "_integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==",
                      "_location": "/psl",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "psl@1.8.0",
                        "name": "psl",
                        "escapedName": "psl",
                        "rawSpec": "1.8.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.8.0"
                      },
                      "_requiredBy": [
                        "/tough-cookie"
                      ],
                      "_resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
                      "_spec": "1.8.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Lupo Montero",
                        "email": "lupomontero@gmail.com",
                        "url": "https://lupomontero.com/"
                      },
                      "bugs": {
                        "url": "https://github.com/lupomontero/psl/issues"
                      },
                      "description": "Domain name parser based on the Public Suffix List",
                      "devDependencies": {
                        "JSONStream": "^1.3.5",
                        "browserify": "^16.5.0",
                        "commit-and-pr": "^1.0.4",
                        "eslint": "^6.8.0",
                        "eslint-config-hapi": "^12.0.0",
                        "eslint-plugin-hapi": "^4.1.0",
                        "karma": "^4.4.1",
                        "karma-browserify": "^7.0.0",
                        "karma-mocha": "^1.3.0",
                        "karma-mocha-reporter": "^2.2.5",
                        "karma-phantomjs-launcher": "^1.0.4",
                        "mocha": "^7.1.1",
                        "phantomjs-prebuilt": "^2.1.16",
                        "request": "^2.88.2",
                        "uglify-js": "^3.8.0",
                        "watchify": "^3.11.1"
                      },
                      "homepage": "https://github.com/lupomontero/psl#readme",
                      "keywords": [
                        "publicsuffix",
                        "publicsuffixlist"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "psl",
                      "repository": {
                        "type": "git",
                        "url": "git+ssh://git@github.com/lupomontero/psl.git"
                      },
                      "scripts": {
                        "build": "browserify ./index.js --standalone=psl > ./dist/psl.js",
                        "changelog": "git log $(git describe --tags --abbrev=0)..HEAD --oneline --format=\"%h %s (%an <%ae>)\"",
                        "commit-and-pr": "commit-and-pr",
                        "postbuild": "cat ./dist/psl.js | uglifyjs -c -m > ./dist/psl.min.js",
                        "prebuild": "./scripts/update-rules.js",
                        "pretest": "eslint .",
                        "test": "mocha test && karma start ./karma.conf.js --single-run",
                        "watch": "mocha test --watch"
                      },
                      "version": "1.8.0",
                      "readme": "# psl (Public Suffix List)\n\n[![NPM](https://nodei.co/npm/psl.png?downloads=true&downloadRank=true)](https://nodei.co/npm/psl/)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/lupomontero/psl.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/lupomontero/psl.svg?branch=master)](https://travis-ci.org/lupomontero/psl)\n[![devDependency Status](https://david-dm.org/lupomontero/psl/dev-status.png)](https://david-dm.org/lupomontero/psl#info=devDependencies)\n\n`psl` is a `JavaScript` domain name parser based on the\n[Public Suffix List](https://publicsuffix.org/).\n\nThis implementation is tested against the\n[test data hosted by Mozilla](http://mxr.mozilla.org/mozilla-central/source/netwerk/test/unit/data/test_psl.txt?raw=1)\nand kindly provided by [Comodo](https://www.comodo.com/).\n\nCross browser testing provided by\n[<img alt=\"BrowserStack\" width=\"160\" src=\"./browserstack-logo.svg\" />](https://www.browserstack.com/)\n\n## What is the Public Suffix List?\n\nThe Public Suffix List is a cross-vendor initiative to provide an accurate list\nof domain name suffixes.\n\nThe Public Suffix List is an initiative of the Mozilla Project, but is\nmaintained as a community resource. It is available for use in any software,\nbut was originally created to meet the needs of browser manufacturers.\n\nA \"public suffix\" is one under which Internet users can directly register names.\nSome examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The\nPublic Suffix List is a list of all known public suffixes.\n\nSource: http://publicsuffix.org\n\n\n## Installation\n\n### Node.js\n\n```sh\nnpm install --save psl\n```\n\n### Browser\n\nDownload [psl.min.js](https://raw.githubusercontent.com/lupomontero/psl/master/dist/psl.min.js)\nand include it in a script tag.\n\n```html\n<script src=\"psl.min.js\"></script>\n```\n\nThis script is browserified and wrapped in a [umd](https://github.com/umdjs/umd)\nwrapper so you should be able to use it standalone or together with a module\nloader.\n\n## API\n\n### `psl.parse(domain)`\n\nParse domain based on Public Suffix List. Returns an `Object` with the following\nproperties:\n\n* `tld`: Top level domain (this is the _public suffix_).\n* `sld`: Second level domain (the first private part of the domain name).\n* `domain`: The domain name is the `sld` + `tld`.\n* `subdomain`: Optional parts left of the domain.\n\n#### Example:\n\n```js\nvar psl = require('psl');\n\n// Parse domain without subdomain\nvar parsed = psl.parse('google.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'google'\nconsole.log(parsed.domain); // 'google.com'\nconsole.log(parsed.subdomain); // null\n\n// Parse domain with subdomain\nvar parsed = psl.parse('www.google.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'google'\nconsole.log(parsed.domain); // 'google.com'\nconsole.log(parsed.subdomain); // 'www'\n\n// Parse domain with nested subdomains\nvar parsed = psl.parse('a.b.c.d.foo.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'foo'\nconsole.log(parsed.domain); // 'foo.com'\nconsole.log(parsed.subdomain); // 'a.b.c.d'\n```\n\n### `psl.get(domain)`\n\nGet domain name, `sld` + `tld`. Returns `null` if not valid.\n\n#### Example:\n\n```js\nvar psl = require('psl');\n\n// null input.\npsl.get(null); // null\n\n// Mixed case.\npsl.get('COM'); // null\npsl.get('example.COM'); // 'example.com'\npsl.get('WwW.example.COM'); // 'example.com'\n\n// Unlisted TLD.\npsl.get('example'); // null\npsl.get('example.example'); // 'example.example'\npsl.get('b.example.example'); // 'example.example'\npsl.get('a.b.example.example'); // 'example.example'\n\n// TLD with only 1 rule.\npsl.get('biz'); // null\npsl.get('domain.biz'); // 'domain.biz'\npsl.get('b.domain.biz'); // 'domain.biz'\npsl.get('a.b.domain.biz'); // 'domain.biz'\n\n// TLD with some 2-level rules.\npsl.get('uk.com'); // null);\npsl.get('example.uk.com'); // 'example.uk.com');\npsl.get('b.example.uk.com'); // 'example.uk.com');\n\n// More complex TLD.\npsl.get('c.kobe.jp'); // null\npsl.get('b.c.kobe.jp'); // 'b.c.kobe.jp'\npsl.get('a.b.c.kobe.jp'); // 'b.c.kobe.jp'\npsl.get('city.kobe.jp'); // 'city.kobe.jp'\npsl.get('www.city.kobe.jp'); // 'city.kobe.jp'\n\n// IDN labels.\npsl.get('食狮.com.cn'); // '食狮.com.cn'\npsl.get('食狮.公司.cn'); // '食狮.公司.cn'\npsl.get('www.食狮.公司.cn'); // '食狮.公司.cn'\n\n// Same as above, but punycoded.\npsl.get('xn--85x722f.com.cn'); // 'xn--85x722f.com.cn'\npsl.get('xn--85x722f.xn--55qx5d.cn'); // 'xn--85x722f.xn--55qx5d.cn'\npsl.get('www.xn--85x722f.xn--55qx5d.cn'); // 'xn--85x722f.xn--55qx5d.cn'\n```\n\n### `psl.isValid(domain)`\n\nCheck whether a domain has a valid Public Suffix. Returns a `Boolean` indicating\nwhether the domain has a valid Public Suffix.\n\n#### Example\n\n```js\nvar psl = require('psl');\n\npsl.isValid('google.com'); // true\npsl.isValid('www.google.com'); // true\npsl.isValid('x.yz'); // false\n```\n\n\n## Testing and Building\n\nTest are written using [`mocha`](https://mochajs.org/) and can be\nrun in two different environments: `node` and `phantomjs`.\n\n```sh\n# This will run `eslint`, `mocha` and `karma`.\nnpm test\n\n# Individual test environments\n# Run tests in node only.\n./node_modules/.bin/mocha test\n# Run tests in phantomjs only.\n./node_modules/.bin/karma start ./karma.conf.js --single-run\n\n# Build data (parse raw list) and create dist files\nnpm run build\n```\n\nFeel free to fork if you see possible improvements!\n\n\n## Acknowledgements\n\n* Mozilla Foundation's [Public Suffix List](https://publicsuffix.org/)\n* Thanks to Rob Stradling of [Comodo](https://www.comodo.com/) for providing\n  test data.\n* Inspired by [weppos/publicsuffix-ruby](https://github.com/weppos/publicsuffix-ruby)\n\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Lupo Montero <lupomontero@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/psl",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "punycode": {
                      "_args": [
                        [
                          "punycode@2.1.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "punycode@2.1.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "punycode@2.1.1",
                      "_id": "punycode@2.1.1",
                      "_integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
                      "_location": "/tough-cookie/punycode",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "punycode@2.1.1",
                        "name": "punycode",
                        "escapedName": "punycode",
                        "rawSpec": "2.1.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.1.1"
                      },
                      "_requiredBy": [
                        "/tough-cookie"
                      ],
                      "_resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
                      "_spec": "2.1.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Mathias Bynens",
                        "url": "https://mathiasbynens.be/"
                      },
                      "bugs": {
                        "url": "https://github.com/bestiejs/punycode.js/issues"
                      },
                      "contributors": [
                        {
                          "name": "Mathias Bynens",
                          "url": "https://mathiasbynens.be/"
                        }
                      ],
                      "description": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.",
                      "devDependencies": {
                        "codecov": "^1.0.1",
                        "istanbul": "^0.4.1",
                        "mocha": "^2.5.3"
                      },
                      "engines": {
                        "node": ">=6"
                      },
                      "files": [
                        "LICENSE-MIT.txt",
                        "punycode.js",
                        "punycode.es6.js"
                      ],
                      "homepage": "https://mths.be/punycode",
                      "jsnext:main": "punycode.es6.js",
                      "jspm": {
                        "map": {
                          "./punycode.js": {
                            "node": "@node/punycode"
                          }
                        }
                      },
                      "keywords": [
                        "punycode",
                        "unicode",
                        "idn",
                        "idna",
                        "dns",
                        "url",
                        "domain"
                      ],
                      "license": "MIT",
                      "main": "punycode.js",
                      "module": "punycode.es6.js",
                      "name": "punycode",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/bestiejs/punycode.js.git"
                      },
                      "scripts": {
                        "prepublish": "node scripts/prepublish.js",
                        "test": "mocha tests"
                      },
                      "version": "2.1.1",
                      "readme": "# Punycode.js [![Build status](https://travis-ci.org/bestiejs/punycode.js.svg?branch=master)](https://travis-ci.org/bestiejs/punycode.js) [![Code coverage status](http://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg)](https://codecov.io/gh/bestiejs/punycode.js) [![Dependency status](https://gemnasium.com/bestiejs/punycode.js.svg)](https://gemnasium.com/bestiejs/punycode.js)\n\nPunycode.js is a robust Punycode converter that fully complies to [RFC 3492](https://tools.ietf.org/html/rfc3492) and [RFC 5891](https://tools.ietf.org/html/rfc5891).\n\nThis JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:\n\n* [The C example code from RFC 3492](https://tools.ietf.org/html/rfc3492#appendix-C)\n* [`punycode.c` by _Markus W. Scherer_ (IBM)](http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c)\n* [`punycode.c` by _Ben Noordhuis_](https://github.com/bnoordhuis/punycode/blob/master/punycode.c)\n* [JavaScript implementation by _some_](http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287)\n* [`punycode.js` by _Ben Noordhuis_](https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js) (note: [not fully compliant](https://github.com/joyent/node/issues/2072))\n\nThis project was [bundled](https://github.com/joyent/node/blob/master/lib/punycode.js) with Node.js from [v0.6.2+](https://github.com/joyent/node/compare/975f1930b1...61e796decc) until [v7](https://github.com/nodejs/node/pull/7941) (soft-deprecated).\n\nThe current version supports recent versions of Node.js only. It provides a CommonJS module and an ES6 module. For the old version that offers the same functionality with broader support, including Rhino, Ringo, Narwhal, and web browsers, see [v1.4.1](https://github.com/bestiejs/punycode.js/releases/tag/v1.4.1).\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install punycode --save\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst punycode = require('punycode');\n```\n\n## API\n\n### `punycode.decode(string)`\n\nConverts a Punycode string of ASCII symbols to a string of Unicode symbols.\n\n```js\n// decode domain name parts\npunycode.decode('maana-pta'); // 'mañana'\npunycode.decode('--dqo34k'); // '☃-⌘'\n```\n\n### `punycode.encode(string)`\n\nConverts a string of Unicode symbols to a Punycode string of ASCII symbols.\n\n```js\n// encode domain name parts\npunycode.encode('mañana'); // 'maana-pta'\npunycode.encode('☃-⌘'); // '--dqo34k'\n```\n\n### `punycode.toUnicode(input)`\n\nConverts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn’t matter if you call it on a string that has already been converted to Unicode.\n\n```js\n// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// → 'mañana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// → '☃-⌘.com'\n\n// decode email addresses\npunycode.toUnicode('джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// → 'джумла@джpумлатест.bрфa'\n```\n\n### `punycode.toASCII(input)`\n\nConverts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn’t matter if you call it with a domain that’s already in ASCII.\n\n```js\n// encode domain names\npunycode.toASCII('mañana.com');\n// → 'xn--maana-pta.com'\npunycode.toASCII('☃-⌘.com');\n// → 'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('джумла@джpумлатест.bрфa');\n// → 'джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n```\n\n### `punycode.ucs2`\n\n#### `punycode.ucs2.decode(string)`\n\nCreates an array containing the numeric code point values of each Unicode symbol in the string. While [JavaScript uses UCS-2 internally](https://mathiasbynens.be/notes/javascript-encoding), this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\n\n```js\npunycode.ucs2.decode('abc');\n// → [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// → [0x1D306]\n```\n\n#### `punycode.ucs2.encode(codePoints)`\n\nCreates a string based on an array of numeric code point values.\n\n```js\npunycode.ucs2.encode([0x61, 0x62, 0x63]);\n// → 'abc'\npunycode.ucs2.encode([0x1D306]);\n// → '\\uD834\\uDF06'\n```\n\n### `punycode.version`\n\nA string representing the current Punycode.js version number.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nPunycode.js is available under the [MIT](https://mths.be/mit) license.\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/tough-cookie/node_modules/punycode",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "RFC6265 Cookies and Cookie Jar for node.js",
                  "devDependencies": {
                    "async": "^1.4.2",
                    "genversion": "^2.1.0",
                    "nyc": "^11.6.0",
                    "string.prototype.repeat": "^0.2.0",
                    "vows": "^0.8.2"
                  },
                  "engines": {
                    "node": ">=0.8"
                  },
                  "files": [
                    "lib"
                  ],
                  "homepage": "https://github.com/salesforce/tough-cookie",
                  "keywords": [
                    "HTTP",
                    "cookie",
                    "cookies",
                    "set-cookie",
                    "cookiejar",
                    "jar",
                    "RFC6265",
                    "RFC2965"
                  ],
                  "license": "BSD-3-Clause",
                  "main": "./lib/cookie",
                  "name": "tough-cookie",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/salesforce/tough-cookie.git"
                  },
                  "scripts": {
                    "cover": "nyc --reporter=lcov --reporter=html vows test/*_test.js",
                    "test": "vows test/*_test.js",
                    "version": "genversion lib/version.js && git add lib/version.js"
                  },
                  "version": "2.5.0",
                  "readme": "[RFC6265](https://tools.ietf.org/html/rfc6265) Cookies and CookieJar for Node.js\n\n[![npm package](https://nodei.co/npm/tough-cookie.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/tough-cookie/)\n\n[![Build Status](https://travis-ci.org/salesforce/tough-cookie.png?branch=master)](https://travis-ci.org/salesforce/tough-cookie)\n\n# Synopsis\n\n``` javascript\nvar tough = require('tough-cookie');\nvar Cookie = tough.Cookie;\nvar cookie = Cookie.parse(header);\ncookie.value = 'somethingdifferent';\nheader = cookie.toString();\n\nvar cookiejar = new tough.CookieJar();\ncookiejar.setCookie(cookie, 'http://currentdomain.example.com/path', cb);\n// ...\ncookiejar.getCookies('http://example.com/otherpath',function(err,cookies) {\n  res.headers['cookie'] = cookies.join('; ');\n});\n```\n\n# Installation\n\nIt's _so_ easy!\n\n`npm install tough-cookie`\n\nWhy the name?  NPM modules `cookie`, `cookies` and `cookiejar` were already taken.\n\n## Version Support\n\nSupport for versions of node.js will follow that of the [request](https://www.npmjs.com/package/request) module.\n\n# API\n\n## tough\n\nFunctions on the module you get from `require('tough-cookie')`.  All can be used as pure functions and don't need to be \"bound\".\n\n**Note**: prior to 1.0.x, several of these functions took a `strict` parameter. This has since been removed from the API as it was no longer necessary.\n\n### `parseDate(string)`\n\nParse a cookie date string into a `Date`.  Parses according to RFC6265 Section 5.1.1, not `Date.parse()`.\n\n### `formatDate(date)`\n\nFormat a Date into a RFC1123 string (the RFC6265-recommended format).\n\n### `canonicalDomain(str)`\n\nTransforms a domain-name into a canonical domain-name.  The canonical domain-name is a trimmed, lowercased, stripped-of-leading-dot and optionally punycode-encoded domain-name (Section 5.1.2 of RFC6265).  For the most part, this function is idempotent (can be run again on its output without ill effects).\n\n### `domainMatch(str,domStr[,canonicalize=true])`\n\nAnswers \"does this real domain match the domain in a cookie?\".  The `str` is the \"current\" domain-name and the `domStr` is the \"cookie\" domain-name.  Matches according to RFC6265 Section 5.1.3, but it helps to think of it as a \"suffix match\".\n\nThe `canonicalize` parameter will run the other two parameters through `canonicalDomain` or not.\n\n### `defaultPath(path)`\n\nGiven a current request/response path, gives the Path apropriate for storing in a cookie.  This is basically the \"directory\" of a \"file\" in the path, but is specified by Section 5.1.4 of the RFC.\n\nThe `path` parameter MUST be _only_ the pathname part of a URI (i.e. excludes the hostname, query, fragment, etc.).  This is the `.pathname` property of node's `uri.parse()` output.\n\n### `pathMatch(reqPath,cookiePath)`\n\nAnswers \"does the request-path path-match a given cookie-path?\" as per RFC6265 Section 5.1.4.  Returns a boolean.\n\nThis is essentially a prefix-match where `cookiePath` is a prefix of `reqPath`.\n\n### `parse(cookieString[, options])`\n\nalias for `Cookie.parse(cookieString[, options])`\n\n### `fromJSON(string)`\n\nalias for `Cookie.fromJSON(string)`\n\n### `getPublicSuffix(hostname)`\n\nReturns the public suffix of this hostname.  The public suffix is the shortest domain-name upon which a cookie can be set.  Returns `null` if the hostname cannot have cookies set for it.\n\nFor example: `www.example.com` and `www.subdomain.example.com` both have public suffix `example.com`.\n\nFor further information, see http://publicsuffix.org/.  This module derives its list from that site. This call is currently a wrapper around [`psl`](https://www.npmjs.com/package/psl)'s [get() method](https://www.npmjs.com/package/psl#pslgetdomain).\n\n### `cookieCompare(a,b)`\n\nFor use with `.sort()`, sorts a list of cookies into the recommended order given in the RFC (Section 5.4 step 2). The sort algorithm is, in order of precedence:\n\n* Longest `.path`\n* oldest `.creation` (which has a 1ms precision, same as `Date`)\n* lowest `.creationIndex` (to get beyond the 1ms precision)\n\n``` javascript\nvar cookies = [ /* unsorted array of Cookie objects */ ];\ncookies = cookies.sort(cookieCompare);\n```\n\n**Note**: Since JavaScript's `Date` is limited to a 1ms precision, cookies within the same milisecond are entirely possible. This is especially true when using the `now` option to `.setCookie()`. The `.creationIndex` property is a per-process global counter, assigned during construction with `new Cookie()`. This preserves the spirit of the RFC sorting: older cookies go first. This works great for `MemoryCookieStore`, since `Set-Cookie` headers are parsed in order, but may not be so great for distributed systems. Sophisticated `Store`s may wish to set this to some other _logical clock_ such that if cookies A and B are created in the same millisecond, but cookie A is created before cookie B, then `A.creationIndex < B.creationIndex`. If you want to alter the global counter, which you probably _shouldn't_ do, it's stored in `Cookie.cookiesCreated`.\n\n### `permuteDomain(domain)`\n\nGenerates a list of all possible domains that `domainMatch()` the parameter.  May be handy for implementing cookie stores.\n\n### `permutePath(path)`\n\nGenerates a list of all possible paths that `pathMatch()` the parameter.  May be handy for implementing cookie stores.\n\n\n## Cookie\n\nExported via `tough.Cookie`.\n\n### `Cookie.parse(cookieString[, options])`\n\nParses a single Cookie or Set-Cookie HTTP header into a `Cookie` object.  Returns `undefined` if the string can't be parsed.\n\nThe options parameter is not required and currently has only one property:\n\n  * _loose_ - boolean - if `true` enable parsing of key-less cookies like `=abc` and `=`, which are not RFC-compliant.\n\nIf options is not an object, it is ignored, which means you can use `Array#map` with it.\n\nHere's how to process the Set-Cookie header(s) on a node HTTP/HTTPS response:\n\n``` javascript\nif (res.headers['set-cookie'] instanceof Array)\n  cookies = res.headers['set-cookie'].map(Cookie.parse);\nelse\n  cookies = [Cookie.parse(res.headers['set-cookie'])];\n```\n\n_Note:_ in version 2.3.3, tough-cookie limited the number of spaces before the `=` to 256 characters. This limitation has since been removed.\nSee [Issue 92](https://github.com/salesforce/tough-cookie/issues/92)\n\n### Properties\n\nCookie object properties:\n\n  * _key_ - string - the name or key of the cookie (default \"\")\n  * _value_ - string - the value of the cookie (default \"\")\n  * _expires_ - `Date` - if set, the `Expires=` attribute of the cookie (defaults to the string `\"Infinity\"`). See `setExpires()`\n  * _maxAge_ - seconds - if set, the `Max-Age=` attribute _in seconds_ of the cookie.  May also be set to strings `\"Infinity\"` and `\"-Infinity\"` for non-expiry and immediate-expiry, respectively.  See `setMaxAge()`\n  * _domain_ - string - the `Domain=` attribute of the cookie\n  * _path_ - string - the `Path=` of the cookie\n  * _secure_ - boolean - the `Secure` cookie flag\n  * _httpOnly_ - boolean - the `HttpOnly` cookie flag\n  * _extensions_ - `Array` - any unrecognized cookie attributes as strings (even if equal-signs inside)\n  * _creation_ - `Date` - when this cookie was constructed\n  * _creationIndex_ - number - set at construction, used to provide greater sort precision (please see `cookieCompare(a,b)` for a full explanation)\n\nAfter a cookie has been passed through `CookieJar.setCookie()` it will have the following additional attributes:\n\n  * _hostOnly_ - boolean - is this a host-only cookie (i.e. no Domain field was set, but was instead implied)\n  * _pathIsDefault_ - boolean - if true, there was no Path field on the cookie and `defaultPath()` was used to derive one.\n  * _creation_ - `Date` - **modified** from construction to when the cookie was added to the jar\n  * _lastAccessed_ - `Date` - last time the cookie got accessed. Will affect cookie cleaning once implemented.  Using `cookiejar.getCookies(...)` will update this attribute.\n\n### `Cookie([{properties}])`\n\nReceives an options object that can contain any of the above Cookie properties, uses the default for unspecified properties.\n\n### `.toString()`\n\nencode to a Set-Cookie header value.  The Expires cookie field is set using `formatDate()`, but is omitted entirely if `.expires` is `Infinity`.\n\n### `.cookieString()`\n\nencode to a Cookie header value (i.e. the `.key` and `.value` properties joined with '=').\n\n### `.setExpires(String)`\n\nsets the expiry based on a date-string passed through `parseDate()`.  If parseDate returns `null` (i.e. can't parse this date string), `.expires` is set to `\"Infinity\"` (a string) is set.\n\n### `.setMaxAge(number)`\n\nsets the maxAge in seconds.  Coerces `-Infinity` to `\"-Infinity\"` and `Infinity` to `\"Infinity\"` so it JSON serializes correctly.\n\n### `.expiryTime([now=Date.now()])`\n\n### `.expiryDate([now=Date.now()])`\n\nexpiryTime() Computes the absolute unix-epoch milliseconds that this cookie expires. expiryDate() works similarly, except it returns a `Date` object.  Note that in both cases the `now` parameter should be milliseconds.\n\nMax-Age takes precedence over Expires (as per the RFC). The `.creation` attribute -- or, by default, the `now` parameter -- is used to offset the `.maxAge` attribute.\n\nIf Expires (`.expires`) is set, that's returned.\n\nOtherwise, `expiryTime()` returns `Infinity` and `expiryDate()` returns a `Date` object for \"Tue, 19 Jan 2038 03:14:07 GMT\" (latest date that can be expressed by a 32-bit `time_t`; the common limit for most user-agents).\n\n### `.TTL([now=Date.now()])`\n\ncompute the TTL relative to `now` (milliseconds).  The same precedence rules as for `expiryTime`/`expiryDate` apply.\n\nThe \"number\" `Infinity` is returned for cookies without an explicit expiry and `0` is returned if the cookie is expired.  Otherwise a time-to-live in milliseconds is returned.\n\n### `.canonicalizedDomain()`\n\n### `.cdomain()`\n\nreturn the canonicalized `.domain` field.  This is lower-cased and punycode (RFC3490) encoded if the domain has any non-ASCII characters.\n\n### `.toJSON()`\n\nFor convenience in using `JSON.serialize(cookie)`. Returns a plain-old `Object` that can be JSON-serialized.\n\nAny `Date` properties (i.e., `.expires`, `.creation`, and `.lastAccessed`) are exported in ISO format (`.toISOString()`).\n\n**NOTE**: Custom `Cookie` properties will be discarded. In tough-cookie 1.x, since there was no `.toJSON` method explicitly defined, all enumerable properties were captured. If you want a property to be serialized, add the property name to the `Cookie.serializableProperties` Array.\n\n### `Cookie.fromJSON(strOrObj)`\n\nDoes the reverse of `cookie.toJSON()`. If passed a string, will `JSON.parse()` that first.\n\nAny `Date` properties (i.e., `.expires`, `.creation`, and `.lastAccessed`) are parsed via `Date.parse()`, not the tough-cookie `parseDate`, since it's JavaScript/JSON-y timestamps being handled at this layer.\n\nReturns `null` upon JSON parsing error.\n\n### `.clone()`\n\nDoes a deep clone of this cookie, exactly implemented as `Cookie.fromJSON(cookie.toJSON())`.\n\n### `.validate()`\n\nStatus: *IN PROGRESS*. Works for a few things, but is by no means comprehensive.\n\nvalidates cookie attributes for semantic correctness.  Useful for \"lint\" checking any Set-Cookie headers you generate.  For now, it returns a boolean, but eventually could return a reason string -- you can future-proof with this construct:\n\n``` javascript\nif (cookie.validate() === true) {\n  // it's tasty\n} else {\n  // yuck!\n}\n```\n\n\n## CookieJar\n\nExported via `tough.CookieJar`.\n\n### `CookieJar([store],[options])`\n\nSimply use `new CookieJar()`.  If you'd like to use a custom store, pass that to the constructor otherwise a `MemoryCookieStore` will be created and used.\n\nThe `options` object can be omitted and can have the following properties:\n\n  * _rejectPublicSuffixes_ - boolean - default `true` - reject cookies with domains like \"com\" and \"co.uk\"\n  * _looseMode_ - boolean - default `false` - accept malformed cookies like `bar` and `=bar`, which have an implied empty name.\n    This is not in the standard, but is used sometimes on the web and is accepted by (most) browsers.\n\nSince eventually this module would like to support database/remote/etc. CookieJars, continuation passing style is used for CookieJar methods.\n\n### `.setCookie(cookieOrString, currentUrl, [{options},] cb(err,cookie))`\n\nAttempt to set the cookie in the cookie jar.  If the operation fails, an error will be given to the callback `cb`, otherwise the cookie is passed through.  The cookie will have updated `.creation`, `.lastAccessed` and `.hostOnly` properties.\n\nThe `options` object can be omitted and can have the following properties:\n\n  * _http_ - boolean - default `true` - indicates if this is an HTTP or non-HTTP API.  Affects HttpOnly cookies.\n  * _secure_ - boolean - autodetect from url - indicates if this is a \"Secure\" API.  If the currentUrl starts with `https:` or `wss:` then this is defaulted to `true`, otherwise `false`.\n  * _now_ - Date - default `new Date()` - what to use for the creation/access time of cookies\n  * _ignoreError_ - boolean - default `false` - silently ignore things like parse errors and invalid domains.  `Store` errors aren't ignored by this option.\n\nAs per the RFC, the `.hostOnly` property is set if there was no \"Domain=\" parameter in the cookie string (or `.domain` was null on the Cookie object).  The `.domain` property is set to the fully-qualified hostname of `currentUrl` in this case.  Matching this cookie requires an exact hostname match (not a `domainMatch` as per usual).\n\n### `.setCookieSync(cookieOrString, currentUrl, [{options}])`\n\nSynchronous version of `setCookie`; only works with synchronous stores (e.g. the default `MemoryCookieStore`).\n\n### `.getCookies(currentUrl, [{options},] cb(err,cookies))`\n\nRetrieve the list of cookies that can be sent in a Cookie header for the current url.\n\nIf an error is encountered, that's passed as `err` to the callback, otherwise an `Array` of `Cookie` objects is passed.  The array is sorted with `cookieCompare()` unless the `{sort:false}` option is given.\n\nThe `options` object can be omitted and can have the following properties:\n\n  * _http_ - boolean - default `true` - indicates if this is an HTTP or non-HTTP API.  Affects HttpOnly cookies.\n  * _secure_ - boolean - autodetect from url - indicates if this is a \"Secure\" API.  If the currentUrl starts with `https:` or `wss:` then this is defaulted to `true`, otherwise `false`.\n  * _now_ - Date - default `new Date()` - what to use for the creation/access time of cookies\n  * _expire_ - boolean - default `true` - perform expiry-time checking of cookies and asynchronously remove expired cookies from the store.  Using `false` will return expired cookies and **not** remove them from the store (which is useful for replaying Set-Cookie headers, potentially).\n  * _allPaths_ - boolean - default `false` - if `true`, do not scope cookies by path. The default uses RFC-compliant path scoping. **Note**: may not be supported by the underlying store (the default `MemoryCookieStore` supports it).\n\nThe `.lastAccessed` property of the returned cookies will have been updated.\n\n### `.getCookiesSync(currentUrl, [{options}])`\n\nSynchronous version of `getCookies`; only works with synchronous stores (e.g. the default `MemoryCookieStore`).\n\n### `.getCookieString(...)`\n\nAccepts the same options as `.getCookies()` but passes a string suitable for a Cookie header rather than an array to the callback.  Simply maps the `Cookie` array via `.cookieString()`.\n\n### `.getCookieStringSync(...)`\n\nSynchronous version of `getCookieString`; only works with synchronous stores (e.g. the default `MemoryCookieStore`).\n\n### `.getSetCookieStrings(...)`\n\nReturns an array of strings suitable for **Set-Cookie** headers. Accepts the same options as `.getCookies()`.  Simply maps the cookie array via `.toString()`.\n\n### `.getSetCookieStringsSync(...)`\n\nSynchronous version of `getSetCookieStrings`; only works with synchronous stores (e.g. the default `MemoryCookieStore`).\n\n### `.serialize(cb(err,serializedObject))`\n\nSerialize the Jar if the underlying store supports `.getAllCookies`.\n\n**NOTE**: Custom `Cookie` properties will be discarded. If you want a property to be serialized, add the property name to the `Cookie.serializableProperties` Array.\n\nSee [Serialization Format].\n\n### `.serializeSync()`\n\nSync version of .serialize\n\n### `.toJSON()`\n\nAlias of .serializeSync() for the convenience of `JSON.stringify(cookiejar)`.\n\n### `CookieJar.deserialize(serialized, [store], cb(err,object))`\n\nA new Jar is created and the serialized Cookies are added to the underlying store. Each `Cookie` is added via `store.putCookie` in the order in which they appear in the serialization.\n\nThe `store` argument is optional, but should be an instance of `Store`. By default, a new instance of `MemoryCookieStore` is created.\n\nAs a convenience, if `serialized` is a string, it is passed through `JSON.parse` first. If that throws an error, this is passed to the callback.\n\n### `CookieJar.deserializeSync(serialized, [store])`\n\nSync version of `.deserialize`.  _Note_ that the `store` must be synchronous for this to work.\n\n### `CookieJar.fromJSON(string)`\n\nAlias of `.deserializeSync` to provide consistency with `Cookie.fromJSON()`.\n\n### `.clone([store,]cb(err,newJar))`\n\nProduces a deep clone of this jar. Modifications to the original won't affect the clone, and vice versa.\n\nThe `store` argument is optional, but should be an instance of `Store`. By default, a new instance of `MemoryCookieStore` is created. Transferring between store types is supported so long as the source implements `.getAllCookies()` and the destination implements `.putCookie()`.\n\n### `.cloneSync([store])`\n\nSynchronous version of `.clone`, returning a new `CookieJar` instance.\n\nThe `store` argument is optional, but must be a _synchronous_ `Store` instance if specified. If not passed, a new instance of `MemoryCookieStore` is used.\n\nThe _source_ and _destination_ must both be synchronous `Store`s. If one or both stores are asynchronous, use `.clone` instead. Recall that `MemoryCookieStore` supports both synchronous and asynchronous API calls.\n\n### `.removeAllCookies(cb(err))`\n\nRemoves all cookies from the jar.\n\nThis is a new backwards-compatible feature of `tough-cookie` version 2.5, so not all Stores will implement it efficiently. For Stores that do not implement `removeAllCookies`, the fallback is to call `removeCookie` after `getAllCookies`. If `getAllCookies` fails or isn't implemented in the Store, that error is returned. If one or more of the `removeCookie` calls fail, only the first error is returned.\n\n### `.removeAllCookiesSync()`\n\nSync version of `.removeAllCookies()`\n\n## Store\n\nBase class for CookieJar stores. Available as `tough.Store`.\n\n## Store API\n\nThe storage model for each `CookieJar` instance can be replaced with a custom implementation.  The default is `MemoryCookieStore` which can be found in the `lib/memstore.js` file.  The API uses continuation-passing-style to allow for asynchronous stores.\n\nStores should inherit from the base `Store` class, which is available as `require('tough-cookie').Store`.\n\nStores are asynchronous by default, but if `store.synchronous` is set to `true`, then the `*Sync` methods on the of the containing `CookieJar` can be used (however, the continuation-passing style\n\nAll `domain` parameters will have been normalized before calling.\n\nThe Cookie store must have all of the following methods.\n\n### `store.findCookie(domain, path, key, cb(err,cookie))`\n\nRetrieve a cookie with the given domain, path and key (a.k.a. name).  The RFC maintains that exactly one of these cookies should exist in a store.  If the store is using versioning, this means that the latest/newest such cookie should be returned.\n\nCallback takes an error and the resulting `Cookie` object.  If no cookie is found then `null` MUST be passed instead (i.e. not an error).\n\n### `store.findCookies(domain, path, cb(err,cookies))`\n\nLocates cookies matching the given domain and path.  This is most often called in the context of `cookiejar.getCookies()` above.\n\nIf no cookies are found, the callback MUST be passed an empty array.\n\nThe resulting list will be checked for applicability to the current request according to the RFC (domain-match, path-match, http-only-flag, secure-flag, expiry, etc.), so it's OK to use an optimistic search algorithm when implementing this method.  However, the search algorithm used SHOULD try to find cookies that `domainMatch()` the domain and `pathMatch()` the path in order to limit the amount of checking that needs to be done.\n\nAs of version 0.9.12, the `allPaths` option to `cookiejar.getCookies()` above will cause the path here to be `null`.  If the path is `null`, path-matching MUST NOT be performed (i.e. domain-matching only).\n\n### `store.putCookie(cookie, cb(err))`\n\nAdds a new cookie to the store.  The implementation SHOULD replace any existing cookie with the same `.domain`, `.path`, and `.key` properties -- depending on the nature of the implementation, it's possible that between the call to `fetchCookie` and `putCookie` that a duplicate `putCookie` can occur.\n\nThe `cookie` object MUST NOT be modified; the caller will have already updated the `.creation` and `.lastAccessed` properties.\n\nPass an error if the cookie cannot be stored.\n\n### `store.updateCookie(oldCookie, newCookie, cb(err))`\n\nUpdate an existing cookie.  The implementation MUST update the `.value` for a cookie with the same `domain`, `.path` and `.key`.  The implementation SHOULD check that the old value in the store is equivalent to `oldCookie` - how the conflict is resolved is up to the store.\n\nThe `.lastAccessed` property will always be different between the two objects (to the precision possible via JavaScript's clock).  Both `.creation` and `.creationIndex` are guaranteed to be the same.  Stores MAY ignore or defer the `.lastAccessed` change at the cost of affecting how cookies are selected for automatic deletion (e.g., least-recently-used, which is up to the store to implement).\n\nStores may wish to optimize changing the `.value` of the cookie in the store versus storing a new cookie.  If the implementation doesn't define this method a stub that calls `putCookie(newCookie,cb)` will be added to the store object.\n\nThe `newCookie` and `oldCookie` objects MUST NOT be modified.\n\nPass an error if the newCookie cannot be stored.\n\n### `store.removeCookie(domain, path, key, cb(err))`\n\nRemove a cookie from the store (see notes on `findCookie` about the uniqueness constraint).\n\nThe implementation MUST NOT pass an error if the cookie doesn't exist; only pass an error due to the failure to remove an existing cookie.\n\n### `store.removeCookies(domain, path, cb(err))`\n\nRemoves matching cookies from the store.  The `path` parameter is optional, and if missing means all paths in a domain should be removed.\n\nPass an error ONLY if removing any existing cookies failed.\n\n### `store.removeAllCookies(cb(err))`\n\n_Optional_. Removes all cookies from the store.\n\nPass an error if one or more cookies can't be removed.\n\n**Note**: New method as of `tough-cookie` version 2.5, so not all Stores will implement this, plus some stores may choose not to implement this.\n\n### `store.getAllCookies(cb(err, cookies))`\n\n_Optional_. Produces an `Array` of all cookies during `jar.serialize()`. The items in the array can be true `Cookie` objects or generic `Object`s with the [Serialization Format] data structure.\n\nCookies SHOULD be returned in creation order to preserve sorting via `compareCookies()`. For reference, `MemoryCookieStore` will sort by `.creationIndex` since it uses true `Cookie` objects internally. If you don't return the cookies in creation order, they'll still be sorted by creation time, but this only has a precision of 1ms.  See `compareCookies` for more detail.\n\nPass an error if retrieval fails.\n\n**Note**: not all Stores can implement this due to technical limitations, so it is optional.\n\n## MemoryCookieStore\n\nInherits from `Store`.\n\nA just-in-memory CookieJar synchronous store implementation, used by default. Despite being a synchronous implementation, it's usable with both the synchronous and asynchronous forms of the `CookieJar` API. Supports serialization, `getAllCookies`, and `removeAllCookies`.\n\n## Community Cookie Stores\n\nThese are some Store implementations authored and maintained by the community. They aren't official and we don't vouch for them but you may be interested to have a look:\n\n- [`db-cookie-store`](https://github.com/JSBizon/db-cookie-store): SQL including SQLite-based databases\n- [`file-cookie-store`](https://github.com/JSBizon/file-cookie-store): Netscape cookie file format on disk\n- [`redis-cookie-store`](https://github.com/benkroeger/redis-cookie-store): Redis\n- [`tough-cookie-filestore`](https://github.com/mitsuru/tough-cookie-filestore): JSON on disk\n- [`tough-cookie-web-storage-store`](https://github.com/exponentjs/tough-cookie-web-storage-store): DOM localStorage and sessionStorage\n\n\n# Serialization Format\n\n**NOTE**: if you want to have custom `Cookie` properties serialized, add the property name to `Cookie.serializableProperties`.\n\n```js\n  {\n    // The version of tough-cookie that serialized this jar.\n    version: 'tough-cookie@1.x.y',\n\n    // add the store type, to make humans happy:\n    storeType: 'MemoryCookieStore',\n\n    // CookieJar configuration:\n    rejectPublicSuffixes: true,\n    // ... future items go here\n\n    // Gets filled from jar.store.getAllCookies():\n    cookies: [\n      {\n        key: 'string',\n        value: 'string',\n        // ...\n        /* other Cookie.serializableProperties go here */\n      }\n    ]\n  }\n```\n\n# Copyright and License\n\nBSD-3-Clause:\n\n```text\n Copyright (c) 2015, Salesforce.com, Inc.\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n 3. Neither the name of Salesforce.com nor the names of its contributors may\n be used to endorse or promote products derived from this software without\n specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n POSSIBILITY OF SUCH DAMAGE.\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "psl": "^1.1.28",
                    "punycode": "^2.1.1"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/tough-cookie",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "tunnel-agent": {
                  "_args": [
                    [
                      "tunnel-agent@0.6.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "tunnel-agent@0.6.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "tunnel-agent@0.6.0",
                  "_id": "tunnel-agent@0.6.0",
                  "_integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
                  "_location": "/tunnel-agent",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "tunnel-agent@0.6.0",
                    "name": "tunnel-agent",
                    "escapedName": "tunnel-agent",
                    "rawSpec": "0.6.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.6.0"
                  },
                  "_requiredBy": [
                    "/request"
                  ],
                  "_resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
                  "_spec": "0.6.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Mikeal Rogers",
                    "email": "mikeal.rogers@gmail.com",
                    "url": "http://www.futurealoof.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mikeal/tunnel-agent/issues"
                  },
                  "dependencies": {
                    "safe-buffer": {
                      "_args": "[Circular]",
                      "_from": "safe-buffer@5.2.0",
                      "_id": "safe-buffer@5.2.0",
                      "_integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
                      "_location": "/safe-buffer",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "safe-buffer@5.2.0",
                        "name": "safe-buffer",
                        "escapedName": "safe-buffer",
                        "rawSpec": "5.2.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "5.2.0"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
                      "_spec": "5.2.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "description": "Safer Node.js Buffer API",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/feross/safe-buffer",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "index.js",
                      "name": "safe-buffer",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "types": "index.d.ts",
                      "version": "5.2.0",
                      "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n[Get supported safe-buffer with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-safe-buffer?utm_source=npm-safe-buffer&utm_medium=referral&utm_campaign=readme)\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/safe-buffer",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "safe-buffer"
                    }
                  },
                  "description": "HTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module.",
                  "devDependencies": {},
                  "engines": {
                    "node": "*"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/mikeal/tunnel-agent#readme",
                  "license": "Apache-2.0",
                  "main": "index.js",
                  "name": "tunnel-agent",
                  "optionalDependencies": {},
                  "repository": {
                    "url": "git+https://github.com/mikeal/tunnel-agent.git"
                  },
                  "version": "0.6.0",
                  "readme": "tunnel-agent\n============\n\nHTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module.\n",
                  "readmeFilename": "README.md",
                  "_dependencies": {
                    "safe-buffer": "^5.0.1"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/tunnel-agent",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "uuid": {
                  "_args": [
                    [
                      "uuid@3.3.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "uuid@3.3.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "uuid@3.3.2",
                  "_id": "uuid@3.3.2",
                  "_integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
                  "_location": "/uuid",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "uuid@3.3.2",
                    "name": "uuid",
                    "escapedName": "uuid",
                    "rawSpec": "3.3.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.3.2"
                  },
                  "_requiredBy": [
                    "/aws-sdk"
                  ],
                  "_resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
                  "_spec": "3.3.2",
                  "_where": "/path/to/project/packages/shared",
                  "bin": {
                    "uuid": "bin/uuid"
                  },
                  "browser": {
                    "./lib/rng.js": "./lib/rng-browser.js",
                    "./lib/sha1.js": "./lib/sha1-browser.js",
                    "./lib/md5.js": "./lib/md5-browser.js"
                  },
                  "bugs": {
                    "url": "https://github.com/kelektiv/node-uuid/issues"
                  },
                  "commitlint": {
                    "extends": [
                      "@commitlint/config-conventional"
                    ]
                  },
                  "contributors": [
                    {
                      "name": "Robert Kieffer",
                      "email": "robert@broofa.com"
                    },
                    {
                      "name": "Christoph Tavan",
                      "email": "dev@tavan.de"
                    },
                    {
                      "name": "AJ ONeal",
                      "email": "coolaj86@gmail.com"
                    },
                    {
                      "name": "Vincent Voyer",
                      "email": "vincent@zeroload.net"
                    },
                    {
                      "name": "Roman Shtylman",
                      "email": "shtylman@gmail.com"
                    }
                  ],
                  "description": "RFC4122 (v1, v4, and v5) UUIDs",
                  "devDependencies": {
                    "@commitlint/cli": "7.0.0",
                    "@commitlint/config-conventional": "7.0.1",
                    "eslint": "4.19.1",
                    "husky": "0.14.3",
                    "mocha": "5.2.0",
                    "runmd": "1.0.1",
                    "standard-version": "4.4.0"
                  },
                  "homepage": "https://github.com/kelektiv/node-uuid#readme",
                  "keywords": [
                    "uuid",
                    "guid",
                    "rfc4122"
                  ],
                  "license": "MIT",
                  "name": "uuid",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/kelektiv/node-uuid.git"
                  },
                  "scripts": {
                    "commitmsg": "commitlint -E GIT_PARAMS",
                    "md": "runmd --watch --output=README.md README_js.md",
                    "prepare": "runmd --output=README.md README_js.md",
                    "release": "standard-version",
                    "test": "mocha test/test.js"
                  },
                  "version": "3.3.2",
                  "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://secure.travis-ci.org/kelektiv/node-uuid.svg?branch=master)](http://travis-ci.org/kelektiv/node-uuid) #\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Support for version 1, 3, 4 and 5 UUIDs\n* Cross-platform\n* Uses cryptographically-strong random number APIs (when available)\n* Zero-dependency, small footprint (... but not [this small](https://gist.github.com/982883))\n\n[**Deprecation warning**: The use of `require('uuid')` is deprecated and will not be\nsupported after version 3.x of this module.  Instead, use `require('uuid/[v1|v3|v4|v5]')` as shown in the examples below.]\n\n## Quickstart - CommonJS (Recommended)\n\n```shell\nnpm install uuid\n```\n\nThen generate your uuid version of choice ...\n\nVersion 1 (timestamp):\n\n```javascript\nconst uuidv1 = require('uuid/v1');\nuuidv1(); // ⇨ '45745c60-7b1a-11e8-9c9c-2d42b21b1a3e'\n\n```\n\nVersion 3 (namespace):\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv3('hello.example.com', uuidv3.DNS); // ⇨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv3('http://example.com/hello', uuidv3.URL); // ⇨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv3('Hello, World!', MY_NAMESPACE); // ⇨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n\n```\n\nVersion 4 (random):\n\n```javascript\nconst uuidv4 = require('uuid/v4');\nuuidv4(); // ⇨ '10ba038e-48da-487b-96e8-8d3b99b6d18a'\n\n```\n\nVersion 5 (namespace):\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // ⇨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // ⇨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // ⇨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\n\n```\n\n## Quickstart - Browser-ready Versions\n\nBrowser-ready versions of this module are available via [wzrd.in](https://github.com/jfhbrook/wzrd.in).\n\nFor version 1 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv1@latest\"></script>\n<script>\nuuidv1(); // -> v1 UUID\n</script>\n```\n\nFor version 3 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv3@latest\"></script>\n<script>\nuuidv3('http://example.com/hello', uuidv3.URL); // -> v3 UUID\n</script>\n```\n\nFor version 4 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv4@latest\"></script>\n<script>\nuuidv4(); // -> v4 UUID\n</script>\n```\n\nFor version 5 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv5@latest\"></script>\n<script>\nuuidv5('http://example.com/hello', uuidv5.URL); // -> v5 UUID\n</script>\n```\n\n## API\n\n### Version 1\n\n```javascript\nconst uuidv1 = require('uuid/v1');\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The <node> id is generated guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n};\nuuidv1(v1options); // ⇨ '710b962e-041c-11e1-9234-0123456789ab'\n\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0);  // ⇨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\nuuidv1(null, arr, 16); // ⇨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62, 69, 117, 109, 209, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\n\n```\n\n### Version 3\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v3 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE);  // ⇨ '042ffd34-d989-321c-ad06-f60826172424'\n\n```\n\n### Version 4\n\n```javascript\nconst uuidv4 = require('uuid/v4')\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255)\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n};\nuuidv4(v4options); // ⇨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0);  // ⇨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45 ]\nuuidv4(null, buffer, 16); // ⇨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45, 108, 204, 255, 103, 171, 86, 76, 94, 178, 225, 188, 236, 150, 20, 151, 87 ]\n\n```\n\n### Version 5\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v5 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE);  // ⇨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n\n```\n\n## Command Line\n\nUUIDs can be generated from the command line with the `uuid` command.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n\n$ uuid v1\n02d37060-d446-11e7-a9fa-7bdae751ebe1\n```\n\nType `uuid --help` for usage details\n\n## Testing\n\n```shell\nnpm test\n```\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/uuid",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "uuid"
                }
              },
              "description": "Simplified HTTP request client.",
              "devDependencies": {
                "bluebird": "^3.2.1",
                "browserify": "^13.0.1",
                "browserify-istanbul": "^2.0.0",
                "buffer-equal": "^1.0.0",
                "codecov": "^3.0.4",
                "coveralls": "^3.0.2",
                "function-bind": "^1.0.2",
                "karma": "^3.0.0",
                "karma-browserify": "^5.0.1",
                "karma-cli": "^1.0.0",
                "karma-coverage": "^1.0.0",
                "karma-phantomjs-launcher": "^1.0.0",
                "karma-tap": "^3.0.1",
                "nyc": "^14.1.1",
                "phantomjs-prebuilt": "^2.1.3",
                "rimraf": "^2.2.8",
                "server-destroy": "^1.0.1",
                "standard": "^9.0.0",
                "tape": "^4.6.0",
                "taper": "^0.5.0"
              },
              "engines": {
                "node": ">= 6"
              },
              "files": [
                "lib/",
                "index.js",
                "request.js"
              ],
              "greenkeeper": {
                "ignore": [
                  "hawk",
                  "har-validator"
                ]
              },
              "homepage": "https://github.com/request/request#readme",
              "keywords": [
                "http",
                "simple",
                "util",
                "utility"
              ],
              "license": "Apache-2.0",
              "main": "index.js",
              "name": "request",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/request/request.git"
              },
              "scripts": {
                "lint": "standard",
                "test": "npm run lint && npm run test-ci && npm run test-browser",
                "test-browser": "node tests/browser/start.js",
                "test-ci": "taper tests/test-*.js",
                "test-cov": "nyc --reporter=lcov tape tests/test-*.js"
              },
              "version": "2.88.2",
              "readme": "# Deprecated!\n\nAs of Feb 11th 2020, request is fully deprecated. No new changes are expected land. In fact, none have landed for some time.\n\nFor more information about why request is deprecated and possible alternatives refer to\n[this issue](https://github.com/request/request/issues/3142).\n\n# Request - Simplified HTTP client\n\n[![npm package](https://nodei.co/npm/request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/request/)\n\n[![Build status](https://img.shields.io/travis/request/request/master.svg?style=flat-square)](https://travis-ci.org/request/request)\n[![Coverage](https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square)](https://codecov.io/github/request/request?branch=master)\n[![Coverage](https://img.shields.io/coveralls/request/request.svg?style=flat-square)](https://coveralls.io/r/request/request)\n[![Dependency Status](https://img.shields.io/david/request/request.svg?style=flat-square)](https://david-dm.org/request/request)\n[![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)\n[![Gitter](https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square)](https://gitter.im/request/request?utm_source=badge)\n\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```js\nconst request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});\n```\n\n\n## Table of contents\n\n- [Streaming](#streaming)\n- [Promises & Async/Await](#promises--asyncawait)\n- [Forms](#forms)\n- [HTTP Authentication](#http-authentication)\n- [Custom HTTP Headers](#custom-http-headers)\n- [OAuth Signing](#oauth-signing)\n- [Proxies](#proxies)\n- [Unix Domain Sockets](#unix-domain-sockets)\n- [TLS/SSL Protocol](#tlsssl-protocol)\n- [Support for HAR 1.2](#support-for-har-12)\n- [**All Available Options**](#requestoptions-callback)\n\nRequest also offers [convenience methods](#convenience-methods) like\n`request.defaults` and `request.post`, and there are\nlots of [usage examples](#examples) and several\n[debugging techniques](#debugging).\n\n\n---\n\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```js\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don’t already provide one).\n\n```js\nfs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```js\nrequest.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))\n```\n\nRequest emits a \"response\" event when a response is received. The `response` argument will be an instance of [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n```js\nrequest\n  .get('http://google.com/img.png')\n  .on('response', function(response) {\n    console.log(response.statusCode) // 200\n    console.log(response.headers['content-type']) // 'image/png'\n  })\n  .pipe(request.put('http://mysite.com/img.png'))\n```\n\nTo easily handle errors when streaming requests, listen to the `error` event before piping:\n\n```js\nrequest\n  .get('http://mysite.com/doodle.png')\n  .on('error', function(err) {\n    console.error(err)\n  })\n  .pipe(fs.createWriteStream('doodle.png'))\n```\n\nNow let’s get fancy.\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    if (req.method === 'PUT') {\n      req.pipe(request.put('http://mysite.com/doodle.png'))\n    } else if (req.method === 'GET' || req.method === 'HEAD') {\n      request.get('http://mysite.com/doodle.png').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    const x = request('http://mysite.com/doodle.png')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in ≥ Node 0.5.x you can do one line proxying. :)\n\n```js\nreq.pipe(request('http://mysite.com/doodle.png')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```js\nconst r = request.defaults({'proxy':'http://localproxy.com'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    r.get('http://google.com/doodle.png').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Promises & Async/Await\n\n`request` supports both streaming and callback interfaces natively. If you'd like `request` to return a Promise instead, you can use an alternative interface wrapper for `request`. These wrappers can be useful if you prefer to work with Promises, or if you'd like to use `async`/`await` in ES2017.\n\nSeveral alternative interfaces are provided by the request team, including:\n- [`request-promise`](https://github.com/request/request-promise) (uses [Bluebird](https://github.com/petkaantonov/bluebird) Promises)\n- [`request-promise-native`](https://github.com/request/request-promise-native) (uses native Promises)\n- [`request-promise-any`](https://github.com/request/request-promise-any) (uses [any-promise](https://www.npmjs.com/package/any-promise) Promises)\n\nAlso, [`util.promisify`](https://nodejs.org/api/util.html#util_util_promisify_original), which is available from Node.js v8.0 can be used to convert a regular function that takes a callback to return a promise instead.\n\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\n\n#### application/x-www-form-urlencoded (URL-Encoded Forms)\n\nURL-encoded forms are simple.\n\n```js\nrequest.post('http://service.com/upload', {form:{key:'value'}})\n// or\nrequest.post('http://service.com/upload').form({key:'value'})\n// or\nrequest.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })\n```\n\n\n#### multipart/form-data (Multipart Form Uploads)\n\nFor `multipart/form-data` we use the [form-data](https://github.com/form-data/form-data) library by [@felixge](https://github.com/felixge). For the most cases, you can pass your upload form data via the `formData` option.\n\n\n```js\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});\n```\n\nFor advanced cases, you can access the form-data object itself via `r.form()`. This can be modified until the request is fired on the next cycle of the event-loop. (Note that this calling `form()` will clear the currently set form data for that request.)\n\n```js\n// NOTE: Advanced use-case, for normal use see 'formData' usage above\nconst r = request.post('http://service.com/upload', function optionalCallback(err, httpResponse, body) {...})\nconst form = r.form();\nform.append('my_field', 'my_value');\nform.append('my_buffer', Buffer.from([1, 2, 3]));\nform.append('custom_file', fs.createReadStream(__dirname + '/unicycle.jpg'), {filename: 'unicycle.jpg'});\n```\nSee the [form-data README](https://github.com/form-data/form-data) for more information & examples.\n\n\n#### multipart/related\n\nSome variations in different HTTP implementations require a newline/CRLF before, after, or both before and after the boundary of a `multipart/related` request (using the multipart option). This has been observed in the .NET WebAPI version 4.0. You can turn on a boundary preambleCRLF or postamble by passing them as `true` to your request options.\n\n```js\n  request({\n    method: 'PUT',\n    preambleCRLF: true,\n    postambleCRLF: true,\n    uri: 'http://service.com/upload',\n    multipart: [\n      {\n        'content-type': 'application/json',\n        body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n      },\n      { body: 'I am an attachment' },\n      { body: fs.createReadStream('image.png') }\n    ],\n    // alternatively pass an object containing additional options\n    multipart: {\n      chunked: false,\n      data: [\n        {\n          'content-type': 'application/json',\n          body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        },\n        { body: 'I am an attachment' }\n      ]\n    }\n  },\n  function (error, response, body) {\n    if (error) {\n      return console.error('upload failed:', error);\n    }\n    console.log('Upload successful!  Server responded with:', body);\n  })\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## HTTP Authentication\n\n```js\nrequest.get('http://some.server.com/').auth('username', 'password', false);\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n// or\nrequest.get('http://some.server.com/').auth(null, null, true, 'bearerToken');\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'bearer': 'bearerToken'\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values:\n\n- `user` || `username`\n- `pass` || `password`\n- `sendImmediately` (optional)\n- `bearer` (optional)\n\nThe method form takes parameters\n`auth(username, password, sendImmediately, bearer)`.\n\n`sendImmediately` defaults to `true`, which causes a basic or bearer\nauthentication header to be sent. If `sendImmediately` is `false`, then\n`request` will retry with a proper authentication header after receiving a\n`401` response from the server (which must contain a `WWW-Authenticate` header\nindicating the required authentication method).\n\nNote that you can also specify basic authentication using the URL itself, as\ndetailed in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). Simply pass the\n`user:password` before the host with an `@` sign:\n\n```js\nconst username = 'username',\n    password = 'password',\n    url = 'http://' + username + ':' + password + '@some.server.com';\n\nrequest({url}, function (error, response, body) {\n   // Do more stuff with 'body' here\n});\n```\n\nDigest authentication is supported, but it only works with `sendImmediately`\nset to `false`; otherwise `request` will send basic authentication on the\ninitial request, which will probably cause the request to fail.\n\nBearer authentication is supported, and is activated when the `bearer` value is\navailable. The value may be either a `String` or a `Function` returning a\n`String`. Using a function to supply the bearer token is particularly useful if\nused in conjunction with `defaults` to allow a single function to supply the\nlast known token at the time of sending a request, or to compute one on the fly.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```js\nconst request = require('request');\n\nconst options = {\n  url: 'https://api.github.com/repos/request/request',\n  headers: {\n    'User-Agent': 'request'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    console.log(info.stargazers_count + \" Stars\");\n    console.log(info.forks_count + \" Forks\");\n  }\n}\n\nrequest(options, callback);\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## OAuth Signing\n\n[OAuth version 1.0](https://tools.ietf.org/html/rfc5849) is supported. The\ndefault signing algorithm is\n[HMAC-SHA1](https://tools.ietf.org/html/rfc5849#section-3.4.2):\n\n```js\n// OAuth1.0 - 3-legged server side flow (Twitter example)\n// step 1\nconst qs = require('querystring')\n  , oauth =\n    { callback: 'http://mysite.com/callback/'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = 'https://api.twitter.com/oauth/request_token'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n\n  // step 2\n  const req_data = qs.parse(body)\n  const uri = 'https://api.twitter.com/oauth/authenticate'\n    + '?' + qs.stringify({oauth_token: req_data.oauth_token})\n  // redirect the user to the authorize uri\n\n  // step 3\n  // after the user is redirected back to your server\n  const auth_data = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: auth_data.oauth_token\n      , token_secret: req_data.oauth_token_secret\n      , verifier: auth_data.oauth_verifier\n      }\n    , url = 'https://api.twitter.com/oauth/access_token'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    // ready to make signed requests on behalf of the user\n    const perm_data = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_data.oauth_token\n        , token_secret: perm_data.oauth_token_secret\n        }\n      , url = 'https://api.twitter.com/1.1/users/show.json'\n      , qs =\n        { screen_name: perm_data.screen_name\n        , user_id: perm_data.user_id\n        }\n      ;\n    request.get({url:url, oauth:oauth, qs:qs, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\nFor [RSA-SHA1 signing](https://tools.ietf.org/html/rfc5849#section-3.4.3), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'RSA-SHA1'`\n* Instead of `consumer_secret`, specify a `private_key` string in\n  [PEM format](http://how2ssl.com/articles/working_with_pem_files/)\n\nFor [PLAINTEXT signing](http://oauth.net/core/1.0/#anchor22), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'PLAINTEXT'`\n\nTo send OAuth parameters via query params or in a post body as described in The\n[Consumer Request Parameters](http://oauth.net/core/1.0/#consumer_req_param)\nsection of the oauth1 spec:\n* Pass `transport_method : 'query'` or `transport_method : 'body'` in the OAuth\n  options object.\n* `transport_method` defaults to `'header'`\n\nTo use [Request Body Hash](https://oauth.googlecode.com/svn/spec/ext/body_hash/1.0/oauth-bodyhash.html) you can either\n* Manually generate the body hash and pass it as a string `body_hash: '...'`\n* Automatically generate the body hash by passing `body_hash: true`\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Proxies\n\nIf you specify a `proxy` option, then the request (and any subsequent\nredirects) will be sent via a connection to the proxy server.\n\nIf your endpoint is an `https` url, and you are using a proxy, then\nrequest will send a `CONNECT` request to the proxy server *first*, and\nthen use the supplied connection to connect to the endpoint.\n\nThat is, first it will make a request like:\n\n```\nHTTP/1.1 CONNECT endpoint-server.com:80\nHost: proxy-server.com\nUser-Agent: whatever user agent you specify\n```\n\nand then the proxy server make a TCP connection to `endpoint-server`\non port `80`, and return a response that looks like:\n\n```\nHTTP/1.1 200 OK\n```\n\nAt this point, the connection is left open, and the client is\ncommunicating directly with the `endpoint-server.com` machine.\n\nSee [the wikipedia page on HTTP Tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel)\nfor more information.\n\nBy default, when proxying `http` traffic, request will simply make a\nstandard proxied `http` request. This is done by making the `url`\nsection of the initial line of the request a fully qualified url to\nthe endpoint.\n\nFor example, it will make a single request that looks like:\n\n```\nHTTP/1.1 GET http://endpoint-server.com/some-url\nHost: proxy-server.com\nOther-Headers: all go here\n\nrequest body or whatever\n```\n\nBecause a pure \"http over http\" tunnel offers no additional security\nor other features, it is generally simpler to go with a\nstraightforward HTTP proxy in this case. However, if you would like\nto force a tunneling proxy, you may set the `tunnel` option to `true`.\n\nYou can also make a standard proxied `http` request by explicitly setting\n`tunnel : false`, but **note that this will allow the proxy to see the traffic\nto/from the destination server**.\n\nIf you are using a tunneling proxy, you may set the\n`proxyHeaderWhiteList` to share certain headers with the proxy.\n\nYou can also set the `proxyHeaderExclusiveList` to share certain\nheaders only with the proxy and not with destination host.\n\nBy default, this set is:\n\n```\naccept\naccept-charset\naccept-encoding\naccept-language\naccept-ranges\ncache-control\ncontent-encoding\ncontent-language\ncontent-length\ncontent-location\ncontent-md5\ncontent-range\ncontent-type\nconnection\ndate\nexpect\nmax-forwards\npragma\nproxy-authorization\nreferer\nte\ntransfer-encoding\nuser-agent\nvia\n```\n\nNote that, when using a tunneling proxy, the `proxy-authorization`\nheader and any headers from custom `proxyHeaderExclusiveList` are\n*never* sent to the endpoint server, but only to the proxy server.\n\n\n### Controlling proxy behaviour using environment variables\n\nThe following environment variables are respected by `request`:\n\n * `HTTP_PROXY` / `http_proxy`\n * `HTTPS_PROXY` / `https_proxy`\n * `NO_PROXY` / `no_proxy`\n\nWhen `HTTP_PROXY` / `http_proxy` are set, they will be used to proxy non-SSL requests that do not have an explicit `proxy` configuration option present. Similarly, `HTTPS_PROXY` / `https_proxy` will be respected for SSL requests that do not have an explicit `proxy` configuration option. It is valid to define a proxy in one of the environment variables, but then override it for a specific request, using the `proxy` configuration option. Furthermore, the `proxy` configuration option can be explicitly set to false / null to opt out of proxying altogether for that request.\n\n`request` is also aware of the `NO_PROXY`/`no_proxy` environment variables. These variables provide a granular way to opt out of proxying, on a per-host basis. It should contain a comma separated list of hosts to opt out of proxying. It is also possible to opt of proxying when a particular destination port is used. Finally, the variable may be set to `*` to opt out of the implicit proxy configuration of the other environment variables.\n\nHere's some examples of valid `no_proxy` values:\n\n * `google.com` - don't proxy HTTP/HTTPS requests to Google.\n * `google.com:443` - don't proxy HTTPS requests to Google, but *do* proxy HTTP requests to Google.\n * `google.com:443, yahoo.com:80` - don't proxy HTTPS requests to Google, and don't proxy HTTP requests to Yahoo!\n * `*` - ignore `https_proxy`/`http_proxy` environment variables altogether.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## UNIX Domain Sockets\n\n`request` supports making requests to [UNIX Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket). To make one, use the following URL scheme:\n\n```js\n/* Pattern */ 'http://unix:SOCKET:PATH'\n/* Example */ request.get('http://unix:/absolute/path/to/unix.socket:/request/path')\n```\n\nNote: The `SOCKET` path is assumed to be absolute to the root of the host file system.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## TLS/SSL Protocol\n\nTLS/SSL Protocol options, such as `cert`, `key` and `passphrase`, can be\nset directly in `options` object, in the `agentOptions` property of the `options` object, or even in `https.globalAgent.options`. Keep in mind that, although `agentOptions` allows for a slightly wider range of configurations, the recommended way is via `options` object directly, as using `agentOptions` or `https.globalAgent.options` would not be applied in the same way in proxied environments (as data travels through a TLS connection instead of an http/https agent).\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , caFile = path.resolve(__dirname, 'ssl/ca.cert.pem')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    cert: fs.readFileSync(certFile),\n    key: fs.readFileSync(keyFile),\n    passphrase: 'password',\n    ca: fs.readFileSync(caFile)\n};\n\nrequest.get(options);\n```\n\n### Using `options.agentOptions`\n\nIn the example below, we call an API that requires client side SSL certificate\n(in PEM format) with passphrase protected private key (in PEM format) and disable the SSLv3 protocol:\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        cert: fs.readFileSync(certFile),\n        key: fs.readFileSync(keyFile),\n        // Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:\n        // pfx: fs.readFileSync(pfxFilePath),\n        passphrase: 'password',\n        securityOptions: 'SSL_OP_NO_SSLv3'\n    }\n};\n\nrequest.get(options);\n```\n\nIt is able to force using SSLv3 only by specifying `secureProtocol`:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        secureProtocol: 'SSLv3_method'\n    }\n});\n```\n\nIt is possible to accept other certificates than those signed by generally allowed Certificate Authorities (CAs).\nThis can be useful, for example,  when using self-signed certificates.\nTo require a different root certificate, you can specify the signing CA by adding the contents of the CA's certificate file to the `agentOptions`.\nThe certificate the domain presents must be signed by the root certificate specified:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: fs.readFileSync('ca.cert.pem')\n    }\n});\n```\n\nThe `ca` value can be an array of certificates, in the event you have a private or internal corporate public-key infrastructure hierarchy. For example, if you want to connect to https://api.some-server.com which presents a key chain consisting of:\n1. its own public key, which is signed by:\n2. an intermediate \"Corp Issuing Server\", that is in turn signed by: \n3. a root CA \"Corp Root CA\";\n\nyou can configure your request as follows:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: [\n          fs.readFileSync('Corp Issuing Server.pem'),\n          fs.readFileSync('Corp Root CA.pem')\n        ]\n    }\n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Support for HAR 1.2\n\nThe `options.har` property will override the values: `url`, `method`, `qs`, `headers`, `form`, `formData`, `body`, `json`, as well as construct multipart data and read files from disk when `request.postData.params[].fileName` is present without a matching `value`.\n\nA validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.\n\n```js\n  const request = require('request')\n  request({\n    // will be ignored\n    method: 'GET',\n    uri: 'http://www.google.com',\n\n    // HTTP Archive Request Object\n    har: {\n      url: 'http://www.mockbin.com/har',\n      method: 'POST',\n      headers: [\n        {\n          name: 'content-type',\n          value: 'application/x-www-form-urlencoded'\n        }\n      ],\n      postData: {\n        mimeType: 'application/x-www-form-urlencoded',\n        params: [\n          {\n            name: 'foo',\n            value: 'bar'\n          },\n          {\n            name: 'hello',\n            value: 'world'\n          }\n        ]\n      }\n    }\n  })\n\n  // a POST request will be sent to http://www.mockbin.com\n  // with body an application/x-www-form-urlencoded body:\n  // foo=bar&hello=world\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n- `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n- `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain. If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.\n- `method` - http method (default: `\"GET\"`)\n- `headers` - http headers (default: `{}`)\n\n---\n\n- `qs` - object containing querystring values to be appended to the `uri`\n- `qsParseOptions` - object containing options to pass to the [qs.parse](https://github.com/hapijs/qs#parsing-objects) method. Alternatively pass options to the [querystring.parse](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_parse_str_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`\n- `qsStringifyOptions` - object containing options to pass to the [qs.stringify](https://github.com/hapijs/qs#stringifying) method. Alternatively pass options to the  [querystring.stringify](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`. For example, to change the way arrays are converted to query strings using the `qs` module pass the `arrayFormat` option with one of `indices|brackets|repeat`\n- `useQuerystring` - if true, use `querystring` to stringify and parse\n  querystrings, otherwise use `qs` (default: `false`). Set this option to\n  `true` if you need arrays to be serialized as `foo=bar&foo=baz` instead of the\n  default `foo[0]=bar&foo[1]=baz`.\n\n---\n\n- `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer`, `String` or `ReadStream`. If `json` is `true`, then `body` must be a JSON-serializable object.\n- `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded` header. When passed no options, a `FormData` instance is returned (and is piped to request). See \"Forms\" section above.\n- `formData` - data to pass for a `multipart/form-data` request. See\n  [Forms](#forms) section above.\n- `multipart` - array of objects which contain their own headers and `body`\n  attributes. Sends a `multipart/related` request. See [Forms](#forms) section\n  above.\n  - Alternatively you can pass in an object `{chunked: false, data: []}` where\n    `chunked` is used to specify whether the request is sent in\n    [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding)\n    In non-chunked requests, data items with body streams are not allowed.\n- `preambleCRLF` - append a newline/CRLF before the boundary of your `multipart/form-data` request.\n- `postambleCRLF` - append a newline/CRLF at the end of the boundary of your `multipart/form-data` request.\n- `json` - sets `body` to JSON representation of value and adds `Content-type: application/json` header. Additionally, parses the response body as JSON.\n- `jsonReviver` - a [reviver function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) that will be passed to `JSON.parse()` when parsing a JSON response body.\n- `jsonReplacer` - a [replacer function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that will be passed to `JSON.stringify()` when stringifying a JSON request body.\n\n---\n\n- `auth` - a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional). See documentation above.\n- `oauth` - options for OAuth HMAC-SHA1 signing. See documentation above.\n- `hawk` - options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n- `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`, and optionally `session` (note that this only works for services that require session as part of the canonical string). Also requires the property `bucket`, unless you’re specifying your `bucket` as part of the path, or the request doesn’t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter `sign_version` with value `4` otherwise the default is version 2. If you are using SigV4, you can also include a `service` property that specifies the service name. **Note:** you need to `npm install aws4` first.\n- `httpSignature` - options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n\n---\n\n- `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`). This property can also be implemented as function which gets `response` object as a single argument and should return `true` if redirects should continue or `false` otherwise.\n- `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n- `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)\n- `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n- `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.\n\n---\n\n- `encoding` - encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`. Anything else **(including the default value of `undefined`)** will be passed as the [encoding](http://nodejs.org/api/buffer.html#buffer_buffer) parameter to `toString()` (meaning this is effectively `utf8` by default). (**Note:** if you expect binary data, you should set `encoding: null`.)\n- `gzip` - if `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response. **Note:** Automatic decoding of the response content is performed on the body data returned through `request` (both through the `request` stream and passed to the callback function) but is not performed on the `response` stream (available from the `response` event) which is the unmodified `http.IncomingMessage` object which may contain compressed data. See example below.\n- `jar` - if `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n\n---\n\n- `agent` - `http(s).Agent` instance to use\n- `agentClass` - alternatively specify your agent's class name\n- `agentOptions` - and pass its options. **Note:** for HTTPS see [tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback) and the [documentation above](#using-optionsagentoptions).\n- `forever` - set to `true` to use the [forever-agent](https://github.com/request/forever-agent) **Note:** Defaults to `http(s).Agent({keepAlive:true})` in node 0.12+\n- `pool` - an object describing which agents to use for the request. If this option is omitted the request will use the global agent (as long as your options allow for it). Otherwise, request will search the pool for your custom agent. If no custom agent is found, a new agent will be created and added to the pool. **Note:** `pool` is used only when the `agent` option is not specified.\n  - A `maxSockets` property can also be provided on the `pool` object to set the max number of sockets for all agents created (ex: `pool: {maxSockets: Infinity}`).\n  - Note that if you are sending multiple requests in a loop and creating\n    multiple new `pool` objects, `maxSockets` will not work as intended. To\n    work around this, either use [`request.defaults`](#requestdefaultsoptions)\n    with your pool options or create the pool object with the `maxSockets`\n    property outside of the loop.\n- `timeout` - integer containing number of milliseconds, controls two timeouts.\n  - **Read timeout**: Time to wait for a server to send response headers (and start the response body) before aborting the request.\n  - **Connection timeout**: Sets the socket to timeout after `timeout` milliseconds of inactivity. Note that increasing the timeout beyond the OS-wide TCP connection timeout will not have any effect ([the default in Linux can be anywhere from 20-120 seconds][linux-timeout])\n\n[linux-timeout]: http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout\n\n---\n\n- `localAddress` - local interface to bind for network connections.\n- `proxy` - an HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n- `strictSSL` - if `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n- `tunnel` - controls the behavior of\n  [HTTP `CONNECT` tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_tunneling)\n  as follows:\n   - `undefined` (default) - `true` if the destination is `https`, `false` otherwise\n   - `true` - always tunnel to the destination by making a `CONNECT` request to\n     the proxy\n   - `false` - request the destination as a `GET` request.\n- `proxyHeaderWhiteList` - a whitelist of headers to send to a\n  tunneling proxy.\n- `proxyHeaderExclusiveList` - a whitelist of headers to send\n  exclusively to a tunneling proxy and not to destination.\n\n---\n\n- `time` - if `true`, the request-response cycle (including all redirects) is timed at millisecond resolution. When set, the following properties are added to the response object:\n  - `elapsedTime` Duration of the entire request/response in milliseconds (*deprecated*).\n  - `responseStartTime` Timestamp when the response began (in Unix Epoch milliseconds) (*deprecated*).\n  - `timingStart` Timestamp of the start of the request (in Unix Epoch milliseconds).\n  - `timings` Contains event timestamps in millisecond resolution relative to `timingStart`. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `socket` Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_socket) module's `socket` event fires. This happens when the socket is assigned to the request.\n    - `lookup` Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_lookup) module's `lookup` event fires. This happens when the DNS has been resolved.\n    - `connect`: Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_connect) module's `connect` event fires. This happens when the server acknowledges the TCP connection.\n    - `response`: Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_response) module's `response` event fires. This happens when the first bytes are received from the server.\n    - `end`: Relative timestamp when the last bytes of the response are received.\n  - `timingPhases` Contains the durations of each request phase. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `wait`: Duration of socket initialization (`timings.socket`)\n    - `dns`: Duration of DNS lookup (`timings.lookup` - `timings.socket`)\n    - `tcp`: Duration of TCP connection (`timings.connect` - `timings.socket`)\n    - `firstByte`: Duration of HTTP server response (`timings.response` - `timings.connect`)\n    - `download`: Duration of HTTP download (`timings.end` - `timings.response`)\n    - `total`: Duration entire HTTP round-trip (`timings.end`)\n\n- `har` - a [HAR 1.2 Request Object](http://www.softwareishard.com/blog/har-12-spec/#request), will be processed from HAR format into options overwriting matching values *(see the [HAR 1.2 section](#support-for-har-12) for details)*\n- `callback` - alternatively pass the request's callback in the options object\n\nThe callback argument gets 3 arguments:\n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) object (Response object)\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n\n### request.defaults(options)\n\nThis method **returns a wrapper** around the normal request API that defaults\nto whatever options you pass to it.\n\n**Note:** `request.defaults()` **does not** modify the global request API;\ninstead, it **returns a wrapper** that has your default settings applied to it.\n\n**Note:** You can call `.defaults()` on the wrapper that is returned from\n`request.defaults` to add/override defaults that were previously defaulted.\n\nFor example:\n```js\n//requests using baseRequest() will set the 'x-token' header\nconst baseRequest = request.defaults({\n  headers: {'x-token': 'my-token'}\n})\n\n//requests using specialRequest() will include the 'x-token' header set in\n//baseRequest and will also include the 'special' header\nconst specialRequest = baseRequest.defaults({\n  headers: {special: 'special value'}\n})\n```\n\n### request.METHOD()\n\nThese HTTP method convenience functions act just like `request()` but with a default method already set for you:\n\n- *request.get()*: Defaults to `method: \"GET\"`.\n- *request.post()*: Defaults to `method: \"POST\"`.\n- *request.put()*: Defaults to `method: \"PUT\"`.\n- *request.patch()*: Defaults to `method: \"PATCH\"`.\n- *request.del() / request.delete()*: Defaults to `method: \"DELETE\"`.\n- *request.head()*: Defaults to `method: \"HEAD\"`.\n- *request.options()*: Defaults to `method: \"OPTIONS\"`.\n\n### request.cookie()\n\nFunction that creates a new cookie.\n\n```js\nrequest.cookie('key1=value1')\n```\n### request.jar()\n\nFunction that creates a new cookie jar.\n\n```js\nrequest.jar()\n```\n\n### response.caseless.get('header-name')\n\nFunction that returns the specified response header field using a [case-insensitive match](https://tools.ietf.org/html/rfc7230#section-3.2)\n\n```js\nrequest('http://www.google.com', function (error, response, body) {\n  // print the Content-Type header even if the server returned it as 'content-type' (lowercase)\n  console.log('Content-Type is:', response.caseless.get('Content-Type')); \n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Debugging\n\nThere are at least three ways to debug the operation of `request`:\n\n1. Launch the node process like `NODE_DEBUG=request node script.js`\n   (`lib,request,otherlib` works too).\n\n2. Set `require('request').debug = true` at any time (this does the same thing\n   as #1).\n\n3. Use the [request-debug module](https://github.com/request/request-debug) to\n   view request and response headers and bodies.\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Timeouts\n\nMost requests to external servers should have a timeout attached, in case the\nserver is not responding in a timely manner. Without a timeout, your code may\nhave a socket open/consume resources for minutes or more.\n\nThere are two main types of timeouts: **connection timeouts** and **read\ntimeouts**. A connect timeout occurs if the timeout is hit while your client is\nattempting to establish a connection to a remote machine (corresponding to the\n[connect() call][connect] on the socket). A read timeout occurs any time the\nserver is too slow to send back a part of the response.\n\nThese two situations have widely different implications for what went wrong\nwith the request, so it's useful to be able to distinguish them. You can detect\ntimeout errors by checking `err.code` for an 'ETIMEDOUT' value. Further, you\ncan detect whether the timeout was a connection timeout by checking if the\n`err.connect` property is set to `true`.\n\n```js\nrequest.get('http://10.255.255.1', {timeout: 1500}, function(err) {\n    console.log(err.code === 'ETIMEDOUT');\n    // Set to `true` if the timeout was a connection timeout, `false` or\n    // `undefined` otherwise.\n    console.log(err.connect === true);\n    process.exit(0);\n});\n```\n\n[connect]: http://linux.die.net/man/2/connect\n\n## Examples:\n\n```js\n  const request = require('request')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand\n    , multipart:\n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)\n      } else {\n        console.log('error: '+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nFor backwards-compatibility, response compression is not supported by default.\nTo accept gzip-compressed responses, set the `gzip` option to `true`. Note\nthat the body data passed through `request` is automatically decompressed\nwhile the response object is unmodified and will contain compressed data if\nthe server sent a compressed response.\n\n```js\n  const request = require('request')\n  request(\n    { method: 'GET'\n    , uri: 'http://www.google.com'\n    , gzip: true\n    }\n  , function (error, response, body) {\n      // body is the decompressed response body\n      console.log('server encoded the data as: ' + (response.headers['content-encoding'] || 'identity'))\n      console.log('the decoded data is: ' + body)\n    }\n  )\n  .on('data', function(data) {\n    // decompressed data as it is received\n    console.log('decoded chunk: ' + data)\n  })\n  .on('response', function(response) {\n    // unmodified http.IncomingMessage object\n    response.on('data', function(data) {\n      // compressed data as it is received\n      console.log('received ' + data.length + ' bytes of compressed data')\n    })\n  })\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```js\nconst request = request.defaults({jar: true})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie jar (instead of `request`’s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```js\nconst j = request.jar()\nconst request = request.defaults({jar:j})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nOR\n\n```js\nconst j = request.jar();\nconst cookie = request.cookie('key1=value1');\nconst url = 'http://www.google.com';\nj.setCookie(cookie, url);\nrequest({url: url, jar: j}, function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie store (such as a\n[`FileCookieStore`](https://github.com/mitsuru/tough-cookie-filestore)\nwhich supports saving to and restoring from JSON files), pass it as a parameter\nto `request.jar()`:\n\n```js\nconst FileCookieStore = require('tough-cookie-filestore');\n// NOTE - currently the 'cookies.json' file must already exist!\nconst j = request.jar(new FileCookieStore('cookies.json'));\nrequest = request.defaults({ jar : j })\nrequest('http://www.google.com', function() {\n  request('http://images.google.com')\n})\n```\n\nThe cookie store must be a\n[`tough-cookie`](https://github.com/SalesforceEng/tough-cookie)\nstore and it must support synchronous operations; see the\n[`CookieStore` API docs](https://github.com/SalesforceEng/tough-cookie#api)\nfor details.\n\nTo inspect your cookie jar after a request:\n\n```js\nconst j = request.jar()\nrequest({url: 'http://www.google.com', jar: j}, function () {\n  const cookie_string = j.getCookieString(url); // \"key1=value1; key2=value2; ...\"\n  const cookies = j.getCookies(url);\n  // [{key: 'key1', value: 'value1', domain: \"www.google.com\", ...}, ...]\n})\n```\n\n[back to top](#table-of-contents)\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "aws-sign2": "~0.7.0",
                "aws4": "^1.8.0",
                "caseless": "~0.12.0",
                "combined-stream": "~1.0.6",
                "extend": "~3.0.2",
                "forever-agent": "~0.6.1",
                "form-data": "~2.3.2",
                "har-validator": "~5.1.3",
                "http-signature": "~1.2.0",
                "is-typedarray": "~1.0.0",
                "isstream": "~0.1.2",
                "json-stringify-safe": "~5.0.1",
                "mime-types": "~2.1.19",
                "oauth-sign": "~0.9.0",
                "performance-now": "^2.1.0",
                "qs": "~6.5.2",
                "safe-buffer": "^5.1.2",
                "tough-cookie": "~2.5.0",
                "tunnel-agent": "^0.6.0",
                "uuid": "^3.3.2"
              },
              "path": "/path/to/project/packages/shared/node_modules/request",
              "error": "[Circular]",
              "extraneous": false
            },
            "simple-lru-cache": {
              "_args": "[Circular]",
              "_from": "simple-lru-cache@0.0.2",
              "_id": "simple-lru-cache@0.0.2",
              "_integrity": "sha1-1ZzDoZPBpdAyD4Tucy9uRxPlEd0=",
              "_location": "/simple-lru-cache",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "simple-lru-cache@0.0.2",
                "name": "simple-lru-cache",
                "escapedName": "simple-lru-cache",
                "rawSpec": "0.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.0.2"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/simple-lru-cache/-/simple-lru-cache-0.0.2.tgz",
              "_spec": "0.0.2",
              "_where": "/path/to/project/packages/shared",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "dependencies": {},
              "description": "node-simple-lru-cache =====================",
              "devDependencies": "[Circular]",
              "directories": "[Circular]",
              "homepage": "https://github.com/geisbruch/node-simple-lru-cache#readme",
              "keywords": "[Circular]",
              "licenses": "[Circular]",
              "main": "index",
              "maintainers": "[Circular]",
              "name": "simple-lru-cache",
              "repositories": "[Circular]",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.0.2",
              "readme": "node-simple-lru-cache\n=====================\n\nIt's a very simple and extremely fast lru cache for node.js.\n\nThis cache will priorize the lastest used keys over the least used keys, \nso when a new key is added if the cache is full, the least used key will be removed\n\n## Instalation\n    \n    npm install simple-lru-cache\n\n## Usage\n    var SimpleCache = require(\"simple-lru-cache\")\n\n    var cache = new SimpleCache({\"maxSize\":1000})\n\n    //Add an Objet\n    cache.set(\"hello\",\"world\")\n\n    //Get an Object\n    cache.get(\"hello\")\n\n    //Delete an Object\n    cache.del(\"hello\")\n\n    //Reset cache\n    cache.reset()\n\n## Tests\n    \n    npm install\n    npm test\n\n## Benchmark against lru-cache\n\n      make bench\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/simple-lru-cache",
              "error": "[Circular]",
              "extraneous": false
            },
            "uuid": {
              "_args": "[Circular]",
              "_from": "uuid@3.3.2",
              "_id": "uuid@3.3.2",
              "_integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
              "_location": "/uuid",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "uuid@3.3.2",
                "name": "uuid",
                "escapedName": "uuid",
                "rawSpec": "3.3.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.3.2"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
              "_spec": "3.3.2",
              "_where": "/path/to/project/packages/shared",
              "bin": "[Circular]",
              "browser": "[Circular]",
              "bugs": "[Circular]",
              "commitlint": "[Circular]",
              "contributors": "[Circular]",
              "description": "RFC4122 (v1, v4, and v5) UUIDs",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/kelektiv/node-uuid#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "uuid",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.3.2",
              "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://secure.travis-ci.org/kelektiv/node-uuid.svg?branch=master)](http://travis-ci.org/kelektiv/node-uuid) #\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Support for version 1, 3, 4 and 5 UUIDs\n* Cross-platform\n* Uses cryptographically-strong random number APIs (when available)\n* Zero-dependency, small footprint (... but not [this small](https://gist.github.com/982883))\n\n[**Deprecation warning**: The use of `require('uuid')` is deprecated and will not be\nsupported after version 3.x of this module.  Instead, use `require('uuid/[v1|v3|v4|v5]')` as shown in the examples below.]\n\n## Quickstart - CommonJS (Recommended)\n\n```shell\nnpm install uuid\n```\n\nThen generate your uuid version of choice ...\n\nVersion 1 (timestamp):\n\n```javascript\nconst uuidv1 = require('uuid/v1');\nuuidv1(); // ⇨ '45745c60-7b1a-11e8-9c9c-2d42b21b1a3e'\n\n```\n\nVersion 3 (namespace):\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv3('hello.example.com', uuidv3.DNS); // ⇨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv3('http://example.com/hello', uuidv3.URL); // ⇨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv3('Hello, World!', MY_NAMESPACE); // ⇨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n\n```\n\nVersion 4 (random):\n\n```javascript\nconst uuidv4 = require('uuid/v4');\nuuidv4(); // ⇨ '10ba038e-48da-487b-96e8-8d3b99b6d18a'\n\n```\n\nVersion 5 (namespace):\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // ⇨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // ⇨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // ⇨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\n\n```\n\n## Quickstart - Browser-ready Versions\n\nBrowser-ready versions of this module are available via [wzrd.in](https://github.com/jfhbrook/wzrd.in).\n\nFor version 1 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv1@latest\"></script>\n<script>\nuuidv1(); // -> v1 UUID\n</script>\n```\n\nFor version 3 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv3@latest\"></script>\n<script>\nuuidv3('http://example.com/hello', uuidv3.URL); // -> v3 UUID\n</script>\n```\n\nFor version 4 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv4@latest\"></script>\n<script>\nuuidv4(); // -> v4 UUID\n</script>\n```\n\nFor version 5 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv5@latest\"></script>\n<script>\nuuidv5('http://example.com/hello', uuidv5.URL); // -> v5 UUID\n</script>\n```\n\n## API\n\n### Version 1\n\n```javascript\nconst uuidv1 = require('uuid/v1');\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The <node> id is generated guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n};\nuuidv1(v1options); // ⇨ '710b962e-041c-11e1-9234-0123456789ab'\n\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0);  // ⇨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\nuuidv1(null, arr, 16); // ⇨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62, 69, 117, 109, 209, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\n\n```\n\n### Version 3\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v3 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE);  // ⇨ '042ffd34-d989-321c-ad06-f60826172424'\n\n```\n\n### Version 4\n\n```javascript\nconst uuidv4 = require('uuid/v4')\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255)\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n};\nuuidv4(v4options); // ⇨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0);  // ⇨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45 ]\nuuidv4(null, buffer, 16); // ⇨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45, 108, 204, 255, 103, 171, 86, 76, 94, 178, 225, 188, 236, 150, 20, 151, 87 ]\n\n```\n\n### Version 5\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v5 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE);  // ⇨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n\n```\n\n## Command Line\n\nUUIDs can be generated from the command line with the `uuid` command.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n\n$ uuid v1\n02d37060-d446-11e7-a9fa-7bdae751ebe1\n```\n\nType `uuid --help` for usage details\n\n## Testing\n\n```shell\nnpm test\n```\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/shared/node_modules/uuid",
              "error": "[Circular]",
              "extraneous": false
            },
            "winston": {
              "_args": [
                [
                  "winston@3.2.1",
                  "/path/to/project/packages/shared"
                ],
                [
                  "winston@3.2.1",
                  "/path/to/project/packages/shared"
                ]
              ],
              "_from": "winston@3.2.1",
              "_id": "winston@3.2.1",
              "_integrity": "sha512-zU6vgnS9dAWCEKg/QYigd6cgMVVNwyTzKs81XZtTFuRwJOcDdBg7AU0mXVyNbs7O5RH2zdv+BdNZUlx7mXPuOw==",
              "_location": "/winston",
              "_phantomChildren": {
                "lodash": "4.17.15"
              },
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "winston@3.2.1",
                "name": "winston",
                "escapedName": "winston",
                "rawSpec": "3.2.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.2.1"
              },
              "_requiredBy": [
                "/snowflake-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/winston/-/winston-3.2.1.tgz",
              "_spec": "3.2.1",
              "_where": "/path/to/project/packages/shared",
              "author": {
                "name": "Charlie Robbins",
                "email": "charlie.robbins@gmail.com"
              },
              "browser": "./dist/winston",
              "bugs": {
                "url": "https://github.com/winstonjs/winston/issues"
              },
              "dependencies": {
                "diagnostics": {
                  "_args": [
                    [
                      "diagnostics@1.1.1",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "diagnostics@1.1.1",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "diagnostics@1.1.1",
                  "_id": "diagnostics@1.1.1",
                  "_integrity": "sha512-8wn1PmdunLJ9Tqbx+Fx/ZEuHfJf4NKSN2ZBj7SJC/OWRWha843+WsTjqMe1B5E3p28jqBlp+mJ2fPVxPyNgYKQ==",
                  "_location": "/diagnostics",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "diagnostics@1.1.1",
                    "name": "diagnostics",
                    "escapedName": "diagnostics",
                    "rawSpec": "1.1.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.1.1"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/diagnostics/-/diagnostics-1.1.1.tgz",
                  "_spec": "1.1.1",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Arnout Kazemier"
                  },
                  "browser": "./browser.js",
                  "bugs": {
                    "url": "https://github.com/bigpipe/diagnostics/issues"
                  },
                  "contributors": [
                    {
                      "name": "Martijn Swaagman",
                      "url": "https://github.com/swaagie"
                    },
                    {
                      "name": "Jarrett Cruger",
                      "url": "https://github.com/jcrugzz"
                    },
                    {
                      "name": "Sevastos",
                      "url": "https://github.com/sevastos"
                    }
                  ],
                  "dependencies": {
                    "colorspace": {
                      "_args": [
                        [
                          "colorspace@1.1.2",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "colorspace@1.1.2",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "colorspace@1.1.2",
                      "_id": "colorspace@1.1.2",
                      "_integrity": "sha512-vt+OoIP2d76xLhjwbBaucYlNSpPsrJWPlBTtwCpQKIu6/CSMutyzX93O/Do0qzpH3YoHEes8YEFXyZ797rEhzQ==",
                      "_location": "/colorspace",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "colorspace@1.1.2",
                        "name": "colorspace",
                        "escapedName": "colorspace",
                        "rawSpec": "1.1.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.1.2"
                      },
                      "_requiredBy": [
                        "/diagnostics"
                      ],
                      "_resolved": "https://registry.npmjs.org/colorspace/-/colorspace-1.1.2.tgz",
                      "_spec": "1.1.2",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Arnout Kazemier"
                      },
                      "bugs": {
                        "url": "https://github.com/3rd-Eden/colorspace/issues"
                      },
                      "dependencies": {
                        "color": {
                          "_args": [
                            [
                              "color@3.0.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "color@3.0.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "color@3.0.0",
                          "_id": "color@3.0.0",
                          "_integrity": "sha512-jCpd5+s0s0t7p3pHQKpnJ0TpQKKdleP71LWcA0aqiljpiuAkOSUFN/dyH8ZwF0hRmFlrIuRhufds1QyEP9EB+w==",
                          "_location": "/color",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "color@3.0.0",
                            "name": "color",
                            "escapedName": "color",
                            "rawSpec": "3.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "3.0.0"
                          },
                          "_requiredBy": [
                            "/colorspace"
                          ],
                          "_resolved": "https://registry.npmjs.org/color/-/color-3.0.0.tgz",
                          "_spec": "3.0.0",
                          "_where": "/path/to/project/packages/shared",
                          "authors": [
                            "Josh Junon <i.am.qix@gmail.com>",
                            "Heather Arthur <fayearthur@gmail.com>",
                            "Maxime Thirouin"
                          ],
                          "bugs": {
                            "url": "https://github.com/Qix-/color/issues"
                          },
                          "dependencies": {
                            "color-convert": {
                              "_args": "[Circular]",
                              "_from": "color-convert@1.9.3",
                              "_id": "color-convert@1.9.3",
                              "_integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
                              "_location": "/color-convert",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "color-convert@1.9.3",
                                "name": "color-convert",
                                "escapedName": "color-convert",
                                "rawSpec": "1.9.3",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.9.3"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
                              "_spec": "1.9.3",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "dependencies": {},
                              "description": "Plain color conversion functions",
                              "devDependencies": "[Circular]",
                              "files": "[Circular]",
                              "homepage": "https://github.com/Qix-/color-convert#readme",
                              "keywords": "[Circular]",
                              "license": "MIT",
                              "name": "color-convert",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "version": "1.9.3",
                              "xo": "[Circular]",
                              "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100);             // [96, 48, 59]\nconvert.keyword.rgb('blue');                // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels;     // 3\nvar cmykChannels = convert.cmyk.channels;   // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF');         // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF');     // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4);     // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67);      // '7B2D43'\nconvert.rgb.hex([123, 45, 67]);    // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n",
                              "readmeFilename": "README.md",
                              "optionalDependencies": "[Circular]",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/color-convert",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "color-convert"
                            },
                            "color-string": {
                              "_args": [
                                [
                                  "color-string@1.5.3",
                                  "/path/to/project/packages/shared"
                                ],
                                [
                                  "color-string@1.5.3",
                                  "/path/to/project/packages/shared"
                                ]
                              ],
                              "_from": "color-string@1.5.3",
                              "_id": "color-string@1.5.3",
                              "_integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
                              "_location": "/color-string",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "color-string@1.5.3",
                                "name": "color-string",
                                "escapedName": "color-string",
                                "rawSpec": "1.5.3",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "1.5.3"
                              },
                              "_requiredBy": [
                                "/color"
                              ],
                              "_resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
                              "_spec": "1.5.3",
                              "_where": "/path/to/project/packages/shared",
                              "author": {
                                "name": "Heather Arthur",
                                "email": "fayearthur@gmail.com"
                              },
                              "bugs": {
                                "url": "https://github.com/Qix-/color-string/issues"
                              },
                              "contributors": [
                                {
                                  "name": "Maxime Thirouin"
                                },
                                {
                                  "name": "Dyma Ywanov",
                                  "email": "dfcreative@gmail.com"
                                },
                                {
                                  "name": "Josh Junon"
                                }
                              ],
                              "dependencies": {
                                "color-name": {
                                  "_args": "[Circular]",
                                  "_from": "color-name@1.1.3",
                                  "_id": "color-name@1.1.3",
                                  "_integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
                                  "_location": "/color-name",
                                  "_phantomChildren": "[Circular]",
                                  "_requested": {
                                    "type": "version",
                                    "registry": true,
                                    "raw": "color-name@1.1.3",
                                    "name": "color-name",
                                    "escapedName": "color-name",
                                    "rawSpec": "1.1.3",
                                    "saveSpec": "[Circular]",
                                    "fetchSpec": "1.1.3"
                                  },
                                  "_requiredBy": "[Circular]",
                                  "_resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
                                  "_spec": "1.1.3",
                                  "_where": "/path/to/project/packages/shared",
                                  "author": "[Circular]",
                                  "bugs": "[Circular]",
                                  "description": "A list of color names and its values",
                                  "homepage": "https://github.com/dfcreative/color-name",
                                  "keywords": "[Circular]",
                                  "license": "MIT",
                                  "main": "index.js",
                                  "name": "color-name",
                                  "repository": "[Circular]",
                                  "scripts": "[Circular]",
                                  "version": "1.1.3",
                                  "readme": "A JSON with color names and its values. Based on http://dev.w3.org/csswg/css-color/#named-colors.\r\n\r\n[![NPM](https://nodei.co/npm/color-name.png?mini=true)](https://nodei.co/npm/color-name/)\r\n\r\n\r\n```js\r\nvar colors = require('color-name');\r\ncolors.red //[255,0,0]\r\n```\r\n\r\n<a href=\"LICENSE\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0c/MIT_logo.svg\" width=\"120\"/></a>\r\n",
                                  "readmeFilename": "README.md",
                                  "dependencies": {},
                                  "devDependencies": "[Circular]",
                                  "optionalDependencies": "[Circular]",
                                  "_dependencies": "[Circular]",
                                  "path": "/path/to/project/packages/shared/node_modules/color-name",
                                  "error": "[Circular]",
                                  "extraneous": false,
                                  "_deduped": "color-name"
                                },
                                "simple-swizzle": {
                                  "_args": [
                                    [
                                      "simple-swizzle@0.2.2",
                                      "/path/to/project/packages/shared"
                                    ],
                                    [
                                      "simple-swizzle@0.2.2",
                                      "/path/to/project/packages/shared"
                                    ]
                                  ],
                                  "_from": "simple-swizzle@0.2.2",
                                  "_id": "simple-swizzle@0.2.2",
                                  "_integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
                                  "_location": "/simple-swizzle",
                                  "_phantomChildren": {},
                                  "_requested": {
                                    "type": "version",
                                    "registry": true,
                                    "raw": "simple-swizzle@0.2.2",
                                    "name": "simple-swizzle",
                                    "escapedName": "simple-swizzle",
                                    "rawSpec": "0.2.2",
                                    "saveSpec": "[Circular]",
                                    "fetchSpec": "0.2.2"
                                  },
                                  "_requiredBy": [
                                    "/color-string"
                                  ],
                                  "_resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
                                  "_spec": "0.2.2",
                                  "_where": "/path/to/project/packages/shared",
                                  "author": {
                                    "name": "Qix",
                                    "url": "http://github.com/qix-"
                                  },
                                  "bugs": {
                                    "url": "https://github.com/qix-/node-simple-swizzle/issues"
                                  },
                                  "dependencies": {
                                    "is-arrayish": {
                                      "_args": [
                                        [
                                          "is-arrayish@0.3.2",
                                          "/path/to/project/packages/shared"
                                        ],
                                        [
                                          "is-arrayish@0.3.2",
                                          "/path/to/project/packages/shared"
                                        ]
                                      ],
                                      "_from": "is-arrayish@0.3.2",
                                      "_id": "is-arrayish@0.3.2",
                                      "_integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
                                      "_location": "/is-arrayish",
                                      "_phantomChildren": {},
                                      "_requested": {
                                        "type": "version",
                                        "registry": true,
                                        "raw": "is-arrayish@0.3.2",
                                        "name": "is-arrayish",
                                        "escapedName": "is-arrayish",
                                        "rawSpec": "0.3.2",
                                        "saveSpec": "[Circular]",
                                        "fetchSpec": "0.3.2"
                                      },
                                      "_requiredBy": [
                                        "/simple-swizzle"
                                      ],
                                      "_resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
                                      "_spec": "0.3.2",
                                      "_where": "/path/to/project/packages/shared",
                                      "author": {
                                        "name": "Qix",
                                        "url": "http://github.com/qix-"
                                      },
                                      "bugs": {
                                        "url": "https://github.com/qix-/node-is-arrayish/issues"
                                      },
                                      "description": "Determines if an object can be used as an array",
                                      "devDependencies": {
                                        "@zeit/eslint-config-node": "^0.3.0",
                                        "@zeit/git-hooks": "^0.1.4",
                                        "coffeescript": "^2.3.1",
                                        "coveralls": "^3.0.1",
                                        "eslint": "^4.19.1",
                                        "istanbul": "^0.4.5",
                                        "mocha": "^5.2.0",
                                        "should": "^13.2.1"
                                      },
                                      "eslintConfig": {
                                        "extends": [
                                          "@zeit/eslint-config-node"
                                        ]
                                      },
                                      "git": {
                                        "pre-commit": "lint-staged"
                                      },
                                      "homepage": "https://github.com/qix-/node-is-arrayish#readme",
                                      "keywords": [
                                        "is",
                                        "array",
                                        "duck",
                                        "type",
                                        "arrayish",
                                        "similar",
                                        "proto",
                                        "prototype",
                                        "type"
                                      ],
                                      "license": "MIT",
                                      "name": "is-arrayish",
                                      "repository": {
                                        "type": "git",
                                        "url": "git+https://github.com/qix-/node-is-arrayish.git"
                                      },
                                      "scripts": {
                                        "lint": "zeit-eslint --ext .jsx,.js .",
                                        "lint-staged": "git diff --diff-filter=ACMRT --cached --name-only '*.js' '*.jsx' | xargs zeit-eslint",
                                        "test": "mocha --require coffeescript/register ./test/**/*.coffee"
                                      },
                                      "version": "0.3.2",
                                      "readme": "# node-is-arrayish [![Travis-CI.org Build Status](https://img.shields.io/travis/Qix-/node-is-arrayish.svg?style=flat-square)](https://travis-ci.org/Qix-/node-is-arrayish) [![Coveralls.io Coverage Rating](https://img.shields.io/coveralls/Qix-/node-is-arrayish.svg?style=flat-square)](https://coveralls.io/r/Qix-/node-is-arrayish)\n> Determines if an object can be used like an Array\n\n## Example\n```javascript\nvar isArrayish = require('is-arrayish');\n\nisArrayish([]); // true\nisArrayish({__proto__: []}); // true\nisArrayish({}); // false\nisArrayish({length:10}); // false\n```\n\n## License\nLicensed under the [MIT License](http://opensource.org/licenses/MIT).\nYou can find a copy of it in [LICENSE](LICENSE).\n",
                                      "readmeFilename": "README.md",
                                      "dependencies": {},
                                      "optionalDependencies": {},
                                      "_dependencies": {},
                                      "path": "/path/to/project/packages/shared/node_modules/is-arrayish",
                                      "error": "[Circular]",
                                      "extraneous": false
                                    }
                                  },
                                  "description": "Simply swizzle your arguments",
                                  "devDependencies": {
                                    "coffee-script": "^1.9.3",
                                    "coveralls": "^2.11.2",
                                    "istanbul": "^0.3.17",
                                    "mocha": "^2.2.5",
                                    "should": "^7.0.1",
                                    "xo": "^0.7.1"
                                  },
                                  "files": [
                                    "index.js"
                                  ],
                                  "homepage": "https://github.com/qix-/node-simple-swizzle#readme",
                                  "keywords": [
                                    "argument",
                                    "arguments",
                                    "swizzle",
                                    "swizzling",
                                    "parameter",
                                    "parameters",
                                    "mixed",
                                    "array"
                                  ],
                                  "license": "MIT",
                                  "name": "simple-swizzle",
                                  "repository": {
                                    "type": "git",
                                    "url": "git+https://github.com/qix-/node-simple-swizzle.git"
                                  },
                                  "scripts": {
                                    "pretest": "xo",
                                    "test": "mocha --compilers coffee:coffee-script/register"
                                  },
                                  "version": "0.2.2",
                                  "readme": "# simple-swizzle [![Travis-CI.org Build Status](https://img.shields.io/travis/Qix-/node-simple-swizzle.svg?style=flat-square)](https://travis-ci.org/Qix-/node-simple-swizzle) [![Coveralls.io Coverage Rating](https://img.shields.io/coveralls/Qix-/node-simple-swizzle.svg?style=flat-square)](https://coveralls.io/r/Qix-/node-simple-swizzle)\n\n> [Swizzle](https://en.wikipedia.org/wiki/Swizzling_(computer_graphics)) your function arguments; pass in mixed arrays/values and get a clean array\n\n## Usage\n\n```js\nvar swizzle = require('simple-swizzle');\n\nfunction myFunc() {\n\tvar args = swizzle(arguments);\n\t// ...\n\treturn args;\n}\n\nmyFunc(1, [2, 3], 4); // [1, 2, 3, 4]\nmyFunc(1, 2, 3, 4);   // [1, 2, 3, 4]\nmyFunc([1, 2, 3, 4]); // [1, 2, 3, 4]\n```\n\nFunctions can also be wrapped to automatically swizzle arguments and be passed\nthe resulting array.\n\n```js\nvar swizzle = require('simple-swizzle');\n\nvar swizzledFn = swizzle.wrap(function (args) {\n\t// ...\n\treturn args;\n});\n\nswizzledFn(1, [2, 3], 4); // [1, 2, 3, 4]\nswizzledFn(1, 2, 3, 4);   // [1, 2, 3, 4]\nswizzledFn([1, 2, 3, 4]); // [1, 2, 3, 4]\n```\n\n## License\nLicensed under the [MIT License](http://opensource.org/licenses/MIT).\nYou can find a copy of it in [LICENSE](LICENSE).\n",
                                  "readmeFilename": "README.md",
                                  "optionalDependencies": {},
                                  "_dependencies": {
                                    "is-arrayish": "^0.3.1"
                                  },
                                  "path": "/path/to/project/packages/shared/node_modules/simple-swizzle",
                                  "error": "[Circular]",
                                  "extraneous": false
                                }
                              },
                              "description": "Parser and generator for CSS color strings",
                              "devDependencies": {
                                "xo": "^0.12.1"
                              },
                              "files": [
                                "index.js"
                              ],
                              "homepage": "https://github.com/Qix-/color-string#readme",
                              "keywords": [
                                "color",
                                "colour",
                                "rgb",
                                "css"
                              ],
                              "license": "MIT",
                              "name": "color-string",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/Qix-/color-string.git"
                              },
                              "scripts": {
                                "pretest": "xo",
                                "test": "node test/basic.js"
                              },
                              "version": "1.5.3",
                              "xo": {
                                "rules": {
                                  "no-cond-assign": 0,
                                  "operator-linebreak": 0
                                }
                              },
                              "readme": "# color-string\n\n[![Build Status](https://travis-ci.org/Qix-/color-string.svg?branch=master)](https://travis-ci.org/Qix-/color-string)\n\n> library for parsing and generating CSS color strings.\n\n## Install\n\nWith [npm](http://npmjs.org/):\n\n```console\n$ npm install color-string\n```\n\n## Usage\n\n### Parsing\n\n```js\ncolorString.get('#FFF')                          // {model: 'rgb', value: [255, 255, 255, 1]}\ncolorString.get('#FFFA')                         // {model: 'rgb', value: [255, 255, 255, 0.67]}\ncolorString.get('#FFFFFFAA')                     // {model: 'rgb', value: [255, 255, 255, 0.67]}\ncolorString.get('hsl(360, 100%, 50%)')           // {model: 'hsl', value: [0, 100, 50, 1]}\ncolorString.get('hwb(60, 3%, 60%)')              // {model: 'hwb', value: [60, 3, 60, 1]}\n\ncolorString.get.rgb('#FFF')                      // [255, 255, 255, 1]\ncolorString.get.rgb('blue')                      // [0, 0, 255, 1]\ncolorString.get.rgb('rgba(200, 60, 60, 0.3)')    // [200, 60, 60, 0.3]\ncolorString.get.rgb('rgb(200, 200, 200)')        // [200, 200, 200, 1]\n\ncolorString.get.hsl('hsl(360, 100%, 50%)')       // [0, 100, 50, 1]\ncolorString.get.hsl('hsla(360, 60%, 50%, 0.4)')  // [0, 60, 50, 0.4]\n\ncolorString.get.hwb('hwb(60, 3%, 60%)')          // [60, 3, 60, 1]\ncolorString.get.hwb('hwb(60, 3%, 60%, 0.6)')     // [60, 3, 60, 0.6]\n\ncolorString.get.rgb('invalid color string')      // null\n```\n\n### Generation\n\n```js\ncolorString.to.hex([255, 255, 255])     // \"#FFFFFF\"\ncolorString.to.hex([0, 0, 255, 0.4])    // \"#0000FF66\"\ncolorString.to.hex([0, 0, 255], 0.4)    // \"#0000FF66\"\ncolorString.to.rgb([255, 255, 255])     // \"rgb(255, 255, 255)\"\ncolorString.to.rgb([0, 0, 255, 0.4])    // \"rgba(0, 0, 255, 0.4)\"\ncolorString.to.rgb([0, 0, 255], 0.4)    // \"rgba(0, 0, 255, 0.4)\"\ncolorString.to.rgb.percent([0, 0, 255]) // \"rgb(0%, 0%, 100%)\"\ncolorString.to.keyword([255, 255, 0])   // \"yellow\"\ncolorString.to.hsl([360, 100, 100])     // \"hsl(360, 100%, 100%)\"\ncolorString.to.hwb([50, 3, 15])         // \"hwb(50, 3%, 15%)\"\n\n// all functions also support swizzling\ncolorString.to.rgb(0, [0, 255], 0.4)    // \"rgba(0, 0, 255, 0.4)\"\ncolorString.to.rgb([0, 0], [255], 0.4)  // \"rgba(0, 0, 255, 0.4)\"\ncolorString.to.rgb([0], 0, [255, 0.4])  // \"rgba(0, 0, 255, 0.4)\"\n```\n",
                              "readmeFilename": "README.md",
                              "optionalDependencies": {},
                              "_dependencies": {
                                "color-name": "^1.0.0",
                                "simple-swizzle": "^0.2.2"
                              },
                              "path": "/path/to/project/packages/shared/node_modules/color-string",
                              "error": "[Circular]",
                              "extraneous": false
                            }
                          },
                          "description": "Color conversion and manipulation with CSS string support",
                          "devDependencies": {
                            "mocha": "^2.2.5",
                            "xo": "^0.12.1"
                          },
                          "files": [
                            "CHANGELOG.md",
                            "LICENSE",
                            "index.js"
                          ],
                          "homepage": "https://github.com/Qix-/color#readme",
                          "keywords": [
                            "color",
                            "colour",
                            "css"
                          ],
                          "license": "MIT",
                          "name": "color",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/Qix-/color.git"
                          },
                          "scripts": {
                            "pretest": "xo",
                            "test": "mocha"
                          },
                          "version": "3.0.0",
                          "xo": {
                            "rules": {
                              "no-cond-assign": 0,
                              "new-cap": 0
                            }
                          },
                          "readme": "# color [![Build Status](https://travis-ci.org/Qix-/color.svg?branch=master)](https://travis-ci.org/Qix-/color)\n\n> JavaScript library for immutable color conversion and manipulation with support for CSS color strings.\n\n```js\nvar color = Color('#7743CE').alpha(0.5).lighten(0.5);\nconsole.log(color.hsl().string());  // 'hsla(262, 59%, 81%, 0.5)'\n\nconsole.log(color.cmyk().round().array());  // [ 16, 25, 0, 8, 0.5 ]\n\nconsole.log(color.ansi256().object());  // { ansi256: 183, alpha: 0.5 }\n```\n\n## Install\n```console\n$ npm install color\n```\n\n## Usage\n```js\nvar Color = require('color');\n```\n\n### Constructors\n```js\nvar color = Color('rgb(255, 255, 255)')\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color.rgb(255, 255, 255)\nvar color = Color.rgb([255, 255, 255])\n```\n\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturationl` (hsl), `saturationv` (hsv), `lightness`, `whiteness`, `blackness`, `cyan`, `magenta`, `yellow`, `black`\n\nString constructors are handled by [color-string](https://www.npmjs.com/package/color-string)\n\n### Getters\n```js\ncolor.hsl();\n```\nConvert a color to a different space (`hsl()`, `cmyk()`, etc.).\n\n```js\ncolor.object(); // {r: 255, g: 255, b: 255}\n```\nGet a hash of the color value. Reflects the color's current model (see above).\n\n```js\ncolor.rgb().array()  // [255, 255, 255]\n```\nGet an array of the values with `array()`. Reflects the color's current model (see above).\n\n```js\ncolor.rgbNumber() // 16777215 (0xffffff)\n```\nGet the rgb number value.\n\n```js\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n```js\ncolor.hsl().string()  // 'hsl(320, 50%, 100%)'\n```\n\nCalling `.string()` with a number rounds the numbers to that decimal place. It defaults to 1.\n\n### Luminosity\n```js\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```js\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```js\ncolor.isLight();  // true\ncolor.isDark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n```js\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.grayscale()      // #5CBF54 -> #969696\n\ncolor.whiten(0.5)      // hwb(100, 50%, 50%) -> hwb(100, 75%, 50%)\ncolor.blacken(0.5)     // hwb(100, 50%, 50%) -> hwb(100, 50%, 75%)\n\ncolor.fade(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))        // cyan -> rgb(128, 255, 128)\ncolor.mix(Color(\"yellow\"), 0.3)   // cyan -> rgb(77, 255, 179)\n\n// chaining\ncolor.green(100).grayscale().lighten(0.6)\n```\n\n## Propers\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "color-convert": "^1.9.1",
                            "color-string": "^1.5.2"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/color",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "text-hex": {
                          "_args": [
                            [
                              "text-hex@1.0.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "text-hex@1.0.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "text-hex@1.0.0",
                          "_id": "text-hex@1.0.0",
                          "_integrity": "sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==",
                          "_location": "/text-hex",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "text-hex@1.0.0",
                            "name": "text-hex",
                            "escapedName": "text-hex",
                            "rawSpec": "1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.0"
                          },
                          "_requiredBy": [
                            "/colorspace"
                          ],
                          "_resolved": "https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz",
                          "_spec": "1.0.0",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Arnout Kazemier"
                          },
                          "bugs": {
                            "url": "https://github.com/3rd-Eden/text-hex/issues"
                          },
                          "description": "Generate a hex color from the given text",
                          "devDependencies": {
                            "assume": "2.1.x",
                            "mocha": "5.2.x",
                            "pre-commit": "1.2.x"
                          },
                          "homepage": "https://github.com/3rd-Eden/text-hex",
                          "keywords": [
                            "css",
                            "color",
                            "hex",
                            "text"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "text-hex",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/3rd-Eden/text-hex.git"
                          },
                          "scripts": {
                            "test": "mocha --reporter spec --ui bdd test.js"
                          },
                          "version": "1.0.0",
                          "readme": "# text-hex\n\nTransforms a given piece of text to a hex color.\n\n## Install\n\n```\nnpm install text-hex\n```\n\n## Usage\n\n```js\nvar hex = require('text-hex');\nconsole.log(hex('foo'));\n```\n\n## License\n\nMIT\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/text-hex",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Generate HEX colors for a given namespace.",
                      "devDependencies": {
                        "assume": "2.1.x",
                        "mocha": "5.2.x",
                        "pre-commit": "1.2.x"
                      },
                      "homepage": "https://github.com/3rd-Eden/colorspace",
                      "keywords": [
                        "namespace",
                        "color",
                        "hex",
                        "colorize",
                        "name",
                        "space",
                        "colorspace"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "colorspace",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/3rd-Eden/colorspace.git"
                      },
                      "scripts": {
                        "test": "mocha test.js"
                      },
                      "version": "1.1.2",
                      "readme": "# colorspace\n\nColorspace is a simple module which generates HEX color codes for namespaces.\nThe base color is decided by the first part of the namespace. All other parts of\nthe namespace alters the color tone. This way you can visually see which\nnamespaces belong together and which does not.\n\n## Installation\n\nThe module is released in the public npm registry and can be installed by\nrunning:\n\n```\nnpm install --save colorspace\n```\n\n## Usage\n\nWe assume that you've already required the module using the following code:\n\n```js\n'use strict';\n\nvar colorspace = require('colorspace');\n```\n\nThe returned function accepts 2 arguments:\n\n1. `namespace` **string**, The namespace that needs to have a HEX color\n   generated.\n2. `delimiter`, **string**, **optional**, Delimiter to find the different\n   sections of the namespace. Defaults to `:`\n\n#### Example\n\n```js\nconsole.log(colorspace('color')) // #6b4b3a\nconsole.log(colorspace('color:space')) // #796B67\n```\n\n## License\n\nMIT\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "color": "3.0.x",
                        "text-hex": "1.0.x"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/colorspace",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "enabled": {
                      "_args": [
                        [
                          "enabled@1.0.2",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "enabled@1.0.2",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "enabled@1.0.2",
                      "_id": "enabled@1.0.2",
                      "_integrity": "sha1-ll9lE9LC0cX0ZStkouM5ZGf8L5M=",
                      "_location": "/enabled",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "enabled@1.0.2",
                        "name": "enabled",
                        "escapedName": "enabled",
                        "rawSpec": "1.0.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.2"
                      },
                      "_requiredBy": [
                        "/diagnostics"
                      ],
                      "_resolved": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
                      "_spec": "1.0.2",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Arnout Kazemier"
                      },
                      "bugs": {
                        "url": "https://github.com/bigpipe/enabled/issues"
                      },
                      "dependencies": {
                        "env-variable": {
                          "_args": [
                            [
                              "env-variable@0.0.6",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "env-variable@0.0.6",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "env-variable@0.0.6",
                          "_id": "env-variable@0.0.6",
                          "_integrity": "sha512-bHz59NlBbtS0NhftmR8+ExBEekE7br0e01jw+kk0NDro7TtZzBYZ5ScGPs3OmwnpyfHTHOtr1Y6uedCdrIldtg==",
                          "_location": "/env-variable",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "env-variable@0.0.6",
                            "name": "env-variable",
                            "escapedName": "env-variable",
                            "rawSpec": "0.0.6",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "0.0.6"
                          },
                          "_requiredBy": [
                            "/enabled"
                          ],
                          "_resolved": "https://registry.npmjs.org/env-variable/-/env-variable-0.0.6.tgz",
                          "_spec": "0.0.6",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Arnout Kazemier"
                          },
                          "bugs": {
                            "url": "https://github.com/3rd-Eden/env-variable/issues"
                          },
                          "description": "Cross platform environment variables with process.env, window.name, location.hash and localStorage fallbacks",
                          "devDependencies": {
                            "assume": "^2.0.1",
                            "istanbul": "^0.4.5",
                            "mocha": "^5.1.1"
                          },
                          "homepage": "https://github.com/3rd-Eden/env-variable",
                          "keywords": [
                            "browser",
                            "env",
                            "environment variable",
                            "environment",
                            "fallback",
                            "location.hash",
                            "process.env",
                            "variable",
                            "window.name"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "env-variable",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/3rd-Eden/env-variable.git"
                          },
                          "scripts": {
                            "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
                            "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
                            "test": "mocha test.js",
                            "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
                            "watch": "mocha --watch test.js"
                          },
                          "version": "0.0.6",
                          "readme": "# env-variable\n\nA cross platform `env-variable` for browsers and node. Of course, browsers\ndoesn't have environment variables but we do have hashtags and localStorage\nwhich we will use as fallback.\n\n### hashtags\n\nThis is a really easy way of adding some trigger some environment variables that\nyou might use for debugging. We assume that the hashtag (#) contains\na query string who's key is the name and the value.. the value.\n\n### localStorage\n\nIf you want more persisting env variables you can set a query string of env\nvariables in localStorage. It will attempt to use the `env` variable.\n\n## Installation\n\nThis module is written for node and browserify and can be installed using npm:\n\n```\nnpm install --save env-variable\n```\n\n## Usage\n\nThis module exposes a node / `module.exports` interface.\n\n```js\nvar env = require('env-variable')();\n```\n\nAs you can see from the example above we execute the required module. You can\nalternately store it but I don't assume this a common pattern. When you execute\nthe function it returns an object with all the env variables.\n\nWhen you execute the function you can alternately pass it an object which will\nbe seen as the default env variables and all fallbacks and `process.env` will be\nmerged in to this object.\n\n```js\nvar env = require('env-variable')({\n  foo: 'bar',\n  NODE_ENV: 'production'\n});\n```\n\nOh, in `env-variable` we don't really care how you write your env variables. We\nautomatically add an extra lower case version of the variables so you can access\neverything in one consistent way.\n\nAnd that's basically everything you need to know. *random high fives*.\n\n## License\n\n[MIT](LICENSE)\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/env-variable",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Check if a certain debug flag is enabled.",
                      "devDependencies": {
                        "assume": "1.3.x",
                        "istanbul": "0.4.x",
                        "mocha": "2.3.x",
                        "pre-commit": "1.1.x"
                      },
                      "homepage": "https://github.com/bigpipe/enabled#readme",
                      "keywords": [
                        "enabled",
                        "debug",
                        "diagnostics",
                        "flag",
                        "env",
                        "variable",
                        "localstorage"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "enabled",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/bigpipe/enabled.git"
                      },
                      "scripts": {
                        "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
                        "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
                        "test": "mocha test.js",
                        "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
                        "watch": "mocha --watch test.js"
                      },
                      "version": "1.0.2",
                      "readme": "# enabled\n\n[![From bigpipe.io][from]](http://bigpipe.io)[![Version npm][version]](http://browsenpm.org/package/enabled)[![Build Status][build]](https://travis-ci.org/bigpipe/enabled)[![Dependencies][david]](https://david-dm.org/bigpipe/enabled)[![Coverage Status][cover]](https://coveralls.io/r/bigpipe/enabled?branch=master)\n\n[from]: https://img.shields.io/badge/from-bigpipe.io-9d8dff.svg?style=flat-square\n[version]: http://img.shields.io/npm/v/enabled.svg?style=flat-square\n[build]: http://img.shields.io/travis/bigpipe/enabled/master.svg?style=flat-square\n[david]: https://img.shields.io/david/bigpipe/enabled.svg?style=flat-square\n[cover]: http://img.shields.io/coveralls/bigpipe/enabled/master.svg?style=flat-square\n\nEnabled is a small utility that can check if certain namespace are enabled by\nenvironment variables which are automatically transformed to regular expressions\nfor matching.\n\n## Installation\n\nThe module is release in the public npm registry and can be used in browsers and\nservers as it uses plain ol ES3 to make the magic work.\n\n```\nnpm install --save enabled\n```\n\n## Usage\n\nFirst of all make sure you've required the module using:\n\n```js\n'use strict';\n\nvar enabled = require('enabled');\n```\n\nThe returned `enabled` function accepts 2 arguments.\n\n1. `name` **string**, The namespace that should match.\n2. `variables` **array**, **optional**, Names of the `env` variable that it\n   should use for matching. If no argument is supplied it will default to\n   `diagnostics` and `debug`.\n\n#### Examples\n\n```js\nprocess.env.DEBUG = 'foo';\nenabled('foo') // true;\nenabled('bar') // false;\n\n// can use wildcards\nprocess.env.DEBUG = 'foob*';\n\nenabled('foobar') // true;\nenabled('barfoo') // false;\n\nprocess.env.DEBUG = 'foobar,-shizzle,nizzle';\n\nenabled('foobar') // true;\nenabled('shizzle-my-nizzle') // false;\nenabled('nizzle') // true;\n```\n\n## License\n\nMIT\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "env-variable": "0.0.x"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/enabled",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "kuler": {
                      "_args": [
                        [
                          "kuler@1.0.1",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "kuler@1.0.1",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "kuler@1.0.1",
                      "_id": "kuler@1.0.1",
                      "_integrity": "sha512-J9nVUucG1p/skKul6DU3PUZrhs0LPulNaeUOox0IyXDi8S4CztTHs1gQphhuZmzXG7VOQSf6NJfKuzteQLv9gQ==",
                      "_location": "/kuler",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "kuler@1.0.1",
                        "name": "kuler",
                        "escapedName": "kuler",
                        "rawSpec": "1.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.0.1"
                      },
                      "_requiredBy": [
                        "/diagnostics"
                      ],
                      "_resolved": "https://registry.npmjs.org/kuler/-/kuler-1.0.1.tgz",
                      "_spec": "1.0.1",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Arnout Kazemier"
                      },
                      "bugs": {
                        "url": "https://github.com/3rd-Eden/kuler/issues"
                      },
                      "dependencies": {
                        "colornames": {
                          "_args": [
                            [
                              "colornames@1.1.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "colornames@1.1.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "colornames@1.1.1",
                          "_id": "colornames@1.1.1",
                          "_integrity": "sha1-+IiQMGhcfE/54qVZ9Qd+t2qBb5Y=",
                          "_location": "/colornames",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "colornames@1.1.1",
                            "name": "colornames",
                            "escapedName": "colornames",
                            "rawSpec": "1.1.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.1.1"
                          },
                          "_requiredBy": [
                            "/kuler"
                          ],
                          "_resolved": "https://registry.npmjs.org/colornames/-/colornames-1.1.1.tgz",
                          "_spec": "1.1.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Tim Oxley"
                          },
                          "bugs": {
                            "url": "https://github.com/timoxley/colornames/issues"
                          },
                          "description": "Map color names to HEX color values.",
                          "devDependencies": {
                            "tape": "^4.4.0"
                          },
                          "directories": {
                            "example": "example"
                          },
                          "homepage": "https://github.com/timoxley/colornames#readme",
                          "keywords": [
                            "color",
                            "colour",
                            "names",
                            "css",
                            "hex",
                            "rgb",
                            "convert"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "colornames",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/timoxley/colornames.git"
                          },
                          "scripts": {
                            "test": "node test.js"
                          },
                          "version": "1.1.1",
                          "readme": "# colornames\n\nConvert color names to HEX color values.\n\n[![NPM](https://nodei.co/npm/colornames.png)](https://nodei.co/npm/colornames/)\n\n[![Build Status](https://travis-ci.org/timoxley/colornames.png?branch=master)](https://travis-ci.org/timoxley/colornames)\n[![Dependency Status](https://david-dm.org/timoxley/colornames.png)](https://david-dm.org/timoxley/colornames)\n\n\n\n## Installation\n\n### Component\n    $ component install timoxley/colornames\n\n### Node/Browserify\n    $ npm install colornames\n\n## Example\n\n```js\nvar toHex = require('colornames')\n```\n\n### VGA color names\n```js\ntoHex('red') // => \"#FF0000\"\ntoHex('blue') // => \"#0000FF\"\n```\n\n### CSS color names\n```js\ntoHex('lightsalmon') // => \"#FFA07A\"\ntoHex('mediumvioletred') // => \"#C71585\"\n```\n\n### Get meta data about a color\n```js\ntoHex.get('red')\n// =>\n{\n  name: \"red\",\n  css: true,\n  value: \"#FF0000\",\n  vga: true\n}\n```\n\n### Conversion is case-insensitive\n```js\ntoHex('Blue') // => \"#0000FF\"\ntoHex('BLUE') // => \"#0000FF\"\ntoHex('BlUe') // => \"#0000FF\"\n```\n\n## API\n\n### colornames(name)\nGet HEX code for a color name, or `undefined` if unknown.\n\n### .get(name)\nAll known data about color, including whether valid VGA or CSS color\nname.\n\n### .get.vga(name)\nHEX code for a color name, only if the color is a valid VGA color\nname.\n\n### .get.css(name)\nHEX code for a color name, only if the color is a valid CSS color\nname.\n\n###.all()\nGet all color names data.\n\n## License\n\n  MIT\n\n## Complete Color Map\n\n![example-color-table-](https://f.cloud.github.com/assets/43438/643981/f57948a0-d381-11e2-99fd-197c44065564.png)\n",
                          "readmeFilename": "Readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/colornames",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Color your terminal using CSS/hex color codes",
                      "devDependencies": {
                        "assume": "^2.0.1",
                        "mocha": "^5.1.1"
                      },
                      "homepage": "https://github.com/3rd-Eden/kuler",
                      "keywords": [
                        "kuler",
                        "ansi",
                        "color",
                        "colour",
                        "chalk",
                        "css",
                        "hex",
                        "rgb",
                        "rgv"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "kuler",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/3rd-Eden/kuler.git"
                      },
                      "scripts": {
                        "test": "mocha test.js"
                      },
                      "version": "1.0.1",
                      "readme": "# kuler\n\nKuler is small and nifty node module that allows you to create terminal based\ncolors using hex color codes, just like you're used to doing in your CSS. We're\nin a modern world now and terminals support more than 16 colors so we are stupid\nto not take advantage of this.\n\n## Installation\n\n```\nnpm install --save kuler\n```\n\n## Usage\n\nKuler provides a really low level API as we all have different opinions on how\nto build and write coloring libraries. To use it you first have to require it:\n\n```js\n'use strict';\n\nvar kuler = require('kuler');\n```\n\nThere are two different API's that you can use. A constructor based API which\nuses a `.style` method to color your text:\n\n```js\nvar str = kuler('foo').style('#FFF');\n```\n\nOr an alternate short version:\n\n```js\nvar str = kuler('foo', 'red');\n```\n\nThe color code sequence is automatically terminated at the end of the string so\nthe colors do no bleed to other pieces of text. So doing:\n\n```js\nconsole.log(kuler('red', 'red'), 'normal');\n```\n\nWill work without any issues.\n\n## License\n\n[MIT](LICENSE)\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "colornames": "^1.1.1"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/kuler",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Tools for debugging your node.js modules and event loop",
                  "devDependencies": {
                    "assume": "2.1.x",
                    "mocha": "5.2.x",
                    "pre-commit": "1.2.x"
                  },
                  "homepage": "https://github.com/bigpipe/diagnostics",
                  "keywords": [
                    "debug",
                    "debugger",
                    "debugging",
                    "diagnostic",
                    "diagnostics",
                    "event",
                    "loop",
                    "metrics",
                    "stats"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "diagnostics",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/bigpipe/diagnostics.git"
                  },
                  "scripts": {
                    "test": "mocha --reporter spec --ui bdd test.js"
                  },
                  "version": "1.1.1",
                  "readme": "# Diagnostics\n\n[![Build Status](https://travis-ci.org/bigpipe/diagnostics.svg?branch=master)](https://travis-ci.org/bigpipe/diagnostics)\n\nDiagnostics is a small debugging library which allows you to output your debug\nlogs by setting an environment variable. The library works for server-side and\nclient-size applications so it's great for writing isomorphic JavaScript.\n\nThe debug output can be triggered using environment variables on the server and\nusing localStorage, hashtags and window.name on the browser. If the debug output\nis not enabled this module will result in an empty function causing the\nJavaScript compiler engines to remove it completely from your code so there is\nabsolutely no performance overhead or excuses left to not use logging in your\ncode!\n\n## Installation\n\nThe module is released in the public npm registry and can easily be installed by\nrunning.\n\n```\nnpm install --save diagnostics\n```\n\nFor client-side/front-end facing application we assume that you're using\n`browserify` as your build tool as the client code is bundled as the\n`browser.js` file in the root of this repository.\n\n## Usage\n\nWhen you require the module it returns a function that expect a name or prefix\nfor the debug messages. This prefix is what you use to enable specific debug\nmessages.\n\nThe exported function of the module accepts 2 arguments:\n\n1. `name` The namespace of the debug logger.\n2. `options` These options can only be applied to the server, not client code:\n  - `colors`: Enable or disable colors. Defaults to true if your stdout is a tty.\n  - `stream`: The stream instance we should write our logs to. We default to\n    `process.stdout` (unless you change the default using the `.to` method).\n\n```js\nvar debug = require('diagnostics')('foo');\ndebug('hello world %d', 12);\n```\n\nIn the example above you can see that we've created a new diagnostics function\ncalled debug. It's name is set to `foo`. So when we run this in Node.js using:\n\n```\nnode index.js\n```\n\nWe will see nothing in the console as the log messages are disabled by default.\nBut when set the `DEBUG` or `DIAGNOSTICS` environment variables to the name of\nthe debug function it will show up:\n\n```\nDIAGNOSTICS=foo node index.js\n\nhello world 12\n```\n\nYou can enable or disable specific diagnostic instances in the ENV variables by\nseparating them using a space or comma:\n\n```\nDEBUG=foo,-bar,primus:*\n```\n\nIn the example above you also see an example of a wild card `*`. This ensures\nthat anything after it or before it will be allowed.\n\nTo make it easier to see where the log messages are coming from they are\ncolored automatically based on the namespace you provide them. The deeper the\nnamespace, the lighter name will be toned as seen in the following output.\n\n![output](output.PNG)\n\n## Browser\n\nThe usage for browser is exactly the same as for node. You require the\n`diagnostics` method and supply it with a name argument. The big difference is\nthat no longer can use environment variables as these only work on the server.\nSo to go around that you can use:\n\n- **hashtag** The hashtag will be parsed using query string decoding. So if you\n  have an hash `#debug=foo` it will trigger all `foo` lines to be dumped to your\n  browser console.\n- **localStorage** We will search for a query string in either the `env` or\n  `debug` key of `localStorage`. We again assume that the value has query string\n  encode value which contains either `debug` or `diagnostics`.\n  `localStorage.env = 'diagnostics=foo'`.\n- **window.name** As `localStorage` is not available in all browsers, we provide\n  a fallback to `window.name` which can contain the same values as the\n  `localStorage`'s env/debug keys.\n\nUnlike the server, the output of the browser is not colored. The reason for this\nthat it would take a considerable amount of code. Which is not worth the benefit\nas you usually want your front-end code to be as small as possible.\n\n#### Multiple streams\n\n> Please note that this feature is server-side only as in the browser we can only\n> output to the console\n\nThe beauty of this logger is that it allows a custom stream where you can write\nthe data to. So you can just log it all to a separate server, database and what\nnot. But we don't just allow one stream we allow multiple streams so you might\nwant to log to disk AND just output it in your terminal. The only thing you need\nto do is either use:\n\n```js\nrequire('diagnostics').to([\n  stream1,\n  stream2\n]);\n```\n\nTo set multiple streams as the default streams or supply an array for the logger\nit self:\n\n```js\nvar debug = require('diagnostics')('example', { stream: [\n  stream1,\n  stream2\n]});\n\ndebug('foo');\n```\n\n## License\n\n[MIT](LICENSE.md)\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "colorspace": "1.1.x",
                    "enabled": "1.0.x",
                    "kuler": "1.0.x"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/diagnostics",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "is-stream": {
                  "_args": [
                    [
                      "is-stream@1.1.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "is-stream@1.1.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "is-stream@1.1.0",
                  "_id": "is-stream@1.1.0",
                  "_integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
                  "_location": "/is-stream",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "is-stream@1.1.0",
                    "name": "is-stream",
                    "escapedName": "is-stream",
                    "rawSpec": "1.1.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.1.0"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
                  "_spec": "1.1.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/is-stream/issues"
                  },
                  "description": "Check if something is a Node.js stream",
                  "devDependencies": {
                    "ava": "*",
                    "tempfile": "^1.1.0",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/is-stream#readme",
                  "keywords": [
                    "stream",
                    "type",
                    "streams",
                    "writable",
                    "readable",
                    "duplex",
                    "transform",
                    "check",
                    "detect",
                    "is"
                  ],
                  "license": "MIT",
                  "name": "is-stream",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/is-stream.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "1.1.0",
                  "readme": "# is-stream [![Build Status](https://travis-ci.org/sindresorhus/is-stream.svg?branch=master)](https://travis-ci.org/sindresorhus/is-stream)\n\n> Check if something is a [Node.js stream](https://nodejs.org/api/stream.html)\n\n\n## Install\n\n```\n$ npm install --save is-stream\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst isStream = require('is-stream');\n\nisStream(fs.createReadStream('unicorn.png'));\n//=> true\n\nisStream({});\n//=> false\n```\n\n\n## API\n\n### isStream(stream)\n\n#### isStream.writable(stream)\n\n#### isStream.readable(stream)\n\n#### isStream.duplex(stream)\n\n#### isStream.transform(stream)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/is-stream",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "logform": {
                  "_args": [
                    [
                      "logform@2.1.2",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "logform@2.1.2",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "logform@2.1.2",
                  "_id": "logform@2.1.2",
                  "_integrity": "sha512-+lZh4OpERDBLqjiwDLpAWNQu6KMjnlXH2ByZwCuSqVPJletw0kTWJf5CgSNAUKn1KUkv3m2cUz/LK8zyEy7wzQ==",
                  "_location": "/logform",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "logform@2.1.2",
                    "name": "logform",
                    "escapedName": "logform",
                    "rawSpec": "2.1.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.1.2"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/logform/-/logform-2.1.2.tgz",
                  "_spec": "2.1.2",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Charlie Robbins",
                    "email": "charlie.robbins@gmail.com"
                  },
                  "browser": "dist/browser.js",
                  "bugs": {
                    "url": "https://github.com/winstonjs/logform/issues"
                  },
                  "dependencies": {
                    "colors": {
                      "_args": [
                        [
                          "colors@1.4.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "colors@1.4.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "colors@1.4.0",
                      "_id": "colors@1.4.0",
                      "_integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
                      "_location": "/colors",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "colors@1.4.0",
                        "name": "colors",
                        "escapedName": "colors",
                        "rawSpec": "1.4.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.4.0"
                      },
                      "_requiredBy": [
                        "/logform"
                      ],
                      "_resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
                      "_spec": "1.4.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Marak Squires"
                      },
                      "bugs": {
                        "url": "https://github.com/Marak/colors.js/issues"
                      },
                      "contributors": [
                        {
                          "name": "DABH",
                          "url": "https://github.com/DABH"
                        }
                      ],
                      "description": "get colors in your node.js console",
                      "devDependencies": {
                        "eslint": "^5.2.0",
                        "eslint-config-google": "^0.11.0"
                      },
                      "engines": {
                        "node": ">=0.1.90"
                      },
                      "files": [
                        "examples",
                        "lib",
                        "LICENSE",
                        "safe.js",
                        "themes",
                        "index.d.ts",
                        "safe.d.ts"
                      ],
                      "homepage": "https://github.com/Marak/colors.js",
                      "keywords": [
                        "ansi",
                        "terminal",
                        "colors"
                      ],
                      "license": "MIT",
                      "main": "lib/index.js",
                      "name": "colors",
                      "repository": {
                        "type": "git",
                        "url": "git+ssh://git@github.com/Marak/colors.js.git"
                      },
                      "scripts": {
                        "lint": "eslint . --fix",
                        "test": "node tests/basic-test.js && node tests/safe-test.js"
                      },
                      "version": "1.4.0",
                      "readme": "# colors.js\n[![Build Status](https://travis-ci.org/Marak/colors.js.svg?branch=master)](https://travis-ci.org/Marak/colors.js)\n[![version](https://img.shields.io/npm/v/colors.svg)](https://www.npmjs.org/package/colors)\n[![dependencies](https://david-dm.org/Marak/colors.js.svg)](https://david-dm.org/Marak/colors.js)\n[![devDependencies](https://david-dm.org/Marak/colors.js/dev-status.svg)](https://david-dm.org/Marak/colors.js#info=devDependencies)\n\nPlease check out the [roadmap](ROADMAP.md) for upcoming features and releases.  Please open Issues to provide feedback, and check the `develop` branch for the latest bleeding-edge updates.\n\n## get color and style in your node.js console\n\n![Demo](https://raw.githubusercontent.com/Marak/colors.js/master/screenshots/colors.png)\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### bright text colors\n\n  - brightRed\n  - brightGreen\n  - brightYellow\n  - brightBlue\n  - brightMagenta\n  - brightCyan\n  - brightWhite\n\n### background colors\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n  - bgGray\n  - bgGrey\n\n### bright background colors\n\n  - bgBrightRed\n  - bgBrightGreen\n  - bgBrightYellow\n  - bgBrightBlue\n  - bgBrightMagenta\n  - bgBrightCyan\n  - bgBrightWhite\n\n### styles\n\n  - reset\n  - bold\n  - dim\n  - italic\n  - underline\n  - inverse\n  - hidden\n  - strikethrough\n\n### extras\n\n  - rainbow\n  - zebra\n  - america\n  - trap\n  - random\n\n\n## Usage\n\nBy popular demand, `colors` now ships with two types of usages!\n\nThe super nifty way\n\n```js\nvar colors = require('colors');\n\nconsole.log('hello'.green); // outputs green text\nconsole.log('i like cake and pies'.underline.red) // outputs red underlined text\nconsole.log('inverse the color'.inverse); // inverses the color\nconsole.log('OMG Rainbows!'.rainbow); // rainbow\nconsole.log('Run the trap'.trap); // Drops the bass\n\n```\n\nor a slightly less nifty way which doesn't extend `String.prototype`\n\n```js\nvar colors = require('colors/safe');\n\nconsole.log(colors.green('hello')); // outputs green text\nconsole.log(colors.red.underline('i like cake and pies')) // outputs red underlined text\nconsole.log(colors.inverse('inverse the color')); // inverses the color\nconsole.log(colors.rainbow('OMG Rainbows!')); // rainbow\nconsole.log(colors.trap('Run the trap')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don't want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Enabling/Disabling Colors\n\nThe package will auto-detect whether your terminal can use colors and enable/disable accordingly. When colors are disabled, the color functions do nothing. You can override this with a command-line flag:\n\n```bash\nnode myapp.js --no-color\nnode myapp.js --color=false\n\nnode myapp.js --color\nnode myapp.js --color=true\nnode myapp.js --color=always\n\nFORCE_COLOR=1 node myapp.js\n```\n\nOr in code:\n\n```javascript\nvar colors = require('colors');\ncolors.enable();\ncolors.disable();\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = 'Marak';\nconsole.log(colors.green('Hello %s'), name);\n// outputs -> 'Hello Marak'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = require('colors');\n\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(\"this is an error\".error);\n\n// outputs yellow text\nconsole.log(\"this is a warning\".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require('colors/safe');\n\n// set single property\nvar error = colors.red;\nerror('this is red');\n\n// set theme\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n\n```\n\n### Combining Colors\n\n```javascript\nvar colors = require('colors');\n\ncolors.setTheme({\n  custom: ['red', 'underline']\n});\n\nconsole.log('test'.custom);\n```\n\n*Protip: There is a secret undocumented style in `colors`. If you find the style you can summon him.*\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/colors",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "fast-safe-stringify": {
                      "_args": "[Circular]",
                      "_from": "fast-safe-stringify@2.0.7",
                      "_id": "fast-safe-stringify@2.0.7",
                      "_integrity": "sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA==",
                      "_location": "/fast-safe-stringify",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "fast-safe-stringify@2.0.7",
                        "name": "fast-safe-stringify",
                        "escapedName": "fast-safe-stringify",
                        "rawSpec": "2.0.7",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.0.7"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz",
                      "_spec": "2.0.7",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "contributors": "[Circular]",
                      "dependencies": {},
                      "description": "Safely and quickly serialize JavaScript objects",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/davidmarkclements/fast-safe-stringify#readme",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "index.js",
                      "name": "fast-safe-stringify",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "typings": "index",
                      "version": "2.0.7",
                      "readme": "# fast-safe-stringify\n\nSafe and fast serialization alternative to [JSON.stringify][].\n\nGracefully handles circular structures instead of throwing.\n\nProvides a deterministic (\"stable\") version as well that will also gracefully\nhandle circular structures. See the example below for further information.\n\n## Usage\n\nThe same as [JSON.stringify][].\n\n`stringify(value[, replacer[, space]])`\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { a: 1 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"a\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n\nfunction replacer(key, value) {\n  console.log('Key:', JSON.stringify(key), 'Value:', JSON.stringify(value))\n  // Remove the circular structure\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\nconst serialized = safeStringify(o, replacer, 2)\n// Key: \"\" Value: {\"a\":1,\"o\":\"[Circular]\"}\n// Key: \"a\" Value: 1\n// Key: \"o\" Value: \"[Circular]\"\nconsole.log(serialized)\n// {\n//  \"a\": 1\n// }\n```\n\nUsing the deterministic version also works the same:\n\n```js\nconst safeStringify = require('fast-safe-stringify')\nconst o = { b: 1, a: 0 }\no.o = o\n\nconsole.log(safeStringify(o))\n// '{\"b\":1,\"a\":0,\"o\":\"[Circular]\"}'\nconsole.log(safeStringify.stableStringify(o))\n// '{\"a\":0,\"b\":1,\"o\":\"[Circular]\"}'\nconsole.log(JSON.stringify(o))\n// TypeError: Converting circular structure to JSON\n```\n\nA faster and side-effect free implementation is available in the\n[safe-stable-stringify][] module. However it is still considered experimental\ndue to a new and more complex implementation.\n\n## Differences to JSON.stringify\n\nIn general the behavior is identical to [JSON.stringify][]. The [`replacer`][]\nand [`space`][] options are also available.\n\nA few exceptions exist to [JSON.stringify][] while using [`toJSON`][] or\n[`replacer`][]:\n\n### Regular safe stringify\n\n- Manipulating a circular structure of the passed in value in a `toJSON` or the\n  `replacer` is not possible! It is possible for any other value and property.\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\n### Deterministic (\"stable\") safe stringify\n\n- Manipulating the input object either in a [`toJSON`][] or the [`replacer`][]\n  function will not have any effect on the output. The output entirely relies on\n  the shape the input value had at the point passed to the stringify function!\n\n- In case a circular structure is detected and the [`replacer`][] is used it\n  will receive the string `[Circular]` as the argument instead of the circular\n  object itself.\n\nA side effect free variation without these limitations can be found as well\n([`safe-stable-stringify`][]). It is also faster than the current\nimplementation. It is still considered experimental due to a new and more\ncomplex implementation.\n\n## Benchmarks\n\nAlthough not JSON, the Node.js `util.inspect` method can be used for similar\npurposes (e.g. logging) and also handles circular references.\n\nHere we compare `fast-safe-stringify` with some alternatives:\n(Lenovo T450s with a i7-5600U CPU using Node.js 8.9.4)\n\n```md\nfast-safe-stringify:   simple object x 1,121,497 ops/sec ±0.75% (97 runs sampled)\nfast-safe-stringify:   circular      x 560,126 ops/sec ±0.64% (96 runs sampled)\nfast-safe-stringify:   deep          x 32,472 ops/sec ±0.57% (95 runs sampled)\nfast-safe-stringify:   deep circular x 32,513 ops/sec ±0.80% (92 runs sampled)\n\nutil.inspect:          simple object x 272,837 ops/sec ±1.48% (90 runs sampled)\nutil.inspect:          circular      x 116,896 ops/sec ±1.19% (95 runs sampled)\nutil.inspect:          deep          x 19,382 ops/sec ±0.66% (92 runs sampled)\nutil.inspect:          deep circular x 18,717 ops/sec ±0.63% (96 runs sampled)\n\njson-stringify-safe:   simple object x 233,621 ops/sec ±0.97% (94 runs sampled)\njson-stringify-safe:   circular      x 110,409 ops/sec ±1.85% (95 runs sampled)\njson-stringify-safe:   deep          x 8,705 ops/sec ±0.87% (96 runs sampled)\njson-stringify-safe:   deep circular x 8,336 ops/sec ±2.20% (93 runs sampled)\n```\n\nFor stable stringify comparisons, see the performance benchmarks in the\n[`safe-stable-stringify`][] readme.\n\n## Protip\n\nWhether `fast-safe-stringify` or alternatives are used: if the use case\nconsists of deeply nested objects without circular references the following\npattern will give best results.\nShallow or one level nested objects on the other hand will slow down with it.\nIt is entirely dependant on the use case.\n\n```js\nconst stringify = require('fast-safe-stringify')\n\nfunction tryJSONStringify (obj) {\n  try { return JSON.stringify(obj) } catch (_) {}\n}\n\nconst serializedString = tryJSONStringify(deep) || stringify(deep)\n```\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\n## License\n\nMIT\n\n[`replacer`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20replacer%20parameter\n[`safe-stable-stringify`]: https://github.com/BridgeAR/safe-stable-stringify\n[`space`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The%20space%20argument\n[`toJSON`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior\n[benchmark]: https://github.com/epoberezkin/fast-json-stable-stringify/blob/67f688f7441010cfef91a6147280cc501701e83b/benchmark\n[JSON.stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/fast-safe-stringify",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "fast-safe-stringify"
                    },
                    "fecha": {
                      "_args": [
                        [
                          "fecha@2.3.3",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "fecha@2.3.3",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "fecha@2.3.3",
                      "_id": "fecha@2.3.3",
                      "_integrity": "sha512-lUGBnIamTAwk4znq5BcqsDaxSmZ9nDVJaij6NvRt/Tg4R69gERA+otPKbS86ROw9nxVMw2/mp1fnaiWqbs6Sdg==",
                      "_location": "/fecha",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "fecha@2.3.3",
                        "name": "fecha",
                        "escapedName": "fecha",
                        "rawSpec": "2.3.3",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.3.3"
                      },
                      "_requiredBy": [
                        "/logform"
                      ],
                      "_resolved": "https://registry.npmjs.org/fecha/-/fecha-2.3.3.tgz",
                      "_spec": "2.3.3",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Taylor Hakes"
                      },
                      "bugs": {
                        "url": "https://github.com/taylorhakes/fecha/issues"
                      },
                      "description": "Date formatting and parsing",
                      "devDependencies": {
                        "eslint": "^2.4.0",
                        "nyc": "^5.6.0",
                        "painless": "^0.9.1",
                        "uglify-js": "^2.6.1"
                      },
                      "files": [
                        "fecha.js",
                        "fecha.min.js",
                        "fecha.d.ts"
                      ],
                      "homepage": "https://github.com/taylorhakes/fecha",
                      "keywords": [
                        "date",
                        "parse",
                        "moment",
                        "format",
                        "fecha",
                        "formatting"
                      ],
                      "license": "MIT",
                      "main": "fecha.js",
                      "name": "fecha",
                      "repository": {
                        "type": "git",
                        "url": "git+https://taylorhakes@github.com/taylorhakes/fecha.git"
                      },
                      "scripts": {
                        "build": "uglifyjs fecha.js -m -o fecha.min.js && uglifyjs fecha.strict.js -m -o fecha.strict.min.js",
                        "test": "eslint fecha.js fecha.strict.js && nyc --cache --reporter=text painless test.*"
                      },
                      "types": "./fecha.d.ts",
                      "version": "2.3.3",
                      "readme": "# fecha [![Build Status](https://travis-ci.org/taylorhakes/fecha.svg?branch=master)](https://travis-ci.org/taylorhakes/fecha)\n\nLightweight date formatting and parsing (~2KB). Meant to replace parsing and formatting functionality of moment.js.\n\n### NPM\n```\nnpm install fecha --save\n```\n\n### Fecha vs Moment\n<table class=\"table table-striped table-bordered\">\n  <tbody>\n    <tr>\n      <th></th>\n      <th>Fecha</th>\n      <th>Moment</th>\n    </tr>\n    <tr>\n      <td><b>Size (Min. and Gzipped)</b></td>\n      <td>2.1KBs</td>\n      <td>13.1KBs</td>\n    </tr>\n    <tr>\n      <td><b>Date Parsing</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>Date Formatting</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>Date Manipulation</b></td>\n      <td></td>\n      <td>&#x2713;</td>\n    </tr>\n    <tr>\n      <td><b>I18n Support</b></td>\n      <td>&#x2713;</td>\n      <td>&#x2713;</td>\n    </tr>\n  </tbody>\n</table>\n\n## Use it\n\n#### Formatting\n`fecha.format` accepts a Date object (or timestamp) and a string format and returns a formatted string. See below for\navailable format tokens.\n\nNote: `fecha.format` will throw an error when passed invalid parameters\n```js\nfecha.format(<Date Object>, <String Format>);\n\n// Custom formats\nfecha.format(new Date(2015, 10, 20), 'dddd MMMM Do, YYYY'); // 'Friday November 20th, 2015'\nfecha.format(new Date(1998, 5, 3, 15, 23, 10, 350), 'YYYY-MM-DD hh:mm:ss.SSS A'); // '1998-06-03 03:23:10.350 PM'\n\n// Named masks\nfecha.format(new Date(2015, 10, 20), 'mediumDate'); // 'Nov 20, 2015'\nfecha.format(new Date(2015, 2, 10, 5, 30, 20), 'shortTime'); // '05:30'\n\n// Literals\nfecha.format(new Date(2001, 2, 5, 6, 7, 2, 5), '[on] MM-DD-YYYY [at] HH:mm'); // 'on 03-05-2001 at 06:07'\n```\n\n#### Parsing\n`fecha.parse` accepts a Date string and a string format and returns a Date object. See below for available format tokens.\n\nNote: `fecha.parse` will throw an error when passed invalid parameters\n```js\n// Custom formats\nfecha.parse('February 3rd, 2014', 'MMMM Do, YYYY'); // new Date(2014, 1, 3)\nfecha.parse('10-12-10 14:11:12', 'YY-MM-DD HH:mm:ss'); // new Date(2010, 11, 10, 14, 11, 12)\n\n// Named masks\nfecha.parse('5/3/98', 'shortDate'); // new Date(1998, 4, 3)\nfecha.parse('November 4, 2005', 'longDate'); // new Date(2005, 10, 4)\n```\n\n#### i18n Support\n```js\n// Override fecha.i18n to support any language\nfecha.i18n = {\n\tdayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n\tdayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\tmonthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\tmonthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\tamPm: ['am', 'pm'],\n\t// D is the day of the month, function returns something like...  3rd or 11th\n\tDoFn: function (D) {\n\t\treturn D + [ 'th', 'st', 'nd', 'rd' ][ D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10 ];\n    }\n}\n```\n\n#### Custom Named Masks\n```js\nfecha.masks = {\n\tdefault: 'ddd MMM DD YYYY HH:mm:ss',\n\tshortDate: 'M/D/YY',\n\tmediumDate: 'MMM D, YYYY',\n\tlongDate: 'MMMM D, YYYY',\n\tfullDate: 'dddd, MMMM D, YYYY',\n\tshortTime: 'HH:mm',\n\tmediumTime: 'HH:mm:ss',\n\tlongTime: 'HH:mm:ss.SSS'\n};\n\n// Create a new mask\nfecha.masks.myMask = 'HH:mm:ss YY/MM/DD';\n\n// Use it\nfecha.format(new Date(2014, 5, 6, 14, 10, 45), 'myMask'); // '14:10:45 14/06/06'\n```\n\n### Formatting Tokens\n<table class=\"table table-striped table-bordered\">\n  <tbody>\n    <tr>\n      <th></th>\n      <th>Token</th>\n      <th>Output</th>\n    </tr>\n    <tr>\n      <td><b>Month</b></td>\n      <td>M</td>\n      <td>1 2 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MM</td>\n      <td>01 02 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MMM</td>\n      <td>Jan Feb ... Nov Dec</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>MMMM</td>\n      <td>January February ... November December</td>\n    </tr>\n    <tr>\n      <td><b>Day of Month</b></td>\n      <td>D</td>\n      <td>1 2 ... 30 31</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>Do</td>\n      <td>1st 2nd ... 30th 31st</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>DD</td>\n      <td>01 02 ... 30 31</td>\n    </tr>\n    <tr>\n      <td><b>Day of Week</b></td>\n      <td>d</td>\n      <td>0 1 ... 5 6</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>ddd</td>\n      <td>Sun Mon ... Fri Sat</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>dddd</td>\n      <td>Sunday Monday ... Friday Saturday</td>\n    </tr>\n    <tr>\n      <td><b>Year</b></td>\n      <td>YY</td>\n      <td>70 71 ... 29 30</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>YYYY</td>\n      <td>1970 1971 ... 2029 2030</td>\n    </tr>\n    <tr>\n      <td><b>AM/PM</b></td>\n      <td>A</td>\n      <td>AM PM</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>a</td>\n      <td>am pm</td>\n    </tr>\n    <tr>\n      <td><b>Hour</b></td>\n      <td>H</td>\n      <td>0 1 ... 22 23</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>HH</td>\n      <td>00 01 ... 22 23</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>h</td>\n      <td>1 2 ... 11 12</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>hh</td>\n      <td>01 02 ... 11 12</td>\n    </tr>\n    <tr>\n      <td><b>Minute</b></td>\n      <td>m</td>\n      <td>0 1 ... 58 59</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>mm</td>\n      <td>00 01 ... 58 59</td>\n    </tr>\n    <tr>\n      <td><b>Second</b></td>\n      <td>s</td>\n      <td>0 1 ... 58 59</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>ss</td>\n      <td>00 01 ... 58 59</td>\n    </tr>\n    <tr>\n      <td><b>Fractional Second</b></td>\n      <td>S</td>\n      <td>0 1 ... 8 9</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>SS</td>\n      <td>0 1 ... 98 99</td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>SSS</td>\n      <td>0 1 ... 998 999</td>\n    </tr>\n    <tr>\n      <td><b>Timezone</b></td>\n      <td>ZZ</td>\n      <td>\n        -0700 -0600 ... +0600 +0700\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/fecha",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "ms": {
                      "_args": "[Circular]",
                      "_from": "ms@2.1.2",
                      "_id": "ms@2.1.2",
                      "_integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
                      "_location": "/ms",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "ms@2.1.2",
                        "name": "ms",
                        "escapedName": "ms",
                        "rawSpec": "2.1.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.1.2"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
                      "_spec": "2.1.2",
                      "_where": "/path/to/project/packages/shared",
                      "bugs": "[Circular]",
                      "description": "Tiny millisecond conversion utility",
                      "devDependencies": "[Circular]",
                      "eslintConfig": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/zeit/ms#readme",
                      "license": "MIT",
                      "lint-staged": "[Circular]",
                      "main": "./index",
                      "name": "ms",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "2.1.2",
                      "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n```\n\n### Convert from Milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time Format Written-Out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [Node.js](https://nodejs.org) and in the browser\n- If a number is supplied to `ms`, a string with a unit is returned\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\n\n## Related Packages\n\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/ms",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "ms"
                    },
                    "triple-beam": {
                      "_args": [
                        [
                          "triple-beam@1.3.0",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "triple-beam@1.3.0",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "triple-beam@1.3.0",
                      "_id": "triple-beam@1.3.0",
                      "_integrity": "sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw==",
                      "_location": "/triple-beam",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "triple-beam@1.3.0",
                        "name": "triple-beam",
                        "escapedName": "triple-beam",
                        "rawSpec": "1.3.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.3.0"
                      },
                      "_requiredBy": [
                        "/logform",
                        "/winston",
                        "/winston-transport"
                      ],
                      "_resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.3.0.tgz",
                      "_spec": "1.3.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": {
                        "name": "Charlie Robbins",
                        "email": "charlie.robbins@gmail.com"
                      },
                      "bugs": {
                        "url": "https://github.com/winstonjs/triple-beam/issues"
                      },
                      "description": "Definitions of levels for logging purposes & shareable Symbol constants.",
                      "devDependencies": {
                        "assume": "^2.0.1",
                        "eslint-config-populist": "^4.1.0",
                        "mocha": "^5.1.1",
                        "nyc": "^11.7.1"
                      },
                      "homepage": "https://github.com/winstonjs/triple-beam#readme",
                      "keywords": [
                        "winstonjs",
                        "winston",
                        "logging",
                        "logform",
                        "symbols",
                        "logs",
                        "levels"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "triple-beam",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/winstonjs/triple-beam.git"
                      },
                      "scripts": {
                        "lint": "populist config/*.js index.js",
                        "pretest": "npm run lint",
                        "test": "nyc mocha test.js"
                      },
                      "version": "1.3.0",
                      "readme": "# triple-beam\n\nDefinitions of levels for logging purposes & shareable Symbol constants.\n\n## Usage\n\n``` js\nconst { LEVEL } = require('triple-beam');\nconst colors = require('colors/safe');\n\nconst info = {\n  [LEVEL]: 'error',\n  level: 'error',\n  message: 'hey a logging message!'\n};\n\n// Colorize your log level!\ninfo.level = colors.green(info.level);\n\n// And still have an unmutated copy of your level!\nconsole.log(info.level === 'error');  // false\nconsole.log(info[LEVEL] === 'error'); // true\n```\n\n## Tests\n\nTests are written with `mocha`, `assume`, and `nyc`. They can be run with `npm`:\n\n```\nnpm test\n```\n\n##### LICENSE: MIT\n##### AUTHOR: [Charlie Robbins](https://github.com/indexzero)\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/path/to/project/packages/shared/node_modules/triple-beam",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "triple-beam"
                    }
                  },
                  "description": "An mutable object-based log format designed for chaining & objectMode streams.",
                  "devDependencies": {
                    "@babel/cli": "^7.2.3",
                    "@babel/core": "^7.2.2",
                    "@babel/preset-env": "^7.3.1",
                    "assume": "^2.0.1",
                    "eslint-config-populist": "^4.1.0",
                    "mocha": "^5.1.1",
                    "nyc": "^11.7.1",
                    "rimraf": "^2.6.2"
                  },
                  "homepage": "https://github.com/winstonjs/logform#readme",
                  "keywords": [
                    "winston",
                    "logging",
                    "format",
                    "winstonjs"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "logform",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/winstonjs/logform.git"
                  },
                  "scripts": {
                    "build": "rimraf dist && babel *.js -d ./dist",
                    "lint": "populist *.js test/*.js examples/*.js",
                    "prepublishOnly": "npm run build",
                    "pretest": "npm run lint && npm run build",
                    "test": "nyc mocha test/*.test.js"
                  },
                  "types": "./index.d.ts",
                  "version": "2.1.2",
                  "readme": "# logform\n\nA mutable object-based log format designed for chaining & objectMode streams.\n\n``` js\nconst { format } = require('logform');\n\nconst alignedWithColorsAndTime = format.combine(\n  format.colorize(),\n  format.timestamp(),\n  format.align(),\n  format.printf(info => `${info.timestamp} ${info.level}: ${info.message}`)\n);\n```\n\n- [`info` Objects](#info-objects)\n- [Understanding formats](#understanding-formats)\n  - [Combining formats](#combining-formats)\n  - [Filtering `info` objects](#filtering-info-objects)\n- [Formats](#formats)\n  - [Align](#align)\n  - [CLI](#cli)\n  - [Colorize](#colorize)\n  - [Combine](#combine)\n  - [Errors](#errors)\n  - [JSON](#json)\n  - [Label](#label)\n  - [Logstash](#logstash)\n  - [Metadata](#metadata)\n  - [PadLevels](#padlevels)\n  - [PrettyPrint](#prettyprint)\n  - [Printf](#printf)\n  - [Simple](#simple)\n  - [Splat](#splat)\n  - [Timestamp](#timestamp)\n  - [Uncolorize](#uncolorize)\n\n## `info` Objects\n\nThe `info` parameter provided to a given format represents a single log\nmessage. The object itself is mutable. Every `info` must have at least the\n`level` and `message` properties:\n\n``` js\nconst info = {\n  level: 'info',                 // Level of the logging message  \n  message: 'Hey! Log something?' // Descriptive message being logged.\n}\n```\n\nProperties **besides level and message** are considered as \"`meta`\". i.e.:\n\n``` js\nconst { level, message, ...meta } = info;\n```\n\nSeveral of the formats in `logform` itself add additional properties:\n\n| Property    | Format added by | Description |\n| ----------- | --------------- | ----------- | \n| `splat`     | `splat()`       | String interpolation splat for `%d %s`-style messages. |\n| `timestamp` | `timestamp()`   |  timestamp the message was received. |\n| `label`     | `label()`       | Custom label associated with each message. | \n| `ms`        | `ms()`          | Number of milliseconds since the previous log message. |\n\nAs a consumer you may add whatever properties you wish – _internal state is\nmaintained by `Symbol` properties:_\n\n- `Symbol.for('level')` _**(READ-ONLY)**:_ equal to `level` property.\n  **Is treated as immutable by all code.**\n- `Symbol.for('message'):` complete string message set by \"finalizing formats\":\n  - `json`\n  - `logstash`\n  - `printf`\n  - `prettyPrint`\n  - `simple`\n- `Symbol.for('splat')`: additional string interpolation arguments. _Used\n  exclusively by `splat()` format._\n\nThese Symbols are stored in another package: `triple-beam` so that all\nconsumers of `logform` can have the same Symbol reference. i.e.:\n\n``` js\nconst { LEVEL, MESSAGE, SPLAT } = require('triple-beam');\n\nconsole.log(LEVEL === Symbol.for('level'));\n// true\n\nconsole.log(MESSAGE === Symbol.for('message'));\n// true\n\nconsole.log(SPLAT === Symbol.for('splat'));\n// true\n```\n\n## Understanding formats\n\nFormats are prototypal objects (i.e. class instances) that define a single method: `transform(info, opts)` and return the mutated `info`\n\n- `info`: an object representing the log message.\n- `opts`: setting specific to the current instance of the format.\n\nThey are expected to return one of two things:\n\n- **An `info` Object** representing the modified `info` argument. Object references need not be preserved if immutability is preferred. All current built-in formats consider `info` mutable, but [immutablejs] is being considered for future releases.\n- **A falsey value** indicating that the `info` argument should be ignored by the caller. (See: [Filtering `info` Objects](#filtering-info-objects)) below.\n\n`logform.format`  is designed to be as simple as possible. To define a new format simple pass it a `transform(info, opts)` function to get a new `Format`. \n\nThe named `Format` returned can be used to create as many copies of the given `Format` as desired:\n\n``` js\nconst { format } = require('logform');\n\nconst volume = format((info, opts) => {\n  if (opts.yell) {\n    info.message = info.message.toUpperCase(); \n  } else if (opts.whisper) {\n    info.message = info.message.toLowerCase();\n  }\n\n  return info;\n});\n\n// `volume` is now a function that returns instances of the format.\nconst scream = volume({ yell: true });\nconsole.dir(scream.transform({\n  level: 'info',\n  message: `sorry for making you YELL in your head!`\n}, scream.options));\n// {\n//   level: 'info'\n//   message: 'SORRY FOR MAKING YOU YELL IN YOUR HEAD!'\n// }\n\n// `volume` can be used multiple times to create different formats.\nconst whisper = volume({ whisper: true });\nconsole.dir(whisper.transform({ \n  level: 'info', \n  message: `WHY ARE THEY MAKING US YELL SO MUCH!` \n}), whisper.options);\n// {\n//   level: 'info'\n//   message: 'why are they making us yell so much!'\n// }\n```\n\n### Combining formats\n\nAny number of formats may be combined into a single format using `format.combine`. Since `format.combine` takes no `opts`, as a convenience it returns pre-created instance of the combined format.\n\n``` js\nconst { format } = require('logform');\nconst { combine, timestamp, label } = format;\n\nconst labelTimestamp = combine(\n  label({ label: 'right meow!' }),\n  timestamp()\n);\n\nconst info = labelTimestamp.transform({\n  level: 'info',\n  message: 'What time is the testing at?'\n});\n\nconsole.dir(info);\n// { level: 'info',\n//   message: 'What time is the testing at?',\n//   label: 'right meow!',\n//   timestamp: '2017-09-30T03:57:26.875Z' }\n```\n\n### Filtering `info` Objects\n\nIf you wish to filter out a given `info` Object completely then simply return a falsey value.\n\n``` js\nconst ignorePrivate = format((info, opts) => {\n  if (info.private) { return false; }\n  return info;\n});\n\nconsole.dir(ignorePrivate.transform({\n  level: 'error',\n  message: 'Public error to share'\n}));\n// { level: 'error', message: 'Public error to share' }\n\nconsole.dir(ignorePrivate.transform({\n  level: 'error',\n  private: true,\n  message: 'This is super secret - hide it.'\n}));\n// false\n```\n\nUse of `format.combine` will respect any falsey values return and stop evaluation of later formats in the series. For example:\n\n``` js\nconst { format } = require('logform');\nconst { combine, timestamp, label } = format;\n\nconst willNeverThrow = format.combine(\n  format(info => { return false })(), // Ignores everything\n  format(info => { throw new Error('Never reached') })()\n);\n\nconsole.dir(willNeverThrow.transform({\n  level: 'info',\n  message: 'wow such testing'\n}))\n```\n\n## Formats\n\n### Align\n\nThe `align` format adds a `\\t` delimiter before the message to align it in the same place.\n\n```js\nconst { format } = require('logform');\n\nconst alignFormat = format.align();\n\nconst info = alignFormat.transform({\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info', message: '\\tmy message' }\n```\n\nThis was previously exposed as `{ align: true }` in `winston < 3.0.0`.\n\n### CLI\n\nThe `cli` format is a combination of the `colorize` and the `padLevels` formats. It turns a log  `info` object into the same format previously available in `winston.cli()` in `winston < 3.0.0`.\n\n```js\nconst { format } = require('logform');\nconst LEVEL = Symbol.for('level');\n\nconst cliFormat = format.cli({ colors: { info: 'blue' }});\n\nconst info = cliFormat.transform({\n  [LEVEL]: 'info',\n  level: 'info',\n  message: 'my message'\n}, { all: true });\n\nconsole.log(info);\n// { level: '\\u001b[34minfo\\u001b[39m',\n//   message: '\\u001b[34m    my message\\u001b[39m',\n//   [Symbol(level)]: 'info',\n//   [Symbol(message)]:\n//    '\\u001b[34minfo\\u001b[39m:\\u001b[34m    my message\\u001b[39m' }\n```\n\n### Colorize\n\nThe `colorize` format adds different colors depending on the log level to the message and/or level.\nIt accepts the following options:\n\n* **level**: If set to `true` the color will be applied to the `level`.\n* **all**: If set to `true` the color will be applied to the `message` and `level`.\n* **message**: If set to `true` the color will be applied to the `message`.\n* **colors**: An object containing the colors for the log levels. For example: `{ info: 'blue', error: 'red' }`\n\n```js\nconst { format } = require('logform');\nconst LEVEL = Symbol.for('level');\n\nconst colorizeFormat = format.colorize({ colors: { info: 'blue' }});\n\nconst info = colorizeFormat.transform({\n  [LEVEL]: 'info',\n  level: 'info',\n  message: 'my message'\n}, { all: true });\n\nconsole.log(info);\n// { level: '\\u001b[34minfo\\u001b[39m',\n//   message: '\\u001b[34mmy message\\u001b[39m',\n//   [Symbol(level)]: 'info' }\n```\n\nThis was previously exposed as `{ colorize: true }` to transports in `winston < 3.0.0`.\n\n### Combine\n\nThe `combine` Format allows to combine multiple formats:\n\n```js\nconst { format } = require('logform');\nconst { combine, timestamp, json } = format;\n\nconst jsonWithTimestamp = combine(\n  timestamp(),\n  json()\n);\n\nconst info = jsonWithTimestamp.transform({\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message',\n//   timestamp: '2018-10-02T15:03:14.230Z',\n//   [Symbol(message)]:\n//    '{\"level\":\"info\",\"message\":\"my message\",\"timestamp\":\"2018-10-02T15:03:14.230Z\"}' }\n```\n\n### Errors\n\nThe `errors` format allows you to pass in an instance of a JavaScript `Error`\ndirectly to the logger. It allows you to specify whether not to include the\nstack-trace.\n\n```js\nconst { format } = require('logform');\nconst { errors } = format;\n\nconst errorsFormat = errors({ stack: true })\n\nconst info = errorsFormat.transform(new Error('Oh no!'));\n\nconsole.log(info);\n// Error: Oh no!\n//     at repl:1:13\n//     at ContextifyScript.Script.runInThisContext (vm.js:50:33)\n//     at REPLServer.defaultEval (repl.js:240:29)\n//     at bound (domain.js:301:14)\n//     at REPLServer.runBound [as eval] (domain.js:314:12)\n//     at REPLServer.onLine (repl.js:468:10)\n//     at emitOne (events.js:121:20)\n//     at REPLServer.emit (events.js:211:7)\n//     at REPLServer.Interface._onLine (readline.js:282:10)\n//     at REPLServer.Interface._line (readline.js:631:8)\n```\n\nIt will also handle `{ message }` properties as `Error` instances:\n\n```js\nconst { format } = require('logform');\nconst { errors } = format;\n\nconst errorsFormat = errors({ stack: true })\n\nconst info = errorsFormat.transform({\n  message: new Error('Oh no!')\n});\n\nconsole.log(info);\n// Error: Oh no!\n//     at repl:1:13\n//     at ContextifyScript.Script.runInThisContext (vm.js:50:33)\n//     at REPLServer.defaultEval (repl.js:240:29)\n//     at bound (domain.js:301:14)\n//     at REPLServer.runBound [as eval] (domain.js:314:12)\n//     at REPLServer.onLine (repl.js:468:10)\n//     at emitOne (events.js:121:20)\n//     at REPLServer.emit (events.js:211:7)\n//     at REPLServer.Interface._onLine (readline.js:282:10)\n//     at REPLServer.Interface._line (readline.js:631:8)\n```\n\n### JSON\n\nThe `json` format uses `fast-safe-stringify` to finalize the message.\nIt accepts the following options:\n\n* **replacer**: A function that influences how the `info` is stringified.\n* **space**: The number of white space used to format the json.\n\n```js\nconst { format } = require('logform');\n\nconst jsonFormat = format.json();\n\nconst info = jsonFormat.transform({\n  level: 'info',\n  message: 'my message',\n});\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message',\n//   [Symbol(message)]: '{\"level\":\"info\",\"message\":\"my message\"}' }\n```\n\nThis was previously exposed as `{ json: true }` to transports in `winston < 3.0.0`.\n\n### Label\n\nThe `label` format adds the specified `label` before the message or adds it to the `info` object.\nIt accepts the following options:\n\n* **label**: A label to be added before the message.\n* **message**: If set to `true` the `label` will be added to `info.message`. If set to `false` the `label` will be added as `info.label`.\n\n```js\nconst { format } = require('logform');\n\nconst labelFormat = format.label();\n\nconst info = labelFormat.transform({\n  level: 'info',\n  message: 'my message'\n}, { label: 'my label', message: true });\n\nconsole.log(info);\n// { level: 'info', message: '[my label] my message' }\n```\n\nThis was previously exposed as `{ label: 'my label' }` to transports in `winston < 3.0.0`.\n\n### Logstash\n\nThe `logstash` Format turns a log `info` object into pure JSON with the appropriate logstash options.\n\n```js\nconst { format } = require('logform');\nconst { logstash, combine, timestamp } = format;\n\nconst logstashFormat = combine(\n  timestamp(),\n  logstash()\n);\n\nconst info = logstashFormat.transform({\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info',\n//   [Symbol(message)]:\n//    '{\"@message\":\"my message\",\"@timestamp\":\"2018-10-02T11:04:52.915Z\",\"@fields\":{\"level\":\"info\"}}' }\n```\n\nThis was previously exposed as `{ logstash: true }` to transports in `winston < 3.0.0`.\n\n### Metadata\n\nThe `metadata` format adds a metadata object to collect extraneous data, similar to the metadata object in winston 2.x.\nIt accepts the following options:\n\n* **key**: The name of the key used for the metadata object. Defaults to `metadata`.\n* **fillExcept**: An array of keys that should not be added to the metadata object.\n* **fillWith**: An array of keys that will be added to the metadata object.\n\n```js\nconst { format } = require('logform');\n\nconst metadataFormat = format.metadata();\n\nconst info = metadataFormat.transform({\n  level: 'info',\n  message: 'my message',\n  meta: 42\n});\n\nconsole.log(info);\n// { level: 'info', message: 'my message', metadata: { meta: 42 } }\n```\n\n### PadLevels\n\nThe `padLevels` format pads levels to be the same length.\n\n```js\nconst { format } = require('logform');\nconst LEVEL = Symbol.for('level');\n\nconst padLevelsFormat = format.padLevels();\n\nconst info = padLevelsFormat.transform({\n  [LEVEL]: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { message: '    my message', [Symbol(level)]: 'info' }\n```\n\nThis was previously exposed as `{ padLevels: true }` to transports in `winston < 3.0.0`.\n\n### PrettyPrint\n\nThe `prettyPrint` format finalizes the message using `util.inspect`.\nIt accepts the following options:\n\n* **depth**: A `number` that specifies the maximum depth of the `info` object being stringified by `util.inspect`. Defaults to `2`.  \n* **colorize**: Colorizes the message if set to `true`. Defaults to `false`.\n\nThe `prettyPrint` format should not be used in production because it may impact performance negatively and block the event loop.\n\n> **NOTE:** the `LEVEL`, `MESSAGE`, and `SPLAT` symbols are stripped from the\n> output message _by design._\n\nThis was previously exposed as `{ prettyPrint: true }` to transports in `winston < 3.0.0`.\n\n```js\nconst { format } = require('logform');\n\nconst prettyPrintFormat = format.prettyPrint();\n\nconst info = prettyPrintFormat.transform({\n  [LEVEL]: 'info',\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message',\n//   [Symbol(level)]: 'info',\n//   [Symbol(message)]: '{ level: \\'info\\', message: \\'my message\\' }' }\n```\n\n### Printf\n\nThe `printf` format allows to create a custom logging format:\n\n```js\nconst { format } = require('logform');\n\nconst myFormat = format.printf((info) => {\n  return `${info.level} ${info.message}`;\n})\n\nconst info = myFormat.transform({\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message',\n//   [Symbol(message)]: 'info my message' }\n```\n\n### Simple\n\nThe `simple` format finalizes the `info` object using the format: `level: message stringifiedRest`.\n```js\nconst { format } = require('logform');\nconst MESSAGE = Symbol.for('message');\n\nconst simpleFormat = format.simple();\n\nconst info = simpleFormat.transform({\n  level: 'info',\n  message: 'my message',\n  number: 123\n});\nconsole.log(info[MESSAGE]);\n// info: my message {number:123}\n```\n\n### Splat\n\nThe `splat` format transforms the message by using `util.format` to complete any `info.message` provided it has string interpolation tokens.\n\n```js\nconst { format } = require('logform');\n\nconst splatFormat = format.splat();\n\nconst info = splatFormat.transform({\n  level: 'info',\n  message: 'my message %s',\n  splat: ['test']\n});\n\nconsole.log(info);\n// { level: 'info', message: 'my message test', splat: [ 'test' ] }\n```\n\nAny additional splat parameters beyond those needed for the `%` tokens\n(aka \"metas\") are assumed to be objects. Their enumerable properties are\nmerged into the `info`.\n\n```js\nconst { format } = require('logform');\n\nconst splatFormat = format.splat();\n\nconst info = splatFormat.transform({\n  level: 'info',\n  message: 'my message %s',\n  splat: ['test', { thisIsMeta: true }]\n});\n\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message test',\n//   thisIsMeta: true,\n//   splat: [ 'test' ] }\n```\n\nThis was previously exposed implicitly in `winston < 3.0.0`.\n\n### Timestamp\n\nThe `timestamp` format adds a timestamp to the info. \nIt accepts the following options:\n\n* **format**: Either the format as a string accepted by the [fecha](https://github.com/taylorhakes/fecha) module or a function that returns a formatted date. If no format is provided `new Date().toISOString()` will be used.\n* **alias**: The name of an alias for the timestamp property, that will be added to the `info` object. \n\n```js\nconst { format } = require('logform');\n\nconst timestampFormat = format.timestamp();\n\nconst info = timestampFormat.transform({\n  level: 'info',\n  message: 'my message'\n});\n\nconsole.log(info);\n// { level: 'info',\n//   message: 'my message',\n//   timestamp: '2018-10-02T11:47:02.682Z' }\n```\n\nIt was previously available in `winston < 3.0.0` as `{ timestamp: true }` and `{ timestamp: function:String }`.\n\n\n### Uncolorize\n\nThe `uncolorize` format strips colors from `info` objects.\nIt accepts the following options:\n\n* **level**: Disables the uncolorize format for `info.level` if set to `false`. \n* **message**: Disables the uncolorize format for `info.message` if set to `false`. \n* **raw**: Disables the uncolorize format for `info[MESSAGE]` if set to `false`. \n\nThis was previously exposed as `{ stripColors: true }` to transports in `winston < 3.0.0`.\n\n## Tests\n\nTests are written with `mocha`, `assume`, and `nyc`. They can be run with `npm`:\n\n```\nnpm test\n```\n\n##### LICENSE: MIT\n##### AUTHOR: [Charlie Robbins](https://github.com/indexzero)\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "colors": "^1.2.1",
                    "fast-safe-stringify": "^2.0.4",
                    "fecha": "^2.3.3",
                    "ms": "^2.1.1",
                    "triple-beam": "^1.3.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/logform",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "one-time": {
                  "_args": [
                    [
                      "one-time@0.0.4",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "one-time@0.0.4",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "one-time@0.0.4",
                  "_id": "one-time@0.0.4",
                  "_integrity": "sha1-+M33eISCb+Tf+T46nMN7HkSAdC4=",
                  "_location": "/one-time",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "one-time@0.0.4",
                    "name": "one-time",
                    "escapedName": "one-time",
                    "rawSpec": "0.0.4",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.0.4"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/one-time/-/one-time-0.0.4.tgz",
                  "_spec": "0.0.4",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Arnout Kazemier"
                  },
                  "bugs": {
                    "url": "https://github.com/unshiftio/one-time/issues"
                  },
                  "description": "Run the supplied function exactly one time (once)",
                  "devDependencies": {
                    "assume": "1.2.x",
                    "istanbul": "0.3.x",
                    "mocha": "2.2.x",
                    "pre-commit": "1.0.x"
                  },
                  "homepage": "https://github.com/unshiftio/one-time#readme",
                  "keywords": [
                    "once",
                    "function",
                    "single",
                    "one",
                    "one-time",
                    "execution",
                    "nope"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "one-time",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/unshiftio/one-time.git"
                  },
                  "scripts": {
                    "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
                    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
                    "test": "mocha test.js",
                    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
                    "watch": "mocha --watch test.js"
                  },
                  "version": "0.0.4",
                  "readme": "# one-time\n\n[![Made by unshift](https://img.shields.io/badge/made%20by-unshift-00ffcc.svg?style=flat-square)](http://unshift.io)[![Version npm](http://img.shields.io/npm/v/one-time.svg?style=flat-square)](http://browsenpm.org/package/one-time)[![Build Status](http://img.shields.io/travis/unshiftio/one-time/master.svg?style=flat-square)](https://travis-ci.org/unshiftio/one-time)[![Dependencies](https://img.shields.io/david/unshiftio/one-time.svg?style=flat-square)](https://david-dm.org/unshiftio/one-time)[![Coverage Status](http://img.shields.io/coveralls/unshiftio/one-time/master.svg?style=flat-square)](https://coveralls.io/r/unshiftio/one-time?branch=master)[![IRC channel](http://img.shields.io/badge/IRC-irc.freenode.net%23unshift-00a8ff.svg?style=flat-square)](http://webchat.freenode.net/?channels=unshift) \n\nCall the supplied function exactly one time. This prevents double callback\nexecution. This module can be used on both node and browsers using browserify.\nNo magical ES5/6 methods used unlike the `once` module does.\n\n## Installation\n\n```\nnpm install one-time\n```\n\n## Usage\n\nSimply supply the function with the function that should only be called one\ntime:\n\n```js\nvar one = require('one-time');\n\nfunction load(file, fn) {\n  fn = one(fn);\n\n  eventemitter.once('load', fn);\n  eventemitter.once('error', fn);\n\n  // do stuff\n  eventemitter.emit('error', new Error('Failed to load, but still finished'));\n  eventemitter.emit('load');\n}\n\nfunction example(fn) {\n  fn = one(fn);\n\n  fn();\n  fn('also receives all arguments');\n  fn('it returns the same value') === 'bar';\n  fn('never');\n  fn('gonna');\n  fn('give');\n  fn('you');\n  fn('up');\n}\n\nexample(function () { \n  return 'bar'\n});\n```\n\n### Why not `once`?\n\nThe main reason is that `once` cannot be used in a browser environment unless it's\nES5 compatible. For a module as simple as this I find that unacceptable. In addition\nto that it super heavy on the dependency side. So it's totally not suitable to be\nused in client side applications.\n\nIn addition to that we make sure that your code stays easy to debug as returned\nfunctions are named in the same way as your supplied functions. Making heap\ninspection and stacktraces easier to understand.\n\n## License\n\nMIT\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/one-time",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "readable-stream": {
                  "_args": "[Circular]",
                  "_from": "readable-stream@3.6.0",
                  "_id": "readable-stream@3.6.0",
                  "_integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
                  "_location": "/readable-stream",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "readable-stream@3.6.0",
                    "name": "readable-stream",
                    "escapedName": "readable-stream",
                    "rawSpec": "3.6.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "3.6.0"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
                  "_spec": "3.6.0",
                  "_where": "/path/to/project/packages/shared",
                  "browser": "[Circular]",
                  "bugs": "[Circular]",
                  "dependencies": {},
                  "description": "Streams3, a user-land copy of the stream library from Node.js",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "homepage": "https://github.com/nodejs/readable-stream#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "readable.js",
                  "name": "readable-stream",
                  "nyc": "[Circular]",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.6.0",
                  "readme": "# readable-stream\n\n***Node.js core streams for userland*** [![Build Status](https://travis-ci.com/nodejs/readable-stream.svg?branch=master)](https://travis-ci.com/nodejs/readable-stream)\n\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true&downloadRank=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png?&months=6&height=3)](https://nodei.co/npm/readable-stream/)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/readabe-stream.svg)](https://saucelabs.com/u/readabe-stream)\n\n```bash\nnpm install --save readable-stream\n```\n\nThis package is a mirror of the streams implementations in Node.js.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v10.19.0/docs/api/stream.html).\n\nIf you want to guarantee a stable streams base, regardless of what version of\nNode you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *\"stream\"* module in Node-core, for background see [this blogpost](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).\n\nAs of version 2.0.0 **readable-stream** uses semantic versioning.\n\n## Version 3.x.x\n\nv3.x.x of `readable-stream` is a cut from Node 10. This version supports Node 6, 8, and 10, as well as evergreen browsers, IE 11 and latest Safari. The breaking changes introduced by v3 are composed by the combined breaking changes in [Node v9](https://nodejs.org/en/blog/release/v9.0.0/) and [Node v10](https://nodejs.org/en/blog/release/v10.0.0/), as follows:\n\n1. Error codes: https://github.com/nodejs/node/pull/13310,\n   https://github.com/nodejs/node/pull/13291,\n   https://github.com/nodejs/node/pull/16589,\n   https://github.com/nodejs/node/pull/15042,\n   https://github.com/nodejs/node/pull/15665,\n   https://github.com/nodejs/readable-stream/pull/344\n2. 'readable' have precedence over flowing\n   https://github.com/nodejs/node/pull/18994\n3. make virtual methods errors consistent\n   https://github.com/nodejs/node/pull/18813\n4. updated streams error handling\n   https://github.com/nodejs/node/pull/18438\n5. writable.end should return this.\n   https://github.com/nodejs/node/pull/18780\n6. readable continues to read when push('')\n   https://github.com/nodejs/node/pull/18211\n7. add custom inspect to BufferList\n   https://github.com/nodejs/node/pull/17907\n8. always defer 'readable' with nextTick\n   https://github.com/nodejs/node/pull/17979\n\n## Version 2.x.x\nv2.x.x of `readable-stream` is a cut of the stream module from Node 8 (there have been no semver-major changes from Node 4 to 8). This version supports all Node.js versions from 0.8, as well as evergreen browsers and IE 10 & 11.\n\n### Big Thanks\n\nCross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs][sauce]\n\n# Usage\n\nYou can swap your `require('stream')` with `require('readable-stream')`\nwithout any changes, if you are just using one of the main classes and\nfunctions.\n\n```js\nconst {\n  Readable,\n  Writable,\n  Transform,\n  Duplex,\n  pipeline,\n  finished\n} = require('readable-stream')\n````\n\nNote that `require('stream')` will return `Stream`, while\n`require('readable-stream')` will return `Readable`. We discourage using\nwhatever is exported directly, but rather use one of the properties as\nshown in the example above.\n\n# Streams Working Group\n\n`readable-stream` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\n<a name=\"members\"></a>\n## Team Members\n\n* **Calvin Metcalf** ([@calvinmetcalf](https://github.com/calvinmetcalf)) &lt;calvin.metcalf@gmail.com&gt;\n  - Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242\n* **Mathias Buus** ([@mafintosh](https://github.com/mafintosh)) &lt;mathiasbuus@gmail.com&gt;\n* **Matteo Collina** ([@mcollina](https://github.com/mcollina)) &lt;matteo.collina@gmail.com&gt;\n  - Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E\n* **Irina Shestak** ([@lrlna](https://github.com/lrlna)) &lt;shestak.irina@gmail.com&gt;\n* **Yoshua Wyuts** ([@yoshuawuyts](https://github.com/yoshuawuyts)) &lt;yoshuawuyts@gmail.com&gt;\n\n[sauce]: https://saucelabs.com\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/readable-stream",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "readable-stream"
                },
                "stack-trace": {
                  "_args": [
                    [
                      "stack-trace@0.0.10",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "stack-trace@0.0.10",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "stack-trace@0.0.10",
                  "_id": "stack-trace@0.0.10",
                  "_integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA=",
                  "_location": "/stack-trace",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "stack-trace@0.0.10",
                    "name": "stack-trace",
                    "escapedName": "stack-trace",
                    "rawSpec": "0.0.10",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.0.10"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
                  "_spec": "0.0.10",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Felix Geisendörfer",
                    "email": "felix@debuggable.com",
                    "url": "http://debuggable.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/felixge/node-stack-trace/issues"
                  },
                  "dependencies": {},
                  "description": "Get v8 stack traces as an array of CallSite objects.",
                  "devDependencies": {
                    "far": "0.0.3",
                    "long-stack-traces": "0.1.2"
                  },
                  "engines": {
                    "node": "*"
                  },
                  "homepage": "https://github.com/felixge/node-stack-trace",
                  "license": "MIT",
                  "main": "./lib/stack-trace",
                  "name": "stack-trace",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/felixge/node-stack-trace.git"
                  },
                  "version": "0.0.10",
                  "readme": "# stack-trace\n\nGet v8 stack traces as an array of CallSite objects.\n\n## Install\n\n``` bash\nnpm install stack-trace\n```\n\n## Usage\n\nThe stack-trace module makes it easy for you to capture the current stack:\n\n``` javascript\nvar stackTrace = require('stack-trace');\nvar trace = stackTrace.get();\n\nrequire('assert').strictEqual(trace[0].getFileName(), __filename);\n```\n\nHowever, sometimes you have already popped the stack you are interested in,\nand all you have left is an `Error` object. This module can help:\n\n``` javascript\nvar stackTrace = require('stack-trace');\nvar err = new Error('something went wrong');\nvar trace = stackTrace.parse(err);\n\nrequire('assert').strictEqual(trace[0].getFileName(), __filename);\n```\n\nPlease note that parsing the `Error#stack` property is not perfect, only\ncertain properties can be retrieved with it as noted in the API docs below.\n\n## Long stack traces\n\nstack-trace works great with [long-stack-traces][], when parsing an `err.stack`\nthat has crossed the event loop boundary, a `CallSite` object returning\n`'----------------------------------------'` for `getFileName()` is created.\nAll other methods of the event loop boundary call site return `null`.\n\n[long-stack-traces]: https://github.com/tlrobinson/long-stack-traces\n\n## API\n\n### stackTrace.get([belowFn])\n\nReturns an array of `CallSite` objects, where element `0` is the current call\nsite.\n\nWhen passing a function on the current stack as the `belowFn` parameter, the\nreturned array will only include `CallSite` objects below this function.\n\n### stackTrace.parse(err)\n\nParses the `err.stack` property of an `Error` object into an array compatible\nwith those returned by `stackTrace.get()`. However, only the following methods\nare implemented on the returned `CallSite` objects.\n\n* getTypeName\n* getFunctionName\n* getMethodName\n* getFileName\n* getLineNumber\n* getColumnNumber\n* isNative\n\nNote: Except `getFunctionName()`, all of the above methods return exactly the\nsame values as you would get from `stackTrace.get()`. `getFunctionName()`\nis sometimes a little different, but still useful.\n\n### CallSite\n\nThe official v8 CallSite object API can be found [here][v8stackapi]. A quick\nexcerpt:\n\n> A CallSite object defines the following methods:\n>\n> * **getThis**: returns the value of this\n> * **getTypeName**: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n> * **getFunction**: returns the current function\n> * **getFunctionName**: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n> * **getMethodName**: returns the name of the property of this or one of its prototypes that holds the current function\n> * **getFileName**: if this function was defined in a script returns the name of the script\n> * **getLineNumber**: if this function was defined in a script returns the current line number\n> * **getColumnNumber**: if this function was defined in a script returns the current column number\n> * **getEvalOrigin**: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n> * **isToplevel**: is this a toplevel invocation, that is, is this the global object?\n> * **isEval**: does this call take place in code defined by a call to eval?\n> * **isNative**: is this call in native V8 code?\n> * **isConstructor**: is this a constructor call?\n\n[v8stackapi]: http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\n## License\n\nstack-trace is licensed under the MIT license.\n",
                  "readmeFilename": "Readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/shared/node_modules/stack-trace",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "triple-beam": {
                  "_args": "[Circular]",
                  "_from": "triple-beam@1.3.0",
                  "_id": "triple-beam@1.3.0",
                  "_integrity": "sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw==",
                  "_location": "/triple-beam",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "triple-beam@1.3.0",
                    "name": "triple-beam",
                    "escapedName": "triple-beam",
                    "rawSpec": "1.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.3.0"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.3.0.tgz",
                  "_spec": "1.3.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "description": "Definitions of levels for logging purposes & shareable Symbol constants.",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/winstonjs/triple-beam#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "index.js",
                  "name": "triple-beam",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.3.0",
                  "readme": "# triple-beam\n\nDefinitions of levels for logging purposes & shareable Symbol constants.\n\n## Usage\n\n``` js\nconst { LEVEL } = require('triple-beam');\nconst colors = require('colors/safe');\n\nconst info = {\n  [LEVEL]: 'error',\n  level: 'error',\n  message: 'hey a logging message!'\n};\n\n// Colorize your log level!\ninfo.level = colors.green(info.level);\n\n// And still have an unmutated copy of your level!\nconsole.log(info.level === 'error');  // false\nconsole.log(info[LEVEL] === 'error'); // true\n```\n\n## Tests\n\nTests are written with `mocha`, `assume`, and `nyc`. They can be run with `npm`:\n\n```\nnpm test\n```\n\n##### LICENSE: MIT\n##### AUTHOR: [Charlie Robbins](https://github.com/indexzero)\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/shared/node_modules/triple-beam",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "winston-transport": {
                  "_args": [
                    [
                      "winston-transport@4.3.0",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "winston-transport@4.3.0",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "winston-transport@4.3.0",
                  "_id": "winston-transport@4.3.0",
                  "_integrity": "sha512-B2wPuwUi3vhzn/51Uukcao4dIduEiPOcOt9HJ3QeaXgkJ5Z7UwpBzxS4ZGNHtrxrUvTwemsQiSys0ihOf8Mp1A==",
                  "_location": "/winston-transport",
                  "_phantomChildren": {
                    "core-util-is": "1.0.2",
                    "inherits": "2.0.4",
                    "isarray": "1.0.0",
                    "process-nextick-args": "2.0.1",
                    "util-deprecate": "1.0.2"
                  },
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "winston-transport@4.3.0",
                    "name": "winston-transport",
                    "escapedName": "winston-transport",
                    "rawSpec": "4.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "4.3.0"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/winston-transport/-/winston-transport-4.3.0.tgz",
                  "_spec": "4.3.0",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Charlie Robbins",
                    "email": "charlie.robbins@gmail.com"
                  },
                  "browser": "dist/index.js",
                  "bugs": {
                    "url": "https://github.com/winstonjs/winston-transport/issues"
                  },
                  "dependencies": {
                    "triple-beam": {
                      "_args": "[Circular]",
                      "_from": "triple-beam@1.3.0",
                      "_id": "triple-beam@1.3.0",
                      "_integrity": "sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw==",
                      "_location": "/triple-beam",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "triple-beam@1.3.0",
                        "name": "triple-beam",
                        "escapedName": "triple-beam",
                        "rawSpec": "1.3.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "1.3.0"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.3.0.tgz",
                      "_spec": "1.3.0",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "description": "Definitions of levels for logging purposes & shareable Symbol constants.",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/winstonjs/triple-beam#readme",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "index.js",
                      "name": "triple-beam",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "1.3.0",
                      "readme": "# triple-beam\n\nDefinitions of levels for logging purposes & shareable Symbol constants.\n\n## Usage\n\n``` js\nconst { LEVEL } = require('triple-beam');\nconst colors = require('colors/safe');\n\nconst info = {\n  [LEVEL]: 'error',\n  level: 'error',\n  message: 'hey a logging message!'\n};\n\n// Colorize your log level!\ninfo.level = colors.green(info.level);\n\n// And still have an unmutated copy of your level!\nconsole.log(info.level === 'error');  // false\nconsole.log(info[LEVEL] === 'error'); // true\n```\n\n## Tests\n\nTests are written with `mocha`, `assume`, and `nyc`. They can be run with `npm`:\n\n```\nnpm test\n```\n\n##### LICENSE: MIT\n##### AUTHOR: [Charlie Robbins](https://github.com/indexzero)\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/triple-beam",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "triple-beam"
                    },
                    "readable-stream": {
                      "_args": [
                        [
                          "readable-stream@2.3.7",
                          "/path/to/project/packages/shared"
                        ],
                        [
                          "readable-stream@2.3.7",
                          "/path/to/project/packages/shared"
                        ]
                      ],
                      "_from": "readable-stream@2.3.7",
                      "_id": "readable-stream@2.3.7",
                      "_integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
                      "_location": "/winston-transport/readable-stream",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "readable-stream@2.3.7",
                        "name": "readable-stream",
                        "escapedName": "readable-stream",
                        "rawSpec": "2.3.7",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "2.3.7"
                      },
                      "_requiredBy": [
                        "/winston-transport"
                      ],
                      "_resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
                      "_spec": "2.3.7",
                      "_where": "/path/to/project/packages/shared",
                      "browser": {
                        "util": false,
                        "./readable.js": "./readable-browser.js",
                        "./writable.js": "./writable-browser.js",
                        "./duplex.js": "./duplex-browser.js",
                        "./lib/internal/streams/stream.js": "./lib/internal/streams/stream-browser.js"
                      },
                      "bugs": {
                        "url": "https://github.com/nodejs/readable-stream/issues"
                      },
                      "dependencies": {
                        "core-util-is": {
                          "_args": "[Circular]",
                          "_from": "core-util-is@1.0.2",
                          "_id": "core-util-is@1.0.2",
                          "_integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
                          "_location": "/core-util-is",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "core-util-is@1.0.2",
                            "name": "core-util-is",
                            "escapedName": "core-util-is",
                            "rawSpec": "1.0.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.2"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
                          "_spec": "1.0.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "description": "The `util.is*` functions introduced in Node v0.12.",
                          "devDependencies": "[Circular]",
                          "homepage": "https://github.com/isaacs/core-util-is#readme",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "main": "lib/util.js",
                          "name": "core-util-is",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "1.0.2",
                          "readme": "# core-util-is\n\nThe `util.is*` functions introduced in Node v0.12.\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/core-util-is",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "inherits": {
                          "_args": "[Circular]",
                          "_from": "inherits@2.0.4",
                          "_id": "inherits@2.0.4",
                          "_integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
                          "_location": "/inherits",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "inherits@2.0.4",
                            "name": "inherits",
                            "escapedName": "inherits",
                            "rawSpec": "2.0.4",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "2.0.4"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
                          "_spec": "2.0.4",
                          "_where": "/path/to/project/packages/shared",
                          "browser": "./inherits_browser.js",
                          "bugs": "[Circular]",
                          "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
                          "devDependencies": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/isaacs/inherits#readme",
                          "keywords": "[Circular]",
                          "license": "ISC",
                          "main": "./inherits.js",
                          "name": "inherits",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "2.0.4",
                          "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/inherits",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "inherits"
                        },
                        "isarray": {
                          "_args": [
                            [
                              "isarray@1.0.0",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "isarray@1.0.0",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "isarray@1.0.0",
                          "_id": "isarray@1.0.0",
                          "_integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
                          "_location": "/isarray",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "isarray@1.0.0",
                            "name": "isarray",
                            "escapedName": "isarray",
                            "rawSpec": "1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.0"
                          },
                          "_requiredBy": [
                            "/buffer"
                          ],
                          "_resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                          "_spec": "1.0.0",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Julian Gruber",
                            "email": "mail@juliangruber.com",
                            "url": "http://juliangruber.com"
                          },
                          "bugs": {
                            "url": "https://github.com/juliangruber/isarray/issues"
                          },
                          "dependencies": {},
                          "description": "Array#isArray for older browsers",
                          "devDependencies": {
                            "tape": "~2.13.4"
                          },
                          "homepage": "https://github.com/juliangruber/isarray",
                          "keywords": [
                            "browser",
                            "isarray",
                            "array"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "isarray",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/juliangruber/isarray.git"
                          },
                          "scripts": {
                            "test": "tape test.js"
                          },
                          "testling": {
                            "files": "test.js",
                            "browsers": [
                              "ie/8..latest",
                              "firefox/17..latest",
                              "firefox/nightly",
                              "chrome/22..latest",
                              "chrome/canary",
                              "opera/12..latest",
                              "opera/next",
                              "safari/5.1..latest",
                              "ipad/6.0..latest",
                              "iphone/6.0..latest",
                              "android-browser/4.2..latest"
                            ]
                          },
                          "version": "1.0.0",
                          "readme": "\n# isarray\n\n`Array#isArray` for older browsers.\n\n[![build status](https://secure.travis-ci.org/juliangruber/isarray.svg)](http://travis-ci.org/juliangruber/isarray)\n[![downloads](https://img.shields.io/npm/dm/isarray.svg)](https://www.npmjs.org/package/isarray)\n\n[![browser support](https://ci.testling.com/juliangruber/isarray.png)\n](https://ci.testling.com/juliangruber/isarray)\n\n## Usage\n\n```js\nvar isArray = require('isarray');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/browserify).\n\nWith [component](http://component.io) do\n\n```bash\n$ component install juliangruber/isarray\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/isarray",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "process-nextick-args": {
                          "_args": [
                            [
                              "process-nextick-args@2.0.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "process-nextick-args@2.0.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "process-nextick-args@2.0.1",
                          "_id": "process-nextick-args@2.0.1",
                          "_integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
                          "_location": "/process-nextick-args",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "process-nextick-args@2.0.1",
                            "name": "process-nextick-args",
                            "escapedName": "process-nextick-args",
                            "rawSpec": "2.0.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "2.0.1"
                          },
                          "_requiredBy": [
                            "/winston-transport/readable-stream"
                          ],
                          "_resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
                          "_spec": "2.0.1",
                          "_where": "/path/to/project/packages/shared",
                          "author": "",
                          "bugs": {
                            "url": "https://github.com/calvinmetcalf/process-nextick-args/issues"
                          },
                          "description": "process.nextTick but always with args",
                          "devDependencies": {
                            "tap": "~0.2.6"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/calvinmetcalf/process-nextick-args",
                          "license": "MIT",
                          "main": "index.js",
                          "name": "process-nextick-args",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/calvinmetcalf/process-nextick-args.git"
                          },
                          "scripts": {
                            "test": "node test.js"
                          },
                          "version": "2.0.1",
                          "readme": "process-nextick-args\n=====\n\n[![Build Status](https://travis-ci.org/calvinmetcalf/process-nextick-args.svg?branch=master)](https://travis-ci.org/calvinmetcalf/process-nextick-args)\n\n```bash\nnpm install --save process-nextick-args\n```\n\nAlways be able to pass arguments to process.nextTick, no matter the platform\n\n```js\nvar pna = require('process-nextick-args');\n\npna.nextTick(function (a, b, c) {\n  console.log(a, b, c);\n}, 'step', 3,  'profit');\n```\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/process-nextick-args",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "util-deprecate": {
                          "_args": "[Circular]",
                          "_from": "util-deprecate@1.0.2",
                          "_id": "util-deprecate@1.0.2",
                          "_integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
                          "_location": "/util-deprecate",
                          "_phantomChildren": "[Circular]",
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "util-deprecate@1.0.2",
                            "name": "util-deprecate",
                            "escapedName": "util-deprecate",
                            "rawSpec": "1.0.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.0.2"
                          },
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
                          "_spec": "1.0.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": "[Circular]",
                          "browser": "browser.js",
                          "bugs": "[Circular]",
                          "description": "The Node.js `util.deprecate()` function with browser support",
                          "homepage": "https://github.com/TooTallNate/util-deprecate",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "main": "node.js",
                          "name": "util-deprecate",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "1.0.2",
                          "readme": "util-deprecate\n==============\n### The Node.js `util.deprecate()` function with browser support\n\nIn Node.js, this module simply re-exports the `util.deprecate()` function.\n\nIn the web browser (i.e. via browserify), a browser-specific implementation\nof the `util.deprecate()` function is used.\n\n\n## API\n\nA `deprecate()` function is the only thing exposed by this module.\n\n``` javascript\n// setup:\nexports.foo = deprecate(foo, 'foo() is deprecated, use bar() instead');\n\n\n// users see:\nfoo();\n// foo() is deprecated, use bar() instead\nfoo();\nfoo();\n```\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Nathan Rajlich <nathan@tootallnate.net>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "devDependencies": "[Circular]",
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/path/to/project/packages/shared/node_modules/util-deprecate",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "util-deprecate"
                        },
                        "safe-buffer": {
                          "_args": [
                            [
                              "safe-buffer@5.1.2",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "safe-buffer@5.1.2",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "safe-buffer@5.1.2",
                          "_id": "safe-buffer@5.1.2",
                          "_integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
                          "_location": "/winston-transport/safe-buffer",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "safe-buffer@5.1.2",
                            "name": "safe-buffer",
                            "escapedName": "safe-buffer",
                            "rawSpec": "5.1.2",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "5.1.2"
                          },
                          "_requiredBy": [
                            "/winston-transport/readable-stream",
                            "/winston-transport/string_decoder"
                          ],
                          "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
                          "_spec": "5.1.2",
                          "_where": "/path/to/project/packages/shared",
                          "author": {
                            "name": "Feross Aboukhadijeh",
                            "email": "feross@feross.org",
                            "url": "http://feross.org"
                          },
                          "bugs": {
                            "url": "https://github.com/feross/safe-buffer/issues"
                          },
                          "description": "Safer Node.js Buffer API",
                          "devDependencies": {
                            "standard": "*",
                            "tape": "^4.0.0"
                          },
                          "homepage": "https://github.com/feross/safe-buffer",
                          "keywords": [
                            "buffer",
                            "buffer allocate",
                            "node security",
                            "safe",
                            "safe-buffer",
                            "security",
                            "uninitialized"
                          ],
                          "license": "MIT",
                          "main": "index.js",
                          "name": "safe-buffer",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/feross/safe-buffer.git"
                          },
                          "scripts": {
                            "test": "standard && tape test/*.js"
                          },
                          "types": "index.d.ts",
                          "version": "5.1.2",
                          "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/path/to/project/packages/shared/node_modules/winston-transport/node_modules/safe-buffer",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "string_decoder": {
                          "_args": [
                            [
                              "string_decoder@1.1.1",
                              "/path/to/project/packages/shared"
                            ],
                            [
                              "string_decoder@1.1.1",
                              "/path/to/project/packages/shared"
                            ]
                          ],
                          "_from": "string_decoder@1.1.1",
                          "_id": "string_decoder@1.1.1",
                          "_integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                          "_location": "/winston-transport/string_decoder",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "version",
                            "registry": true,
                            "raw": "string_decoder@1.1.1",
                            "name": "string_decoder",
                            "escapedName": "string_decoder",
                            "rawSpec": "1.1.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "1.1.1"
                          },
                          "_requiredBy": [
                            "/winston-transport/readable-stream"
                          ],
                          "_resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                          "_spec": "1.1.1",
                          "_where": "/path/to/project/packages/shared",
                          "bugs": {
                            "url": "https://github.com/nodejs/string_decoder/issues"
                          },
                          "dependencies": {
                            "safe-buffer": {
                              "_args": "[Circular]",
                              "_from": "safe-buffer@5.1.2",
                              "_id": "safe-buffer@5.1.2",
                              "_integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
                              "_location": "/winston-transport/safe-buffer",
                              "_phantomChildren": "[Circular]",
                              "_requested": {
                                "type": "version",
                                "registry": true,
                                "raw": "safe-buffer@5.1.2",
                                "name": "safe-buffer",
                                "escapedName": "safe-buffer",
                                "rawSpec": "5.1.2",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "5.1.2"
                              },
                              "_requiredBy": "[Circular]",
                              "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
                              "_spec": "5.1.2",
                              "_where": "/path/to/project/packages/shared",
                              "author": "[Circular]",
                              "bugs": "[Circular]",
                              "description": "Safer Node.js Buffer API",
                              "devDependencies": "[Circular]",
                              "homepage": "https://github.com/feross/safe-buffer",
                              "keywords": "[Circular]",
                              "license": "MIT",
                              "main": "index.js",
                              "name": "safe-buffer",
                              "repository": "[Circular]",
                              "scripts": "[Circular]",
                              "types": "index.d.ts",
                              "version": "5.1.2",
                              "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                              "readmeFilename": "README.md",
                              "dependencies": {},
                              "optionalDependencies": "[Circular]",
                              "_dependencies": "[Circular]",
                              "path": "/path/to/project/packages/shared/node_modules/winston-transport/node_modules/safe-buffer",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "winston-transport/safe-buffer"
                            }
                          },
                          "description": "The string_decoder module from Node core",
                          "devDependencies": {
                            "babel-polyfill": "^6.23.0",
                            "core-util-is": "^1.0.2",
                            "inherits": "^2.0.3",
                            "tap": "~0.4.8"
                          },
                          "homepage": "https://github.com/nodejs/string_decoder",
                          "keywords": [
                            "string",
                            "decoder",
                            "browser",
                            "browserify"
                          ],
                          "license": "MIT",
                          "main": "lib/string_decoder.js",
                          "name": "string_decoder",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/nodejs/string_decoder.git"
                          },
                          "scripts": {
                            "ci": "tap test/parallel/*.js test/ours/*.js --tap | tee test.tap && node test/verify-dependencies.js",
                            "test": "tap test/parallel/*.js && node test/verify-dependencies"
                          },
                          "version": "1.1.1",
                          "readme": "# string_decoder\n\n***Node-core v8.9.4 string_decoder for userland***\n\n\n[![NPM](https://nodei.co/npm/string_decoder.png?downloads=true&downloadRank=true)](https://nodei.co/npm/string_decoder/)\n[![NPM](https://nodei.co/npm-dl/string_decoder.png?&months=6&height=3)](https://nodei.co/npm/string_decoder/)\n\n\n```bash\nnpm install --save string_decoder\n```\n\n***Node-core string_decoder for userland***\n\nThis package is a mirror of the string_decoder implementation in Node-core.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v8.9.4/docs/api/).\n\nAs of version 1.0.0 **string_decoder** uses semantic versioning.\n\n## Previous versions\n\nPrevious version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10.\n\n## Update\n\nThe *build/* directory contains a build script that will scrape the source from the [nodejs/node](https://github.com/nodejs/node) repo given a specific Node version.\n\n## Streams Working Group\n\n`string_decoder` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\nSee [readable-stream](https://github.com/nodejs/readable-stream) for\nmore details.\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "safe-buffer": "~5.1.0"
                          },
                          "path": "/path/to/project/packages/shared/node_modules/winston-transport/node_modules/string_decoder",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "description": "Streams3, a user-land copy of the stream library from Node.js",
                      "devDependencies": {
                        "assert": "^1.4.0",
                        "babel-polyfill": "^6.9.1",
                        "buffer": "^4.9.0",
                        "lolex": "^2.3.2",
                        "nyc": "^6.4.0",
                        "tap": "^0.7.0",
                        "tape": "^4.8.0"
                      },
                      "homepage": "https://github.com/nodejs/readable-stream#readme",
                      "keywords": [
                        "readable",
                        "stream",
                        "pipe"
                      ],
                      "license": "MIT",
                      "main": "readable.js",
                      "name": "readable-stream",
                      "nyc": {
                        "include": [
                          "lib/**.js"
                        ]
                      },
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/nodejs/readable-stream.git"
                      },
                      "scripts": {
                        "ci": "tap test/parallel/*.js test/ours/*.js --tap | tee test.tap && node test/verify-dependencies.js",
                        "cover": "nyc npm test",
                        "report": "nyc report --reporter=lcov",
                        "test": "tap test/parallel/*.js test/ours/*.js && node test/verify-dependencies.js"
                      },
                      "version": "2.3.7",
                      "readme": "# readable-stream\n\n***Node-core v8.11.1 streams for userland*** [![Build Status](https://travis-ci.org/nodejs/readable-stream.svg?branch=master)](https://travis-ci.org/nodejs/readable-stream)\n\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true&downloadRank=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png?&months=6&height=3)](https://nodei.co/npm/readable-stream/)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/readable-stream.svg)](https://saucelabs.com/u/readable-stream)\n\n```bash\nnpm install --save readable-stream\n```\n\n***Node-core streams for userland***\n\nThis package is a mirror of the Streams2 and Streams3 implementations in\nNode-core.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v8.11.1/docs/api/stream.html).\n\nIf you want to guarantee a stable streams base, regardless of what version of\nNode you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *\"stream\"* module in Node-core, for background see [this blogpost](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).\n\nAs of version 2.0.0 **readable-stream** uses semantic versioning.\n\n# Streams Working Group\n\n`readable-stream` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\n<a name=\"members\"></a>\n## Team Members\n\n* **Chris Dickinson** ([@chrisdickinson](https://github.com/chrisdickinson)) &lt;christopher.s.dickinson@gmail.com&gt;\n  - Release GPG key: 9554F04D7259F04124DE6B476D5A82AC7E37093B\n* **Calvin Metcalf** ([@calvinmetcalf](https://github.com/calvinmetcalf)) &lt;calvin.metcalf@gmail.com&gt;\n  - Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242\n* **Rod Vagg** ([@rvagg](https://github.com/rvagg)) &lt;rod@vagg.org&gt;\n  - Release GPG key: DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n* **Sam Newman** ([@sonewman](https://github.com/sonewman)) &lt;newmansam@outlook.com&gt;\n* **Mathias Buus** ([@mafintosh](https://github.com/mafintosh)) &lt;mathiasbuus@gmail.com&gt;\n* **Domenic Denicola** ([@domenic](https://github.com/domenic)) &lt;d@domenic.me&gt;\n* **Matteo Collina** ([@mcollina](https://github.com/mcollina)) &lt;matteo.collina@gmail.com&gt;\n  - Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E\n* **Irina Shestak** ([@lrlna](https://github.com/lrlna)) &lt;shestak.irina@gmail.com&gt;\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "core-util-is": "~1.0.0",
                        "inherits": "~2.0.3",
                        "isarray": "~1.0.0",
                        "process-nextick-args": "~2.0.0",
                        "safe-buffer": "~5.1.1",
                        "string_decoder": "~1.1.1",
                        "util-deprecate": "~1.0.1"
                      },
                      "path": "/path/to/project/packages/shared/node_modules/winston-transport/node_modules/readable-stream",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "description": "Base stream implementations for winston@3 and up.",
                  "devDependencies": {
                    "@types/node": "^10.1.4",
                    "abstract-winston-transport": ">= 0.3.0",
                    "assume": "^2.0.1",
                    "babel-cli": "^6.26.0",
                    "babel-preset-env": "^1.7.0",
                    "eslint-config-populist": "^4.1.0",
                    "logform": "^1.4.0",
                    "mocha": "^5.0.5",
                    "nyc": "^11.6.0",
                    "rimraf": "^2.6.2",
                    "winston-compat": "~0.1.0"
                  },
                  "engines": {
                    "node": ">= 6.4.0"
                  },
                  "homepage": "https://github.com/winstonjs/winston-transport#readme",
                  "keywords": [
                    "winston",
                    "transport",
                    "winston3"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "winston-transport",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/winstonjs/winston-transport.git"
                  },
                  "scripts": {
                    "build": "rimraf dist && babel *.js -d ./dist",
                    "lint": "populist config/*.js index.js",
                    "prepublishOnly": "npm run build",
                    "pretest": "npm run lint && npm run build",
                    "report": "nyc report --reporter=lcov",
                    "test": "nyc mocha test/*.test.js"
                  },
                  "version": "4.3.0",
                  "readme": "# winston-transport\n\nThe base `TransportStream` implementation for `winston >= 3`. Use these to\nwrite ecosystem Transports for `winston`.\n\n## Usage\n\n``` js\nconst Transport = require('winston-transport');\nconst util = require('util');\n\n//\n// Inherit from `winston-transport` so you can take advantage\n// of the base functionality and `.exceptions.handle()`.\n//\nmodule.exports = class CustomTransport extends Transport {\n  constructor(opts) {\n    super(opts);\n\n    //\n    // Consume any custom options here. e.g.:\n    // - Connection information for databases\n    // - Authentication information for APIs (e.g. loggly, papertrail,\n    //   logentries, etc.).\n    //\n  }\n\n  log(info, callback) {\n    setImmediate(() => {\n      this.emit('logged', info);\n    });\n\n    // Perform the writing to the remote service\n\n    callback();\n  }\n};\n```\n\n## Tests\n\nTests are written with `mocha`, `nyc`, `assume`, and \n`abstract-winston-transport`. They can be run with `npm`:\n\n``` bash\nnpm test\n```\n\n##### Author: [Charlie Robbins](https://github.com/indexzero)\n##### LICENSE: MIT\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "readable-stream": "^2.3.6",
                    "triple-beam": "^1.2.0"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/winston-transport",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "async": {
                  "_args": [
                    [
                      "async@2.6.3",
                      "/path/to/project/packages/shared"
                    ],
                    [
                      "async@2.6.3",
                      "/path/to/project/packages/shared"
                    ]
                  ],
                  "_from": "async@2.6.3",
                  "_id": "async@2.6.3",
                  "_integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
                  "_location": "/winston/async",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "async@2.6.3",
                    "name": "async",
                    "escapedName": "async",
                    "rawSpec": "2.6.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.6.3"
                  },
                  "_requiredBy": [
                    "/winston"
                  ],
                  "_resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
                  "_spec": "2.6.3",
                  "_where": "/path/to/project/packages/shared",
                  "author": {
                    "name": "Caolan McMahon"
                  },
                  "bugs": {
                    "url": "https://github.com/caolan/async/issues"
                  },
                  "dependencies": {
                    "lodash": {
                      "_args": "[Circular]",
                      "_from": "lodash@4.17.15",
                      "_id": "lodash@4.17.15",
                      "_integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==",
                      "_location": "/lodash",
                      "_phantomChildren": "[Circular]",
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "lodash@4.17.15",
                        "name": "lodash",
                        "escapedName": "lodash",
                        "rawSpec": "4.17.15",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "4.17.15"
                      },
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
                      "_spec": "4.17.15",
                      "_where": "/path/to/project/packages/shared",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "contributors": "[Circular]",
                      "description": "Lodash modular utilities.",
                      "homepage": "https://lodash.com/",
                      "icon": "https://lodash.com/icon.svg",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "lodash.js",
                      "name": "lodash",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "4.17.15",
                      "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "devDependencies": "[Circular]",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/path/to/project/packages/shared/node_modules/lodash",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "lodash"
                    }
                  },
                  "description": "Higher-order functions and common patterns for asynchronous code",
                  "devDependencies": {
                    "babel-cli": "^6.24.0",
                    "babel-core": "^6.26.3",
                    "babel-plugin-add-module-exports": "^0.2.1",
                    "babel-plugin-istanbul": "^2.0.1",
                    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
                    "babel-preset-es2015": "^6.3.13",
                    "babel-preset-es2017": "^6.22.0",
                    "babelify": "^8.0.0",
                    "benchmark": "^2.1.1",
                    "bluebird": "^3.4.6",
                    "browserify": "^16.2.2",
                    "chai": "^4.1.2",
                    "cheerio": "^0.22.0",
                    "coveralls": "^3.0.1",
                    "es6-promise": "^2.3.0",
                    "eslint": "^2.13.1",
                    "fs-extra": "^0.26.7",
                    "gh-pages-deploy": "^0.5.0",
                    "jsdoc": "^3.4.0",
                    "karma": "^2.0.2",
                    "karma-browserify": "^5.2.0",
                    "karma-firefox-launcher": "^1.1.0",
                    "karma-mocha": "^1.2.0",
                    "karma-mocha-reporter": "^2.2.0",
                    "mocha": "^5.2.0",
                    "native-promise-only": "^0.8.0-a",
                    "nyc": "^11.8.0",
                    "rimraf": "^2.5.0",
                    "rollup": "^0.36.3",
                    "rollup-plugin-node-resolve": "^2.0.0",
                    "rollup-plugin-npm": "^2.0.0",
                    "rsvp": "^3.0.18",
                    "semver": "^5.5.0",
                    "uglify-js": "~2.7.3",
                    "yargs": "^11.0.0"
                  },
                  "gh-pages-deploy": {
                    "staticpath": "docs"
                  },
                  "homepage": "https://caolan.github.io/async/",
                  "keywords": [
                    "async",
                    "callback",
                    "module",
                    "utility"
                  ],
                  "license": "MIT",
                  "main": "dist/async.js",
                  "name": "async",
                  "nyc": {
                    "exclude": [
                      "mocha_test"
                    ]
                  },
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/caolan/async.git"
                  },
                  "scripts": {
                    "coverage": "nyc npm run mocha-node-test -- --grep @nycinvalid --invert",
                    "coveralls": "npm run coverage && nyc report --reporter=text-lcov | coveralls",
                    "jsdoc": "jsdoc -c ./support/jsdoc/jsdoc.json && node support/jsdoc/jsdoc-fix-html.js",
                    "lint": "eslint lib/ mocha_test/ perf/memory.js perf/suites.js perf/benchmark.js support/build/ support/*.js karma.conf.js",
                    "mocha-browser-test": "karma start",
                    "mocha-node-test": "mocha mocha_test/ --compilers js:babel-core/register",
                    "mocha-test": "npm run mocha-node-test && npm run mocha-browser-test",
                    "test": "npm run lint && npm run mocha-node-test"
                  },
                  "version": "2.6.3",
                  "readme": "![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![libhive - Open source examples](https://www.libhive.com/providers/npm/packages/async/examples/badge.svg)](https://www.libhive.com/providers/npm/packages/async)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm install --save async`, it can also be used directly in the browser.\n\nThis version of the package is optimized for the Node.js environment. If you use Async with webpack, install [`async-es`](https://www.npmjs.com/package/async-es) instead.\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\nvar async = require(\"async\");\n\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "lodash": "^4.17.14"
                  },
                  "path": "/path/to/project/packages/shared/node_modules/winston/node_modules/async",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "A logger for just about everything.",
              "devDependencies": {
                "@babel/cli": "^7.2.3",
                "@babel/core": "^7.2.2",
                "@babel/preset-env": "^7.3.1",
                "@types/node": "^10.12.19",
                "abstract-winston-transport": ">= 0.5.1",
                "assume": "^2.1.0",
                "colors": "^1.3.3",
                "cross-spawn-async": "^2.2.5",
                "eslint-config-populist": "^4.2.0",
                "hock": "^1.3.3",
                "mocha": "^5.2.0",
                "nyc": "^13.1.0",
                "rimraf": "^2.6.3",
                "split2": "^3.1.0",
                "std-mocks": "^1.0.1",
                "through2": "^3.0.0",
                "winston-compat": "^0.1.4"
              },
              "engines": {
                "node": ">= 6.4.0"
              },
              "homepage": "https://github.com/winstonjs/winston#readme",
              "keywords": [
                "winston",
                "logger",
                "logging",
                "logs",
                "sysadmin",
                "bunyan",
                "pino",
                "loglevel",
                "tools",
                "json",
                "stream"
              ],
              "license": "MIT",
              "main": "./lib/winston",
              "maintainers": [
                {
                  "name": "Jarrett Cruger",
                  "email": "jcrugzz@gmail.com"
                },
                {
                  "name": "Chris Alderson",
                  "email": "chrisalderson@protonmail.com"
                },
                {
                  "name": "David Hyde",
                  "email": "dabh@stanford.edu"
                }
              ],
              "name": "winston",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/winstonjs/winston.git"
              },
              "scripts": {
                "build": "rimraf dist && babel lib -d dist",
                "lint": "populist lib/*.js lib/winston/*.js lib/winston/**/*.js",
                "prepublishOnly": "npm run build",
                "pretest": "npm run lint",
                "test": "nyc --reporter=text --reporter lcov npm run test:mocha",
                "test:mocha": "mocha test/*.test.js test/**/*.test.js --exit"
              },
              "types": "./index.d.ts",
              "version": "3.2.1",
              "readme": "# winston\n\nA logger for just about everything.\n\n[![Version npm](https://img.shields.io/npm/v/winston.svg?style=flat-square)](https://www.npmjs.com/package/winston)[![npm Downloads](https://img.shields.io/npm/dm/winston.svg?style=flat-square)](https://npmcharts.com/compare/winston?minimal=true)[![Build Status](https://img.shields.io/travis/winstonjs/winston/master.svg?style=flat-square)](https://travis-ci.org/winstonjs/winston)[![Dependencies](https://img.shields.io/david/winstonjs/winston.svg?style=flat-square)](https://david-dm.org/winstonjs/winston)\n\n[![NPM](https://nodei.co/npm/winston.png?downloads=true&downloadRank=true)](https://nodei.co/npm/winston/)\n\n[![Join the chat at https://gitter.im/winstonjs/winston](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/winstonjs/winston?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## winston@3.2.0\n\nSee the [Upgrade Guide](UPGRADE-3.0.md) for more information. Bug reports and\nPRs welcome!\n\n## Looking for `winston@2.x` documentation?\n\nPlease note that the documentation below is for `winston@3`. \n[Read the `winston@2.x` documentation].\n\n## Motivation\n\n`winston` is designed to be a simple and universal logging library with\nsupport for multiple transports. A transport is essentially a storage device\nfor your logs. Each `winston` logger can have multiple transports (see:\n[Transports]) configured at different levels (see: [Logging levels]). For\nexample, one may want error logs to be stored in a persistent remote location\n(like a database), but all logs output to the console or a local file.\n\n`winston` aims to decouple parts of the logging process to make it more\nflexible and extensible. Attention is given to supporting flexibility in log\nformatting (see: [Formats]) & levels (see: [Using custom logging levels]), and\nensuring those APIs decoupled from the implementation of transport logging\n(i.e. how the logs are stored / indexed, see: [Adding Custom Transports]) to\nthe API that they exposed to the programmer.\n\n## Quick Start\n\nTL;DR? Check out the [quick start example][quick-example] in `./examples/`. \nThere are a number of other examples in [`./examples/*.js`][examples].\nDon't see an example you think should be there? Submit a pull request\nto add it!\n\n## Usage\n\nThe recommended way to use `winston` is to create your own logger. The\nsimplest way to do this is using `winston.createLogger`:\n\n``` js\nconst logger = winston.createLogger({\n  level: 'info',\n  format: winston.format.json(),\n  defaultMeta: { service: 'user-service' },\n  transports: [\n    //\n    // - Write to all logs with level `info` and below to `combined.log` \n    // - Write all logs error (and below) to `error.log`.\n    //\n    new winston.transports.File({ filename: 'error.log', level: 'error' }),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n\n//\n// If we're not in production then log to the `console` with the format:\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n// \nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new winston.transports.Console({\n    format: winston.format.simple()\n  }));\n}\n```\n\nYou may also log directly via the default logger exposed by\n`require('winston')`, but this merely intended to be a convenient shared\nlogger to use throughout your application if you so choose.\n\n## Table of contents\n\n* [Motivation](#motivation)\n* [Quick Start](#quick-start)\n* [Usage](#usage)\n* [Table of Contents](#table-of-contents)\n* [Logging](#logging)\n  * [Creating your logger](#creating-your-own-logger)\n  * [Streams, `objectMode`, and `info` objects](#streams-objectmode-and-info-objects)\n* [Formats]\n  * [Combining formats](#combining-formats)\n  * [String interpolation](#string-interpolation)\n  * [Filtering `info` Objects](#filtering-info-objects)\n  * [Creating custom formats](#creating-custom-formats)\n* [Logging levels]\n  * [Using logging levels](#using-logging-levels)\n  * [Using custom logging levels](#using-custom-logging-levels)\n* [Transports]\n  * [Multiple transports of the same type](#multiple-transports-of-the-same-type)\n  * [Adding Custom Transports](#adding-custom-transports)\n* [Exceptions](#exceptions)\n  * [Handling Uncaught Exceptions with winston](#handling-uncaught-exceptions-with-winston)\n  * [To Exit or Not to Exit](#to-exit-or-not-to-exit)\n* [Profiling](#profiling)\n* [Streaming Logs](#streaming-logs)\n* [Querying Logs](#querying-logs)\n* [Further Reading](#further-reading)\n  * [Using the default logger](#using-the-default-logger)\n  * [Awaiting logs to be written in `winston`](#awaiting-logs-to-be-written-in-winston)\n  * [Working with multiple Loggers in `winston`](#working-with-multiple-loggers-in-winston)\n* [Installation](#installation)\n* [Run Tests](#run-tests)\n\n## Logging\n\nLogging levels in `winston` conform to the severity ordering specified by\n[RFC5424]: _severity of all levels is assumed to be numerically **ascending**\nfrom most important to least important._\n\n``` js\nconst levels = { \n  error: 0, \n  warn: 1, \n  info: 2, \n  verbose: 3, \n  debug: 4, \n  silly: 5 \n};\n```\n\n### Creating your own Logger\nYou get started by creating a logger using `winston.createLogger`:\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n```\n\nA logger accepts the following parameters:\n\n| Name          | Default                     |  Description    |\n| ------------- | --------------------------- | --------------- |\n| `level`       | `'info'`                    | Log only if [`info.level`](#streams-objectmode-and-info-objects) less than or equal to this level  |  \n| `levels`      | `winston.config.npm.levels` | Levels (and colors) representing log priorities            |\n| `format`      | `winston.format.json`       | Formatting for `info` messages  (see: [Formats])           |\n| `transports`  | `[]` _(No transports)_      | Set of logging targets for `info` messages                 |\n| `exitOnError` | `true`                      | If false, handled exceptions will not cause `process.exit` |\n| `silent`      | `false`                     | If true, all logs are suppressed |\n\nThe levels provided to `createLogger` will be defined as convenience methods\non the `logger` returned. \n\n``` js\n//\n// Logging\n//\nlogger.log({\n  level: 'info',\n  message: 'Hello distributed log files!'\n});\n\nlogger.info('Hello again distributed logs');\n```\n\nYou can add or remove transports from the `logger` once it has been provided \nto you from `winston.createLogger`:\n\n``` js\nconst files = new winston.transports.File({ filename: 'combined.log' });\nconst console = new winston.transports.Console();\n\nlogger\n  .clear()          // Remove all transports\n  .add(console)     // Add console transport\n  .add(files)       // Add file transport\n  .remove(console); // Remove console transport\n```\n\nYou can also wholesale reconfigure a `winston.Logger` instance using the\n`configure` method:\n\n``` js\nconst logger = winston.createLogger({\n  level: 'info',\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n\n//\n// Replaces the previous transports with those in the\n// new configuration wholesale.\n//\nconst DailyRotateFile = require('winston-daily-rotate-file');\nlogger.configure({\n  level: 'verbose',\n  transports: [\n    new DailyRotateFile(opts)\n  ]\n});\n```\n\n### Creating child loggers\n\nYou can create child loggers from existing loggers to pass metadata overrides:\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console(),\n  ]\n});\n\nconst childLogger = logger.child({ requestId: '451' });\n```\n\n### Streams, `objectMode`, and `info` objects\n\nIn `winston`, both `Logger` and `Transport` instances are treated as\n[`objectMode`](https://nodejs.org/api/stream.html#stream_object_mode)\nstreams that accept an `info` object. \n\nThe `info` parameter provided to a given format represents a single log\nmessage. The object itself is mutable. Every `info` must have at least the\n`level` and `message` properties:\n\n``` js\nconst info = {\n  level: 'info',                 // Level of the logging message  \n  message: 'Hey! Log something?' // Descriptive message being logged.\n};\n```\n\nProperties **besides level and message** are considered as \"`meta`\". i.e.:\n\n``` js\nconst { level, message, ...meta } = info;\n```\n\nSeveral of the formats in `logform` itself add additional properties:\n\n| Property    | Format added by | Description |\n| ----------- | --------------- | ----------- | \n| `splat`     | `splat()`       | String interpolation splat for `%d %s`-style messages. |\n| `timestamp` | `timestamp()`   |  timestamp the message was received. |\n| `label`     | `label()`       | Custom label associated with each message. | \n| `ms`        | `ms()`          | Number of milliseconds since the previous log message. |\n\nAs a consumer you may add whatever properties you wish – _internal state is\nmaintained by `Symbol` properties:_\n\n- `Symbol.for('level')` _**(READ-ONLY)**:_ equal to `level` property.\n  **Is treated as immutable by all code.**\n- `Symbol.for('message'):` complete string message set by \"finalizing formats\":\n  - `json`\n  - `logstash`\n  - `printf`\n  - `prettyPrint`\n  - `simple`\n- `Symbol.for('splat')`: additional string interpolation arguments. _Used\n  exclusively by `splat()` format._\n\nThese Symbols are stored in another package: `triple-beam` so that all\nconsumers of `logform` can have the same Symbol reference. i.e.:\n\n``` js\nconst { LEVEL, MESSAGE, SPLAT } = require('triple-beam');\n\nconsole.log(LEVEL === Symbol.for('level'));\n// true\n\nconsole.log(MESSAGE === Symbol.for('message'));\n// true\n\nconsole.log(SPLAT === Symbol.for('splat'));\n// true\n```\n\n> **NOTE:** any `{ message }` property in a `meta` object provided will\n> automatically be concatenated to any `msg` already provided: For \n> example the below will concatenate 'world' onto 'hello':\n>\n> ``` js\n> logger.log('error', 'hello', { message: 'world' });\n> logger.info('hello', { message: 'world' });\n> ```\n\n## Formats\n\nFormats in `winston` can be accessed from `winston.format`. They are\nimplemented in [`logform`](https://github.com/winstonjs/logform), a separate\nmodule from `winston`. This allows flexibility when writing your own transports\nin case you wish to include a default format with your transport.\n\nIn modern versions of `node` template strings are very performant and are the\nrecommended way for doing most end-user formatting. If you want to bespoke\nformat your logs, `winston.format.printf` is for you:\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst { combine, timestamp, label, printf } = format;\n\nconst myFormat = printf(({ level, message, label, timestamp }) => {\n  return `${timestamp} [${label}] ${level}: ${message}`;\n});\n\nconst logger = createLogger({\n  format: combine(\n    label({ label: 'right meow!' }),\n    timestamp(),\n    myFormat\n  ),\n  transports: [new transports.Console()]\n});\n```\n\nTo see what built-in formats are available and learn more about creating your\nown custom logging formats, see [`logform`][logform].\n\n### Combining formats\n\nAny number of formats may be combined into a single format using\n`format.combine`. Since `format.combine` takes no `opts`, as a convenience it\nreturns pre-created instance of the combined format.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst { combine, timestamp, label, prettyPrint } = format;\n\nconst logger = createLogger({\n  format: combine(\n    label({ label: 'right meow!' }),\n    timestamp(),\n    prettyPrint()\n  ),\n  transports: [new transports.Console()]\n})\n\nlogger.log({\n  level: 'info',\n  message: 'What time is the testing at?'\n});\n// Outputs:\n// { level: 'info',\n//   message: 'What time is the testing at?',\n//   label: 'right meow!',\n//   timestamp: '2017-09-30T03:57:26.875Z' }\n```\n\n### String interpolation\n\nThe `log` method provides the string interpolation using [util.format]. **It\nmust be enabled using `format.splat()`.**\n\nBelow is an example that defines a format with string interpolation of\nmessages using `format.splat` and then serializes the entire `info` message\nusing `format.simple`.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst logger = createLogger({\n  format: format.combine(\n    format.splat(),\n    format.simple()\n  ),\n  transports: [new transports.Console()]\n});\n\n// info: test message my string {}\nlogger.log('info', 'test message %s', 'my string');\n\n// info: test message 123 {}\nlogger.log('info', 'test message %d', 123);\n\n// info: test message first second {number: 123}\nlogger.log('info', 'test message %s, %s', 'first', 'second', { number: 123 });\n```\n\n### Filtering `info` Objects\n\nIf you wish to filter out a given `info` Object completely when logging then \nsimply return a falsey value.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\n\n// Ignore log messages if they have { private: true }\nconst ignorePrivate = format((info, opts) => {\n  if (info.private) { return false; }\n  return info;\n});\n\nconst logger = createLogger({\n  format: format.combine(\n    ignorePrivate(),\n    format.json()\n  ),\n  transports: [new transports.Console()]\n});\n\n// Outputs: {\"level\":\"error\",\"message\":\"Public error to share\"}\nlogger.log({\n  level: 'error',\n  message: 'Public error to share'\n});\n\n// Messages with { private: true } will not be written when logged.\nlogger.log({\n  private: true,\n  level: 'error',\n  message: 'This is super secret - hide it.'\n});\n```\n\nUse of `format.combine` will respect any falsey values return and stop\nevaluation of later formats in the series. For example:\n\n``` js\nconst { format } = require('winston');\nconst { combine, timestamp, label } = format;\n\nconst willNeverThrow = format.combine(\n  format(info => { return false })(), // Ignores everything\n  format(info => { throw new Error('Never reached') })()\n);\n```\n\n### Creating custom formats\n\nFormats are prototypal objects (i.e. class instances) that define a single \nmethod: `transform(info, opts)` and return the mutated `info`:\n\n- `info`: an object representing the log message.\n- `opts`: setting specific to the current instance of the format.\n\nThey are expected to return one of two things:\n\n- **An `info` Object** representing the modified `info` argument. Object \nreferences need not be preserved if immutability is preferred. All current \nbuilt-in formats consider `info` mutable, but [immutablejs] is being \nconsidered for future releases.\n- **A falsey value** indicating that the `info` argument should be ignored by the \ncaller. (See: [Filtering `info` Objects](#filtering-info-objects)) below.\n\n`winston.format` is designed to be as simple as possible. To define a new\nformat simple pass it a `transform(info, opts)` function to get a new\n`Format`.\n\nThe named `Format` returned can be used to create as many copies of the given\n`Format` as desired:\n\n``` js\nconst { format } = require('winston');\n\nconst volume = format((info, opts) => {\n  if (opts.yell) {\n    info.message = info.message.toUpperCase();\n  } else if (opts.whisper) {\n    info.message = info.message.toLowerCase();\n  }\n\n  return info;\n});\n\n// `volume` is now a function that returns instances of the format.\nconst scream = volume({ yell: true });\nconsole.dir(scream.transform({\n  level: 'info',\n  message: `sorry for making you YELL in your head!`\n}, scream.options));\n// {\n//   level: 'info'\n//   message: 'SORRY FOR MAKING YOU YELL IN YOUR HEAD!'\n// }\n\n// `volume` can be used multiple times to create different formats.\nconst whisper = volume({ whisper: true });\nconsole.dir(whisper.transform({\n  level: 'info',\n  message: `WHY ARE THEY MAKING US YELL SO MUCH!`\n}, whisper.options));\n// {\n//   level: 'info'\n//   message: 'why are they making us yell so much!'\n// }\n```\n\n## Logging Levels\n\nLogging levels in `winston` conform to the severity ordering specified by\n[RFC5424]: _severity of all levels is assumed to be numerically **ascending**\nfrom most important to least important._\n\nEach `level` is given a specific integer priority. The higher the priority the\nmore important the message is considered to be, and the lower the\ncorresponding integer priority.  For example, as specified exactly in RFC5424\nthe `syslog` levels are prioritized from 0 to 7 (highest to lowest).\n\n```js\n{ \n  emerg: 0, \n  alert: 1, \n  crit: 2, \n  error: 3, \n  warning: 4, \n  notice: 5, \n  info: 6, \n  debug: 7\n}\n```\n\nSimilarly, `npm` logging levels are prioritized from 0 to 5 (highest to\nlowest):\n\n``` js\n{ \n  error: 0, \n  warn: 1, \n  info: 2, \n  verbose: 3, \n  debug: 4, \n  silly: 5 \n}\n```\n\nIf you do not explicitly define the levels that `winston` should use, the\n`npm` levels above will be used.\n\n### Using Logging Levels\n\nSetting the level for your logging message can be accomplished in one of two\nways. You can pass a string representing the logging level to the log() method\nor use the level specified methods defined on every winston Logger.\n\n``` js\n//\n// Any logger instance\n//\nlogger.log('silly', \"127.0.0.1 - there's no place like home\");\nlogger.log('debug', \"127.0.0.1 - there's no place like home\");\nlogger.log('verbose', \"127.0.0.1 - there's no place like home\");\nlogger.log('info', \"127.0.0.1 - there's no place like home\");\nlogger.log('warn', \"127.0.0.1 - there's no place like home\");\nlogger.log('error', \"127.0.0.1 - there's no place like home\");\nlogger.info(\"127.0.0.1 - there's no place like home\");\nlogger.warn(\"127.0.0.1 - there's no place like home\");\nlogger.error(\"127.0.0.1 - there's no place like home\");\n\n//\n// Default logger\n//\nwinston.log('info', \"127.0.0.1 - there's no place like home\");\nwinston.info(\"127.0.0.1 - there's no place like home\");\n```\n\n`winston` allows you to define a `level` property on each transport which\nspecifies the **maximum** level of messages that a transport should log. For\nexample, using the `syslog` levels you could log only `error` messages to the\nconsole and everything `info` and below to a file (which includes `error`\nmessages):\n\n``` js\nconst logger = winston.createLogger({\n  levels: winston.config.syslog.levels,\n  transports: [\n    new winston.transports.Console({ level: 'error' }),\n    new winston.transports.File({\n      filename: 'combined.log',\n      level: 'info'\n    })\n  ]\n});\n```\n\nYou may also dynamically change the log level of a transport:\n\n``` js\nconst transports = {\n  console: new winston.transports.Console({ level: 'warn' }),\n  file: new winston.transports.File({ filename: 'combined.log', level: 'error' })\n};\n\nconst logger = winston.createLogger({\n  transports: [\n    transports.console,\n    transports.file\n  ]\n});\n\nlogger.info('Will not be logged in either transport!');\ntransports.console.level = 'info';\ntransports.file.level = 'info';\nlogger.info('Will be logged in both transports!');\n```\n\n`winston` supports customizable logging levels, defaulting to npm style\nlogging levels. Levels must be specified at the time of creating your logger.\n\n### Using Custom Logging Levels\n\nIn addition to the predefined `npm`, `syslog`, and `cli` levels available in\n`winston`, you can also choose to define your own:\n\n``` js\nconst myCustomLevels = {\n  levels: {\n    foo: 0,\n    bar: 1,\n    baz: 2,\n    foobar: 3\n  },\n  colors: {\n    foo: 'blue',\n    bar: 'green',\n    baz: 'yellow',\n    foobar: 'red'\n  }\n};\n\nconst customLevelLogger = winston.createLogger({ \n  levels: myCustomLevels.levels \n});\n\ncustomLevelLogger.foobar('some foobar level-ed message');\n```\n\nAlthough there is slight repetition in this data structure, it enables simple\nencapsulation if you do not want to have colors. If you do wish to have\ncolors, in addition to passing the levels to the Logger itself, you must make\nwinston aware of them:\n\n``` js\nwinston.addColors(myCustomLevels.colors);\n```\n\nThis enables loggers using the `colorize` formatter to appropriately color and style \nthe output of custom levels.\n\nAdditionally, you can also change background color and font style. \nFor example,\n``` js\nbaz: 'italic yellow',\nfoobar: 'bold red cyanBG'\n```\n\nPossible options are below.\n\n* Font styles: `bold`, `dim`, `italic`, `underline`, `inverse`, `hidden`, \n  `strikethrough`.\n\n* Font foreground colors: `black`, `red`, `green`, `yellow`, `blue`, `magenta`,\n  `cyan`, `white`, `gray`, `grey`.\n\n* Background colors: `blackBG`, `redBG`, `greenBG`, `yellowBG`, `blueBG`\n  `magentaBG`, `cyanBG`, `whiteBG`\n  \n### Colorizing Standard logging levels\n\nTo colorize the standard logging level add\n```js\nwinston.format.combine(\n  winston.format.colorize(),\n  winston.format.json()\n);\n```\nwhere `winston.format.json()` is whatever other formatter you want to use.  The `colorize` formatter must come before any formatters adding text you wish to color.\n\n## Transports\n\nThere are several [core transports] included in  `winston`, which leverage the\nbuilt-in networking and file I/O offered by Node.js core. In addition, there\nare [additional transports] written by members of the community.\n\n## Multiple transports of the same type\n\nIt is possible to use multiple transports of the same type e.g.\n`winston.transports.File` when you construct the transport.\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.File({\n      filename: 'combined.log',\n      level: 'info'\n    }),\n    new winston.transports.File({\n      filename: 'errors.log',\n      level: 'error'\n    })\n  ]\n});\n```\n\nIf you later want to remove one of these transports you can do so by using the\ntransport itself. e.g.:\n\n``` js\nconst combinedLogs = logger.transports.find(transport => {\n  return transport.filename === 'combined.log'\n});\n\nlogger.remove(combinedLogs);\n```\n\n## Adding Custom Transports\n\nAdding a custom transport is easy. All you need to do is accept any options\nyou need, implement a log() method, and consume it with `winston`.\n\n``` js\nconst Transport = require('winston-transport');\nconst util = require('util');\n\n//\n// Inherit from `winston-transport` so you can take advantage\n// of the base functionality and `.exceptions.handle()`.\n//\nmodule.exports = class YourCustomTransport extends Transport {\n  constructor(opts) {\n    super(opts);\n    //\n    // Consume any custom options here. e.g.:\n    // - Connection information for databases\n    // - Authentication information for APIs (e.g. loggly, papertrail, \n    //   logentries, etc.).\n    //\n  }\n\n  log(info, callback) {\n    setImmediate(() => {\n      this.emit('logged', info);\n    });\n\n    // Perform the writing to the remote service\n    callback();\n  }\n};\n```\n\n## Exceptions\n\n### Handling Uncaught Exceptions with winston\n\nWith `winston`, it is possible to catch and log `uncaughtException` events\nfrom your process. With your own logger instance you can enable this behavior\nwhen it's created or later on in your applications lifecycle:\n\n``` js\nconst { createLogger, transports } = require('winston');\n\n// Enable exception handling when you create your logger.\nconst logger = createLogger({\n  transports: [\n    new transports.File({ filename: 'combined.log' }) \n  ],\n  exceptionHandlers: [\n    new transports.File({ filename: 'exceptions.log' })\n  ]\n});\n\n// Or enable it later on by adding a transport or using `.exceptions.handle`\nconst logger = createLogger({\n  transports: [\n    new transports.File({ filename: 'combined.log' }) \n  ]\n});\n\n// Call exceptions.handle with a transport to handle exceptions\nlogger.exceptions.handle(\n  new transports.File({ filename: 'exceptions.log' })\n);\n```\n\nIf you want to use this feature with the default logger, simply call\n`.exceptions.handle()` with a transport instance.\n\n``` js\n//\n// You can add a separate exception logger by passing it to `.exceptions.handle`\n//\nwinston.exceptions.handle(\n  new winston.transports.File({ filename: 'path/to/exceptions.log' })\n);\n\n//\n// Alternatively you can set `handleExceptions` to true when adding transports\n// to winston.\n//\nwinston.add(new winston.transports.File({\n  filename: 'path/to/combined.log',\n  handleExceptions: true\n}));\n```\n\n### To Exit or Not to Exit\n\nBy default, winston will exit after logging an uncaughtException. If this is\nnot the behavior you want, set `exitOnError = false`\n\n``` js\nconst logger = winston.createLogger({ exitOnError: false });\n\n//\n// or, like this:\n//\nlogger.exitOnError = false;\n```\n\nWhen working with custom logger instances, you can pass in separate transports\nto the `exceptionHandlers` property or set `handleExceptions` on any\ntransport.\n\n##### Example 1\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.File({ filename: 'path/to/combined.log' })\n  ],\n  exceptionHandlers: [\n    new winston.transports.File({ filename: 'path/to/exceptions.log' })\n  ]\n});\n```\n\n##### Example 2\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console({\n      handleExceptions: true\n    })\n  ],\n  exitOnError: false\n});\n```\n\nThe `exitOnError` option can also be a function to prevent exit on only\ncertain types of errors:\n\n``` js\nfunction ignoreEpipe(err) {\n  return err.code !== 'EPIPE';\n}\n\nconst logger = winston.createLogger({ exitOnError: ignoreEpipe });\n\n//\n// or, like this:\n//\nlogger.exitOnError = ignoreEpipe;\n```\n\n## Profiling\n\nIn addition to logging messages and metadata, `winston` also has a simple\nprofiling mechanism implemented for any logger:\n\n``` js\n//\n// Start profile of 'test'\n//\nlogger.profile('test');\n\nsetTimeout(function () {\n  //\n  // Stop profile of 'test'. Logging will now take place:\n  //   '17 Jan 21:00:00 - info: test duration=1000ms'\n  //\n  logger.profile('test');\n}, 1000);\n```\n\nAlso you can start a timer and keep a reference that you can call `.done()``\non:\n\n``` js\n // Returns an object corresponding to a specific timing. When done\n // is called the timer will finish and log the duration. e.g.:\n //\n const profiler = logger.startTimer();\n setTimeout(function () {\n   profiler.done({ message: 'Logging message' });\n }, 1000);\n```\n\nAll profile messages are set to 'info' level by default, and both message and\nmetadata are optional.  For individual profile messages, you can override the default log level by supplying a metadata object with a `level` property:\n\n```js\nlogger.profile('test', { level: 'debug' });\n```\n\n## Querying Logs\n\n`winston` supports querying of logs with Loggly-like options. [See Loggly\nSearch API](https://www.loggly.com/docs/api-retrieving-data/). Specifically:\n`File`, `Couchdb`, `Redis`, `Loggly`, `Nssocket`, and `Http`.\n\n``` js\nconst options = {\n  from: new Date() - (24 * 60 * 60 * 1000),\n  until: new Date(),\n  limit: 10,\n  start: 0,\n  order: 'desc',\n  fields: ['message']\n};\n\n//\n// Find items logged between today and yesterday.\n//\nlogger.query(options, function (err, results) {\n  if (err) {\n    /* TODO: handle me */\n    throw err;\n  }\n\n  console.log(results);\n});\n```\n\n## Streaming Logs\nStreaming allows you to stream your logs back from your chosen transport.\n\n``` js\n//\n// Start at the end.\n//\nwinston.stream({ start: -1 }).on('log', function(log) {\n  console.log(log);\n});\n```\n\n## Further Reading\n\n### Using the Default Logger\n\nThe default logger is accessible through the `winston` module directly. Any\nmethod that you could call on an instance of a logger is available on the\ndefault logger:\n\n``` js\nconst winston = require('winston');\n\nwinston.log('info', 'Hello distributed log files!');\nwinston.info('Hello again distributed logs');\n\nwinston.level = 'debug';\nwinston.log('debug', 'Now my debug messages are written to console!');\n```\n\nBy default, no transports are set on the default logger. You must\nadd or remove transports via the `add()` and `remove()` methods:\n\n``` js\nconst files = new winston.transports.File({ filename: 'combined.log' });\nconst console = new winston.transports.Console();\n\nwinston.add(console);\nwinston.add(files);\nwinston.remove(console);\n```\n\nOr do it with one call to configure():\n\n``` js\nwinston.configure({\n  transports: [\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n```\n\nFor more documentation about working with each individual transport supported\nby `winston` see the [`winston` Transports](docs/transports.md) document.\n\n### Awaiting logs to be written in `winston`\n\nOften it is useful to wait for your logs to be written before exiting the\nprocess. Each instance of `winston.Logger` is also a [Node.js stream]. A\n`finish` event will be raised when all logs have flushed to all transports\nafter the stream has been ended.\n\n``` js\nconst transport = new winston.transports.Console();\nconst logger = winston.createLogger({\n  transports: [transport]\n});\n\nlogger.on('finish', function (info) {\n  // All `info` log messages has now been logged\n});\n\nlogger.info('CHILL WINSTON!', { seriously: true });\nlogger.end();\n```\n\nIt is also worth mentioning that the logger also emits an 'error' event which\nyou should handle or suppress if you don't want unhandled exceptions:\n\n``` js\n//\n// Handle errors\n//\nlogger.on('error', function (err) { /* Do Something */ });\n\n//\n// Or just suppress them.\n//\nlogger.emitErrs = false;\n```\n\n### Working with multiple Loggers in winston\n\nOften in larger, more complex, applications it is necessary to have multiple\nlogger instances with different settings. Each logger is responsible for a\ndifferent feature area (or category). This is exposed in `winston` in two\nways: through `winston.loggers` and instances of `winston.Container`. In fact,\n`winston.loggers` is just a predefined instance of `winston.Container`:\n\n``` js\nconst winston = require('winston');\nconst { format } = winston;\nconst { combine, label, json } = format;\n\n//\n// Configure the logger for `category1`\n//\nwinston.loggers.add('category1', {\n  format: combine(\n    label({ label: 'category one' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Console({ level: 'silly' }),\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n\n//\n// Configure the logger for `category2`\n//\nwinston.loggers.add('category2', {\n  format: combine(\n    label({ label: 'category two' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Http({ host: 'localhost', port:8080 })\n  ]\n});\n```\n\nNow that your loggers are setup, you can require winston _in any file in your\napplication_ and access these pre-configured loggers:\n\n``` js\nconst winston = require('winston');\n\n//\n// Grab your preconfigured loggers\n//\nconst category1 = winston.loggers.get('category1');\nconst category2 = winston.loggers.get('category2');\n\ncategory1.info('logging to file and console transports');\ncategory2.info('logging to http transport');\n```\n\nIf you prefer to manage the `Container` yourself, you can simply instantiate one:\n\n``` js\nconst winston = require('winston');\nconst { format } = winston;\nconst { combine, json } = format;\n\nconst container = new winston.Container();\n\ncontainer.add('category1', {\n  format: combine(\n    label({ label: 'category one' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Console({ level: 'silly' }),\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n\nconst category1 = container.get('category1');\ncategory1.info('logging to file and console transports');\n```\n\n## Installation\n\n``` bash\nnpm install winston\n```\n\n``` bash\nyarn add winston\n```\n\n## Run Tests\n\nAll of the winston tests are written with [`mocha`][mocha], [`nyc`][nyc], and \n[`assume`][assume].  They can be run with `npm`.\n\n``` bash\nnpm test\n```\n\n#### Author: [Charlie Robbins]\n#### Contributors: [Jarrett Cruger], [David Hyde], [Chris Alderson]\n\n[Transports]: #transports\n[Logging levels]: #logging-levels\n[Formats]: #formats\n[Using custom logging levels]: #using-custom-logging-levels\n[Adding Custom Transports]: #adding-custom-transports\n[core transports]: docs/transports.md#winston-core\n[additional transports]: docs/transports.md#additional-transports\n\n[RFC5424]: https://tools.ietf.org/html/rfc5424\n[util.format]: https://nodejs.org/dist/latest/docs/api/util.html#util_util_format_format_args\n[mocha]: https://mochajs.org\n[nyc]: https://github.com/istanbuljs/nyc\n[assume]: https://github.com/bigpipe/assume\n[logform]: https://github.com/winstonjs/logform#readme\n\n[Read the `winston@2.x` documentation]: https://github.com/winstonjs/winston/tree/2.x \n\n[quick-example]: https://github.com/winstonjs/winston/blob/master/examples/quick-start.js\n[examples]: https://github.com/winstonjs/winston/tree/master/examples\n\n[Charlie Robbins]: http://github.com/indexzero\n[Jarrett Cruger]: https://github.com/jcrugzz\n[David Hyde]: https://github.com/dabh\n[Chris Alderson]: https://github.com/chrisalderson\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "async": "^2.6.1",
                "diagnostics": "^1.1.1",
                "is-stream": "^1.1.0",
                "logform": "^2.1.1",
                "one-time": "0.0.4",
                "readable-stream": "^3.1.1",
                "stack-trace": "0.0.x",
                "triple-beam": "^1.3.0",
                "winston-transport": "^4.3.0"
              },
              "path": "/path/to/project/packages/shared/node_modules/winston",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Node.js driver for Snowflake",
          "devDependencies": {
            "async": "^2.6.1",
            "insert-module-globals": "^7.2.0",
            "mocha": "^7.1.1",
            "vinyl-buffer": "^1.0.1",
            "vinyl-source-stream": "^1.1.2"
          },
          "homepage": "https://github.com/snowflakedb/snowflake-connector-nodejs#readme",
          "license": "Apache-2.0",
          "name": "snowflake-sdk",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/snowflakedb/snowflake-connector-nodejs.git"
          },
          "scripts": {
            "test": "./scripts/run_test.sh"
          },
          "version": "1.5.2",
          "readme": "********************************************************************************\nNodeJS Driver for Snowflake\n********************************************************************************\n\n.. image:: https://github.com/snowflakedb/snowflake-connector-nodejs/workflows/Build%20and%20Test/badge.svg?branch=master\n       :target: https://github.com/snowflakedb/snowflake-connector-nodejs/actions?query=workflow%3A%22Build+and+Test%22+branch%3Amaster\n\n.. image:: https://img.shields.io/npm/v/snowflake-sdk.svg\n       :target: https://www.npmjs.com/package/snowflake-sdk\n\n.. image:: http://img.shields.io/:license-Apache%202-brightgreen.svg\n    :target: http://www.apache.org/licenses/LICENSE-2.0.txt\n\nInstall\n======================================================================\n\nInclude :code:`snowflake-sdk` in :code:`dependencies` section in :code:`package.json`:\n\n.. code-block:: json\n\n    {\n      \"name\": \"<your_application_name>\",\n      \"version\": \"<your_application_version>\",\n      \"dependencies\": {\n        \"...\": \"...\",\n        \"snowflake-sdk\": \"^1.1.0\",\n        \"...\": \"...\"\n      }\n    }\n\nAnd run the :code:`npm install`.\n\nDocs\n======================================================================\n\nFor detailed documentation and basic usage examples, please see the documentation \nat `NodeJS Driver for Snowflake <https://docs.snowflake.net/manuals/user-guide/nodejs-driver.html>`_\n\nTest\n======================================================================\n\nPrepare for Test\n----------------------------------------------------------------------\n\nSet the Snowflake connection info in ``parameters.json`` and place it in $HOME:\n\n.. code-block:: json\n\n    {\n        \"testconnection\": {\n            \"SNOWFLAKE_TEST_USER\":      \"<your_user>\",\n            \"SNOWFLAKE_TEST_PASSWORD\":  \"<your_password>\",\n            \"SNOWFLAKE_TEST_ACCOUNT\":   \"<your_account>\",\n            \"SNOWFLAKE_TEST_WAREHOUSE\": \"<your_warehouse>\",\n            \"SNOWFLAKE_TEST_DATABASE\":  \"<your_database>\",\n            \"SNOWFLAKE_TEST_SCHEMA\":    \"<your_schema>\",\n            \"SNOWFLAKE_TEST_ROLE\":      \"<your_role>\"\n        }\n    }\n\nRun Tests\n----------------------------------------------------------------------\n.. code-block:: bash\n\n    npm test\n\nPackage\n======================================================================\n\nThe npm package can be built by the command:\n\n.. code-block:: bash\n\n    npm pack\n\nNote it is not required to build a package to run tests blow.\n\nDevelopment\n======================================================================\n\nReformat Source code\n----------------------------------------------------------------------\n\nUse WebStorm code style file to format the source code.\n\n.. code-block:: bash\n\n    format.sh -mask \"*.js\" -settings $(pwd)/webstorm-codestyle.xml -R $(pwd)/lib/ -R $(pwd)/test -R $(pwd)/system_test\n",
          "readmeFilename": "README.rst",
          "optionalDependencies": {},
          "_dependencies": {
            "agent-base": "^2.1.1",
            "asn1.js-rfc2560": "^5.0.0",
            "asn1.js-rfc5280": "^3.0.0",
            "big-integer": "^1.6.43",
            "bignumber.js": "^2.4.0",
            "browser-request": "^0.3.3",
            "debug": "^3.2.6",
            "extend": "^3.0.2",
            "https-proxy-agent": "^3.0.0",
            "lodash": "^4.17.15",
            "mkdirp": "^1.0.3",
            "moment": "^2.23.0",
            "moment-timezone": "^0.5.15",
            "ocsp": "^1.2.0",
            "request": "^2.88.0",
            "simple-lru-cache": "^0.0.2",
            "uuid": "^3.3.2",
            "winston": "^3.1.0"
          },
          "path": "/path/to/project/packages/shared/node_modules/snowflake-sdk",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "description": "A Promise-based, TypeScript-friendly wrapper for the Snowflake SDK",
      "devDependencies": {
        "@types/node": "^11.15.2",
        "del-cli": "^3.0.0",
        "np": "^5.1.3",
        "ts-node": "^8.5.2",
        "tslint": "^5.20.1",
        "typescript": "^3.7.2"
      },
      "engines": {
        "node": ">=6.9.5"
      },
      "homepage": "https://github.com/natesilva/snowflake-promise#readme",
      "keywords": [
        "snowflake",
        "database",
        "data warehouse",
        "warehouse"
      ],
      "license": "MIT",
      "main": "build/src/index.js",
      "name": "snowflake-promise",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/natesilva/snowflake-promise.git"
      },
      "scripts": {
        "prepare": "del-cli build && tsc"
      },
      "types": "build/src/index.d.ts",
      "version": "2.2.0",
      "readme": "# snowflake-promise [![npm](https://img.shields.io/npm/v/snowflake-promise.svg)](https://www.npmjs.com/package/snowflake-promise) [![node](https://img.shields.io/node/v/snowflake-promise.svg)](https://www.npmjs.com/package/snowflake-promise)\n\nA Promise-based interface to your [Snowflake](https://www.snowflake.net/) data warehouse.\n\nThis is a wrapper for the [Snowflake SDK](https://www.npmjs.com/package/snowflake-sdk) for Node.js. It provides a Promise-based API instead of the core callback-based API.\n\n## Installation\n\n* `npm i snowflake-promise`\n\n## Basic usage\n\n```typescript\nconst Snowflake = require('snowflake-promise').Snowflake;\n// or, for TypeScript:\nimport { Snowflake } from 'snowflake-promise';\n\nasync function main() {\n  const snowflake = new Snowflake({\n    account: '<account name>',\n    username: '<username>',\n    password: '<password>',\n    database: 'SNOWFLAKE_SAMPLE_DATA',\n    schema: 'TPCH_SF1',\n    warehouse: 'DEMO_WH'\n  });\n\n  await snowflake.connect();\n\n  const rows = await snowflake.execute(\n    'SELECT COUNT(*) FROM CUSTOMER WHERE C_MKTSEGMENT=:1',\n    ['AUTOMOBILE']\n  );\n\n  console.log(rows);\n}\n\nmain();\n```\n\n## Connecting\n\nThe constructor takes up to three arguments:\n\n`new Snowflake(connectionOptions, [ loggingOptions, [ configureOptions ] ])`\n\n* `connectionOptions`\n  * Supported options are here: <https://docs.snowflake.net/manuals/user-guide/nodejs-driver-use.html#required-connection-options>\n* `loggingOptions`\n  * `logSql` (optional, function): If provided, this function will be called to log SQL\n    statements. For example, set `logSql` to `console.log` to log all issued SQL\n    statements to the console.\n  * `logLevel` (optional: `'error' | 'warn' | 'debug' | 'info' | 'trace'`): Turns on\n    SDK-level logging.\n* `configureOptions`\n  * `ocspFailOpen` (optional, boolean) (default: `true`): Enables OCSP fail-open\n    functionality. See <https://www.snowflake.com/blog/latest-changes-to-how-snowflake-handles-ocsp/> for more information.\n\n## More examples\n\n* [Streaming result rows](examples/streaming.js)\n* [Using traditional Promise `then` syntax (and older versions of Node.js)](examples/oldSchool.js)\n    * Node v6.9.5 is the oldest supported version\n* [Turn on logging](examples/logging.js)\n",
      "readmeFilename": "README.md",
      "optionalDependencies": {},
      "_dependencies": {
        "snowflake-sdk": "^1.3.2"
      },
      "path": "/path/to/project/packages/shared/node_modules/snowflake-promise",
      "error": "[Circular]",
      "extraneous": false
    },
    "@project/types": {
      "requiredBy": "^0.0.1",
      "missing": true,
      "optional": false
    }
  },
  "scripts": {
    "clear": "npm run clear:modules && npm run clear:lib && npm run clear:package",
    "clear:all": "npm run clear && npm run clear:lock",
    "clear:modules": "rm -rf ./node_modules",
    "clear:lock": "rm -f ./package-lock.json",
    "clear:lib": "rm -rf ./lib",
    "clear:package": "rm -rf ./.package",
    "tsc": "npx tsc -v && npx tsc",
    "test": "NODE_ENV=test npx jest --verbose --colors --config jest.config.unit.json"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.41",
    "@types/jest": "^25.1.2",
    "@types/pino": "^5.15.5",
    "aws-lambda": "^1.0.5",
    "aws-sdk": "^2.619.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@project/shared@0.0.1",
  "_shrinkwrap": {
    "name": "@project/shared",
    "version": "0.0.1",
    "lockfileVersion": 1,
    "requires": true,
    "dependencies": {
      "@hapi/bourne": {
        "version": "1.3.2",
        "resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
        "integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA=="
      },
      "@jest/types": {
        "version": "25.1.0",
        "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.1.0.tgz",
        "integrity": "sha512-VpOtt7tCrgvamWZh1reVsGADujKigBUFTi19mlRjqEGsE8qH4r3s+skY33dNdXOwyZIvuftZ5tqdF1IgsMejMA==",
        "dev": true,
        "requires": {
          "@types/istanbul-lib-coverage": "^2.0.0",
          "@types/istanbul-reports": "^1.1.1",
          "@types/yargs": "^15.0.0",
          "chalk": "^3.0.0"
        },
        "dependencies": {
          "ansi-styles": {
            "version": "4.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
            "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
            "dev": true,
            "requires": {
              "@types/color-name": "^1.1.1",
              "color-convert": "^2.0.1"
            }
          },
          "chalk": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
            "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
            "dev": true,
            "requires": {
              "ansi-styles": "^4.1.0",
              "supports-color": "^7.1.0"
            }
          },
          "color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "requires": {
              "color-name": "~1.1.4"
            }
          },
          "color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true
          },
          "has-flag": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
            "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
            "dev": true
          },
          "supports-color": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
            "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
            "dev": true,
            "requires": {
              "has-flag": "^4.0.0"
            }
          }
        }
      },
      "@sindresorhus/is": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-2.1.0.tgz",
        "integrity": "sha512-lXKXfypKo644k4Da4yXkPCrwcvn6SlUW2X2zFbuflKHNjf0w9htru01bo26uMhleMXsDmnZ12eJLdrAZa9MANg=="
      },
      "@szmarczak/http-timer": {
        "version": "4.0.5",
        "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.5.tgz",
        "integrity": "sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==",
        "requires": {
          "defer-to-connect": "^2.0.0"
        }
      },
      "@types/aws-lambda": {
        "version": "8.10.41",
        "resolved": "https://registry.npmjs.org/@types/aws-lambda/-/aws-lambda-8.10.41.tgz",
        "integrity": "sha512-TEmQ6RjtcL0VojmOzMS6uv1KgWK4hExAOZofBiOnbOp0pdiDi6VRlMrxsoC0BXfev8OjoS/QlwLXFbFJoNhgJg==",
        "dev": true
      },
      "@types/cacheable-request": {
        "version": "6.0.1",
        "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.1.tgz",
        "integrity": "sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==",
        "requires": {
          "@types/http-cache-semantics": "*",
          "@types/keyv": "*",
          "@types/node": "*",
          "@types/responselike": "*"
        }
      },
      "@types/color-name": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/@types/color-name/-/color-name-1.1.1.tgz",
        "integrity": "sha512-rr+OQyAjxze7GgWrSaJwydHStIhHq2lvY3BOC2Mj7KnzI7XK0Uw1TOOdI9lDoajEbSWLiYgoo4f1R51erQfhPQ==",
        "dev": true
      },
      "@types/http-cache-semantics": {
        "version": "4.0.0",
        "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz",
        "integrity": "sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A=="
      },
      "@types/istanbul-lib-coverage": {
        "version": "2.0.1",
        "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.1.tgz",
        "integrity": "sha512-hRJD2ahnnpLgsj6KWMYSrmXkM3rm2Dl1qkx6IOFD5FnuNPXJIG5L0dhgKXCYTRMGzU4n0wImQ/xfmRc4POUFlg==",
        "dev": true
      },
      "@types/istanbul-lib-report": {
        "version": "3.0.0",
        "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
        "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
        "dev": true,
        "requires": {
          "@types/istanbul-lib-coverage": "*"
        }
      },
      "@types/istanbul-reports": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-1.1.1.tgz",
        "integrity": "sha512-UpYjBi8xefVChsCoBpKShdxTllC9pwISirfoZsUa2AAdQg/Jd2KQGtSbw+ya7GPo7x/wAPlH6JBhKhAsXUEZNA==",
        "dev": true,
        "requires": {
          "@types/istanbul-lib-coverage": "*",
          "@types/istanbul-lib-report": "*"
        }
      },
      "@types/jest": {
        "version": "25.1.2",
        "resolved": "https://registry.npmjs.org/@types/jest/-/jest-25.1.2.tgz",
        "integrity": "sha512-EsPIgEsonlXmYV7GzUqcvORsSS9Gqxw/OvkGwHfAdpjduNRxMlhsav0O5Kb0zijc/eXSO/uW6SJt9nwull8AUQ==",
        "dev": true,
        "requires": {
          "jest-diff": "^25.1.0",
          "pretty-format": "^25.1.0"
        }
      },
      "@types/keyv": {
        "version": "3.1.1",
        "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.1.tgz",
        "integrity": "sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==",
        "requires": {
          "@types/node": "*"
        }
      },
      "@types/node": {
        "version": "13.7.1",
        "resolved": "https://registry.npmjs.org/@types/node/-/node-13.7.1.tgz",
        "integrity": "sha512-Zq8gcQGmn4txQEJeiXo/KiLpon8TzAl0kmKH4zdWctPj05nWwp1ClMdAVEloqrQKfaC48PNLdgN/aVaLqUrluA=="
      },
      "@types/pino": {
        "version": "5.15.5",
        "resolved": "https://registry.npmjs.org/@types/pino/-/pino-5.15.5.tgz",
        "integrity": "sha512-UWEzZVLZ9NGNMeQrkckfsUuyPNwmIIhSNBulLL13Eh0QEebsq/QXd4x8OKsb1O+OkYBlWl5F90HZ9UFOjWWCbg==",
        "dev": true,
        "requires": {
          "@types/node": "*",
          "@types/pino-std-serializers": "*",
          "@types/sonic-boom": "*"
        }
      },
      "@types/pino-std-serializers": {
        "version": "2.4.0",
        "resolved": "https://registry.npmjs.org/@types/pino-std-serializers/-/pino-std-serializers-2.4.0.tgz",
        "integrity": "sha512-eAdu+NW1IkCdmp85SnhyKha+OOREQMT9lXaoICQxa7bhSauRiLzu3WSNt9Mf2piuJvWeXF/G0hGWHr63xNpIRA==",
        "dev": true
      },
      "@types/responselike": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
        "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
        "requires": {
          "@types/node": "*"
        }
      },
      "@types/sonic-boom": {
        "version": "0.7.0",
        "resolved": "https://registry.npmjs.org/@types/sonic-boom/-/sonic-boom-0.7.0.tgz",
        "integrity": "sha512-AfqR0fZMoUXUNwusgXKxcE9DPlHNDHQp6nKYUd4PSRpLobF5CCevSpyTEBcVZreqaWKCnGBr9KI1fHMTttoB7A==",
        "dev": true,
        "requires": {
          "@types/node": "*"
        }
      },
      "@types/yargs": {
        "version": "15.0.3",
        "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.3.tgz",
        "integrity": "sha512-XCMQRK6kfpNBixHLyHUsGmXrpEmFFxzMrcnSXFMziHd8CoNJo8l16FkHyQq4x+xbM7E2XL83/O78OD8u+iZTdQ==",
        "dev": true,
        "requires": {
          "@types/yargs-parser": "*"
        }
      },
      "@types/yargs-parser": {
        "version": "15.0.0",
        "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-15.0.0.tgz",
        "integrity": "sha512-FA/BWv8t8ZWJ+gEOnLLd8ygxH/2UFbAvgEonyfN6yWGLKc7zVjbpl2Y4CTjid9h2RfgPP6SEt6uHwEOply00yw==",
        "dev": true
      },
      "agent-base": {
        "version": "2.1.1",
        "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-2.1.1.tgz",
        "integrity": "sha1-1t4Q1a9hMtW9aSQn1G/FOFOQlMc=",
        "requires": {
          "extend": "~3.0.0",
          "semver": "~5.0.1"
        }
      },
      "ajv": {
        "version": "6.12.2",
        "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.2.tgz",
        "integrity": "sha512-k+V+hzjm5q/Mr8ef/1Y9goCmlsK4I6Sm74teeyGvFk1XrOsbsKLjEdrvny42CZ+a8sXbk8KWpY/bDwS+FLL2UQ==",
        "requires": {
          "fast-deep-equal": "^3.1.1",
          "fast-json-stable-stringify": "^2.0.0",
          "json-schema-traverse": "^0.4.1",
          "uri-js": "^4.2.2"
        }
      },
      "ansi-regex": {
        "version": "5.0.0",
        "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
        "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
        "dev": true
      },
      "ansi-styles": {
        "version": "3.2.1",
        "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
        "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
        "requires": {
          "color-convert": "^1.9.0"
        }
      },
      "argparse": {
        "version": "1.0.10",
        "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
        "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
        "dev": true,
        "requires": {
          "sprintf-js": "~1.0.2"
        }
      },
      "args": {
        "version": "5.0.1",
        "resolved": "https://registry.npmjs.org/args/-/args-5.0.1.tgz",
        "integrity": "sha512-1kqmFCFsPffavQFGt8OxJdIcETti99kySRUPMpOhaGjL6mRJn8HFU1OxKY5bMqfZKUwTQc1mZkAjmGYaVOHFtQ==",
        "requires": {
          "camelcase": "5.0.0",
          "chalk": "2.4.2",
          "leven": "2.1.0",
          "mri": "1.1.4"
        }
      },
      "asn1": {
        "version": "0.2.4",
        "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
        "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
        "requires": {
          "safer-buffer": "~2.1.0"
        }
      },
      "asn1.js": {
        "version": "5.3.0",
        "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-5.3.0.tgz",
        "integrity": "sha512-WHnQJFcOrIWT1RLOkFFBQkFVvyt9BPOOrH+Dp152Zk4R993rSzXUGPmkybIcUFhHE2d/iHH+nCaOWVCDbO8fgA==",
        "requires": {
          "bn.js": "^4.0.0",
          "inherits": "^2.0.1",
          "minimalistic-assert": "^1.0.0",
          "safer-buffer": "^2.1.0"
        }
      },
      "asn1.js-rfc2560": {
        "version": "5.0.1",
        "resolved": "https://registry.npmjs.org/asn1.js-rfc2560/-/asn1.js-rfc2560-5.0.1.tgz",
        "integrity": "sha512-1PrVg6kuBziDN3PGFmRk3QrjpKvP9h/Hv5yMrFZvC1kpzP6dQRzf5BpKstANqHBkaOUmTpakJWhicTATOA/SbA==",
        "requires": {
          "asn1.js-rfc5280": "^3.0.0"
        }
      },
      "asn1.js-rfc5280": {
        "version": "3.0.0",
        "resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-3.0.0.tgz",
        "integrity": "sha512-Y2LZPOWeZ6qehv698ZgOGGCZXBQShObWnGthTrIFlIQjuV1gg2B8QOhWFRExq/MR1VnPpIIe7P9vX2vElxv+Pg==",
        "requires": {
          "asn1.js": "^5.0.0"
        }
      },
      "assert-plus": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
        "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
      },
      "async": {
        "version": "1.5.2",
        "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
        "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="
      },
      "asynckit": {
        "version": "0.4.0",
        "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
        "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
      },
      "aws-lambda": {
        "version": "1.0.5",
        "resolved": "https://registry.npmjs.org/aws-lambda/-/aws-lambda-1.0.5.tgz",
        "integrity": "sha512-rRBZT5mitbeb/qdqHrFiymFQ8k+uc8WlN2Y16OhsCEZzYHKRqFzRirO7gIozDohNuu7T27S6w88KBFpI0cS1NQ==",
        "dev": true,
        "requires": {
          "aws-sdk": "*",
          "commander": "^3.0.2",
          "js-yaml": "^3.13.1",
          "watchpack": "^2.0.0-beta.10"
        }
      },
      "aws-sdk": {
        "version": "2.620.0",
        "resolved": "https://registry.npmjs.org/aws-sdk/-/aws-sdk-2.620.0.tgz",
        "integrity": "sha512-j+PGKbYwk5OjzbCFbxzRkcJVEvfdn9YFkrU8dJdjleYf9AzUSUpTjMyZsyUPOKxJxdNdA9FYTs43WdtSKHZa0A==",
        "dev": true,
        "requires": {
          "buffer": "4.9.1",
          "events": "1.1.1",
          "ieee754": "1.1.13",
          "jmespath": "0.15.0",
          "querystring": "0.2.0",
          "sax": "1.2.1",
          "url": "0.10.3",
          "uuid": "3.3.2",
          "xml2js": "0.4.19"
        }
      },
      "aws-sign2": {
        "version": "0.7.0",
        "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
        "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
      },
      "aws4": {
        "version": "1.9.1",
        "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
        "integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug=="
      },
      "base64-js": {
        "version": "1.3.1",
        "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
        "integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g==",
        "dev": true
      },
      "bcrypt-pbkdf": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
        "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
        "requires": {
          "tweetnacl": "^0.14.3"
        }
      },
      "big-integer": {
        "version": "1.6.48",
        "resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.48.tgz",
        "integrity": "sha512-j51egjPa7/i+RdiRuJbPdJ2FIUYYPhvYLjzoYbcMMm62ooO6F94fETG4MTs46zPAF9Brs04OajboA/qTGuz78w=="
      },
      "bignumber.js": {
        "version": "2.4.0",
        "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-2.4.0.tgz",
        "integrity": "sha1-g4qZLan51zfg9LLbC+YrsJ3Qxeg="
      },
      "bn.js": {
        "version": "4.11.8",
        "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
        "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="
      },
      "browser-request": {
        "version": "0.3.3",
        "resolved": "https://registry.npmjs.org/browser-request/-/browser-request-0.3.3.tgz",
        "integrity": "sha1-ns5bWsqJopkyJC4Yv5M975h2zBc="
      },
      "buffer": {
        "version": "4.9.1",
        "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",
        "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",
        "dev": true,
        "requires": {
          "base64-js": "^1.0.2",
          "ieee754": "^1.1.4",
          "isarray": "^1.0.0"
        }
      },
      "cacheable-lookup": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-2.0.0.tgz",
        "integrity": "sha512-s2piO6LvA7xnL1AR03wuEdSx3BZT3tIJpZ56/lcJwzO/6DTJZlTs7X3lrvPxk6d1PlDe6PrVe2TjlUIZNFglAQ==",
        "requires": {
          "keyv": "^4.0.0"
        }
      },
      "cacheable-request": {
        "version": "7.0.1",
        "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.1.tgz",
        "integrity": "sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==",
        "requires": {
          "clone-response": "^1.0.2",
          "get-stream": "^5.1.0",
          "http-cache-semantics": "^4.0.0",
          "keyv": "^4.0.0",
          "lowercase-keys": "^2.0.0",
          "normalize-url": "^4.1.0",
          "responselike": "^2.0.0"
        }
      },
      "camelcase": {
        "version": "5.0.0",
        "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
        "integrity": "sha512-faqwZqnWxbxn+F1d399ygeamQNy3lPp/H9H6rNrqYh4FSVCtcY+3cub1MxA8o9mDd55mM8Aghuu/kuyYA6VTsA=="
      },
      "caseless": {
        "version": "0.12.0",
        "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
        "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
      },
      "chalk": {
        "version": "2.4.2",
        "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
        "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
        "requires": {
          "ansi-styles": "^3.2.1",
          "escape-string-regexp": "^1.0.5",
          "supports-color": "^5.3.0"
        }
      },
      "clone-response": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
        "integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
        "requires": {
          "mimic-response": "^1.0.0"
        },
        "dependencies": {
          "mimic-response": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
            "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
          }
        }
      },
      "color": {
        "version": "3.0.0",
        "resolved": "https://registry.npmjs.org/color/-/color-3.0.0.tgz",
        "integrity": "sha512-jCpd5+s0s0t7p3pHQKpnJ0TpQKKdleP71LWcA0aqiljpiuAkOSUFN/dyH8ZwF0hRmFlrIuRhufds1QyEP9EB+w==",
        "requires": {
          "color-convert": "^1.9.1",
          "color-string": "^1.5.2"
        }
      },
      "color-convert": {
        "version": "1.9.3",
        "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
        "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
        "requires": {
          "color-name": "1.1.3"
        }
      },
      "color-name": {
        "version": "1.1.3",
        "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
        "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
      },
      "color-string": {
        "version": "1.5.3",
        "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
        "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
        "requires": {
          "color-name": "^1.0.0",
          "simple-swizzle": "^0.2.2"
        }
      },
      "colornames": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/colornames/-/colornames-1.1.1.tgz",
        "integrity": "sha1-+IiQMGhcfE/54qVZ9Qd+t2qBb5Y="
      },
      "colors": {
        "version": "1.4.0",
        "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
        "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA=="
      },
      "colorspace": {
        "version": "1.1.2",
        "resolved": "https://registry.npmjs.org/colorspace/-/colorspace-1.1.2.tgz",
        "integrity": "sha512-vt+OoIP2d76xLhjwbBaucYlNSpPsrJWPlBTtwCpQKIu6/CSMutyzX93O/Do0qzpH3YoHEes8YEFXyZ797rEhzQ==",
        "requires": {
          "color": "3.0.x",
          "text-hex": "1.0.x"
        }
      },
      "combined-stream": {
        "version": "1.0.8",
        "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
        "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
        "requires": {
          "delayed-stream": "~1.0.0"
        }
      },
      "commander": {
        "version": "3.0.2",
        "resolved": "https://registry.npmjs.org/commander/-/commander-3.0.2.tgz",
        "integrity": "sha512-Gar0ASD4BDyKC4hl4DwHqDrmvjoxWKZigVnAbn5H1owvm4CxCPdb0HQDehwNYMJpla5+M2tPmPARzhtYuwpHow==",
        "dev": true
      },
      "core-util-is": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
        "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
      },
      "csv-parse": {
        "version": "4.8.5",
        "resolved": "https://registry.npmjs.org/csv-parse/-/csv-parse-4.8.5.tgz",
        "integrity": "sha512-rpsLmlLWJZifmLzZEVGbZ9phWnJyi+cCbCGYr4vX2NaHFtgbmQPFk+WmMkmMkQXgsIUn6CgnK9cTuUAfFjoXbA=="
      },
      "dashdash": {
        "version": "1.14.1",
        "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
        "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
        "requires": {
          "assert-plus": "^1.0.0"
        }
      },
      "dateformat": {
        "version": "3.0.3",
        "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-3.0.3.tgz",
        "integrity": "sha512-jyCETtSl3VMZMWeRo7iY1FL19ges1t55hMo5yaam4Jrsm5EPL89UQkoQRyiI+Yf4k8r2ZpdngkV8hr1lIdjb3Q=="
      },
      "debug": {
        "version": "3.2.6",
        "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
        "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
        "requires": {
          "ms": "^2.1.1"
        }
      },
      "decompress-response": {
        "version": "5.0.0",
        "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-5.0.0.tgz",
        "integrity": "sha512-TLZWWybuxWgoW7Lykv+gq9xvzOsUjQ9tF09Tj6NSTYGMTCHNXzrPnD6Hi+TgZq19PyTAGH4Ll/NIM/eTGglnMw==",
        "requires": {
          "mimic-response": "^2.0.0"
        }
      },
      "defer-to-connect": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.0.tgz",
        "integrity": "sha512-bYL2d05vOSf1JEZNx5vSAtPuBMkX8K9EUutg7zlKvTqKXHt7RhWJFbmd7qakVuf13i+IkGmp6FwSsONOf6VYIg=="
      },
      "delayed-stream": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
        "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
      },
      "diagnostics": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/diagnostics/-/diagnostics-1.1.1.tgz",
        "integrity": "sha512-8wn1PmdunLJ9Tqbx+Fx/ZEuHfJf4NKSN2ZBj7SJC/OWRWha843+WsTjqMe1B5E3p28jqBlp+mJ2fPVxPyNgYKQ==",
        "requires": {
          "colorspace": "1.1.x",
          "enabled": "1.0.x",
          "kuler": "1.0.x"
        }
      },
      "diff-sequences": {
        "version": "25.1.0",
        "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-25.1.0.tgz",
        "integrity": "sha512-nFIfVk5B/NStCsJ+zaPO4vYuLjlzQ6uFvPxzYyHlejNZ/UGa7G/n7peOXVrVNvRuyfstt+mZQYGpjxg9Z6N8Kw==",
        "dev": true
      },
      "duplexer3": {
        "version": "0.1.4",
        "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
        "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI="
      },
      "ecc-jsbn": {
        "version": "0.1.2",
        "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
        "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
        "requires": {
          "jsbn": "~0.1.0",
          "safer-buffer": "^2.1.0"
        }
      },
      "enabled": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
        "integrity": "sha1-ll9lE9LC0cX0ZStkouM5ZGf8L5M=",
        "requires": {
          "env-variable": "0.0.x"
        }
      },
      "end-of-stream": {
        "version": "1.4.4",
        "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
        "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
        "requires": {
          "once": "^1.4.0"
        }
      },
      "env-variable": {
        "version": "0.0.6",
        "resolved": "https://registry.npmjs.org/env-variable/-/env-variable-0.0.6.tgz",
        "integrity": "sha512-bHz59NlBbtS0NhftmR8+ExBEekE7br0e01jw+kk0NDro7TtZzBYZ5ScGPs3OmwnpyfHTHOtr1Y6uedCdrIldtg=="
      },
      "es6-promise": {
        "version": "4.2.8",
        "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
        "integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w=="
      },
      "es6-promisify": {
        "version": "5.0.0",
        "resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
        "integrity": "sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=",
        "requires": {
          "es6-promise": "^4.0.3"
        }
      },
      "escape-string-regexp": {
        "version": "1.0.5",
        "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
        "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
      },
      "esprima": {
        "version": "4.0.1",
        "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
        "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
        "dev": true
      },
      "events": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/events/-/events-1.1.1.tgz",
        "integrity": "sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ=",
        "dev": true
      },
      "extend": {
        "version": "3.0.2",
        "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
        "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
      },
      "extsprintf": {
        "version": "1.3.0",
        "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
        "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
      },
      "fast-deep-equal": {
        "version": "3.1.1",
        "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
        "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA=="
      },
      "fast-json-stable-stringify": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
        "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
      },
      "fast-redact": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-2.0.0.tgz",
        "integrity": "sha512-zxpkULI9W9MNTK2sJ3BpPQrTEXFNESd2X6O1tXMFpK/XM0G5c5Rll2EVYZH2TqI3xRGK/VaJ+eEOt7pnENJpeA=="
      },
      "fast-safe-stringify": {
        "version": "2.0.7",
        "resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz",
        "integrity": "sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA=="
      },
      "fecha": {
        "version": "2.3.3",
        "resolved": "https://registry.npmjs.org/fecha/-/fecha-2.3.3.tgz",
        "integrity": "sha512-lUGBnIamTAwk4znq5BcqsDaxSmZ9nDVJaij6NvRt/Tg4R69gERA+otPKbS86ROw9nxVMw2/mp1fnaiWqbs6Sdg=="
      },
      "flatstr": {
        "version": "1.0.12",
        "resolved": "https://registry.npmjs.org/flatstr/-/flatstr-1.0.12.tgz",
        "integrity": "sha512-4zPxDyhCyiN2wIAtSLI6gc82/EjqZc1onI4Mz/l0pWrAlsSfYH/2ZIcU+e3oA2wDwbzIWNKwa23F8rh6+DRWkw=="
      },
      "forever-agent": {
        "version": "0.6.1",
        "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
        "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
      },
      "form-data": {
        "version": "2.3.3",
        "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
        "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
        "requires": {
          "asynckit": "^0.4.0",
          "combined-stream": "^1.0.6",
          "mime-types": "^2.1.12"
        }
      },
      "get-stream": {
        "version": "5.1.0",
        "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
        "integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
        "requires": {
          "pump": "^3.0.0"
        }
      },
      "getpass": {
        "version": "0.1.7",
        "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
        "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
        "requires": {
          "assert-plus": "^1.0.0"
        }
      },
      "glob-to-regexp": {
        "version": "0.4.1",
        "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
        "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
        "dev": true
      },
      "got": {
        "version": "10.6.0",
        "resolved": "https://registry.npmjs.org/got/-/got-10.6.0.tgz",
        "integrity": "sha512-3LIdJNTdCFbbJc+h/EH0V5lpNpbJ6Bfwykk21lcQvQsEcrzdi/ltCyQehFHLzJ/ka0UMH4Slg0hkYvAZN9qUDg==",
        "requires": {
          "@sindresorhus/is": "^2.0.0",
          "@szmarczak/http-timer": "^4.0.0",
          "@types/cacheable-request": "^6.0.1",
          "cacheable-lookup": "^2.0.0",
          "cacheable-request": "^7.0.1",
          "decompress-response": "^5.0.0",
          "duplexer3": "^0.1.4",
          "get-stream": "^5.0.0",
          "lowercase-keys": "^2.0.0",
          "mimic-response": "^2.1.0",
          "p-cancelable": "^2.0.0",
          "p-event": "^4.0.0",
          "responselike": "^2.0.0",
          "to-readable-stream": "^2.0.0",
          "type-fest": "^0.10.0"
        }
      },
      "graceful-fs": {
        "version": "4.2.3",
        "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz",
        "integrity": "sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ==",
        "dev": true
      },
      "har-schema": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
        "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
      },
      "har-validator": {
        "version": "5.1.3",
        "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
        "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
        "requires": {
          "ajv": "^6.5.5",
          "har-schema": "^2.0.0"
        }
      },
      "has-flag": {
        "version": "3.0.0",
        "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
        "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
      },
      "http-cache-semantics": {
        "version": "4.1.0",
        "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
        "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ=="
      },
      "http-signature": {
        "version": "1.2.0",
        "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
        "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
        "requires": {
          "assert-plus": "^1.0.0",
          "jsprim": "^1.2.2",
          "sshpk": "^1.7.0"
        }
      },
      "https-proxy-agent": {
        "version": "3.0.1",
        "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-3.0.1.tgz",
        "integrity": "sha512-+ML2Rbh6DAuee7d07tYGEKOEi2voWPUGan+ExdPbPW6Z3svq+JCqr0v8WmKPOkz1vOVykPCBSuobe7G8GJUtVg==",
        "requires": {
          "agent-base": "^4.3.0",
          "debug": "^3.1.0"
        },
        "dependencies": {
          "agent-base": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.3.0.tgz",
            "integrity": "sha512-salcGninV0nPrwpGNn4VTXBb1SOuXQBiqbrNXoeizJsHrsL6ERFM2Ne3JUSBWRE6aeNJI2ROP/WEEIDUiDe3cg==",
            "requires": {
              "es6-promisify": "^5.0.0"
            }
          }
        }
      },
      "ieee754": {
        "version": "1.1.13",
        "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
        "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg==",
        "dev": true
      },
      "inherits": {
        "version": "2.0.4",
        "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
        "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
      },
      "is-arrayish": {
        "version": "0.3.2",
        "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
        "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ=="
      },
      "is-stream": {
        "version": "1.1.0",
        "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
        "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="
      },
      "is-typedarray": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
        "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
      },
      "isarray": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
        "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
      },
      "isstream": {
        "version": "0.1.2",
        "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
        "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
      },
      "jest-diff": {
        "version": "25.1.0",
        "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-25.1.0.tgz",
        "integrity": "sha512-nepXgajT+h017APJTreSieh4zCqnSHEJ1iT8HDlewu630lSJ4Kjjr9KNzm+kzGwwcpsDE6Snx1GJGzzsefaEHw==",
        "dev": true,
        "requires": {
          "chalk": "^3.0.0",
          "diff-sequences": "^25.1.0",
          "jest-get-type": "^25.1.0",
          "pretty-format": "^25.1.0"
        },
        "dependencies": {
          "ansi-styles": {
            "version": "4.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
            "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
            "dev": true,
            "requires": {
              "@types/color-name": "^1.1.1",
              "color-convert": "^2.0.1"
            }
          },
          "chalk": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
            "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
            "dev": true,
            "requires": {
              "ansi-styles": "^4.1.0",
              "supports-color": "^7.1.0"
            }
          },
          "color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "requires": {
              "color-name": "~1.1.4"
            }
          },
          "color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true
          },
          "has-flag": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
            "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
            "dev": true
          },
          "supports-color": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
            "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
            "dev": true,
            "requires": {
              "has-flag": "^4.0.0"
            }
          }
        }
      },
      "jest-get-type": {
        "version": "25.1.0",
        "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.1.0.tgz",
        "integrity": "sha512-yWkBnT+5tMr8ANB6V+OjmrIJufHtCAqI5ic2H40v+tRqxDmE0PGnIiTyvRWFOMtmVHYpwRqyazDbTnhpjsGvLw==",
        "dev": true
      },
      "jmespath": {
        "version": "0.15.0",
        "resolved": "https://registry.npmjs.org/jmespath/-/jmespath-0.15.0.tgz",
        "integrity": "sha1-o/Iiqarp+Wb10nx5ZRDigJF2Qhc="
      },
      "joycon": {
        "version": "2.2.5",
        "resolved": "https://registry.npmjs.org/joycon/-/joycon-2.2.5.tgz",
        "integrity": "sha512-YqvUxoOcVPnCp0VU1/56f+iKSdvIRJYPznH22BdXV3xMk75SFXhWeJkZ8C9XxUWt1b5x2X1SxuFygW1U0FmkEQ=="
      },
      "js-yaml": {
        "version": "3.13.1",
        "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
        "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
        "dev": true,
        "requires": {
          "argparse": "^1.0.7",
          "esprima": "^4.0.0"
        }
      },
      "jsbn": {
        "version": "0.1.1",
        "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
        "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
      },
      "json-buffer": {
        "version": "3.0.1",
        "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
        "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ=="
      },
      "json-schema": {
        "version": "0.2.3",
        "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
        "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
      },
      "json-schema-traverse": {
        "version": "0.4.1",
        "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
        "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
      },
      "json-stringify-safe": {
        "version": "5.0.1",
        "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
        "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
      },
      "jsprim": {
        "version": "1.4.1",
        "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
        "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
        "requires": {
          "assert-plus": "1.0.0",
          "extsprintf": "1.3.0",
          "json-schema": "0.2.3",
          "verror": "1.10.0"
        }
      },
      "keyv": {
        "version": "4.0.0",
        "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.0.0.tgz",
        "integrity": "sha512-U7ioE8AimvRVLfw4LffyOIRhL2xVgmE8T22L6i0BucSnBUyv4w+I7VN/zVZwRKHOI6ZRUcdMdWHQ8KSUvGpEog==",
        "requires": {
          "json-buffer": "3.0.1"
        }
      },
      "kuler": {
        "version": "1.0.1",
        "resolved": "https://registry.npmjs.org/kuler/-/kuler-1.0.1.tgz",
        "integrity": "sha512-J9nVUucG1p/skKul6DU3PUZrhs0LPulNaeUOox0IyXDi8S4CztTHs1gQphhuZmzXG7VOQSf6NJfKuzteQLv9gQ==",
        "requires": {
          "colornames": "^1.1.1"
        }
      },
      "leven": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",
        "integrity": "sha1-wuep93IJTe6dNCAq6KzORoeHVYA="
      },
      "lodash": {
        "version": "4.17.15",
        "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
        "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
      },
      "logform": {
        "version": "2.1.2",
        "resolved": "https://registry.npmjs.org/logform/-/logform-2.1.2.tgz",
        "integrity": "sha512-+lZh4OpERDBLqjiwDLpAWNQu6KMjnlXH2ByZwCuSqVPJletw0kTWJf5CgSNAUKn1KUkv3m2cUz/LK8zyEy7wzQ==",
        "requires": {
          "colors": "^1.2.1",
          "fast-safe-stringify": "^2.0.4",
          "fecha": "^2.3.3",
          "ms": "^2.1.1",
          "triple-beam": "^1.3.0"
        }
      },
      "lowercase-keys": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
        "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
      },
      "mime-db": {
        "version": "1.44.0",
        "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz",
        "integrity": "sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg=="
      },
      "mime-types": {
        "version": "2.1.27",
        "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
        "integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
        "requires": {
          "mime-db": "1.44.0"
        }
      },
      "mimic-response": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
        "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA=="
      },
      "minimalistic-assert": {
        "version": "1.0.1",
        "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
        "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
      },
      "mkdirp": {
        "version": "1.0.4",
        "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
        "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw=="
      },
      "moment": {
        "version": "2.24.0",
        "resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
        "integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg=="
      },
      "moment-timezone": {
        "version": "0.5.28",
        "resolved": "https://registry.npmjs.org/moment-timezone/-/moment-timezone-0.5.28.tgz",
        "integrity": "sha512-TDJkZvAyKIVWg5EtVqRzU97w0Rb0YVbfpqyjgu6GwXCAohVRqwZjf4fOzDE6p1Ch98Sro/8hQQi65WDXW5STPw==",
        "requires": {
          "moment": ">= 2.9.0"
        }
      },
      "mri": {
        "version": "1.1.4",
        "resolved": "https://registry.npmjs.org/mri/-/mri-1.1.4.tgz",
        "integrity": "sha512-6y7IjGPm8AzlvoUrwAaw1tLnUBudaS3752vcd8JtrpGGQn+rXIe63LFVHm/YMwtqAuh+LJPCFdlLYPWM1nYn6w=="
      },
      "ms": {
        "version": "2.1.2",
        "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
        "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
      },
      "normalize-url": {
        "version": "4.5.0",
        "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.0.tgz",
        "integrity": "sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ=="
      },
      "oauth-sign": {
        "version": "0.9.0",
        "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
        "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
      },
      "ocsp": {
        "version": "1.2.0",
        "resolved": "https://registry.npmjs.org/ocsp/-/ocsp-1.2.0.tgz",
        "integrity": "sha1-RpoXdrRX3uZ+sCAUCMGUa6xAdsw=",
        "requires": {
          "asn1.js": "^4.8.0",
          "asn1.js-rfc2560": "^4.0.0",
          "asn1.js-rfc5280": "^2.0.0",
          "async": "^1.5.2",
          "simple-lru-cache": "0.0.2"
        },
        "dependencies": {
          "asn1.js": {
            "version": "4.10.1",
            "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
            "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
            "requires": {
              "bn.js": "^4.0.0",
              "inherits": "^2.0.1",
              "minimalistic-assert": "^1.0.0"
            }
          },
          "asn1.js-rfc2560": {
            "version": "4.0.6",
            "resolved": "https://registry.npmjs.org/asn1.js-rfc2560/-/asn1.js-rfc2560-4.0.6.tgz",
            "integrity": "sha512-ysf48ni+f/efNPilq4+ApbifUPcSW/xbDeQAh055I+grr2gXgNRQqHew7kkO70WSMQ2tEOURVwsK+dJqUNjIIg==",
            "requires": {
              "asn1.js-rfc5280": "^2.0.0"
            }
          },
          "asn1.js-rfc5280": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/asn1.js-rfc5280/-/asn1.js-rfc5280-2.0.1.tgz",
            "integrity": "sha512-1e2ypnvTbYD/GdxWK77tdLBahvo1fZUHlQJqAVUuZWdYj0rdjGcf2CWYUtbsyRYpYUMwMWLZFUtLxog8ZXTrcg==",
            "requires": {
              "asn1.js": "^4.5.0"
            }
          }
        }
      },
      "once": {
        "version": "1.4.0",
        "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
        "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
        "requires": {
          "wrappy": "1"
        }
      },
      "one-time": {
        "version": "0.0.4",
        "resolved": "https://registry.npmjs.org/one-time/-/one-time-0.0.4.tgz",
        "integrity": "sha1-+M33eISCb+Tf+T46nMN7HkSAdC4="
      },
      "p-cancelable": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.0.0.tgz",
        "integrity": "sha512-wvPXDmbMmu2ksjkB4Z3nZWTSkJEb9lqVdMaCKpZUGJG9TMiNp9XcbG3fn9fPKjem04fJMJnXoyFPk2FmgiaiNg=="
      },
      "p-event": {
        "version": "4.1.0",
        "resolved": "https://registry.npmjs.org/p-event/-/p-event-4.1.0.tgz",
        "integrity": "sha512-4vAd06GCsgflX4wHN1JqrMzBh/8QZ4j+rzp0cd2scXRwuBEv+QR3wrVA5aLhWDLw4y2WgDKvzWF3CCLmVM1UgA==",
        "requires": {
          "p-timeout": "^2.0.1"
        }
      },
      "p-finally": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
        "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="
      },
      "p-timeout": {
        "version": "2.0.1",
        "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-2.0.1.tgz",
        "integrity": "sha512-88em58dDVB/KzPEx1X0N3LwFfYZPyDc4B6eF38M1rk9VTZMbxXXgjugz8mmwpS9Ox4BDZ+t6t3QP5+/gazweIA==",
        "requires": {
          "p-finally": "^1.0.0"
        }
      },
      "performance-now": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
        "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
      },
      "pino": {
        "version": "5.16.0",
        "resolved": "https://registry.npmjs.org/pino/-/pino-5.16.0.tgz",
        "integrity": "sha512-k9cDzHd9S/oYSQ9B9g9+7RXkfsZX78sQXERC8x4p2XArECZXULx9nqNwZvJHsLj779wPCt+ybN+dG8jFR70p6Q==",
        "requires": {
          "fast-redact": "^2.0.0",
          "fast-safe-stringify": "^2.0.7",
          "flatstr": "^1.0.12",
          "pino-std-serializers": "^2.4.2",
          "quick-format-unescaped": "^3.0.3",
          "sonic-boom": "^0.7.5"
        }
      },
      "pino-pretty": {
        "version": "3.6.0",
        "resolved": "https://registry.npmjs.org/pino-pretty/-/pino-pretty-3.6.0.tgz",
        "integrity": "sha512-gTVA+Kx4DoVQl+sXO4/HdLVaNgr281b+NDJWmXzreIoQ+3fd7xVyTg31c0hpzCUbheuW4TpzQOqDg9uOIsbw7Q==",
        "requires": {
          "@hapi/bourne": "^1.3.2",
          "args": "^5.0.1",
          "chalk": "^2.4.2",
          "dateformat": "^3.0.3",
          "fast-safe-stringify": "^2.0.7",
          "jmespath": "^0.15.0",
          "joycon": "^2.2.5",
          "pump": "^3.0.0",
          "readable-stream": "^3.4.0",
          "split2": "^3.1.1",
          "strip-json-comments": "^3.0.1"
        }
      },
      "pino-std-serializers": {
        "version": "2.4.2",
        "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-2.4.2.tgz",
        "integrity": "sha512-WaL504dO8eGs+vrK+j4BuQQq6GLKeCCcHaMB2ItygzVURcL1CycwNEUHTD/lHFHs/NL5qAz2UKrjYWXKSf4aMQ=="
      },
      "pretty-format": {
        "version": "25.1.0",
        "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.1.0.tgz",
        "integrity": "sha512-46zLRSGLd02Rp+Lhad9zzuNZ+swunitn8zIpfD2B4OPCRLXbM87RJT2aBLBWYOznNUML/2l/ReMyWNC80PJBUQ==",
        "dev": true,
        "requires": {
          "@jest/types": "^25.1.0",
          "ansi-regex": "^5.0.0",
          "ansi-styles": "^4.0.0",
          "react-is": "^16.12.0"
        },
        "dependencies": {
          "ansi-styles": {
            "version": "4.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
            "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
            "dev": true,
            "requires": {
              "@types/color-name": "^1.1.1",
              "color-convert": "^2.0.1"
            }
          },
          "color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "requires": {
              "color-name": "~1.1.4"
            }
          },
          "color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true
          }
        }
      },
      "process-nextick-args": {
        "version": "2.0.1",
        "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
        "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
      },
      "psl": {
        "version": "1.8.0",
        "resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
        "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ=="
      },
      "pump": {
        "version": "3.0.0",
        "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
        "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
        "requires": {
          "end-of-stream": "^1.1.0",
          "once": "^1.3.1"
        }
      },
      "punycode": {
        "version": "1.3.2",
        "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
        "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
        "dev": true
      },
      "qs": {
        "version": "6.5.2",
        "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
        "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
      },
      "querystring": {
        "version": "0.2.0",
        "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
        "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
        "dev": true
      },
      "quick-format-unescaped": {
        "version": "3.0.3",
        "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-3.0.3.tgz",
        "integrity": "sha512-dy1yjycmn9blucmJLXOfZDx1ikZJUi6E8bBZLnhPG5gBrVhHXx2xVyqqgKBubVNEXmx51dBACMHpoMQK/N/AXQ=="
      },
      "react-is": {
        "version": "16.12.0",
        "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.12.0.tgz",
        "integrity": "sha512-rPCkf/mWBtKc97aLL9/txD8DZdemK0vkA3JMLShjlJB3Pj3s+lpf1KaBzMfQrAmhMQB0n1cU/SUGgKKBCe837Q==",
        "dev": true
      },
      "readable-stream": {
        "version": "3.6.0",
        "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
        "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
        "requires": {
          "inherits": "^2.0.3",
          "string_decoder": "^1.1.1",
          "util-deprecate": "^1.0.1"
        }
      },
      "request": {
        "version": "2.88.2",
        "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
        "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
        "requires": {
          "aws-sign2": "~0.7.0",
          "aws4": "^1.8.0",
          "caseless": "~0.12.0",
          "combined-stream": "~1.0.6",
          "extend": "~3.0.2",
          "forever-agent": "~0.6.1",
          "form-data": "~2.3.2",
          "har-validator": "~5.1.3",
          "http-signature": "~1.2.0",
          "is-typedarray": "~1.0.0",
          "isstream": "~0.1.2",
          "json-stringify-safe": "~5.0.1",
          "mime-types": "~2.1.19",
          "oauth-sign": "~0.9.0",
          "performance-now": "^2.1.0",
          "qs": "~6.5.2",
          "safe-buffer": "^5.1.2",
          "tough-cookie": "~2.5.0",
          "tunnel-agent": "^0.6.0",
          "uuid": "^3.3.2"
        }
      },
      "responselike": {
        "version": "2.0.0",
        "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.0.tgz",
        "integrity": "sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==",
        "requires": {
          "lowercase-keys": "^2.0.0"
        }
      },
      "safe-buffer": {
        "version": "5.2.0",
        "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
        "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
      },
      "safer-buffer": {
        "version": "2.1.2",
        "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
        "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
      },
      "sax": {
        "version": "1.2.1",
        "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.1.tgz",
        "integrity": "sha1-e45lYZCyKOgaZq6nSEgNgozS03o=",
        "dev": true
      },
      "semver": {
        "version": "5.0.3",
        "resolved": "https://registry.npmjs.org/semver/-/semver-5.0.3.tgz",
        "integrity": "sha1-d0Zt5YnNXTyV8TiqeLxWmjy10no="
      },
      "simple-lru-cache": {
        "version": "0.0.2",
        "resolved": "https://registry.npmjs.org/simple-lru-cache/-/simple-lru-cache-0.0.2.tgz",
        "integrity": "sha1-1ZzDoZPBpdAyD4Tucy9uRxPlEd0="
      },
      "simple-swizzle": {
        "version": "0.2.2",
        "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
        "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
        "requires": {
          "is-arrayish": "^0.3.1"
        }
      },
      "snowflake-promise": {
        "version": "2.2.0",
        "resolved": "https://registry.npmjs.org/snowflake-promise/-/snowflake-promise-2.2.0.tgz",
        "integrity": "sha512-0+MSGVFQzcS/aSRHOo3rX0+QokaRpvsaRJ61jjkZoLsmV4uZg06YQuZF1EafmWcfYqCxHVZjruxRtgExS71DyQ==",
        "requires": {
          "snowflake-sdk": "^1.3.2"
        }
      },
      "snowflake-sdk": {
        "version": "1.5.2",
        "resolved": "https://registry.npmjs.org/snowflake-sdk/-/snowflake-sdk-1.5.2.tgz",
        "integrity": "sha512-HILZU35gXUGTUVxja5g/WY8eAcMK52xEijCFphAU6Cf5Mbq3xrtISbHlI47rYDz0+l8Br/TM7xCw8QAzQvNUrg==",
        "requires": {
          "agent-base": "^2.1.1",
          "asn1.js-rfc2560": "^5.0.0",
          "asn1.js-rfc5280": "^3.0.0",
          "big-integer": "^1.6.43",
          "bignumber.js": "^2.4.0",
          "browser-request": "^0.3.3",
          "debug": "^3.2.6",
          "extend": "^3.0.2",
          "https-proxy-agent": "^3.0.0",
          "lodash": "^4.17.15",
          "mkdirp": "^1.0.3",
          "moment": "^2.23.0",
          "moment-timezone": "^0.5.15",
          "ocsp": "^1.2.0",
          "request": "^2.88.0",
          "simple-lru-cache": "^0.0.2",
          "uuid": "^3.3.2",
          "winston": "^3.1.0"
        }
      },
      "sonic-boom": {
        "version": "0.7.6",
        "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-0.7.6.tgz",
        "integrity": "sha512-k9E2QQ4zxuVRLDW+ZW6ISzJs3wlEorVdmM7ApDgor7wsGKSDG5YGHsGmgLY4XYh4DMlr/2ap2BWAE7yTFJtWnQ==",
        "requires": {
          "flatstr": "^1.0.12"
        }
      },
      "split2": {
        "version": "3.1.1",
        "resolved": "https://registry.npmjs.org/split2/-/split2-3.1.1.tgz",
        "integrity": "sha512-emNzr1s7ruq4N+1993yht631/JH+jaj0NYBosuKmLcq+JkGQ9MmTw1RB1fGaTCzUuseRIClrlSLHRNYGwWQ58Q==",
        "requires": {
          "readable-stream": "^3.0.0"
        }
      },
      "sprintf-js": {
        "version": "1.0.3",
        "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
        "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
        "dev": true
      },
      "sshpk": {
        "version": "1.16.1",
        "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
        "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
        "requires": {
          "asn1": "~0.2.3",
          "assert-plus": "^1.0.0",
          "bcrypt-pbkdf": "^1.0.0",
          "dashdash": "^1.12.0",
          "ecc-jsbn": "~0.1.1",
          "getpass": "^0.1.1",
          "jsbn": "~0.1.0",
          "safer-buffer": "^2.0.2",
          "tweetnacl": "~0.14.0"
        }
      },
      "stack-trace": {
        "version": "0.0.10",
        "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
        "integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA="
      },
      "string_decoder": {
        "version": "1.3.0",
        "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
        "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
        "requires": {
          "safe-buffer": "~5.2.0"
        }
      },
      "strip-json-comments": {
        "version": "3.0.1",
        "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.0.1.tgz",
        "integrity": "sha512-VTyMAUfdm047mwKl+u79WIdrZxtFtn+nBxHeb844XBQ9uMNTuTHdx2hc5RiAJYqwTj3wc/xe5HLSdJSkJ+WfZw=="
      },
      "supports-color": {
        "version": "5.5.0",
        "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
        "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
        "requires": {
          "has-flag": "^3.0.0"
        }
      },
      "text-hex": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz",
        "integrity": "sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg=="
      },
      "to-readable-stream": {
        "version": "2.1.0",
        "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-2.1.0.tgz",
        "integrity": "sha512-o3Qa6DGg1CEXshSdvWNX2sN4QHqg03SPq7U6jPXRahlQdl5dK8oXjkU/2/sGrnOZKeGV1zLSO8qPwyKklPPE7w=="
      },
      "tough-cookie": {
        "version": "2.5.0",
        "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
        "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
        "requires": {
          "psl": "^1.1.28",
          "punycode": "^2.1.1"
        },
        "dependencies": {
          "punycode": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
            "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
          }
        }
      },
      "triple-beam": {
        "version": "1.3.0",
        "resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.3.0.tgz",
        "integrity": "sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw=="
      },
      "tunnel-agent": {
        "version": "0.6.0",
        "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
        "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
        "requires": {
          "safe-buffer": "^5.0.1"
        }
      },
      "tweetnacl": {
        "version": "0.14.5",
        "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
        "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
      },
      "type-fest": {
        "version": "0.10.0",
        "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.10.0.tgz",
        "integrity": "sha512-EUV9jo4sffrwlg8s0zDhP0T2WD3pru5Xi0+HTE3zTUmBaZNhfkite9PdSJwdXLwPVW0jnAHT56pZHIOYckPEiw=="
      },
      "uri-js": {
        "version": "4.2.2",
        "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
        "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
        "requires": {
          "punycode": "^2.1.0"
        },
        "dependencies": {
          "punycode": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
            "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
          }
        }
      },
      "url": {
        "version": "0.10.3",
        "resolved": "https://registry.npmjs.org/url/-/url-0.10.3.tgz",
        "integrity": "sha1-Ah5NnHcF8hu/N9A861h2dAJ3TGQ=",
        "dev": true,
        "requires": {
          "punycode": "1.3.2",
          "querystring": "0.2.0"
        }
      },
      "util-deprecate": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
        "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
      },
      "uuid": {
        "version": "3.3.2",
        "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
        "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="
      },
      "verror": {
        "version": "1.10.0",
        "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
        "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
        "requires": {
          "assert-plus": "^1.0.0",
          "core-util-is": "1.0.2",
          "extsprintf": "^1.2.0"
        }
      },
      "watchpack": {
        "version": "2.0.0-beta.12",
        "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.0.0-beta.12.tgz",
        "integrity": "sha512-vUJN6XQCBqrUkyX74WNopUvASMLqgicYGA5nO/FwSfdmLQgrfy44Z+Jl2YHHHXy/gDO6RlbArR26YQGeIWfoAg==",
        "dev": true,
        "requires": {
          "glob-to-regexp": "^0.4.1",
          "graceful-fs": "^4.1.2"
        }
      },
      "winston": {
        "version": "3.2.1",
        "resolved": "https://registry.npmjs.org/winston/-/winston-3.2.1.tgz",
        "integrity": "sha512-zU6vgnS9dAWCEKg/QYigd6cgMVVNwyTzKs81XZtTFuRwJOcDdBg7AU0mXVyNbs7O5RH2zdv+BdNZUlx7mXPuOw==",
        "requires": {
          "async": "^2.6.1",
          "diagnostics": "^1.1.1",
          "is-stream": "^1.1.0",
          "logform": "^2.1.1",
          "one-time": "0.0.4",
          "readable-stream": "^3.1.1",
          "stack-trace": "0.0.x",
          "triple-beam": "^1.3.0",
          "winston-transport": "^4.3.0"
        },
        "dependencies": {
          "async": {
            "version": "2.6.3",
            "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
            "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
            "requires": {
              "lodash": "^4.17.14"
            }
          }
        }
      },
      "winston-transport": {
        "version": "4.3.0",
        "resolved": "https://registry.npmjs.org/winston-transport/-/winston-transport-4.3.0.tgz",
        "integrity": "sha512-B2wPuwUi3vhzn/51Uukcao4dIduEiPOcOt9HJ3QeaXgkJ5Z7UwpBzxS4ZGNHtrxrUvTwemsQiSys0ihOf8Mp1A==",
        "requires": {
          "readable-stream": "^2.3.6",
          "triple-beam": "^1.2.0"
        },
        "dependencies": {
          "readable-stream": {
            "version": "2.3.7",
            "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
            "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
            "requires": {
              "core-util-is": "~1.0.0",
              "inherits": "~2.0.3",
              "isarray": "~1.0.0",
              "process-nextick-args": "~2.0.0",
              "safe-buffer": "~5.1.1",
              "string_decoder": "~1.1.1",
              "util-deprecate": "~1.0.1"
            }
          },
          "safe-buffer": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
          },
          "string_decoder": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
            "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
            "requires": {
              "safe-buffer": "~5.1.0"
            }
          }
        }
      },
      "wrappy": {
        "version": "1.0.2",
        "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
        "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
      },
      "xml2js": {
        "version": "0.4.19",
        "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.19.tgz",
        "integrity": "sha512-esZnJZJOiJR9wWKMyuvSE1y6Dq5LCuJanqhxslH2bxM6duahNZ+HMpCLhBQGZkbX6xRf8x1Y2eJlgt2q3qo49Q==",
        "dev": true,
        "requires": {
          "sax": ">=0.6.0",
          "xmlbuilder": "~9.0.1"
        }
      },
      "xmlbuilder": {
        "version": "9.0.7",
        "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
        "integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0=",
        "dev": true
      }
    }
  },
  "optionalDependencies": {},
  "_dependencies": {
    "@project/types": "^0.0.1",
    "csv-parse": "^4.6.5",
    "got": "^10.6.0",
    "moment": "^2.24.0",
    "pino": "^5.12.6",
    "pino-pretty": "^3.2.0",
    "snowflake-promise": "^2.2.0"
  },
  "path": "/path/to/project/packages/shared",
  "error": "[Circular]",
  "extraneous": false
}
