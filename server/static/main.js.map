{"version":3,"sources":["ws (ignored)","./src/app/tabs.service.ts","./src/app/tsc-logs/tsc-logs.component.ts","./src/app/tsc-logs/tsc-logs.component.html","./src/environments/environment.ts","./src/app/compilation.status.enum.ts","./src/app/package.ts","./src/app/mila.service.ts","./src/app/log.ts","./src/app/node-details/node-details.component.ts","./src/app/node-details/node-details.component.html","./src/app/service.status.enum.ts","./src/app/service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/safe-html.pipe.ts","./src/app/events-log/events-log.component.ts","./src/app/events-log/events-log.component.html","./src/app/nodes-list/nodes-list.component.ts","./src/app/nodes-list/nodes-list.component.html","./src/app/service-logs/service-logs.component.ts","./src/app/service-logs/service-logs.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { MilaService } from './mila.service';\n\ntype TabType = 'events-log' | 'node-details' | 'service-logs' | 'binaries' | 'lerna-graph' | 'tsc-logs';\n\ninterface ITab {\n  // TODO: Add type (details, sls logs, resource etc..)\n  type: TabType;\n  name: string;\n  closable: boolean;\n}\n\nconst DEFAULT_TAB: ITab = {\n  name: 'Events log',\n  type: 'events-log',\n  closable: false,\n};\n\nconst DEFAULT_TABS: ITab[] = [\n  DEFAULT_TAB,\n  {\n    name: 'Binaries versions',\n    type: 'binaries',\n    closable: false,\n  },\n  {\n    name: 'Lerna graph',\n    type: 'lerna-graph',\n    closable: false,\n  }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsService {\n\n  private _currentTab$ = new BehaviorSubject<ITab>(DEFAULT_TAB);\n  private _tabs$ = new BehaviorSubject<ITab[]>(DEFAULT_TABS);\n  private _history: ITab[] = [DEFAULT_TAB];\n\n  tabs$ = this._tabs$.asObservable();\n  currentTab$ = this._currentTab$.asObservable();\n\n  constructor(private readonly mila: MilaService) { }\n\n  openTab(type: TabType, name: string) {\n    const tabs = [...this._tabs$.getValue()];\n    const newTab = {\n      type,\n      name,\n      closable: true,\n    };\n    if (!tabs.find(t => t.name === name)) {\n      tabs.push(newTab);\n      this._tabs$.next(tabs);\n    }\n\n    this.selectTab(newTab);\n  }\n\n  selectTab(tab: ITab) {\n    this._history.push(tab);\n    this._currentTab$.next(tab);\n    if (tab.type === 'service-logs') {\n      this.mila.selectService(tab.name.match(/^Logs \\| (.+)$/)[1]);\n    }\n    if (tab.type === 'tsc-logs') {\n      this.mila.setCurrentNode(tab.name.match(/^(.+) \\| tsc$/)[1]);\n    }\n  }\n\n  deleteTab(name: string) {\n    const tabs = [...this._tabs$.getValue()];\n    this._tabs$.next(tabs.filter(t => t.name !== name));\n    if (this._history.length > 2) {\n      this._history.pop();\n      const previous = this._history.pop();\n      this._currentTab$.next(previous);\n    } else {\n     this._history = [];\n     this.selectTab(DEFAULT_TAB);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MilaService } from '../mila.service';\n\n@Component({\n  selector: 'app-tsc-logs',\n  templateUrl: './tsc-logs.component.html',\n  styleUrls: ['./tsc-logs.component.scss']\n})\nexport class TscLogsComponent implements OnInit {\n  log: string;\n  constructor(public readonly mila: MilaService) { }\n\n  ngOnInit(): void {\n    this.mila.getTscLogs().subscribe((log) => {\n      this.log = log;\n      this._scrollToEnd();\n    });\n  }\n\n  private _scrollToEnd() {\n    console.log('scrolling');\n    setTimeout(() =>{\n      const elt = document.getElementById('service-logs');\n      elt.scrollTo({behavior: 'smooth', top: elt.scrollHeight - elt.clientHeight });\n    }, 0);\n  }\n}\n","<section>\n  <h3>{{ mila.currentNode }} logs</h3>\n  <div id=\"service-logs\" class=\"mono\" [innerHTML]=\"log | safeHtml\"></div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  port: 4545,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// TODO: Import from back\n/**\n * For performance reasons transpiling (only emit js from ts) is performed in a separate thread than\n * type checking (ensure correct types are used and there will be no type errors at run time)\n */\n\nexport enum TranspilingStatus {\n  NOT_TRANSPILED,\n  TRANSPILING,\n  TRANSPILED,\n  ERROR_TRANSPILING,\n}\n\nexport enum TypeCheckStatus {\n  NOT_CHECKED,\n  CHECKING,\n  SUCCESS,\n  ERROR,\n}\n","import { TranspilingStatus, TypeCheckStatus } from './compilation.status.enum';\nimport { INode } from './node.interface';\nimport { Service } from './service';\n\nexport class Package {\n  private readonly _name: string;\n  private readonly _version: string;\n  private readonly _enabled: boolean;\n  private _transpiled: TranspilingStatus;\n  private _typeChecked: TypeCheckStatus;\n  private _lastTypeCheck: string;\n\n  constructor(node: INode) {\n    this._name = node.name;\n    this._version = node.version;\n    this._enabled = node.enabled;\n    this._transpiled = node.transpiled;\n    this._typeChecked = node.typeChecked;\n    this._lastTypeCheck = node.lastTypeCheck;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get disabled(): boolean {\n    return !this._enabled;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get lastTypeCheck(): string {\n    return this._lastTypeCheck;\n  }\n\n  get transpiled(): string {\n    switch (this._transpiled) {\n      case TranspilingStatus.TRANSPILED:\n        return 'Transpiled';\n      case TranspilingStatus.TRANSPILING:\n        return 'Transpiling';\n      case TranspilingStatus.ERROR_TRANSPILING:\n        return 'Error transpiling';\n      case TranspilingStatus.NOT_TRANSPILED:\n        return 'Not transpiled';\n    }\n  }\n\n  get typeChecked(): string {\n    switch (this._typeChecked) {\n      case TypeCheckStatus.CHECKING:\n        return 'Typechecking';\n      case TypeCheckStatus.NOT_CHECKED:\n        return 'No type-checking';\n      case TypeCheckStatus.ERROR:\n        return 'Type errors';\n      case TypeCheckStatus.SUCCESS:\n        return 'Type checked';\n    }\n  }\n\n  get transpiledClass(): string {\n    switch (this._transpiled) {\n      case TranspilingStatus.TRANSPILED:\n        return 'green';\n      case TranspilingStatus.TRANSPILING:\n        return 'blue';\n      case TranspilingStatus.ERROR_TRANSPILING:\n        return 'bright-red';\n      case TranspilingStatus.NOT_TRANSPILED:\n        return 'grey';\n    }\n  }\n\n  get typeCheckClass(): string {\n    switch (this._typeChecked) {\n      case TypeCheckStatus.CHECKING:\n        return 'blue';\n      case TypeCheckStatus.NOT_CHECKED:\n        return 'grey';\n      case TypeCheckStatus.ERROR:\n        return 'bright-red';\n      case TypeCheckStatus.SUCCESS:\n        return 'green';\n    }\n  }\n\n  get isService(): boolean {\n    return false;\n  }\n\n  get notChecked(): boolean {\n    return this._typeChecked === TypeCheckStatus.NOT_CHECKED;\n  }\n\n  get checking(): boolean {\n    return this._typeChecked === TypeCheckStatus.CHECKING;\n  }\n\n  setTranspilingStatus(status: TranspilingStatus): void {\n    this._transpiled = status;\n  }\n\n  setTypeCheckStatus(status: TypeCheckStatus): void {\n    this._typeChecked = status;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\nimport { Service } from './service';\nimport { Package } from './package';\nimport { IEventLog, Log } from './log';\nimport { TranspilingStatus, TypeCheckStatus } from './compilation.status.enum';\nimport { ServiceStatus } from './service.status.enum';\nimport { INode } from './node.interface';\nimport { map } from 'rxjs/operators';\nimport * as Convert from 'ansi-to-html';\n\nconst convert = new Convert();\n/**\n * - Filterable events log => TODO perf issue: see how to mitigate it (lazy-load elt in DOM with infinite scroll)\n * - Compilation Logs => TODO In CLI put the compilation logs in memory maps that can be queryable from client. Try to preserve ANSI colors and convert to HTML\n * - Start / Stop / Restart => TODO possibility to stop in starting state\n * - Change port => TODO: Same, also create a socket event to update service port in client\n * - Test => TODO Run tests (unit, functional or both) and print output in a web TTY (https://xtermjs.org/)\n * - Package tree => TODO put packagr v2 in codebase and use script and tree-shaking on demand (on HTTP call) to return tree-shaken deps\n * - Package / Deploy => TODO create UI to easily package and deploy services (input aws-region etc...)\n * - Default region / AWS credentials => TODO: Create a screen to see which key pair / profile and default region is currently used\n * - Binaries Versions => TODO: Create a endpoint to see binary path and version (tsc, sls, jest)\n * - Lerna Graph => TODO: Use a graph lib (D3 cola.js ?) to print graph in a Airflow DAG way\n * - Resources consumption => TODO Use https://www.npmjs.com/package/pidusage to send resource usage too the front and print them in beautiful D3 charts\n * - Make closable + button add => TODO: Make generic tab (event logs, binary versions etc...) closable and add a button add at the end of toolbar to re-open them\n * - Tab Config used => TODO create a tab printing the currently used .microlambdarc config\n * - Improve terminal based tasks with https://xtermjs.org/\n */\n\nconst BASE_URL = environment.production ? window.origin : `http://localhost:${environment.port}`\nconst EMPTY_LOGS = {deploy: [], createDoain: [], offline: []};\n\ninterface IServiceLogs {\n  offline: string[];\n  deploy: string[];\n  createDoain: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MilaService{\n\n  private _connected$ = new BehaviorSubject<boolean>(false);\n  private _packages$ = new BehaviorSubject<Package[]>([]);\n  private _services$ = new BehaviorSubject<Service[]>([]);\n  private _logs$ = new BehaviorSubject<Log[]>([]);\n  private _currentService$ = new BehaviorSubject<string>(null);\n  private _serviceLogs$ = new BehaviorSubject<IServiceLogs>(EMPTY_LOGS);\n\n  // FIXME: Change url\n  private _socket = io('http://localhost:4545');\n\n  packages$ = this._packages$.asObservable();\n  services$ = this._services$.asObservable();\n  log$ = this._logs$.asObservable();\n  connected$ = this._connected$.asObservable();\n  currentService$ = this._currentService$.asObservable();\n  serviceLogs$ = this._serviceLogs$.asObservable();\n\n  constructor(\n    private readonly http: HttpClient\n  ) {\n    this._socket.on('connect', () => {\n      console.debug('connected to mila server');\n      this._connected$.next(true);\n    });\n    this._socket.on('disconnect', () => {\n      console.debug('disconnected to mila server');\n      this._connected$.next(false);\n    });\n    const findNode = (node: string) => {\n      const isService = this._services$.getValue().some(s => s.name === node);\n      const obs = isService ? this._services$ : this._packages$;\n      const nodes = [...obs.getValue()];\n      const toUpdate = nodes.find(s => s.name === node);\n      if (!toUpdate) {\n        throw Error('No node found');\n      }\n      return { obs, toUpdate, nodes };\n    }\n    this._socket.on('transpiling.status.updated', (data: { node: string, status: TranspilingStatus}) => {\n      console.debug('received transpiling event', data);\n      const { obs, toUpdate, nodes } = findNode(data.node);\n      toUpdate.setTranspilingStatus(data.status);\n      obs.next(nodes);\n      console.debug('nodes updated', nodes);\n    });\n    this._socket.on('type.checking.status.updated', (data: { node: string, status: TypeCheckStatus}) => {\n      console.debug('received type check event', data);\n      const { obs, toUpdate, nodes } = findNode(data.node);\n      toUpdate.setTypeCheckStatus(data.status);\n      obs.next(nodes);\n      console.debug('nodes updated', nodes);\n    });\n    this._socket.on('node.status.updated', (data: { node: string, status: ServiceStatus}) => {\n      console.debug('received service event', data);\n      const services = [...this._services$.getValue()];\n      const toUpdate = services.find(s => s.name === data.node);\n      if (!toUpdate) {\n        throw Error('No node found');\n      }\n      toUpdate.setStatus(data.status);\n      this._services$.next(services);\n      console.debug('services updated', services);\n    });\n    this._socket.on('event.log.added', (log: IEventLog) => {\n      console.debug('log received', log);\n      const logs = this._logs$.getValue();\n      logs.push(new Log(log));\n      this._logs$.next(logs);\n      console.debug('logs updated', logs);\n    });\n    this.services$.subscribe((services) => {\n      const currentServiceName = this._currentService$.getValue();\n      const currentService = currentServiceName ? services.find(s => s.name === currentServiceName) : null;\n      if (currentService && currentService.status !== 'Running') {\n        this._serviceLogs$.next(EMPTY_LOGS);\n      }\n    });\n  }\n\n  getGraph() {\n    return this.http.get<INode[]>(`${BASE_URL}/api/graph`).subscribe((nodes) => {\n      this._packages$.next(nodes.filter(n => n.status == null).map(n => new Package(n)));\n      this._services$.next(nodes.filter(n => n.status != null).map(n => new Service(n)));\n    });\n  }\n\n  getLogs() {\n    return this.http.get<IEventLog[]>(`${BASE_URL}/api/logs`).subscribe((logs) => {\n      console.debug('Received logs', logs.length);\n      this._logs$.next(logs.map(l => new Log(l)));\n    });\n  }\n\n  getNode(name: string): Package | Service {\n    const pkg = this._packages$.getValue().find(p => p.name === name);\n    if (pkg) {\n      return pkg;\n    }\n    return this._services$.getValue().find(p => p.name === name);\n  }\n\n  selectService(name: string) {\n    if (this._currentService$.getValue()) {\n      this._socket.off(`${this._currentService$.getValue()}.log.added`);\n    }\n    this._serviceLogs$.next(EMPTY_LOGS);\n    this._currentService$.next(name);\n    this._socket.emit('send.service.logs', name);\n    this.http.get<IServiceLogs>(`${BASE_URL}/api/services/${encodeURIComponent(name)}/logs`).subscribe((data) => {\n      this._serviceLogs$.next(data);\n      this._socket.on(`${name}.log.added`, (data: string) => {\n        console.log('Logs received for current service', data);\n        const logs = this._serviceLogs$.getValue();\n        logs.offline.push(data);\n        this._serviceLogs$.next(logs);\n      });\n    });\n  }\n\n  private _currentNode: string;\n\n  setCurrentNode(node: string) { this._currentNode = node }\n\n  get currentNode(): string { return  this._currentNode }\n\n  getTscLogs(): Observable<string> {\n    return this.http.get<string[]>(`${BASE_URL}/api/nodes/${encodeURIComponent(this._currentNode)}/tsc/logs`).pipe(map((data) => {\n      return convert.toHtml(data.join('').replace(/(\\r\\n|\\n|\\r)/gm, \"<br />\"));\n    }));\n  }\n\n  start(service: string) {\n    this._socket.emit('service.start', service);\n  }\n\n  stop(service: string) {\n    this._socket.emit('service.stop', service);\n  }\n\n  restart(service: string) {\n    this._socket.emit('service.restart', service);\n  }\n\n  compile(node: string, force: boolean) {\n    this._socket.emit('node.compile', {node, force});\n  }\n}\n","import * as Convert from 'ansi-to-html';\nconst convert = new Convert();\n\nexport type LogLevel = 'silly' | 'debug' | 'info' | 'warn' | 'error';\n\nexport interface IEventLog {\n  level: LogLevel;\n  date: string;\n  scope: string;\n  args: string[];\n}\n\nexport class Log {\n\n  _level: LogLevel;\n  _date: string;\n  _scope: string;\n  _args: string[];\n\n  constructor(log: IEventLog) {\n    this._level = log.level;\n    this._date = log.date;\n    this._scope = log.scope;\n    this._args = log.args;\n  }\n\n  get level(): LogLevel { return this._level }\n  get date(): string { return this._date }\n  get scope(): string { return this._scope }\n  get args(): string { return this._args.map(arg => convert.toHtml(arg)).join(' ') }\n\n  get class(): string {\n    switch (this._level) {\n      case 'debug':\n        return 'blue';\n      case 'error':\n        return 'red';\n      case 'info':\n        return 'green';\n      case 'silly':\n        return 'cyan';\n      case 'warn':\n        return 'orange';\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TabsService } from '../tabs.service';\nimport { MilaService } from '../mila.service';\nimport { Package } from '../package';\nimport { Service } from '../service';\nimport { faClipboard, faFileAlt, faHammer, faPlay, faRedo, faStop } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit {\n\n  node: Package | Service;\n  fa = {\n    refresh: faRedo,\n    build: faHammer,\n    start: faPlay,\n    stop: faStop,\n    logs: faFileAlt,\n    tsc: faClipboard,\n  }\n\n  constructor(\n    private readonly tabs: TabsService,\n    public readonly mila: MilaService,\n  ) { }\n\n  ngOnInit(): void {\n    // FIXME: take until\n    this.tabs.currentTab$.subscribe((tab) => {\n      this.node = this.mila.getNode(tab.name);\n    });\n  }\n\n  openLogs() {\n    this.mila.selectService(this.node.name);\n    this.tabs.openTab('service-logs', `Logs | ${this.node.name}`)\n  }\n\n  openTscLogs() {\n    this.mila.setCurrentNode(this.node.name);\n    this.tabs.openTab('tsc-logs', `${this.node.name} | tsc`);\n  }\n}\n","<section *ngIf=\"node\">\n  <div class=\"title\">\n    <h2>{{ node.name }}</h2>\n    <span>{{ node.version }}</span>\n  </div>\n  <div class=\"actions\" *ngIf=\"!node.disabled\">\n    <button class=\"btn btn-blue\" (click)=\"openLogs()\"><fa-icon [icon]=\"fa.logs\"></fa-icon>See logs</button>\n    <button class=\"btn btn-blue\" (click)=\"openTscLogs()\" *ngIf=\"!node.notChecked && !node.checking\"><fa-icon [icon]=\"fa.tsc\"></fa-icon>See tsc logs</button>\n    <button class=\"btn btn-blue\" (click)=\"mila.compile(node.name, node.isService)\" *ngIf=\"node.notChecked\"><fa-icon [icon]=\"fa.build\"></fa-icon>Compile</button>\n    <button class=\"btn btn-blue\" (click)=\"mila.compile(node.name, true)\" *ngIf=\"!node.notChecked && !node.checking\"><fa-icon [icon]=\"fa.build\"></fa-icon>Recompile</button>\n    <button class=\"btn btn-blue\" (click)=\"mila.start(node.name)\" *ngIf=\"node.canBeStarted\"><fa-icon [icon]=\"fa.start\"></fa-icon>Start</button>\n    <button class=\"btn btn-red\" (click)=\"mila.stop(node.name)\" *ngIf=\"node.isRunning || node.isStarting\"><fa-icon [icon]=\"fa.stop\"></fa-icon>Stop</button>\n    <button class=\"btn btn-blue\" (click)=\"mila.restart(node.name)\" *ngIf=\"node.isRunning\"><fa-icon [icon]=\"fa.refresh\"></fa-icon>Restart</button>\n    <!-- TODO <button class=\"btn btn-blue\" *ngIf=\"node.isRunning\"><fa-icon [icon]=\"fa.start\"></fa-icon>Restart on another port</button> -->\n  </div>\n  <div class=\"general-infos\">\n    <span *ngIf=\"node.isService\">Service status: {{ node.status }}</span>\n    <span *ngIf=\"node.isService\">Allocated port: {{ node.port }}</span>\n    <span *ngIf=\"!node.isService\">Transpiling status: {{ node.transpiled }}</span>\n    <span>Type-checking status: {{ node.typeChecked }}</span>\n    <span>Last type-checking: {{ node.lastTypeCheck }}</span>\n  </div>\n  <div class=\"metrics\">\n\n  </div>\n</section>\n","export enum ServiceStatus {\n  STARTING,\n  RUNNING,\n  STOPPING,\n  STOPPED,\n  CRASHED,\n}\n","import { Package } from './package';\nimport { ServiceStatus } from './service.status.enum';\nimport { INode } from './node.interface';\n\nexport class Service extends Package {\n  private _status: ServiceStatus;\n  private readonly _port: number;\n  constructor(node: INode) {\n    super(node);\n    this._status = node.status;\n    this._port = node.port;\n  }\n\n  get port(): number { return this._port };\n\n  get status(): string {\n    switch (this._status) {\n      case ServiceStatus.CRASHED:\n        return 'Crashed';\n      case ServiceStatus.RUNNING:\n        return 'Running';\n      case ServiceStatus.STARTING:\n        return 'Starting';\n      case ServiceStatus.STOPPED:\n        return 'Stopped';\n      case ServiceStatus.STOPPING:\n        return 'Stopping';\n    }\n  }\n\n  get statusClass(): string {\n    switch (this._status) {\n      case ServiceStatus.CRASHED:\n        return 'bright-red';\n      case ServiceStatus.RUNNING:\n        return 'green';\n      case ServiceStatus.STARTING:\n        return 'blue';\n      case ServiceStatus.STOPPED:\n        return 'red';\n      case ServiceStatus.STOPPING:\n        return 'blue';\n    }\n  }\n\n  get isRunning(): boolean {\n    return this._status === ServiceStatus.RUNNING;\n  }\n\n  get isStarting(): boolean {\n    return this._status === ServiceStatus.STARTING;\n  }\n\n  get isService(): boolean {\n    return true;\n  }\n\n  get canBeStarted(): boolean {\n    return this._status === ServiceStatus.STOPPED || this._status === ServiceStatus.CRASHED;\n  }\n\n  setStatus(status: ServiceStatus): void {\n    this._status = status;\n  }\n}\n","import { Component } from '@angular/core';\nimport { MilaService } from './mila.service';\nimport { TabsService } from './tabs.service';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n  nodeList: string;\n  faTimes = faTimes;\n  constructor(public readonly mila: MilaService, public readonly tabs: TabsService) {\n  }\n}\n","<html>\n<head>\n  <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;600;700&display=swap\" rel=\"stylesheet\">\n</head>\n<body>\n<header>\n  <h1>Microλambda</h1>\n</header>\n<p *ngIf=\"(mila.connected$ | async) === false\">Waiting for mila server</p>\n<rsz-layout *ngIf=\"(mila.connected$ | async) === true\" class=\"row main-content\" [rFlex]=\"true\">\n  <rsz-layout class=\"cell services\" [directions]=\"['right']\" [rFlex]=\"true\">\n    <nav class=\"tab-header\">\n      <ul>\n        <li (click)=\"nodeList='packages'\" [ngClass]=\"{active: nodeList === 'packages'}\">Packages</li>\n        <li (click)=\"nodeList='services'\" [ngClass]=\"{active: nodeList === 'services'}\">Services</li>\n        <li (click)=\"nodeList=null\" [ngClass]=\"{active: nodeList == null}\">All</li>\n      </ul>\n    </nav>\n    <app-nodes-list [filter]=\"nodeList\"></app-nodes-list>\n  </rsz-layout>\n  <rsz-layout class=\"cell logs\" [directions]=\"['none']\" [rFlex]=\"false\">\n    <nav class=\"tab-header\">\n      <ul>\n        <li *ngFor=\"let tab of (tabs.tabs$ | async)\" [ngClass]=\"{active: tab === (tabs.currentTab$ | async)}\" (click)=\"tabs.selectTab(tab)\">\n          {{ tab.name }}\n          <span class=\"close-tab\" *ngIf=\"tab.closable\" (click)=\"tabs.deleteTab(tab.name)\"><fa-icon [icon]=\"faTimes\"></fa-icon></span>\n        </li>\n      </ul>\n    </nav>\n    <ng-container [ngSwitch]=\"(tabs.currentTab$ | async).type\">\n      <app-events-log *ngSwitchCase=\"'events-log'\"></app-events-log>\n      <app-node-details *ngSwitchCase=\"'node-details'\"></app-node-details>\n      <app-service-logs *ngSwitchCase=\"'service-logs'\"></app-service-logs>\n      <app-tsc-logs *ngSwitchCase=\"'tsc-logs'\"></app-tsc-logs>\n      <p *ngSwitchDefault>Unknown tab type</p>\n    </ng-container>\n  </rsz-layout>\n</rsz-layout>\n</body>\n</html>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NodesListComponent } from './nodes-list/nodes-list.component';\nimport { EventsLogComponent } from './events-log/events-log.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxResizableModule } from '@3dgenomes/ngx-resizable';\nimport { NodeDetailsComponent } from './node-details/node-details.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ServiceLogsComponent } from './service-logs/service-logs.component';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport { TscLogsComponent } from './tsc-logs/tsc-logs.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NodesListComponent,\n    EventsLogComponent,\n    NodeDetailsComponent,\n    ServiceLogsComponent,\n    SafeHtmlPipe,\n    TscLogsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgxResizableModule,\n    FontAwesomeModule,\n    InfiniteScrollModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { DomSanitizer } from '@angular/platform-browser'\nimport { PipeTransform, Pipe } from \"@angular/core\";\n\n@Pipe({ name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MilaService } from '../mila.service';\nimport { Log, LogLevel } from '../log';\nimport {\n  faBong,\n  faBug,\n  faCheck, faChevronDown,\n  faExclamation,\n  faFilter, faInfo,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-events-log',\n  templateUrl: './events-log.component.html',\n  styleUrls: ['./events-log.component.scss']\n})\nexport class EventsLogComponent implements OnInit {\n  logs: Log[];\n  levels: LogLevel[] = ['info', 'warn', 'error'];\n  faFilter = faFilter;\n  faCheck = faCheck;\n  faBug = faBug;\n  faInfo = faInfo;\n  faCross = faTimes;\n  faAlert = faExclamation;\n  faSilly = faBong;\n  faChevron = faChevronDown;\n  showOptions = false;\n\n  private _logs: Log[] = [];\n\n  constructor(\n    private readonly mila: MilaService\n  ) { }\n\n  ngOnInit(): void {\n    // FIXME: take until\n    this.mila.log$.subscribe((logs) => {\n      this._logs = logs;\n      console.debug('Received logs', logs.length);\n      this.filterLogs();\n      this._scrollToEnd();\n    });\n    this.mila.getLogs();\n  }\n\n  // TODO: Search\n  private filterLogs() {\n    // FIXME: Perf issue, too much logs\n    this.logs = this._logs.filter(l => this.levels.includes(l.level));\n    console.debug('Filtered logs', this.logs.length);\n  }\n\n  private _scrollToEnd() {\n    console.log('scrolling');\n    setTimeout(() =>{\n      const elt = document.getElementById('events-log');\n      if (elt) {\n        elt.scrollTo({behavior: 'smooth', top: elt.scrollHeight - elt.clientHeight });\n      }\n    }, 0);\n  }\n\n  toggleLevel(level: LogLevel) {\n    if (this.levels.includes(level)) {\n      this.levels = this.levels.filter(l => l !== level);\n    } else {\n      this.levels.push(level);\n    }\n    // Refresh list\n    this.filterLogs();\n    setTimeout(() => this.showOptions = false, 100);\n  }\n\n  onScrollUp() {\n    console.log('yolo');\n  }\n}\n","<section>\n  <div class=\"heading\">\n    <h3>Events log</h3>\n    <div class=\"filters\">\n      <div class=\"trigger\" (click)=\"showOptions=!showOptions\">\n        <span><fa-icon [icon]=\"faFilter\"></fa-icon>Filters</span>\n        <fa-icon [icon]=\"faChevron\"></fa-icon>\n      </div>\n      <div class=\"options\" *ngIf=\"showOptions\">\n        <ul>\n          <li (click)=\"toggleLevel('silly')\">\n            <span><fa-icon class=\"silly\" [icon]=\"faSilly\"></fa-icon>Silly</span>\n            <fa-icon *ngIf=\"levels.includes('silly')\" class=\"check\" [icon]=\"faCheck\"></fa-icon>\n          </li>\n          <li (click)=\"toggleLevel('debug')\">\n            <span><fa-icon class=\"debug\" [icon]=\"faBug\"></fa-icon>Debug</span>\n            <fa-icon *ngIf=\"levels.includes('debug')\" class=\"check\" [icon]=\"faCheck\"></fa-icon>\n          </li>\n          <li (click)=\"toggleLevel('info')\">\n            <span><fa-icon class=\"info\" [icon]=\"faInfo\"></fa-icon>Info</span>\n            <fa-icon *ngIf=\"levels.includes('info')\" class=\"check\" [icon]=\"faCheck\"></fa-icon>\n          </li>\n          <li (click)=\"toggleLevel('warn')\">\n            <span><fa-icon class=\"warn\" [icon]=\"faAlert\"></fa-icon>Warn</span>\n            <fa-icon *ngIf=\"levels.includes('warn')\" class=\"check\" [icon]=\"faCheck\"></fa-icon>\n          </li>\n          <li (click)=\"toggleLevel('error')\">\n            <span><fa-icon class=\"error\" [icon]=\"faCross\"></fa-icon>Error</span>\n            <fa-icon *ngIf=\"levels.includes('error')\" class=\"check\" [icon]=\"faCheck\"></fa-icon>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <ul\n    id=\"events-log\"\n    class=\"mono\"\n    infiniteScroll\n    [infiniteScrollUpDistance]=\"1.5\"\n    [infiniteScrollThrottle]=\"50\"\n    (scrolledUp)=\"onScrollUp()\"\n  >\n    <li *ngFor=\"let log of logs\">\n      <span [ngClass]=\"log.class\" class=\"level\">[{{log.level}}]</span>\n      <span class=\"date\">{{log.date}}</span>\n      <span class=\"scope\">({{log.scope}})</span>\n      <span class=\"args\" [innerHTML]=\"log.args | safeHtml\"></span>\n    </li>\n  </ul>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MilaService } from '../mila.service';\nimport { Service } from '../service';\nimport { Package } from '../package';\nimport { TabsService } from '../tabs.service';\n\n@Component({\n  selector: 'app-nodes-list',\n  templateUrl: './nodes-list.component.html',\n  styleUrls: ['./nodes-list.component.scss']\n})\nexport class NodesListComponent implements OnInit {\n  packages: Package[];\n  services: Service[];\n  @Input() filter: string;\n\n  constructor(\n    private readonly mila: MilaService,\n    public readonly tabs: TabsService,\n  ) {}\n\n  ngOnInit(): void {\n    // FIXME: take until\n    this.mila.packages$.subscribe((p) => this.packages = p);\n    this.mila.services$.subscribe((s) => this.services = s);\n    this.mila.getGraph();\n  }\n}\n","<section>\n  <h3 *ngIf=\"!filter || filter === 'packages'\">Shared packages</h3>\n  <ul *ngIf=\"!filter || filter === 'packages'\" class=\"packages\">\n    <li *ngFor=\"let pkg of packages\" (click)=\"tabs.openTab('node-details', pkg.name)\">\n      <span class=\"name\">{{pkg.name}}</span>\n      <span [ngClass]=\"pkg.transpiledClass\" class=\"status\">{{pkg.transpiled}}</span>\n      <span [ngClass]=\"pkg.typeCheckClass\" class=\"status\">{{pkg.typeChecked}}</span>\n    </li>\n  </ul>\n  <h3 *ngIf=\"!filter || filter === 'services'\">Services</h3>\n  <ul *ngIf=\"!filter || filter === 'services'\" class=\"services\">\n    <li *ngFor=\"let service of services\" (click)=\"tabs.openTab('node-details', service.name)\">\n      <span class=\"name\">{{service.name}}</span>\n      <span *ngIf=\"service.disabled\" class=\"status\">Disabled</span>\n      <span *ngIf=\"!service.disabled\" [ngClass]=\"service.typeCheckClass\" class=\"status\">{{service.typeChecked}}</span>\n      <span *ngIf=\"!service.disabled\" [ngClass]=\"service.statusClass\" class=\"status\">{{service.status}}</span>\n    </li>\n  </ul>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MilaService } from '../mila.service';\nimport * as Convert from 'ansi-to-html';\n\nconst convert = new Convert();\n\n@Component({\n  selector: 'app-service-logs',\n  templateUrl: './service-logs.component.html',\n  styleUrls: ['./service-logs.component.scss']\n})\nexport class ServiceLogsComponent implements OnInit {\n\n  log: string;\n  constructor(public readonly mila: MilaService) { }\n\n  ngOnInit(): void {\n    this.mila.serviceLogs$.subscribe((log) => {\n      console.log('BBBB', log);\n      this.log = convert.toHtml(log.offline.join('').replace(/(\\r\\n|\\n|\\r)/gm, \"<br />\"));\n      this._scrollToEnd();\n    });\n  }\n\n  private _scrollToEnd() {\n    console.log('scrolling');\n    setTimeout(() =>{\n      const elt = document.getElementById('service-logs');\n      elt.scrollTo({behavior: 'smooth', top: elt.scrollHeight - elt.clientHeight });\n    }, 0);\n  }\n}\n","<section>\n  <h3>{{ mila.currentService$ | async }} logs</h3>\n  <div id=\"service-logs\" class=\"mono\" [innerHTML]=\"log | safeHtml\"></div>\n</section>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}