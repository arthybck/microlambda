{
  "name": "@project/models",
  "version": "0.0.1",
  "private": true,
  "main": "lib/src/index.js",
  "typings": "lib/src/index.d.ts",
  "directories": {
    "lib": "lib"
  },
  "files": [
    "lib"
  ],
  "scripts": {
    "clear": "npm run clear:modules && npm run clear:lib && npm run clear:package",
    "clear:all": "npm run clear && npm run clear:lock",
    "clear:modules": "rm -rf ./node_modules",
    "clear:lock": "rm -f ./package-lock.json",
    "clear:lib": "rm -rf ./lib",
    "clear:package": "rm -rf ./.package",
    "tsc": "npx tsc -v && npx tsc"
  },
  "dependencies": {
    "dynamodels": {
      "_args": [
        [
          "dynamodels@1.4.2",
          "/path/to/project/packages/models"
        ],
        [
          "dynamodels@1.4.2",
          "/path/to/project/packages/models"
        ]
      ],
      "_from": "dynamodels@1.4.2",
      "_id": "dynamodels@1.4.2",
      "_integrity": "sha512-IkdsTiJIi5h6eetF20QnLfAILkPBtDgilVWz8+YHVaAE1cloaIVo/zUDMO1iMidEKkL+6O5jY3AQt2OwAq+QTg==",
      "_location": "/dynamodels",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "dynamodels@1.4.2",
        "name": "dynamodels",
        "escapedName": "dynamodels",
        "rawSpec": "1.4.2",
        "saveSpec": null,
        "fetchSpec": "1.4.2"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/dynamodels/-/dynamodels-1.4.2.tgz",
      "_spec": "1.4.2",
      "_where": "/path/to/project/packages/models",
      "author": {
        "name": "Mario Arnautou"
      },
      "bugs": {
        "url": "https://github.com/MarioArnt/dynamodels/issues"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@hapi/joi": {
          "_args": [
            [
              "@hapi/joi@15.1.1",
              "/path/to/project/packages/models"
            ],
            [
              "@hapi/joi@15.1.1",
              "/path/to/project/packages/models"
            ]
          ],
          "_from": "@hapi/joi@15.1.1",
          "_id": "@hapi/joi@15.1.1",
          "_integrity": "sha512-entf8ZMOK8sc+8YfeOlM8pCfg3b5+WZIKBfUaaJT8UsjAAPjartzxIYm3TIbjvA4u+u++KbcXD38k682nVHDAQ==",
          "_location": "/@hapi/joi",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "@hapi/joi@15.1.1",
            "name": "@hapi/joi",
            "escapedName": "@hapi%2fjoi",
            "scope": "@hapi",
            "rawSpec": "15.1.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "15.1.1"
          },
          "_requiredBy": [
            "/dynamodels"
          ],
          "_resolved": "https://registry.npmjs.org/@hapi/joi/-/joi-15.1.1.tgz",
          "_spec": "15.1.1",
          "_where": "/path/to/project/packages/models",
          "bugs": {
            "url": "https://github.com/hapijs/joi/issues"
          },
          "dependencies": {
            "@hapi/address": {
              "_args": [
                [
                  "@hapi/address@2.1.4",
                  "/path/to/project/packages/models"
                ],
                [
                  "@hapi/address@2.1.4",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "@hapi/address@2.1.4",
              "_id": "@hapi/address@2.1.4",
              "_integrity": "sha512-QD1PhQk+s31P1ixsX0H0Suoupp3VMXzIVMSwobR3F3MSUO2YCV0B7xqLcUw/Bh8yuvd3LhpyqLQWTNcRmp6IdQ==",
              "_location": "/@hapi/address",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@hapi/address@2.1.4",
                "name": "@hapi/address",
                "escapedName": "@hapi%2faddress",
                "scope": "@hapi",
                "rawSpec": "2.1.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.1.4"
              },
              "_requiredBy": [
                "/@hapi/joi"
              ],
              "_resolved": "https://registry.npmjs.org/@hapi/address/-/address-2.1.4.tgz",
              "_spec": "2.1.4",
              "_where": "/path/to/project/packages/models",
              "bugs": {
                "url": "https://github.com/hapijs/address/issues"
              },
              "dependencies": {},
              "description": "Email address and domain validation",
              "devDependencies": {
                "@hapi/code": "6.x.x",
                "@hapi/lab": "20.x.x"
              },
              "homepage": "https://github.com/hapijs/address#readme",
              "keywords": [
                "email",
                "domain",
                "address",
                "validation"
              ],
              "license": "BSD-3-Clause",
              "main": "lib/index.js",
              "name": "@hapi/address",
              "repository": {
                "type": "git",
                "url": "git://github.com/hapijs/address.git"
              },
              "scripts": {
                "test": "lab -a @hapi/code -t 100 -L",
                "test-cov-html": "lab -a @hapi/code -t 100 -L -r html -o coverage.html"
              },
              "version": "2.1.4",
              "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/address\n\n#### Validate email address and domain.\n\n**address** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) ï¿½ they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/address/)\n- [Versions status](https://hapi.dev/resources/status/#address)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/@hapi/address",
              "error": "[Circular]",
              "extraneous": false
            },
            "@hapi/bourne": {
              "_args": [
                [
                  "@hapi/bourne@1.3.2",
                  "/path/to/project/packages/models"
                ],
                [
                  "@hapi/bourne@1.3.2",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "@hapi/bourne@1.3.2",
              "_id": "@hapi/bourne@1.3.2",
              "_integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA==",
              "_location": "/@hapi/bourne",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@hapi/bourne@1.3.2",
                "name": "@hapi/bourne",
                "escapedName": "@hapi%2fbourne",
                "scope": "@hapi",
                "rawSpec": "1.3.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.3.2"
              },
              "_requiredBy": [
                "/@hapi/joi"
              ],
              "_resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
              "_spec": "1.3.2",
              "_where": "/path/to/project/packages/models",
              "bugs": {
                "url": "https://github.com/hapijs/bourne/issues"
              },
              "dependencies": {},
              "description": "JSON parse with prototype poisoning protection",
              "devDependencies": {
                "@hapi/code": "5.x.x",
                "@hapi/lab": "18.x.x",
                "benchmark": "^2.1.4"
              },
              "homepage": "https://github.com/hapijs/bourne#readme",
              "keywords": [
                "JSON",
                "parse",
                "safe",
                "prototype"
              ],
              "license": "BSD-3-Clause",
              "main": "lib/index.js",
              "name": "@hapi/bourne",
              "repository": {
                "type": "git",
                "url": "git://github.com/hapijs/bourne.git"
              },
              "scripts": {
                "test": "lab -a @hapi/code -t 100 -L",
                "test-cov-html": "lab -a @hapi/code -r html -o coverage.html"
              },
              "version": "1.3.2",
              "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# Bourne. JSON Bourne.\n\n`JSON.parse()` drop-in replacement with prototype poisoning protection\n\n[![Build Status](https://travis-ci.org/hapijs/bourne.svg)](https://travis-ci.org/hapijs/bourne)\n\n## Introduction\n\nConsider this:\n\n```\n> const a = '{\"__proto__\":{ \"b\":5}}';\n'{\"__proto__\":{ \"b\":5}}'\n\n> const b = JSON.parse(a);\n{ __proto__: { b: 5 } }\n\n> b.b;\nundefined\n\n> const c = Object.assign({}, b);\n{}\n\n> c.b\n5\n```\n\nThe problem is that `JSON.parse()` retains the `__proto__` property as a plain object key. By\nitself, this is not a security issue. However, as soon as that object is assigned to another or\niterated on and values copied, the `__proto__` property leaks and becomes the object's prototype.\n\n## API\n\n### `Bourne.parse(text, [reviver], [options])`\n\nParses a given JSON-formatted text into an object where:\n- `text` - the JSON text string.\n- `reviver` - the `JSON.parse()` optional `reviver` argument.\n- `options` - optional configuration object where:\n    - `protoAction` - optional string with one of:\n        - `'error'` - throw a `SyntaxError` when a `__proto__` key is found. This is the default value.\n        - `'remove'` - deletes any `__proto__` keys from the result object.\n        - `'ignore'` - skips all validation (same as calling `JSON.parse()` directly).\n\n### `Bourne.scan(obj, [options])`\n\nScans a given object for prototype properties where:\n- `obj` - the object being scanned.\n- `options` - optional configuration object where:\n    - `protoAction` - optional string with one of:\n        - `'error'` - throw a `SyntaxError` when a `__proto__` key is found. This is the default value.\n        - `'remove'` - deletes any `__proto__` keys from the input `obj`.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/@hapi/bourne",
              "error": "[Circular]",
              "extraneous": false
            },
            "@hapi/hoek": {
              "_args": [
                [
                  "@hapi/hoek@8.5.1",
                  "/path/to/project/packages/models"
                ],
                [
                  "@hapi/hoek@8.5.1",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "@hapi/hoek@8.5.1",
              "_id": "@hapi/hoek@8.5.1",
              "_integrity": "sha512-yN7kbciD87WzLGc5539Tn0sApjyiGHAJgKvG9W8C7O+6c7qmoQMfVs0W4bX17eqz6C78QJqqFrtgdK5EWf6Qow==",
              "_location": "/@hapi/hoek",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@hapi/hoek@8.5.1",
                "name": "@hapi/hoek",
                "escapedName": "@hapi%2fhoek",
                "scope": "@hapi",
                "rawSpec": "8.5.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "8.5.1"
              },
              "_requiredBy": [
                "/@hapi/joi",
                "/@hapi/topo"
              ],
              "_resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-8.5.1.tgz",
              "_spec": "8.5.1",
              "_where": "/path/to/project/packages/models",
              "bugs": {
                "url": "https://github.com/hapijs/hoek/issues"
              },
              "dependencies": {},
              "description": "General purpose node utilities",
              "devDependencies": {
                "@hapi/code": "6.x.x",
                "@hapi/lab": "20.x.x"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://github.com/hapijs/hoek#readme",
              "keywords": [
                "utilities"
              ],
              "license": "BSD-3-Clause",
              "main": "lib/index.js",
              "name": "@hapi/hoek",
              "repository": {
                "type": "git",
                "url": "git://github.com/hapijs/hoek.git"
              },
              "scripts": {
                "test": "lab -a @hapi/code -t 100 -L -Y",
                "test-cov-html": "lab -a @hapi/code -t 100 -L -r html -o coverage.html"
              },
              "types": "lib/index.d.ts",
              "version": "8.5.1",
              "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/hoek\n\n#### Utility methods for the hapi ecosystem.\n\n**hoek** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) â they work even better together.\n\nThis module is not intended to solve every problem for everyone, but rather as a central place to store hapi-specific methods. If you're looking for a general purpose utility module, check out [lodash](https://github.com/lodash/lodash).\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/hoek/)\n- [Version status](https://hapi.dev/resources/status/#hoek) (builds, dependencies, node versions, licenses, eol)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/@hapi/hoek",
              "error": "[Circular]",
              "extraneous": false
            },
            "@hapi/topo": {
              "_args": [
                [
                  "@hapi/topo@3.1.6",
                  "/path/to/project/packages/models"
                ],
                [
                  "@hapi/topo@3.1.6",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "@hapi/topo@3.1.6",
              "_id": "@hapi/topo@3.1.6",
              "_integrity": "sha512-tAag0jEcjwH+P2quUfipd7liWCNX2F8NvYjQp2wtInsZxnMlypdw0FtAOLxtvvkO+GSRRbmNi8m/5y42PQJYCQ==",
              "_location": "/@hapi/topo",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@hapi/topo@3.1.6",
                "name": "@hapi/topo",
                "escapedName": "@hapi%2ftopo",
                "scope": "@hapi",
                "rawSpec": "3.1.6",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.1.6"
              },
              "_requiredBy": [
                "/@hapi/joi"
              ],
              "_resolved": "https://registry.npmjs.org/@hapi/topo/-/topo-3.1.6.tgz",
              "_spec": "3.1.6",
              "_where": "/path/to/project/packages/models",
              "bugs": {
                "url": "https://github.com/hapijs/topo/issues"
              },
              "dependencies": {
                "@hapi/hoek": {
                  "_args": "[Circular]",
                  "_from": "@hapi/hoek@8.5.1",
                  "_id": "@hapi/hoek@8.5.1",
                  "_integrity": "sha512-yN7kbciD87WzLGc5539Tn0sApjyiGHAJgKvG9W8C7O+6c7qmoQMfVs0W4bX17eqz6C78QJqqFrtgdK5EWf6Qow==",
                  "_location": "/@hapi/hoek",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "@hapi/hoek@8.5.1",
                    "name": "@hapi/hoek",
                    "escapedName": "@hapi%2fhoek",
                    "scope": "@hapi",
                    "rawSpec": "8.5.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "8.5.1"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-8.5.1.tgz",
                  "_spec": "8.5.1",
                  "_where": "/path/to/project/packages/models",
                  "bugs": "[Circular]",
                  "dependencies": {},
                  "description": "General purpose node utilities",
                  "devDependencies": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/hapijs/hoek#readme",
                  "keywords": "[Circular]",
                  "license": "BSD-3-Clause",
                  "main": "lib/index.js",
                  "name": "@hapi/hoek",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "types": "lib/index.d.ts",
                  "version": "8.5.1",
                  "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/hoek\n\n#### Utility methods for the hapi ecosystem.\n\n**hoek** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) â they work even better together.\n\nThis module is not intended to solve every problem for everyone, but rather as a central place to store hapi-specific methods. If you're looking for a general purpose utility module, check out [lodash](https://github.com/lodash/lodash).\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/hoek/)\n- [Version status](https://hapi.dev/resources/status/#hoek) (builds, dependencies, node versions, licenses, eol)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/models/node_modules/@hapi/hoek",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "@hapi/hoek"
                }
              },
              "description": "Topological sorting with grouping support",
              "devDependencies": {
                "@hapi/code": "6.x.x",
                "@hapi/lab": "20.x.x"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://github.com/hapijs/topo#readme",
              "keywords": [
                "topological",
                "sort",
                "toposort",
                "topsort"
              ],
              "license": "BSD-3-Clause",
              "main": "lib/index.js",
              "name": "@hapi/topo",
              "repository": {
                "type": "git",
                "url": "git://github.com/hapijs/topo.git"
              },
              "scripts": {
                "test": "lab -a @hapi/code -t 100 -L",
                "test-cov-html": "lab -a @hapi/code -t 100 -L -r html -o coverage.html"
              },
              "version": "3.1.6",
              "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\r\n\r\n# @hapi/topo\r\n\r\nTopological sorting with grouping support.\r\n\r\n[![Build Status](https://secure.travis-ci.org/hapijs/topo.svg?branch=master)](http://travis-ci.org/hapijs/topo)\r\n\r\n## Usage\r\n\r\nSee the [API Reference](API.md)\r\n\r\n**Example**\r\n```js\r\nconst Topo = require('topo');\r\n\r\nconst morning = new Topo();\r\n\r\nmorning.add('Nap', { after: ['breakfast', 'prep'] });\r\n\r\nmorning.add([\r\n    'Make toast',\r\n    'Pour juice'\r\n], { before: 'breakfast', group: 'prep' });\r\n\r\nmorning.add('Eat breakfast', { group: 'breakfast' });\r\n\r\nmorning.nodes;        // ['Make toast', 'Pour juice', 'Eat breakfast', 'Nap']\r\n```\r\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "@hapi/hoek": "^8.3.0"
              },
              "path": "/path/to/project/packages/models/node_modules/@hapi/topo",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "Object schema validation",
          "devDependencies": {
            "@hapi/code": "6.x.x",
            "@hapi/lab": "20.x.x"
          },
          "homepage": "https://github.com/hapijs/joi",
          "keywords": [
            "schema",
            "validation"
          ],
          "license": "BSD-3-Clause",
          "main": "lib/index.js",
          "name": "@hapi/joi",
          "repository": {
            "type": "git",
            "url": "git://github.com/hapijs/joi.git"
          },
          "scripts": {
            "test": "lab -t 100 -a @hapi/code -L",
            "test-cov-html": "lab -r html -o coverage.html -a @hapi/code"
          },
          "version": "15.1.1",
          "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# joi\n\nObject schema description language and validator for JavaScript objects.\n\n[![Build Status](https://travis-ci.org/hapijs/joi.svg?branch=master)](https://travis-ci.org/hapijs/joi)\n\n## Introduction\n\nImagine you run facebook and you want visitors to sign up on the website with real names and not something like `l337_p@nda` in the first name field. How would you define the limitations of what can be inputted and validate it against the set rules?\n\nThis is joi, joi allows you to create *blueprints* or *schemas* for JavaScript objects (an object that stores information) to ensure *validation* of key information.\n\n# Installation\n\n```cli \n npm install --save @hapi/joi\n ```\n\n## API\nSee the detailed [API Reference](https://github.com/hapijs/joi/blob/v15.1.0/API.md).\n\n## Example\n\n```javascript\nconst Joi = require('@hapi/joi');\n\nconst schema = Joi.object().keys({\n    username: Joi.string().alphanum().min(3).max(30).required(),\n    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),\n    access_token: [Joi.string(), Joi.number()],\n    birthyear: Joi.number().integer().min(1900).max(2013),\n    email: Joi.string().email({ minDomainSegments: 2 })\n}).with('username', 'birthyear').without('password', 'access_token');\n\n// Return result.\nconst result = Joi.validate({ username: 'abc', birthyear: 1994 }, schema);\n// result.error === null -> valid\n\n// You can also pass a callback which will be called synchronously with the validation result.\nJoi.validate({ username: 'abc', birthyear: 1994 }, schema, function (err, value) { });  // err === null -> valid\n\n```\n\nThe above schema defines the following constraints:\n* `username`\n    * a required string\n    * must contain only alphanumeric characters\n    * at least 3 characters long but no more than 30\n    * must be accompanied by `birthyear`\n* `password`\n    * an optional string\n    * must satisfy the custom regex\n    * cannot appear together with `access_token`\n* `access_token`\n    * an optional, unconstrained string or number\n* `birthyear`\n    * an integer between 1900 and 2013\n* `email`\n    * a valid email address string\n    * must have two domain parts e.g. `example.com`\n\n## Usage\n\nUsage is a two steps process. First, a schema is constructed using the provided types and constraints:\n\n```javascript\nconst schema = {\n    a: Joi.string()\n};\n```\n\nNote that **joi** schema objects are immutable which means every additional rule added (e.g. `.min(5)`) will return a\nnew schema object.\n\nSecond, the value is validated against the defined schema:\n\n```javascript\nconst {error, value} = Joi.validate({ a: 'a string' }, schema);\n\n// or\n\nJoi.validate({ a: 'a string' }, schema, function (error, value) { });\n```\n\nIf the input is valid, then the `error` will be `null`, otherwise it will be an `Error` object providing more information.\n\nThe schema can be a plain JavaScript object where every key is assigned a **joi** type, or it can be a **joi** type directly:\n\n```javascript\nconst schema = Joi.string().min(10);\n```\n\nIf the schema is a **joi** type, the `schema.validate(value, callback)` can be called directly on the type. When passing a non-type schema object,\nthe module converts it internally to an object() type equivalent to:\n\n```javascript\nconst schema = Joi.object().keys({\n    a: Joi.string()\n});\n```\n\nWhen validating a schema:\n\n* Values (or keys in case of objects) are optional by default.\n\n    ```javascript\n    Joi.validate(undefined, Joi.string()); // validates fine\n    ```\n\n    To disallow this behavior, you can either set the schema as `required()`, or set `presence` to `\"required\"` when passing `options`:\n\n    ```javascript\n    Joi.validate(undefined, Joi.string().required());\n    // or\n    Joi.validate(undefined, Joi.string(), /* options */ { presence: \"required\" });\n    ```\n\n* Strings are utf-8 encoded by default.\n* Rules are defined in an additive fashion and evaluated in order, first the inclusive rules, then the exclusive rules.\n\n## Browsers\n\nJoi doesn't directly support browsers, but you could use [joi-browser](https://github.com/jeffbski/joi-browser) for an ES5 build of Joi that works in browsers, or as a source of inspiration for your own builds.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "@hapi/address": "2.x.x",
            "@hapi/bourne": "1.x.x",
            "@hapi/hoek": "8.x.x",
            "@hapi/topo": "3.x.x"
          },
          "path": "/path/to/project/packages/models/node_modules/@hapi/joi",
          "error": "[Circular]",
          "extraneous": false
        },
        "aws-sdk": {
          "_args": [
            [
              "aws-sdk@2.636.0",
              "/path/to/project/packages/models"
            ],
            [
              "aws-sdk@2.636.0",
              "/path/to/project/packages/models"
            ]
          ],
          "_from": "aws-sdk@2.636.0",
          "_id": "aws-sdk@2.636.0",
          "_integrity": "sha512-Zd/jed8qSNCm4pT2+8BuFfveouZrqUqmsOdhzpi3ZB3GYqV5eD+dmsl8OY+qvMgIJIFCB34a1SMucsC4zdBokg==",
          "_location": "/aws-sdk",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "aws-sdk@2.636.0",
            "name": "aws-sdk",
            "escapedName": "aws-sdk",
            "rawSpec": "2.636.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "2.636.0"
          },
          "_requiredBy": [
            "/dynamodels"
          ],
          "_resolved": "https://registry.npmjs.org/aws-sdk/-/aws-sdk-2.636.0.tgz",
          "_spec": "2.636.0",
          "_where": "/path/to/project/packages/models",
          "author": {
            "name": "Amazon Web Services",
            "url": "https://aws.amazon.com/"
          },
          "browser": {
            "lib/aws.js": "./lib/browser.js",
            "fs": false,
            "./global.js": "./browser.js",
            "./lib/node_loader.js": "./lib/browser_loader.js"
          },
          "browserify": {
            "transform": "./dist-tools/transform.js"
          },
          "bugs": {
            "url": "https://github.com/aws/aws-sdk-js/issues"
          },
          "contributors": [
            {
              "name": "Loren Segal",
              "email": "lsegal@amazon.com"
            },
            {
              "name": "Trevor Rowe",
              "email": "trevrowe@amazon.com"
            }
          ],
          "dependencies": {
            "uuid": {
              "_args": [
                [
                  "uuid@3.3.2",
                  "/path/to/project/packages/models"
                ],
                [
                  "uuid@3.3.2",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "uuid@3.3.2",
              "_id": "uuid@3.3.2",
              "_integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
              "_location": "/aws-sdk/uuid",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "uuid@3.3.2",
                "name": "uuid",
                "escapedName": "uuid",
                "rawSpec": "3.3.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "3.3.2"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
              "_spec": "3.3.2",
              "_where": "/path/to/project/packages/models",
              "bin": {
                "uuid": "bin/uuid"
              },
              "browser": {
                "./lib/rng.js": "./lib/rng-browser.js",
                "./lib/sha1.js": "./lib/sha1-browser.js",
                "./lib/md5.js": "./lib/md5-browser.js"
              },
              "bugs": {
                "url": "https://github.com/kelektiv/node-uuid/issues"
              },
              "commitlint": {
                "extends": [
                  "@commitlint/config-conventional"
                ]
              },
              "contributors": [
                {
                  "name": "Robert Kieffer",
                  "email": "robert@broofa.com"
                },
                {
                  "name": "Christoph Tavan",
                  "email": "dev@tavan.de"
                },
                {
                  "name": "AJ ONeal",
                  "email": "coolaj86@gmail.com"
                },
                {
                  "name": "Vincent Voyer",
                  "email": "vincent@zeroload.net"
                },
                {
                  "name": "Roman Shtylman",
                  "email": "shtylman@gmail.com"
                }
              ],
              "description": "RFC4122 (v1, v4, and v5) UUIDs",
              "devDependencies": {
                "@commitlint/cli": "7.0.0",
                "@commitlint/config-conventional": "7.0.1",
                "eslint": "4.19.1",
                "husky": "0.14.3",
                "mocha": "5.2.0",
                "runmd": "1.0.1",
                "standard-version": "4.4.0"
              },
              "homepage": "https://github.com/kelektiv/node-uuid#readme",
              "keywords": [
                "uuid",
                "guid",
                "rfc4122"
              ],
              "license": "MIT",
              "name": "uuid",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/kelektiv/node-uuid.git"
              },
              "scripts": {
                "commitmsg": "commitlint -E GIT_PARAMS",
                "md": "runmd --watch --output=README.md README_js.md",
                "prepare": "runmd --output=README.md README_js.md",
                "release": "standard-version",
                "test": "mocha test/test.js"
              },
              "version": "3.3.2",
              "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://secure.travis-ci.org/kelektiv/node-uuid.svg?branch=master)](http://travis-ci.org/kelektiv/node-uuid) #\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Support for version 1, 3, 4 and 5 UUIDs\n* Cross-platform\n* Uses cryptographically-strong random number APIs (when available)\n* Zero-dependency, small footprint (... but not [this small](https://gist.github.com/982883))\n\n[**Deprecation warning**: The use of `require('uuid')` is deprecated and will not be\nsupported after version 3.x of this module.  Instead, use `require('uuid/[v1|v3|v4|v5]')` as shown in the examples below.]\n\n## Quickstart - CommonJS (Recommended)\n\n```shell\nnpm install uuid\n```\n\nThen generate your uuid version of choice ...\n\nVersion 1 (timestamp):\n\n```javascript\nconst uuidv1 = require('uuid/v1');\nuuidv1(); // â¨ '45745c60-7b1a-11e8-9c9c-2d42b21b1a3e'\n\n```\n\nVersion 3 (namespace):\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv3('hello.example.com', uuidv3.DNS); // â¨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv3('http://example.com/hello', uuidv3.URL); // â¨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv3('Hello, World!', MY_NAMESPACE); // â¨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n\n```\n\nVersion 4 (random):\n\n```javascript\nconst uuidv4 = require('uuid/v4');\nuuidv4(); // â¨ '10ba038e-48da-487b-96e8-8d3b99b6d18a'\n\n```\n\nVersion 5 (namespace):\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // â¨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // â¨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // â¨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\n\n```\n\n## Quickstart - Browser-ready Versions\n\nBrowser-ready versions of this module are available via [wzrd.in](https://github.com/jfhbrook/wzrd.in).\n\nFor version 1 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv1@latest\"></script>\n<script>\nuuidv1(); // -> v1 UUID\n</script>\n```\n\nFor version 3 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv3@latest\"></script>\n<script>\nuuidv3('http://example.com/hello', uuidv3.URL); // -> v3 UUID\n</script>\n```\n\nFor version 4 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv4@latest\"></script>\n<script>\nuuidv4(); // -> v4 UUID\n</script>\n```\n\nFor version 5 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv5@latest\"></script>\n<script>\nuuidv5('http://example.com/hello', uuidv5.URL); // -> v5 UUID\n</script>\n```\n\n## API\n\n### Version 1\n\n```javascript\nconst uuidv1 = require('uuid/v1');\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The <node> id is generated guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n};\nuuidv1(v1options); // â¨ '710b962e-041c-11e1-9234-0123456789ab'\n\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0);  // â¨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\nuuidv1(null, arr, 16); // â¨ [ 69, 117, 109, 208, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62, 69, 117, 109, 209, 123, 26, 17, 232, 146, 52, 45, 66, 178, 27, 26, 62 ]\n\n```\n\n### Version 3\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v3 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE);  // â¨ '042ffd34-d989-321c-ad06-f60826172424'\n\n```\n\n### Version 4\n\n```javascript\nconst uuidv4 = require('uuid/v4')\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255)\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n};\nuuidv4(v4options); // â¨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0);  // â¨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45 ]\nuuidv4(null, buffer, 16); // â¨ [ 54, 122, 218, 70, 45, 70, 65, 24, 171, 53, 95, 130, 83, 195, 242, 45, 108, 204, 255, 103, 171, 86, 76, 94, 178, 225, 188, 236, 150, 20, 151, 87 ]\n\n```\n\n### Version 5\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v5 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE);  // â¨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n\n```\n\n## Command Line\n\nUUIDs can be generated from the command line with the `uuid` command.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n\n$ uuid v1\n02d37060-d446-11e7-a9fa-7bdae751ebe1\n```\n\nType `uuid --help` for usage details\n\n## Testing\n\n```shell\nnpm test\n```\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/aws-sdk/node_modules/uuid",
              "error": "[Circular]",
              "extraneous": false
            },
            "buffer": {
              "_args": [
                [
                  "buffer@4.9.1",
                  "/path/to/project/packages/models"
                ],
                [
                  "buffer@4.9.1",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "buffer@4.9.1",
              "_id": "buffer@4.9.1",
              "_integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",
              "_location": "/buffer",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "buffer@4.9.1",
                "name": "buffer",
                "escapedName": "buffer",
                "rawSpec": "4.9.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "4.9.1"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",
              "_spec": "4.9.1",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "Feross Aboukhadijeh",
                "email": "feross@feross.org",
                "url": "http://feross.org"
              },
              "bugs": {
                "url": "https://github.com/feross/buffer/issues"
              },
              "contributors": [
                {
                  "name": "Romain Beauxis",
                  "email": "toots@rastageeks.org"
                },
                {
                  "name": "James Halliday",
                  "email": "mail@substack.net"
                }
              ],
              "dependencies": {
                "base64-js": {
                  "_args": [
                    [
                      "base64-js@1.3.1",
                      "/path/to/project/packages/models"
                    ],
                    [
                      "base64-js@1.3.1",
                      "/path/to/project/packages/models"
                    ]
                  ],
                  "_from": "base64-js@1.3.1",
                  "_id": "base64-js@1.3.1",
                  "_integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g==",
                  "_location": "/base64-js",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "base64-js@1.3.1",
                    "name": "base64-js",
                    "escapedName": "base64-js",
                    "rawSpec": "1.3.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.3.1"
                  },
                  "_requiredBy": [
                    "/buffer"
                  ],
                  "_resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
                  "_spec": "1.3.1",
                  "_where": "/path/to/project/packages/models",
                  "author": {
                    "name": "T. Jameson Little",
                    "email": "t.jameson.little@gmail.com"
                  },
                  "bugs": {
                    "url": "https://github.com/beatgammit/base64-js/issues"
                  },
                  "description": "Base64 encoding/decoding in pure JS",
                  "devDependencies": {
                    "benchmark": "^2.1.4",
                    "browserify": "^16.3.0",
                    "standard": "*",
                    "tape": "4.x",
                    "uglify-js": "^3.6.0"
                  },
                  "homepage": "https://github.com/beatgammit/base64-js",
                  "keywords": [
                    "base64"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "base64-js",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/beatgammit/base64-js.git"
                  },
                  "scripts": {
                    "build": "browserify -s base64js -r ./ | uglifyjs -m > base64js.min.js",
                    "lint": "standard",
                    "test": "npm run lint && npm run unit",
                    "unit": "tape test/*.js"
                  },
                  "version": "1.3.1",
                  "readme": "base64-js\n=========\n\n`base64-js` does basic base64 encoding/decoding in pure JS.\n\n[![build status](https://secure.travis-ci.org/beatgammit/base64-js.png)](http://travis-ci.org/beatgammit/base64-js)\n\nMany browsers already have base64 encoding/decoding functionality, but it is for text data, not all-purpose binary data.\n\nSometimes encoding/decoding binary data in the browser is useful, and that is what this module does.\n\n## install\n\nWith [npm](https://npmjs.org) do:\n\n`npm install base64-js` and `var base64js = require('base64-js')`\n\nFor use in web browsers do:\n\n`<script src=\"base64js.min.js\"></script>`\n\n## methods\n\n`base64js` has three exposed functions, `byteLength`, `toByteArray` and `fromByteArray`, which both take a single argument.\n\n* `byteLength` - Takes a base64 string and returns length of byte array\n* `toByteArray` - Takes a base64 string and returns a byte array\n* `fromByteArray` - Takes a byte array and returns a base64 string\n\n## license\n\nMIT\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/models/node_modules/base64-js",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "ieee754": {
                  "_args": [
                    [
                      "ieee754@1.1.13",
                      "/path/to/project/packages/models"
                    ],
                    [
                      "ieee754@1.1.13",
                      "/path/to/project/packages/models"
                    ]
                  ],
                  "_from": "ieee754@1.1.13",
                  "_id": "ieee754@1.1.13",
                  "_integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg==",
                  "_location": "/ieee754",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "ieee754@1.1.13",
                    "name": "ieee754",
                    "escapedName": "ieee754",
                    "rawSpec": "1.1.13",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.1.13"
                  },
                  "_requiredBy": [
                    "/aws-sdk",
                    "/buffer"
                  ],
                  "_resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
                  "_spec": "1.1.13",
                  "_where": "/path/to/project/packages/models",
                  "author": {
                    "name": "Feross Aboukhadijeh",
                    "email": "feross@feross.org",
                    "url": "http://feross.org"
                  },
                  "bugs": {
                    "url": "https://github.com/feross/ieee754/issues"
                  },
                  "contributors": [
                    {
                      "name": "Romain Beauxis",
                      "email": "toots@rastageeks.org"
                    }
                  ],
                  "description": "Read/write IEEE754 floating point numbers from/to a Buffer or array-like object",
                  "devDependencies": {
                    "airtap": "0.1.0",
                    "standard": "*",
                    "tape": "^4.0.0"
                  },
                  "homepage": "https://github.com/feross/ieee754#readme",
                  "keywords": [
                    "IEEE 754",
                    "buffer",
                    "convert",
                    "floating point",
                    "ieee754"
                  ],
                  "license": "BSD-3-Clause",
                  "main": "index.js",
                  "name": "ieee754",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/feross/ieee754.git"
                  },
                  "scripts": {
                    "test": "standard && npm run test-node && npm run test-browser",
                    "test-browser": "airtap -- test/*.js",
                    "test-browser-local": "airtap --local -- test/*.js",
                    "test-node": "tape test/*.js"
                  },
                  "version": "1.1.13",
                  "readme": "# ieee754 [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/ieee754/master.svg\n[travis-url]: https://travis-ci.org/feross/ieee754\n[npm-image]: https://img.shields.io/npm/v/ieee754.svg\n[npm-url]: https://npmjs.org/package/ieee754\n[downloads-image]: https://img.shields.io/npm/dm/ieee754.svg\n[downloads-url]: https://npmjs.org/package/ieee754\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[saucelabs-image]: https://saucelabs.com/browser-matrix/ieee754.svg\n[saucelabs-url]: https://saucelabs.com/u/ieee754\n\n### Read/write IEEE754 floating point numbers from/to a Buffer or array-like object.\n\n## install\n\n```\nnpm install ieee754\n```\n\n[Get supported ieee754 with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-ieee754?utm_source=npm-ieee754&utm_medium=referral&utm_campaign=readme)\n\n## methods\n\n`var ieee754 = require('ieee754')`\n\nThe `ieee754` object has the following functions:\n\n```\nieee754.read = function (buffer, offset, isLE, mLen, nBytes)\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes)\n```\n\nThe arguments mean the following:\n\n- buffer = the buffer\n- offset = offset into the buffer\n- value = value to set (only for `write`)\n- isLe = is little endian?\n- mLen = mantissa length\n- nBytes = number of bytes\n\n## what is ieee754?\n\nThe IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation. [Read more](http://en.wikipedia.org/wiki/IEEE_floating_point).\n\n## license\n\nBSD 3 Clause. Copyright (c) 2008, Fair Oaks Labs, Inc.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/models/node_modules/ieee754",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "ieee754"
                },
                "isarray": {
                  "_args": [
                    [
                      "isarray@1.0.0",
                      "/path/to/project/packages/models"
                    ],
                    [
                      "isarray@1.0.0",
                      "/path/to/project/packages/models"
                    ]
                  ],
                  "_from": "isarray@1.0.0",
                  "_id": "isarray@1.0.0",
                  "_integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
                  "_location": "/isarray",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "isarray@1.0.0",
                    "name": "isarray",
                    "escapedName": "isarray",
                    "rawSpec": "1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.0.0"
                  },
                  "_requiredBy": [
                    "/buffer"
                  ],
                  "_resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                  "_spec": "1.0.0",
                  "_where": "/path/to/project/packages/models",
                  "author": {
                    "name": "Julian Gruber",
                    "email": "mail@juliangruber.com",
                    "url": "http://juliangruber.com"
                  },
                  "bugs": {
                    "url": "https://github.com/juliangruber/isarray/issues"
                  },
                  "dependencies": {},
                  "description": "Array#isArray for older browsers",
                  "devDependencies": {
                    "tape": "~2.13.4"
                  },
                  "homepage": "https://github.com/juliangruber/isarray",
                  "keywords": [
                    "browser",
                    "isarray",
                    "array"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "isarray",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/juliangruber/isarray.git"
                  },
                  "scripts": {
                    "test": "tape test.js"
                  },
                  "testling": {
                    "files": "test.js",
                    "browsers": [
                      "ie/8..latest",
                      "firefox/17..latest",
                      "firefox/nightly",
                      "chrome/22..latest",
                      "chrome/canary",
                      "opera/12..latest",
                      "opera/next",
                      "safari/5.1..latest",
                      "ipad/6.0..latest",
                      "iphone/6.0..latest",
                      "android-browser/4.2..latest"
                    ]
                  },
                  "version": "1.0.0",
                  "readme": "\n# isarray\n\n`Array#isArray` for older browsers.\n\n[![build status](https://secure.travis-ci.org/juliangruber/isarray.svg)](http://travis-ci.org/juliangruber/isarray)\n[![downloads](https://img.shields.io/npm/dm/isarray.svg)](https://www.npmjs.org/package/isarray)\n\n[![browser support](https://ci.testling.com/juliangruber/isarray.png)\n](https://ci.testling.com/juliangruber/isarray)\n\n## Usage\n\n```js\nvar isArray = require('isarray');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/browserify).\n\nWith [component](http://component.io) do\n\n```bash\n$ component install juliangruber/isarray\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/models/node_modules/isarray",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Node.js Buffer API, for the browser",
              "devDependencies": {
                "benchmark": "^2.0.0",
                "browserify": "^13.0.0",
                "concat-stream": "^1.4.7",
                "hyperquest": "^2.0.0",
                "is-buffer": "^1.1.1",
                "is-nan": "^1.0.1",
                "split": "^1.0.0",
                "standard": "^7.0.0",
                "tape": "^4.0.0",
                "through2": "^2.0.0",
                "zuul": "^3.0.0"
              },
              "homepage": "https://github.com/feross/buffer",
              "jspm": {
                "map": {
                  "./index.js": {
                    "node": "@node/buffer"
                  }
                }
              },
              "keywords": [
                "arraybuffer",
                "browser",
                "browserify",
                "buffer",
                "compatible",
                "dataview",
                "uint8array"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "buffer",
              "repository": {
                "type": "git",
                "url": "git://github.com/feross/buffer.git"
              },
              "scripts": {
                "perf": "browserify --debug perf/bracket-notation.js > perf/bundle.js && open perf/index.html",
                "perf-node": "node perf/bracket-notation.js && node perf/concat.js && node perf/copy-big.js && node perf/copy.js && node perf/new-big.js && node perf/new.js && node perf/readDoubleBE.js && node perf/readFloatBE.js && node perf/readUInt32LE.js && node perf/slice.js && node perf/writeFloatBE.js",
                "size": "browserify -r ./ | uglifyjs -c -m | gzip | wc -c",
                "test": "standard && node ./bin/test.js",
                "test-browser-es5": "zuul --ui tape -- test/*.js",
                "test-browser-es5-local": "zuul --ui tape --local -- test/*.js",
                "test-browser-es6": "zuul --ui tape -- test/*.js test/node/*.js",
                "test-browser-es6-local": "zuul --ui tape --local -- test/*.js test/node/*.js",
                "test-node": "tape test/*.js test/node/*.js && OBJECT_IMPL=true tape test/*.js",
                "update-authors": "./bin/update-authors.sh"
              },
              "standard": {
                "ignore": [
                  "test/node/*.js",
                  "test/_polyfill.js",
                  "perf/*.js"
                ]
              },
              "version": "4.9.1",
              "readme": "# buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][npm-url]\n\n#### The buffer module from [node.js](https://nodejs.org/), for the browser.\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[travis-image]: https://img.shields.io/travis/feross/buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/buffer\n[npm-image]: https://img.shields.io/npm/v/buffer.svg\n[npm-url]: https://npmjs.org/package/buffer\n[downloads-image]: https://img.shields.io/npm/dm/buffer.svg\n[saucelabs-image]: https://saucelabs.com/browser-matrix/buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/buffer\n\nWith [browserify](http://browserify.org), simply `require('buffer')` or use the `Buffer` global and you will get this module.\n\nThe goal is to provide an API that is 100% identical to\n[node's Buffer API](https://nodejs.org/api/buffer.html). Read the\n[official docs](https://nodejs.org/api/buffer.html) for the full list of properties,\ninstance methods, and class methods that are supported.\n\n## features\n\n- Manipulate binary data like a boss, in all browsers -- even IE6!\n- Super fast. Backed by Typed Arrays (`Uint8Array`/`ArrayBuffer`, not `Object`)\n- Extremely small bundle size (**5.04KB minified + gzipped**, 35.5KB with comments)\n- Excellent browser support (IE 6+, Chrome 4+, Firefox 3+, Safari 5.1+, Opera 11+, iOS, etc.)\n- Preserves Node API exactly, with one minor difference (see below)\n- Square-bracket `buf[4]` notation works, even in old browsers like IE6!\n- Does not modify any browser prototypes or put anything on `window`\n- Comprehensive test suite (including all buffer tests from node.js core)\n\n\n## install\n\nTo use this module directly (without browserify), install it:\n\n```bash\nnpm install buffer\n```\n\nThis module was previously called **native-buffer-browserify**, but please use **buffer**\nfrom now on.\n\nA standalone bundle is available [here](https://wzrd.in/standalone/buffer), for non-browserify users.\n\n\n## usage\n\nThe module's API is identical to node's `Buffer` API. Read the\n[official docs](https://nodejs.org/api/buffer.html) for the full list of properties,\ninstance methods, and class methods that are supported.\n\nAs mentioned above, `require('buffer')` or use the `Buffer` global with\n[browserify](http://browserify.org) and this module will automatically be included\nin your bundle. Almost any npm module will work in the browser, even if it assumes that\nthe node `Buffer` API will be available.\n\nTo depend on this module explicitly (without browserify), require it like this:\n\n```js\nvar Buffer = require('buffer/').Buffer  // note: the trailing slash is important!\n```\n\nTo require this module explicitly, use `require('buffer/')` which tells the node.js module\nlookup algorithm (also used by browserify) to use the **npm module** named `buffer`\ninstead of the **node.js core** module named `buffer`!\n\n\n## how does it work?\n\nThe Buffer constructor returns instances of `Uint8Array` that have their prototype\nchanged to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of `Uint8Array`,\nso the returned instances will have all the node `Buffer` methods and the\n`Uint8Array` methods. Square bracket notation works as expected -- it returns a\nsingle octet.\n\nThe `Uint8Array` prototype remains unmodified.\n\n\n## one minor difference\n\n#### In old browsers, `buf.slice()` does not modify parent buffer's memory\n\nIf you only support modern browsers (specifically, those with typed array support),\nthen this issue does not affect you. If you support super old browsers, then read on.\n\nIn node, the `slice()` method returns a new `Buffer` that shares underlying memory\nwith the original Buffer. When you modify one buffer, you modify the other.\n[Read more.](https://nodejs.org/api/buffer.html#buffer_buf_slice_start_end)\n\nIn browsers with typed array support, this `Buffer` implementation supports this\nbehavior. In browsers without typed arrays, an alternate buffer implementation is\nused that is based on `Object` which has no mechanism to point separate\n`Buffer`s to the same underlying slab of memory.\n\nYou can see which browser versions lack typed array support\n[here](https://github.com/feross/buffer/blob/master/index.js#L22-L48).\n\n\n## tracking the latest node api\n\nThis module tracks the Buffer API in the latest (unstable) version of node.js. The Buffer\nAPI is considered **stable** in the\n[node stability index](https://nodejs.org/docs/latest/api/documentation.html#documentation_stability_index),\nso it is unlikely that there will ever be breaking changes.\nNonetheless, when/if the Buffer API changes in node, this module's API will change\naccordingly.\n\n## related packages\n\n- [`buffer-equals`](https://www.npmjs.com/package/buffer-equals) - Node.js 0.12 buffer.equals() ponyfill\n- [`buffer-reverse`](https://www.npmjs.com/package/buffer-reverse) - A lite module for reverse-operations on buffers\n- [`buffer-xor`](https://www.npmjs.com/package/buffer-xor) - A simple module for bitwise-xor on buffers\n- [`is-buffer`](https://www.npmjs.com/package/is-buffer) - Determine if an object is a Buffer without including the whole `Buffer` package\n- [`typedarray-to-buffer`](https://www.npmjs.com/package/typedarray-to-buffer) - Convert a typed array to a Buffer without a copy\n\n## performance\n\nSee perf tests in `/perf`.\n\n`BrowserBuffer` is the browser `buffer` module (this repo). `Uint8Array` is included as a\nsanity check (since `BrowserBuffer` uses `Uint8Array` under the hood, `Uint8Array` will\nalways be at least a bit faster). Finally, `NodeBuffer` is the node.js buffer module,\nwhich is included to compare against.\n\nNOTE: Performance has improved since these benchmarks were taken. PR welcoem to update the README.\n\n### Chrome 38\n\n| Method | Operations | Accuracy | Sampled | Fastest |\n|:-------|:-----------|:---------|:--------|:-------:|\n| BrowserBuffer#bracket-notation | 11,457,464 ops/sec | Â±0.86% | 66 | â |\n| Uint8Array#bracket-notation | 10,824,332 ops/sec | Â±0.74% | 65 | |\n| | | | |\n| BrowserBuffer#concat | 450,532 ops/sec | Â±0.76% | 68 | |\n| Uint8Array#concat | 1,368,911 ops/sec | Â±1.50% | 62 | â |\n| | | | |\n| BrowserBuffer#copy(16000) | 903,001 ops/sec | Â±0.96% | 67 | |\n| Uint8Array#copy(16000) | 1,422,441 ops/sec | Â±1.04% | 66 | â |\n| | | | |\n| BrowserBuffer#copy(16) | 11,431,358 ops/sec | Â±0.46% | 69 | |\n| Uint8Array#copy(16) | 13,944,163 ops/sec | Â±1.12% | 68 | â |\n| | | | |\n| BrowserBuffer#new(16000) | 106,329 ops/sec | Â±6.70% | 44 | |\n| Uint8Array#new(16000) | 131,001 ops/sec | Â±2.85% | 31 | â |\n| | | | |\n| BrowserBuffer#new(16) | 1,554,491 ops/sec | Â±1.60% | 65 | |\n| Uint8Array#new(16) | 6,623,930 ops/sec | Â±1.66% | 65 | â |\n| | | | |\n| BrowserBuffer#readDoubleBE | 112,830 ops/sec | Â±0.51% | 69 | â |\n| DataView#getFloat64 | 93,500 ops/sec | Â±0.57% | 68 | |\n| | | | |\n| BrowserBuffer#readFloatBE | 146,678 ops/sec | Â±0.95% | 68 | â |\n| DataView#getFloat32 | 99,311 ops/sec | Â±0.41% | 67 | |\n| | | | |\n| BrowserBuffer#readUInt32LE | 843,214 ops/sec | Â±0.70% | 69 | â |\n| DataView#getUint32 | 103,024 ops/sec | Â±0.64% | 67 | |\n| | | | |\n| BrowserBuffer#slice | 1,013,941 ops/sec | Â±0.75% | 67 | |\n| Uint8Array#subarray | 1,903,928 ops/sec | Â±0.53% | 67 | â |\n| | | | |\n| BrowserBuffer#writeFloatBE | 61,387 ops/sec | Â±0.90% | 67 | |\n| DataView#setFloat32 | 141,249 ops/sec | Â±0.40% | 66 | â |\n\n\n### Firefox 33\n\n| Method | Operations | Accuracy | Sampled | Fastest |\n|:-------|:-----------|:---------|:--------|:-------:|\n| BrowserBuffer#bracket-notation | 20,800,421 ops/sec | Â±1.84% | 60 | |\n| Uint8Array#bracket-notation | 20,826,235 ops/sec | Â±2.02% | 61 | â |\n| | | | |\n| BrowserBuffer#concat | 153,076 ops/sec | Â±2.32% | 61 | |\n| Uint8Array#concat | 1,255,674 ops/sec | Â±8.65% | 52 | â |\n| | | | |\n| BrowserBuffer#copy(16000) | 1,105,312 ops/sec | Â±1.16% | 63 | |\n| Uint8Array#copy(16000) | 1,615,911 ops/sec | Â±0.55% | 66 | â |\n| | | | |\n| BrowserBuffer#copy(16) | 16,357,599 ops/sec | Â±0.73% | 68 | |\n| Uint8Array#copy(16) | 31,436,281 ops/sec | Â±1.05% | 68 | â |\n| | | | |\n| BrowserBuffer#new(16000) | 52,995 ops/sec | Â±6.01% | 35 | |\n| Uint8Array#new(16000) | 87,686 ops/sec | Â±5.68% | 45 | â |\n| | | | |\n| BrowserBuffer#new(16) | 252,031 ops/sec | Â±1.61% | 66 | |\n| Uint8Array#new(16) | 8,477,026 ops/sec | Â±0.49% | 68 | â |\n| | | | |\n| BrowserBuffer#readDoubleBE | 99,871 ops/sec | Â±0.41% | 69 | |\n| DataView#getFloat64 | 285,663 ops/sec | Â±0.70% | 68 | â |\n| | | | |\n| BrowserBuffer#readFloatBE | 115,540 ops/sec | Â±0.42% | 69 | |\n| DataView#getFloat32 | 288,722 ops/sec | Â±0.82% | 68 | â |\n| | | | |\n| BrowserBuffer#readUInt32LE | 633,926 ops/sec | Â±1.08% | 67 | â |\n| DataView#getUint32 | 294,808 ops/sec | Â±0.79% | 64 | |\n| | | | |\n| BrowserBuffer#slice | 349,425 ops/sec | Â±0.46% | 69 | |\n| Uint8Array#subarray | 5,965,819 ops/sec | Â±0.60% | 65 | â |\n| | | | |\n| BrowserBuffer#writeFloatBE | 59,980 ops/sec | Â±0.41% | 67 | |\n| DataView#setFloat32 | 317,634 ops/sec | Â±0.63% | 68 | â |\n\n### Safari 8\n\n| Method | Operations | Accuracy | Sampled | Fastest |\n|:-------|:-----------|:---------|:--------|:-------:|\n| BrowserBuffer#bracket-notation | 10,279,729 ops/sec | Â±2.25% | 56 | â |\n| Uint8Array#bracket-notation | 10,030,767 ops/sec | Â±2.23% | 59 | |\n| | | | |\n| BrowserBuffer#concat | 144,138 ops/sec | Â±1.38% | 65 | |\n| Uint8Array#concat | 4,950,764 ops/sec | Â±1.70% | 63 | â |\n| | | | |\n| BrowserBuffer#copy(16000) | 1,058,548 ops/sec | Â±1.51% | 64 | |\n| Uint8Array#copy(16000) | 1,409,666 ops/sec | Â±1.17% | 65 | â |\n| | | | |\n| BrowserBuffer#copy(16) | 6,282,529 ops/sec | Â±1.88% | 58 | |\n| Uint8Array#copy(16) | 11,907,128 ops/sec | Â±2.87% | 58 | â |\n| | | | |\n| BrowserBuffer#new(16000) | 101,663 ops/sec | Â±3.89% | 57 | |\n| Uint8Array#new(16000) | 22,050,818 ops/sec | Â±6.51% | 46 | â |\n| | | | |\n| BrowserBuffer#new(16) | 176,072 ops/sec | Â±2.13% | 64 | |\n| Uint8Array#new(16) | 24,385,731 ops/sec | Â±5.01% | 51 | â |\n| | | | |\n| BrowserBuffer#readDoubleBE | 41,341 ops/sec | Â±1.06% | 67 | |\n| DataView#getFloat64 | 322,280 ops/sec | Â±0.84% | 68 | â |\n| | | | |\n| BrowserBuffer#readFloatBE | 46,141 ops/sec | Â±1.06% | 65 | |\n| DataView#getFloat32 | 337,025 ops/sec | Â±0.43% | 69 | â |\n| | | | |\n| BrowserBuffer#readUInt32LE | 151,551 ops/sec | Â±1.02% | 66 | |\n| DataView#getUint32 | 308,278 ops/sec | Â±0.94% | 67 | â |\n| | | | |\n| BrowserBuffer#slice | 197,365 ops/sec | Â±0.95% | 66 | |\n| Uint8Array#subarray | 9,558,024 ops/sec | Â±3.08% | 58 | â |\n| | | | |\n| BrowserBuffer#writeFloatBE | 17,518 ops/sec | Â±1.03% | 63 | |\n| DataView#setFloat32 | 319,751 ops/sec | Â±0.48% | 68 | â |\n\n\n### Node 0.11.14\n\n| Method | Operations | Accuracy | Sampled | Fastest |\n|:-------|:-----------|:---------|:--------|:-------:|\n| BrowserBuffer#bracket-notation | 10,489,828 ops/sec | Â±3.25% | 90 | |\n| Uint8Array#bracket-notation | 10,534,884 ops/sec | Â±0.81% | 92 | â |\n| NodeBuffer#bracket-notation | 10,389,910 ops/sec | Â±0.97% | 87 | |\n| | | | |\n| BrowserBuffer#concat | 487,830 ops/sec | Â±2.58% | 88 | |\n| Uint8Array#concat | 1,814,327 ops/sec | Â±1.28% | 88 | â |\n| NodeBuffer#concat | 1,636,523 ops/sec | Â±1.88% | 73 | |\n| | | | |\n| BrowserBuffer#copy(16000) | 1,073,665 ops/sec | Â±0.77% | 90 | |\n| Uint8Array#copy(16000) | 1,348,517 ops/sec | Â±0.84% | 89 | â |\n| NodeBuffer#copy(16000) | 1,289,533 ops/sec | Â±0.82% | 93 | |\n| | | | |\n| BrowserBuffer#copy(16) | 12,782,706 ops/sec | Â±0.74% | 85 | |\n| Uint8Array#copy(16) | 14,180,427 ops/sec | Â±0.93% | 92 | â |\n| NodeBuffer#copy(16) | 11,083,134 ops/sec | Â±1.06% | 89 | |\n| | | | |\n| BrowserBuffer#new(16000) | 141,678 ops/sec | Â±3.30% | 67 | |\n| Uint8Array#new(16000) | 161,491 ops/sec | Â±2.96% | 60 | |\n| NodeBuffer#new(16000) | 292,699 ops/sec | Â±3.20% | 55 | â |\n| | | | |\n| BrowserBuffer#new(16) | 1,655,466 ops/sec | Â±2.41% | 82 | |\n| Uint8Array#new(16) | 14,399,926 ops/sec | Â±0.91% | 94 | â |\n| NodeBuffer#new(16) | 3,894,696 ops/sec | Â±0.88% | 92 | |\n| | | | |\n| BrowserBuffer#readDoubleBE | 109,582 ops/sec | Â±0.75% | 93 | â |\n| DataView#getFloat64 | 91,235 ops/sec | Â±0.81% | 90 | |\n| NodeBuffer#readDoubleBE | 88,593 ops/sec | Â±0.96% | 81 | |\n| | | | |\n| BrowserBuffer#readFloatBE | 139,854 ops/sec | Â±1.03% | 85 | â |\n| DataView#getFloat32 | 98,744 ops/sec | Â±0.80% | 89 | |\n| NodeBuffer#readFloatBE | 92,769 ops/sec | Â±0.94% | 93 | |\n| | | | |\n| BrowserBuffer#readUInt32LE | 710,861 ops/sec | Â±0.82% | 92 | |\n| DataView#getUint32 | 117,893 ops/sec | Â±0.84% | 91 | |\n| NodeBuffer#readUInt32LE | 851,412 ops/sec | Â±0.72% | 93 | â |\n| | | | |\n| BrowserBuffer#slice | 1,673,877 ops/sec | Â±0.73% | 94 | |\n| Uint8Array#subarray | 6,919,243 ops/sec | Â±0.67% | 90 | â |\n| NodeBuffer#slice | 4,617,604 ops/sec | Â±0.79% | 93 | |\n| | | | |\n| BrowserBuffer#writeFloatBE | 66,011 ops/sec | Â±0.75% | 93 | |\n| DataView#setFloat32 | 127,760 ops/sec | Â±0.72% | 93 | â |\n| NodeBuffer#writeFloatBE | 103,352 ops/sec | Â±0.83% | 93 | |\n\n### iojs 1.8.1\n\n| Method | Operations | Accuracy | Sampled | Fastest |\n|:-------|:-----------|:---------|:--------|:-------:|\n| BrowserBuffer#bracket-notation | 10,990,488 ops/sec | Â±1.11% | 91 | |\n| Uint8Array#bracket-notation | 11,268,757 ops/sec | Â±0.65% | 97 | |\n| NodeBuffer#bracket-notation | 11,353,260 ops/sec | Â±0.83% | 94 | â |\n| | | | |\n| BrowserBuffer#concat | 378,954 ops/sec | Â±0.74% | 94 | |\n| Uint8Array#concat | 1,358,288 ops/sec | Â±0.97% | 87 | |\n| NodeBuffer#concat | 1,934,050 ops/sec | Â±1.11% | 78 | â |\n| | | | |\n| BrowserBuffer#copy(16000) | 894,538 ops/sec | Â±0.56% | 84 | |\n| Uint8Array#copy(16000) | 1,442,656 ops/sec | Â±0.71% | 96 | |\n| NodeBuffer#copy(16000) | 1,457,898 ops/sec | Â±0.53% | 92 | â |\n| | | | |\n| BrowserBuffer#copy(16) | 12,870,457 ops/sec | Â±0.67% | 95 | |\n| Uint8Array#copy(16) | 16,643,989 ops/sec | Â±0.61% | 93 | â |\n| NodeBuffer#copy(16) | 14,885,848 ops/sec | Â±0.74% | 94 | |\n| | | | |\n| BrowserBuffer#new(16000) | 109,264 ops/sec | Â±4.21% | 63 | |\n| Uint8Array#new(16000) | 138,916 ops/sec | Â±1.87% | 61 | |\n| NodeBuffer#new(16000) | 281,449 ops/sec | Â±3.58% | 51 | â |\n| | | | |\n| BrowserBuffer#new(16) | 1,362,935 ops/sec | Â±0.56% | 99 | |\n| Uint8Array#new(16) | 6,193,090 ops/sec | Â±0.64% | 95 | â |\n| NodeBuffer#new(16) | 4,745,425 ops/sec | Â±1.56% | 90 | |\n| | | | |\n| BrowserBuffer#readDoubleBE | 118,127 ops/sec | Â±0.59% | 93 | â |\n| DataView#getFloat64 | 107,332 ops/sec | Â±0.65% | 91 | |\n| NodeBuffer#readDoubleBE | 116,274 ops/sec | Â±0.94% | 95 | |\n| | | | |\n| BrowserBuffer#readFloatBE | 150,326 ops/sec | Â±0.58% | 95 | â |\n| DataView#getFloat32 | 110,541 ops/sec | Â±0.57% | 98 | |\n| NodeBuffer#readFloatBE | 121,599 ops/sec | Â±0.60% | 87 | |\n| | | | |\n| BrowserBuffer#readUInt32LE | 814,147 ops/sec | Â±0.62% | 93 | |\n| DataView#getUint32 | 137,592 ops/sec | Â±0.64% | 90 | |\n| NodeBuffer#readUInt32LE | 931,650 ops/sec | Â±0.71% | 96 | â |\n| | | | |\n| BrowserBuffer#slice | 878,590 ops/sec | Â±0.68% | 93 | |\n| Uint8Array#subarray | 2,843,308 ops/sec | Â±1.02% | 90 | |\n| NodeBuffer#slice | 4,998,316 ops/sec | Â±0.68% | 90 | â |\n| | | | |\n| BrowserBuffer#writeFloatBE | 65,927 ops/sec | Â±0.74% | 93 | |\n| DataView#setFloat32 | 139,823 ops/sec | Â±0.97% | 89 | â |\n| NodeBuffer#writeFloatBE | 135,763 ops/sec | Â±0.65% | 96 | |\n| | | | |\n\n## Testing the project\n\nFirst, install the project:\n\n    npm install\n\nThen, to run tests in Node.js, run:\n\n    npm run test-node\n\nTo test locally in a browser, you can run:\n\n    npm run test-browser-local\n\nThis will print out a URL that you can then open in a browser to run the tests, using [Zuul](https://github.com/defunctzombie/zuul).\n\nTo run automated browser tests using Saucelabs, ensure that your `SAUCE_USERNAME` and `SAUCE_ACCESS_KEY` environment variables are set, then run:\n\n    npm test\n\nThis is what's run in Travis, to check against various browsers. The list of browsers is kept in the `.zuul.yml` file.\n\n## JavaScript Standard Style\n\nThis module uses [JavaScript Standard Style](https://github.com/feross/standard).\n\n[![JavaScript Style Guide](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nTo test that the code conforms to the style, `npm install` and run:\n\n    ./node_modules/.bin/standard\n\n## credit\n\nThis was originally forked from [buffer-browserify](https://github.com/toots/buffer-browserify).\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org), and other contributors. Originally forked from an MIT-licensed module by Romain Beauxis.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "base64-js": "^1.0.2",
                "ieee754": "^1.1.4",
                "isarray": "^1.0.0"
              },
              "path": "/path/to/project/packages/models/node_modules/buffer",
              "error": "[Circular]",
              "extraneous": false
            },
            "events": {
              "_args": [
                [
                  "events@1.1.1",
                  "/path/to/project/packages/models"
                ],
                [
                  "events@1.1.1",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "events@1.1.1",
              "_id": "events@1.1.1",
              "_integrity": "sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ=",
              "_location": "/events",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "events@1.1.1",
                "name": "events",
                "escapedName": "events",
                "rawSpec": "1.1.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.1.1"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/events/-/events-1.1.1.tgz",
              "_spec": "1.1.1",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "Irakli Gozalishvili",
                "email": "rfobic@gmail.com",
                "url": "http://jeditoolkit.com"
              },
              "bugs": {
                "url": "http://github.com/Gozala/events/issues/"
              },
              "description": "Node's event emitter for all engines.",
              "devDependencies": {
                "mocha": "~1.21.4",
                "zuul": "~1.10.2"
              },
              "engines": {
                "node": ">=0.4.x"
              },
              "homepage": "https://github.com/Gozala/events#readme",
              "id": "events",
              "keywords": [
                "events",
                "eventEmitter",
                "eventDispatcher",
                "listeners"
              ],
              "license": "MIT",
              "main": "./events.js",
              "name": "events",
              "repository": {
                "type": "git",
                "url": "git://github.com/Gozala/events.git",
                "web": "https://github.com/Gozala/events"
              },
              "scripts": {
                "test": "mocha --ui qunit -- tests/index.js && zuul -- tests/index.js"
              },
              "version": "1.1.1",
              "readme": "# events [![Build Status](https://travis-ci.org/Gozala/events.png?branch=master)](https://travis-ci.org/Gozala/events)\n\nNode's event emitter for all engines.\n\n## Install ##\n\n```\nnpm install events\n```\n\n## Require ##\n\n```javascript\nvar EventEmitter = require('events').EventEmitter\n```\n\n## Usage ##\n\nSee the [node.js event emitter docs](http://nodejs.org/api/events.html)\n",
              "readmeFilename": "Readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/events",
              "error": "[Circular]",
              "extraneous": false
            },
            "ieee754": {
              "_args": "[Circular]",
              "_from": "ieee754@1.1.13",
              "_id": "ieee754@1.1.13",
              "_integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg==",
              "_location": "/ieee754",
              "_phantomChildren": "[Circular]",
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "ieee754@1.1.13",
                "name": "ieee754",
                "escapedName": "ieee754",
                "rawSpec": "1.1.13",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.1.13"
              },
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
              "_spec": "1.1.13",
              "_where": "/path/to/project/packages/models",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "contributors": "[Circular]",
              "description": "Read/write IEEE754 floating point numbers from/to a Buffer or array-like object",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/feross/ieee754#readme",
              "keywords": "[Circular]",
              "license": "BSD-3-Clause",
              "main": "index.js",
              "name": "ieee754",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.1.13",
              "readme": "# ieee754 [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/ieee754/master.svg\n[travis-url]: https://travis-ci.org/feross/ieee754\n[npm-image]: https://img.shields.io/npm/v/ieee754.svg\n[npm-url]: https://npmjs.org/package/ieee754\n[downloads-image]: https://img.shields.io/npm/dm/ieee754.svg\n[downloads-url]: https://npmjs.org/package/ieee754\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[saucelabs-image]: https://saucelabs.com/browser-matrix/ieee754.svg\n[saucelabs-url]: https://saucelabs.com/u/ieee754\n\n### Read/write IEEE754 floating point numbers from/to a Buffer or array-like object.\n\n## install\n\n```\nnpm install ieee754\n```\n\n[Get supported ieee754 with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-ieee754?utm_source=npm-ieee754&utm_medium=referral&utm_campaign=readme)\n\n## methods\n\n`var ieee754 = require('ieee754')`\n\nThe `ieee754` object has the following functions:\n\n```\nieee754.read = function (buffer, offset, isLE, mLen, nBytes)\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes)\n```\n\nThe arguments mean the following:\n\n- buffer = the buffer\n- offset = offset into the buffer\n- value = value to set (only for `write`)\n- isLe = is little endian?\n- mLen = mantissa length\n- nBytes = number of bytes\n\n## what is ieee754?\n\nThe IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation. [Read more](http://en.wikipedia.org/wiki/IEEE_floating_point).\n\n## license\n\nBSD 3 Clause. Copyright (c) 2008, Fair Oaks Labs, Inc.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/path/to/project/packages/models/node_modules/ieee754",
              "error": "[Circular]",
              "extraneous": false
            },
            "jmespath": {
              "_args": [
                [
                  "jmespath@0.15.0",
                  "/path/to/project/packages/models"
                ],
                [
                  "jmespath@0.15.0",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "jmespath@0.15.0",
              "_id": "jmespath@0.15.0",
              "_integrity": "sha1-o/Iiqarp+Wb10nx5ZRDigJF2Qhc=",
              "_location": "/jmespath",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "jmespath@0.15.0",
                "name": "jmespath",
                "escapedName": "jmespath",
                "rawSpec": "0.15.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.15.0"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/jmespath/-/jmespath-0.15.0.tgz",
              "_spec": "0.15.0",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "James Saryerwinnie",
                "email": "js@jamesls.com",
                "url": "http://jamesls.com/"
              },
              "bugs": {
                "url": "http://github.com/jmespath/jmespath.js/issues"
              },
              "contributors": [],
              "dependencies": {},
              "description": "JMESPath implementation in javascript",
              "devDependencies": {
                "grunt": "^0.4.5",
                "grunt-contrib-jshint": "^0.11.0",
                "grunt-contrib-uglify": "^0.11.1",
                "grunt-eslint": "^17.3.1",
                "mocha": "^2.1.0"
              },
              "directories": {
                "test": "test"
              },
              "engines": {
                "node": ">= 0.6.0"
              },
              "homepage": "https://github.com/jmespath/jmespath.js",
              "keywords": [
                "jmespath",
                "jsonpath",
                "json",
                "xpath"
              ],
              "licenses": [
                {
                  "type": "Apache 2.0",
                  "url": "http://github.com/jmespath/jmespath.js/raw/master/LICENSE"
                }
              ],
              "main": "jmespath.js",
              "name": "jmespath",
              "repository": {
                "type": "git",
                "url": "git://github.com/jmespath/jmespath.js.git"
              },
              "scripts": {
                "test": "mocha test/"
              },
              "version": "0.15.0",
              "readme": "# jmespath.js\n\n[![Build Status](https://travis-ci.org/jmespath/jmespath.js.png?branch=master)](https://travis-ci.org/jmespath/jmespath.js)\n\njmespath.js is a javascript implementation of JMESPath,\nwhich is a query language for JSON.  It will take a JSON\ndocument and transform it into another JSON document\nthrough a JMESPath expression.\n\nUsing jmespath.js is really easy.  There's a single function\nyou use, `jmespath.search`:\n\n\n```\n> var jmespath = require('jmespath');\n> jmespath.search({foo: {bar: {baz: [0, 1, 2, 3, 4]}}}, \"foo.bar.baz[2]\")\n2\n```\n\nIn the example we gave the ``search`` function input data of\n`{foo: {bar: {baz: [0, 1, 2, 3, 4]}}}` as well as the JMESPath\nexpression `foo.bar.baz[2]`, and the `search` function evaluated\nthe expression against the input data to produce the result ``2``.\n\nThe JMESPath language can do a lot more than select an element\nfrom a list.  Here are a few more examples:\n\n```\n> jmespath.search({foo: {bar: {baz: [0, 1, 2, 3, 4]}}}, \"foo.bar\")\n{ baz: [ 0, 1, 2, 3, 4 ] }\n\n> jmespath.search({\"foo\": [{\"first\": \"a\", \"last\": \"b\"},\n                           {\"first\": \"c\", \"last\": \"d\"}]},\n                  \"foo[*].first\")\n[ 'a', 'c' ]\n\n> jmespath.search({\"foo\": [{\"age\": 20}, {\"age\": 25},\n                           {\"age\": 30}, {\"age\": 35},\n                           {\"age\": 40}]},\n                  \"foo[?age > `30`]\")\n[ { age: 35 }, { age: 40 } ]\n```\n\n## More Resources\n\nThe example above only show a small amount of what\na JMESPath expression can do.  If you want to take a\ntour of the language, the *best* place to go is the\n[JMESPath Tutorial](http://jmespath.org/tutorial.html).\n\nOne of the best things about JMESPath is that it is\nimplemented in many different programming languages including\npython, ruby, php, lua, etc.  To see a complete list of libraries,\ncheck out the [JMESPath libraries page](http://jmespath.org/libraries.html).\n\nAnd finally, the full JMESPath specification can be found\non the [JMESPath site](http://jmespath.org/specification.html).\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/jmespath",
              "error": "[Circular]",
              "extraneous": false
            },
            "querystring": {
              "_args": [
                [
                  "querystring@0.2.0",
                  "/path/to/project/packages/models"
                ],
                [
                  "querystring@0.2.0",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "querystring@0.2.0",
              "_id": "querystring@0.2.0",
              "_integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
              "_location": "/querystring",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "querystring@0.2.0",
                "name": "querystring",
                "escapedName": "querystring",
                "rawSpec": "0.2.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.2.0"
              },
              "_requiredBy": [
                "/aws-sdk",
                "/url"
              ],
              "_resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
              "_spec": "0.2.0",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "Irakli Gozalishvili",
                "email": "rfobic@gmail.com"
              },
              "bugs": {
                "url": "http://github.com/Gozala/querystring/issues/"
              },
              "description": "Node's querystring module for all engines.",
              "devDependencies": {
                "phantomify": "~0.x.0",
                "retape": "~0.x.0",
                "tape": "~0.1.5",
                "test": "~0.x.0"
              },
              "engines": {
                "node": ">=0.4.x"
              },
              "homepage": "https://github.com/Gozala/querystring#readme",
              "id": "querystring",
              "keywords": [
                "commonjs",
                "query",
                "querystring"
              ],
              "licenses": [
                {
                  "type": "MIT",
                  "url": "https://github.com/Gozala/enchain/License.md"
                }
              ],
              "name": "querystring",
              "repository": {
                "type": "git",
                "url": "git://github.com/Gozala/querystring.git",
                "web": "https://github.com/Gozala/querystring"
              },
              "scripts": {
                "test": "npm run test-node && npm run test-browser && npm run test-tap",
                "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/common-index.js",
                "test-node": "node ./test/common-index.js",
                "test-tap": "node ./test/tap-index.js"
              },
              "testling": {
                "files": "test/tap-index.js",
                "browsers": {
                  "iexplore": [
                    9,
                    10
                  ],
                  "chrome": [
                    16,
                    20,
                    25,
                    "canary"
                  ],
                  "firefox": [
                    10,
                    15,
                    16,
                    17,
                    18,
                    "nightly"
                  ],
                  "safari": [
                    5,
                    6
                  ],
                  "opera": [
                    12
                  ]
                }
              },
              "version": "0.2.0",
              "readme": "# querystring\n\n[![Build Status](https://secure.travis-ci.org/Gozala/querystring.png)](http://travis-ci.org/Gozala/querystring)\n\n\n[![Browser support](http://ci.testling.com/Gozala/querystring.png)](http://ci.testling.com/Gozala/querystring)\n\n\n\nNode's querystring module for all engines.\n\n## Install ##\n\n    npm install querystring\n\n",
              "readmeFilename": "Readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/querystring",
              "error": "[Circular]",
              "extraneous": false
            },
            "sax": {
              "_args": [
                [
                  "sax@1.2.1",
                  "/path/to/project/packages/models"
                ],
                [
                  "sax@1.2.1",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "sax@1.2.1",
              "_id": "sax@1.2.1",
              "_integrity": "sha1-e45lYZCyKOgaZq6nSEgNgozS03o=",
              "_location": "/sax",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "sax@1.2.1",
                "name": "sax",
                "escapedName": "sax",
                "rawSpec": "1.2.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "1.2.1"
              },
              "_requiredBy": [
                "/aws-sdk",
                "/xml2js"
              ],
              "_resolved": "https://registry.npmjs.org/sax/-/sax-1.2.1.tgz",
              "_spec": "1.2.1",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "Isaac Z. Schlueter",
                "email": "i@izs.me",
                "url": "http://blog.izs.me/"
              },
              "bugs": {
                "url": "https://github.com/isaacs/sax-js/issues"
              },
              "description": "An evented streaming XML parser in JavaScript",
              "devDependencies": {
                "standard": "^5.3.1",
                "tap": "^5.2.0"
              },
              "files": [
                "lib/sax.js",
                "LICENSE",
                "LICENSE-W3C.html",
                "README.md"
              ],
              "homepage": "https://github.com/isaacs/sax-js#readme",
              "license": "ISC",
              "main": "lib/sax.js",
              "name": "sax",
              "repository": {
                "type": "git",
                "url": "git://github.com/isaacs/sax-js.git"
              },
              "scripts": {
                "posttest": "standard -F test/*.js lib/*.js",
                "test": "tap test/*.js --cov"
              },
              "version": "1.2.1",
              "readme": "# sax js\n\nA sax-style parser for XML and HTML.\n\nDesigned with [node](http://nodejs.org/) in mind, but should work fine in\nthe browser or other CommonJS implementations.\n\n## What This Is\n\n* A very simple tool to parse through an XML string.\n* A stepping stone to a streaming HTML parser.\n* A handy way to deal with RSS and other mostly-ok-but-kinda-broken XML\n  docs.\n\n## What This Is (probably) Not\n\n* An HTML Parser - That's a fine goal, but this isn't it.  It's just\n  XML.\n* A DOM Builder - You can use it to build an object model out of XML,\n  but it doesn't do that out of the box.\n* XSLT - No DOM = no querying.\n* 100% Compliant with (some other SAX implementation) - Most SAX\n  implementations are in Java and do a lot more than this does.\n* An XML Validator - It does a little validation when in strict mode, but\n  not much.\n* A Schema-Aware XSD Thing - Schemas are an exercise in fetishistic\n  masochism.\n* A DTD-aware Thing - Fetching DTDs is a much bigger job.\n\n## Regarding `<!DOCTYPE`s and `<!ENTITY`s\n\nThe parser will handle the basic XML entities in text nodes and attribute\nvalues: `&amp; &lt; &gt; &apos; &quot;`. It's possible to define additional\nentities in XML by putting them in the DTD. This parser doesn't do anything\nwith that. If you want to listen to the `ondoctype` event, and then fetch\nthe doctypes, and read the entities and add them to `parser.ENTITIES`, then\nbe my guest.\n\nUnknown entities will fail in strict mode, and in loose mode, will pass\nthrough unmolested.\n\n## Usage\n\n```javascript\nvar sax = require(\"./lib/sax\"),\n  strict = true, // set to false for html-mode\n  parser = sax.parser(strict);\n\nparser.onerror = function (e) {\n  // an error happened.\n};\nparser.ontext = function (t) {\n  // got some text.  t is the string of text.\n};\nparser.onopentag = function (node) {\n  // opened a tag.  node has \"name\" and \"attributes\"\n};\nparser.onattribute = function (attr) {\n  // an attribute.  attr has \"name\" and \"value\"\n};\nparser.onend = function () {\n  // parser stream is done, and ready to have more stuff written to it.\n};\n\nparser.write('<xml>Hello, <who name=\"world\">world</who>!</xml>').close();\n\n// stream usage\n// takes the same options as the parser\nvar saxStream = require(\"sax\").createStream(strict, options)\nsaxStream.on(\"error\", function (e) {\n  // unhandled errors will throw, since this is a proper node\n  // event emitter.\n  console.error(\"error!\", e)\n  // clear the error\n  this._parser.error = null\n  this._parser.resume()\n})\nsaxStream.on(\"opentag\", function (node) {\n  // same object as above\n})\n// pipe is supported, and it's readable/writable\n// same chunks coming in also go out.\nfs.createReadStream(\"file.xml\")\n  .pipe(saxStream)\n  .pipe(fs.createWriteStream(\"file-copy.xml\"))\n```\n\n\n## Arguments\n\nPass the following arguments to the parser function.  All are optional.\n\n`strict` - Boolean. Whether or not to be a jerk. Default: `false`.\n\n`opt` - Object bag of settings regarding string formatting.  All default to `false`.\n\nSettings supported:\n\n* `trim` - Boolean. Whether or not to trim text and comment nodes.\n* `normalize` - Boolean. If true, then turn any whitespace into a single\n  space.\n* `lowercase` - Boolean. If true, then lowercase tag names and attribute names\n  in loose mode, rather than uppercasing them.\n* `xmlns` - Boolean. If true, then namespaces are supported.\n* `position` - Boolean. If false, then don't track line/col/position.\n* `strictEntities` - Boolean. If true, only parse [predefined XML\n  entities](http://www.w3.org/TR/REC-xml/#sec-predefined-ent)\n  (`&amp;`, `&apos;`, `&gt;`, `&lt;`, and `&quot;`)\n\n## Methods\n\n`write` - Write bytes onto the stream. You don't have to do this all at\nonce. You can keep writing as much as you want.\n\n`close` - Close the stream. Once closed, no more data may be written until\nit is done processing the buffer, which is signaled by the `end` event.\n\n`resume` - To gracefully handle errors, assign a listener to the `error`\nevent. Then, when the error is taken care of, you can call `resume` to\ncontinue parsing. Otherwise, the parser will not continue while in an error\nstate.\n\n## Members\n\nAt all times, the parser object will have the following members:\n\n`line`, `column`, `position` - Indications of the position in the XML\ndocument where the parser currently is looking.\n\n`startTagPosition` - Indicates the position where the current tag starts.\n\n`closed` - Boolean indicating whether or not the parser can be written to.\nIf it's `true`, then wait for the `ready` event to write again.\n\n`strict` - Boolean indicating whether or not the parser is a jerk.\n\n`opt` - Any options passed into the constructor.\n\n`tag` - The current tag being dealt with.\n\nAnd a bunch of other stuff that you probably shouldn't touch.\n\n## Events\n\nAll events emit with a single argument. To listen to an event, assign a\nfunction to `on<eventname>`. Functions get executed in the this-context of\nthe parser object. The list of supported events are also in the exported\n`EVENTS` array.\n\nWhen using the stream interface, assign handlers using the EventEmitter\n`on` function in the normal fashion.\n\n`error` - Indication that something bad happened. The error will be hanging\nout on `parser.error`, and must be deleted before parsing can continue. By\nlistening to this event, you can keep an eye on that kind of stuff. Note:\nthis happens *much* more in strict mode. Argument: instance of `Error`.\n\n`text` - Text node. Argument: string of text.\n\n`doctype` - The `<!DOCTYPE` declaration. Argument: doctype string.\n\n`processinginstruction` - Stuff like `<?xml foo=\"blerg\" ?>`. Argument:\nobject with `name` and `body` members. Attributes are not parsed, as\nprocessing instructions have implementation dependent semantics.\n\n`sgmldeclaration` - Random SGML declarations. Stuff like `<!ENTITY p>`\nwould trigger this kind of event. This is a weird thing to support, so it\nmight go away at some point. SAX isn't intended to be used to parse SGML,\nafter all.\n\n`opentagstart` - Emitted immediately when the tag name is available,\nbut before any attributes are encountered.  Argument: object with a\n`name` field and an empty `attributes` set.  Note that this is the\nsame object that will later be emitted in the `opentag` event.\n\n`opentag` - An opening tag. Argument: object with `name` and `attributes`.\nIn non-strict mode, tag names are uppercased, unless the `lowercase`\noption is set.  If the `xmlns` option is set, then it will contain\nnamespace binding information on the `ns` member, and will have a\n`local`, `prefix`, and `uri` member.\n\n`closetag` - A closing tag. In loose mode, tags are auto-closed if their\nparent closes. In strict mode, well-formedness is enforced. Note that\nself-closing tags will have `closeTag` emitted immediately after `openTag`.\nArgument: tag name.\n\n`attribute` - An attribute node.  Argument: object with `name` and `value`.\nIn non-strict mode, attribute names are uppercased, unless the `lowercase`\noption is set.  If the `xmlns` option is set, it will also contains namespace\ninformation.\n\n`comment` - A comment node.  Argument: the string of the comment.\n\n`opencdata` - The opening tag of a `<![CDATA[` block.\n\n`cdata` - The text of a `<![CDATA[` block. Since `<![CDATA[` blocks can get\nquite large, this event may fire multiple times for a single block, if it\nis broken up into multiple `write()`s. Argument: the string of random\ncharacter data.\n\n`closecdata` - The closing tag (`]]>`) of a `<![CDATA[` block.\n\n`opennamespace` - If the `xmlns` option is set, then this event will\nsignal the start of a new namespace binding.\n\n`closenamespace` - If the `xmlns` option is set, then this event will\nsignal the end of a namespace binding.\n\n`end` - Indication that the closed stream has ended.\n\n`ready` - Indication that the stream has reset, and is ready to be written\nto.\n\n`noscript` - In non-strict mode, `<script>` tags trigger a `\"script\"`\nevent, and their contents are not checked for special xml characters.\nIf you pass `noscript: true`, then this behavior is suppressed.\n\n## Reporting Problems\n\nIt's best to write a failing test if you find an issue.  I will always\naccept pull requests with failing tests if they demonstrate intended\nbehavior, but it is very hard to figure out what issue you're describing\nwithout a test.  Writing a test is also the best way for you yourself\nto figure out if you really understand the issue you think you have with\nsax-js.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/path/to/project/packages/models/node_modules/sax",
              "error": "[Circular]",
              "extraneous": false
            },
            "url": {
              "_args": [
                [
                  "url@0.10.3",
                  "/path/to/project/packages/models"
                ],
                [
                  "url@0.10.3",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "url@0.10.3",
              "_id": "url@0.10.3",
              "_integrity": "sha1-Ah5NnHcF8hu/N9A861h2dAJ3TGQ=",
              "_location": "/url",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "url@0.10.3",
                "name": "url",
                "escapedName": "url",
                "rawSpec": "0.10.3",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.10.3"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/url/-/url-0.10.3.tgz",
              "_spec": "0.10.3",
              "_where": "/path/to/project/packages/models",
              "bugs": {
                "url": "https://github.com/defunctzombie/node-url/issues"
              },
              "dependencies": {
                "punycode": {
                  "_args": [
                    [
                      "punycode@1.3.2",
                      "/path/to/project/packages/models"
                    ],
                    [
                      "punycode@1.3.2",
                      "/path/to/project/packages/models"
                    ]
                  ],
                  "_from": "punycode@1.3.2",
                  "_id": "punycode@1.3.2",
                  "_integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
                  "_location": "/punycode",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "punycode@1.3.2",
                    "name": "punycode",
                    "escapedName": "punycode",
                    "rawSpec": "1.3.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.3.2"
                  },
                  "_requiredBy": [
                    "/url"
                  ],
                  "_resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
                  "_spec": "1.3.2",
                  "_where": "/path/to/project/packages/models",
                  "author": {
                    "name": "Mathias Bynens",
                    "url": "https://mathiasbynens.be/"
                  },
                  "bugs": {
                    "url": "https://github.com/bestiejs/punycode.js/issues"
                  },
                  "contributors": [
                    {
                      "name": "Mathias Bynens",
                      "url": "https://mathiasbynens.be/"
                    },
                    {
                      "name": "John-David Dalton",
                      "url": "http://allyoucanleet.com/"
                    }
                  ],
                  "description": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.",
                  "devDependencies": {
                    "coveralls": "^2.10.1",
                    "grunt": "^0.4.5",
                    "grunt-contrib-uglify": "^0.5.0",
                    "grunt-shell": "^0.7.0",
                    "istanbul": "^0.2.13",
                    "qunit-extras": "^1.2.0",
                    "qunitjs": "~1.11.0",
                    "requirejs": "^2.1.14"
                  },
                  "files": [
                    "LICENSE-MIT.txt",
                    "punycode.js"
                  ],
                  "homepage": "https://mths.be/punycode",
                  "keywords": [
                    "punycode",
                    "unicode",
                    "idn",
                    "idna",
                    "dns",
                    "url",
                    "domain"
                  ],
                  "license": "MIT",
                  "main": "punycode.js",
                  "name": "punycode",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bestiejs/punycode.js.git"
                  },
                  "scripts": {
                    "test": "node tests/tests.js"
                  },
                  "version": "1.3.2",
                  "readme": "# Punycode.js [![Build status](https://travis-ci.org/bestiejs/punycode.js.svg?branch=master)](https://travis-ci.org/bestiejs/punycode.js) [![Code coverage status](http://img.shields.io/coveralls/bestiejs/punycode.js/master.svg)](https://coveralls.io/r/bestiejs/punycode.js) [![Dependency status](https://gemnasium.com/bestiejs/punycode.js.svg)](https://gemnasium.com/bestiejs/punycode.js)\n\nA robust Punycode converter that fully complies to [RFC 3492](http://tools.ietf.org/html/rfc3492) and [RFC 5891](http://tools.ietf.org/html/rfc5891), and works on nearly all JavaScript platforms.\n\nThis JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:\n\n* [The C example code from RFC 3492](http://tools.ietf.org/html/rfc3492#appendix-C)\n* [`punycode.c` by _Markus W. Scherer_ (IBM)](http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c)\n* [`punycode.c` by _Ben Noordhuis_](https://github.com/bnoordhuis/punycode/blob/master/punycode.c)\n* [JavaScript implementation by _some_](http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287)\n* [`punycode.js` by _Ben Noordhuis_](https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js) (note: [not fully compliant](https://github.com/joyent/node/issues/2072))\n\nThis project is [bundled](https://github.com/joyent/node/blob/master/lib/punycode.js) with [Node.js v0.6.2+](https://github.com/joyent/node/compare/975f1930b1...61e796decc).\n\n## Installation\n\nVia [npm](http://npmjs.org/) (only required for Node.js releases older than v0.6.2):\n\n```bash\nnpm install punycode\n```\n\nVia [Bower](http://bower.io/):\n\n```bash\nbower install punycode\n```\n\nVia [Component](https://github.com/component/component):\n\n```bash\ncomponent install bestiejs/punycode.js\n```\n\nIn a browser:\n\n```html\n<script src=\"punycode.js\"></script>\n```\n\nIn [Narwhal](http://narwhaljs.org/), [Node.js](http://nodejs.org/), and [RingoJS](http://ringojs.org/):\n\n```js\nvar punycode = require('punycode');\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload('punycode.js');\n```\n\nUsing an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire(\n  {\n    'paths': {\n      'punycode': 'path/to/punycode'\n    }\n  },\n  ['punycode'],\n  function(punycode) {\n    console.log(punycode);\n  }\n);\n```\n\n## API\n\n### `punycode.decode(string)`\n\nConverts a Punycode string of ASCII symbols to a string of Unicode symbols.\n\n```js\n// decode domain name parts\npunycode.decode('maana-pta'); // 'maÃ±ana'\npunycode.decode('--dqo34k'); // 'â-â'\n```\n\n### `punycode.encode(string)`\n\nConverts a string of Unicode symbols to a Punycode string of ASCII symbols.\n\n```js\n// encode domain name parts\npunycode.encode('maÃ±ana'); // 'maana-pta'\npunycode.encode('â-â'); // '--dqo34k'\n```\n\n### `punycode.toUnicode(input)`\n\nConverts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesnât matter if you call it on a string that has already been converted to Unicode.\n\n```js\n// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// â 'maÃ±ana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// â 'â-â.com'\n\n// decode email addresses\npunycode.toUnicode('Ð´Ð¶ÑÐ¼Ð»Ð°@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// â 'Ð´Ð¶ÑÐ¼Ð»Ð°@Ð´Ð¶pÑÐ¼Ð»Ð°ÑÐµÑÑ.bÑÑa'\n```\n\n### `punycode.toASCII(input)`\n\nConverts a Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesnât matter if you call it with a domain that's already in ASCII.\n\n```js\n// encode domain names\npunycode.toASCII('maÃ±ana.com');\n// â 'xn--maana-pta.com'\npunycode.toASCII('â-â.com');\n// âÂ 'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('Ð´Ð¶ÑÐ¼Ð»Ð°@Ð´Ð¶pÑÐ¼Ð»Ð°ÑÐµÑÑ.bÑÑa');\n// â 'Ð´Ð¶ÑÐ¼Ð»Ð°@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n```\n\n### `punycode.ucs2`\n\n#### `punycode.ucs2.decode(string)`\n\nCreates an array containing the numeric code point values of each Unicode symbol in the string. While [JavaScript uses UCS-2 internally](https://mathiasbynens.be/notes/javascript-encoding), this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\n\n```js\npunycode.ucs2.decode('abc');\n// â [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// â [0x1D306]\n```\n\n#### `punycode.ucs2.encode(codePoints)`\n\nCreates a string based on an array of numeric code point values.\n\n```js\npunycode.ucs2.encode([0x61, 0x62, 0x63]);\n// â 'abc'\npunycode.ucs2.encode([0x1D306]);\n// â '\\uD834\\uDF06'\n```\n\n### `punycode.version`\n\nA string representing the current Punycode.js version number.\n\n## Unit tests & code coverage\n\nAfter cloning this repository, run `npm install --dev` to install the dependencies needed for Punycode.js development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.\n\nOnce thatâs done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, PhantomJS, and web browsers as well, use `grunt test`.\n\nTo generate the code coverage report, use `grunt cover`.\n\nFeel free to fork if you see possible improvements!\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## Contributors\n\n| [![twitter/jdalton](https://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \"Follow @jdalton on Twitter\") |\n|---|\n| [John-David Dalton](http://allyoucanleet.com/) |\n\n## License\n\nPunycode.js is available under the [MIT](https://mths.be/mit) license.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/models/node_modules/punycode",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "querystring": {
                  "_args": "[Circular]",
                  "_from": "querystring@0.2.0",
                  "_id": "querystring@0.2.0",
                  "_integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
                  "_location": "/querystring",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "querystring@0.2.0",
                    "name": "querystring",
                    "escapedName": "querystring",
                    "rawSpec": "0.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.2.0"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
                  "_spec": "0.2.0",
                  "_where": "/path/to/project/packages/models",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "description": "Node's querystring module for all engines.",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "homepage": "https://github.com/Gozala/querystring#readme",
                  "id": "querystring",
                  "keywords": "[Circular]",
                  "licenses": "[Circular]",
                  "name": "querystring",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "testling": "[Circular]",
                  "version": "0.2.0",
                  "readme": "# querystring\n\n[![Build Status](https://secure.travis-ci.org/Gozala/querystring.png)](http://travis-ci.org/Gozala/querystring)\n\n\n[![Browser support](http://ci.testling.com/Gozala/querystring.png)](http://ci.testling.com/Gozala/querystring)\n\n\n\nNode's querystring module for all engines.\n\n## Install ##\n\n    npm install querystring\n\n",
                  "readmeFilename": "Readme.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/models/node_modules/querystring",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "querystring"
                }
              },
              "description": "The core `url` packaged standalone for use with Browserify.",
              "devDependencies": {
                "assert": "1.1.1",
                "mocha": "1.18.2",
                "zuul": "2.0.0"
              },
              "homepage": "https://github.com/defunctzombie/node-url#readme",
              "license": "MIT",
              "main": "./url.js",
              "name": "url",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/defunctzombie/node-url.git"
              },
              "scripts": {
                "test": "mocha --ui qunit test.js && zuul -- test.js",
                "test-local": "zuul --local -- test.js"
              },
              "version": "0.10.3",
              "readme": "# node-url\n\n[![Build Status](https://travis-ci.org/defunctzombie/node-url.svg?branch=master)](https://travis-ci.org/defunctzombie/node-url)\n\nThis module has utilities for URL resolution and parsing meant to have feature parity with node.js core [url](http://nodejs.org/api/url.html) module.\n\n```js\nvar url = require('url');\n```\n\n## api\n\nParsed URL objects have some or all of the following fields, depending on\nwhether or not they exist in the URL string. Any parts that are not in the URL\nstring will not be in the parsed object. Examples are shown for the URL\n\n`'http://user:pass@host.com:8080/p/a/t/h?query=string#hash'`\n\n* `href`: The full URL that was originally parsed. Both the protocol and host are lowercased.\n\n    Example: `'http://user:pass@host.com:8080/p/a/t/h?query=string#hash'`\n\n* `protocol`: The request protocol, lowercased.\n\n    Example: `'http:'`\n\n* `host`: The full lowercased host portion of the URL, including port\n  information.\n\n    Example: `'host.com:8080'`\n\n* `auth`: The authentication information portion of a URL.\n\n    Example: `'user:pass'`\n\n* `hostname`: Just the lowercased hostname portion of the host.\n\n    Example: `'host.com'`\n\n* `port`: The port number portion of the host.\n\n    Example: `'8080'`\n\n* `pathname`: The path section of the URL, that comes after the host and\n  before the query, including the initial slash if present.\n\n    Example: `'/p/a/t/h'`\n\n* `search`: The 'query string' portion of the URL, including the leading\n  question mark.\n\n    Example: `'?query=string'`\n\n* `path`: Concatenation of `pathname` and `search`.\n\n    Example: `'/p/a/t/h?query=string'`\n\n* `query`: Either the 'params' portion of the query string, or a\n  querystring-parsed object.\n\n    Example: `'query=string'` or `{'query':'string'}`\n\n* `hash`: The 'fragment' portion of the URL including the pound-sign.\n\n    Example: `'#hash'`\n\nThe following methods are provided by the URL module:\n\n### url.parse(urlStr, [parseQueryString], [slashesDenoteHost])\n\nTake a URL string, and return an object.\n\nPass `true` as the second argument to also parse\nthe query string using the `querystring` module.\nDefaults to `false`.\n\nPass `true` as the third argument to treat `//foo/bar` as\n`{ host: 'foo', pathname: '/bar' }` rather than\n`{ pathname: '//foo/bar' }`. Defaults to `false`.\n\n### url.format(urlObj)\n\nTake a parsed URL object, and return a formatted URL string.\n\n* `href` will be ignored.\n* `protocol` is treated the same with or without the trailing `:` (colon).\n  * The protocols `http`, `https`, `ftp`, `gopher`, `file` will be\n    postfixed with `://` (colon-slash-slash).\n  * All other protocols `mailto`, `xmpp`, `aim`, `sftp`, `foo`, etc will\n    be postfixed with `:` (colon)\n* `auth` will be used if present.\n* `hostname` will only be used if `host` is absent.\n* `port` will only be used if `host` is absent.\n* `host` will be used in place of `hostname` and `port`\n* `pathname` is treated the same with or without the leading `/` (slash)\n* `search` will be used in place of `query`\n* `query` (object; see `querystring`) will only be used if `search` is absent.\n* `search` is treated the same with or without the leading `?` (question mark)\n* `hash` is treated the same with or without the leading `#` (pound sign, anchor)\n\n### url.resolve(from, to)\n\nTake a base URL, and a href URL, and resolve them as a browser would for\nan anchor tag.  Examples:\n\n    url.resolve('/one/two/three', 'four')         // '/one/two/four'\n    url.resolve('http://example.com/', '/one')    // 'http://example.com/one'\n    url.resolve('http://example.com/one', '/two') // 'http://example.com/two'\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "punycode": "1.3.2",
                "querystring": "0.2.0"
              },
              "path": "/path/to/project/packages/models/node_modules/url",
              "error": "[Circular]",
              "extraneous": false
            },
            "xml2js": {
              "_args": [
                [
                  "xml2js@0.4.19",
                  "/path/to/project/packages/models"
                ],
                [
                  "xml2js@0.4.19",
                  "/path/to/project/packages/models"
                ]
              ],
              "_from": "xml2js@0.4.19",
              "_id": "xml2js@0.4.19",
              "_integrity": "sha512-esZnJZJOiJR9wWKMyuvSE1y6Dq5LCuJanqhxslH2bxM6duahNZ+HMpCLhBQGZkbX6xRf8x1Y2eJlgt2q3qo49Q==",
              "_location": "/xml2js",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "xml2js@0.4.19",
                "name": "xml2js",
                "escapedName": "xml2js",
                "rawSpec": "0.4.19",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.4.19"
              },
              "_requiredBy": [
                "/aws-sdk"
              ],
              "_resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.19.tgz",
              "_spec": "0.4.19",
              "_where": "/path/to/project/packages/models",
              "author": {
                "name": "Marek Kubica",
                "email": "marek@xivilization.net",
                "url": "https://xivilization.net"
              },
              "bugs": {
                "url": "https://github.com/Leonidas-from-XIV/node-xml2js/issues"
              },
              "contributors": [
                {
                  "name": "maqr",
                  "email": "maqr.lollerskates@gmail.com",
                  "url": "https://github.com/maqr"
                },
                {
                  "name": "Ben Weaver",
                  "url": "http://benweaver.com/"
                },
                {
                  "name": "Jae Kwon",
                  "url": "https://github.com/jaekwon"
                },
                {
                  "name": "Jim Robert"
                },
                {
                  "name": "Ètefan Rusu",
                  "url": "http://www.saltwaterc.eu/"
                },
                {
                  "name": "Carter Cole",
                  "email": "carter.cole@cartercole.com",
                  "url": "http://cartercole.com/"
                },
                {
                  "name": "Kurt Raschke",
                  "email": "kurt@kurtraschke.com",
                  "url": "http://www.kurtraschke.com/"
                },
                {
                  "name": "Contra",
                  "email": "contra@australia.edu",
                  "url": "https://github.com/Contra"
                },
                {
                  "name": "Marcelo Diniz",
                  "email": "marudiniz@gmail.com",
                  "url": "https://github.com/mdiniz"
                },
                {
                  "name": "Michael Hart",
                  "url": "https://github.com/mhart"
                },
                {
                  "name": "Zachary Scott",
                  "email": "zachary@zacharyscott.net",
                  "url": "http://zacharyscott.net/"
                },
                {
                  "name": "Raoul Millais",
                  "url": "https://github.com/raoulmillais"
                },
                {
                  "name": "Salsita Software",
                  "url": "http://www.salsitasoft.com/"
                },
                {
                  "name": "Mike Schilling",
                  "email": "mike@emotive.com",
                  "url": "http://www.emotive.com/"
                },
                {
                  "name": "Jackson Tian",
                  "email": "shyvo1987@gmail.com",
                  "url": "http://weibo.com/shyvo"
                },
                {
                  "name": "Mikhail Zyatin",
                  "email": "mikhail.zyatin@gmail.com",
                  "url": "https://github.com/Sitin"
                },
                {
                  "name": "Chris Tavares",
                  "email": "ctavares@microsoft.com",
                  "url": "https://github.com/christav"
                },
                {
                  "name": "Frank Xu",
                  "email": "yyfrankyy@gmail.com",
                  "url": "http://f2e.us/"
                },
                {
                  "name": "Guido D'Albore",
                  "email": "guido@bitstorm.it",
                  "url": "http://www.bitstorm.it/"
                },
                {
                  "name": "Jack Senechal",
                  "url": "http://jacksenechal.com/"
                },
                {
                  "name": "Matthias HÃ¶lzl",
                  "email": "tc@xantira.com",
                  "url": "https://github.com/hoelzl"
                },
                {
                  "name": "Camille Reynders",
                  "email": "info@creynders.be",
                  "url": "http://www.creynders.be/"
                },
                {
                  "name": "Taylor Gautier",
                  "url": "https://github.com/tsgautier"
                },
                {
                  "name": "Todd Bryan",
                  "url": "https://github.com/toddrbryan"
                },
                {
                  "name": "Leore Avidar",
                  "email": "leore.avidar@gmail.com",
                  "url": "http://leoreavidar.com/"
                },
                {
                  "name": "Dave Aitken",
                  "email": "dave.aitken@gmail.com",
                  "url": "http://www.actionshrimp.com/"
                },
                {
                  "name": "Shaney Orrowe",
                  "email": "shaney.orrowe@practiceweb.co.uk"
                },
                {
                  "name": "Candle",
                  "email": "candle@candle.me.uk"
                },
                {
                  "name": "Jess Telford",
                  "email": "hi@jes.st",
                  "url": "http://jes.st"
                },
                {
                  "name": "Tom Hughes",
                  "email": "<tom@compton.nu",
                  "url": "http://compton.nu/"
                },
                {
                  "name": "Piotr Rochala",
                  "url": "http://rocha.la/"
                },
                {
                  "name": "Michael Avila",
                  "url": "https://github.com/michaelavila"
                },
                {
                  "name": "Ryan Gahl",
                  "url": "https://github.com/ryedin"
                },
                {
                  "name": "Eric Laberge",
                  "email": "e.laberge@gmail.com",
                  "url": "https://github.com/elaberge"
                },
                {
                  "name": "Benjamin E. Coe",
                  "email": "ben@npmjs.com",
                  "url": "https://twitter.com/benjamincoe"
                },
                {
                  "name": "Stephen Cresswell",
                  "url": "https://github.com/cressie176"
                },
                {
                  "name": "Pascal Ehlert",
                  "email": "pascal@hacksrus.net",
                  "url": "http://www.hacksrus.net/"
                },
                {
                  "name": "Tom Spencer",
                  "email": "fiznool@gmail.com",
                  "url": "http://fiznool.com/"
                },
                {
                  "name": "Tristian Flanagan",
                  "email": "tflanagan@datacollaborative.com",
                  "url": "https://github.com/tflanagan"
                },
                {
                  "name": "Tim Johns",
                  "email": "timjohns@yahoo.com",
                  "url": "https://github.com/TimJohns"
                },
                {
                  "name": "Bogdan Chadkin",
                  "email": "trysound@yandex.ru",
                  "url": "https://github.com/TrySound"
                },
                {
                  "name": "David Wood",
                  "email": "david.p.wood@gmail.com",
                  "url": "http://codesleuth.co.uk/"
                },
                {
                  "name": "Nicolas Maquet",
                  "url": "https://github.com/nmaquet"
                },
                {
                  "name": "Lovell Fuller",
                  "url": "http://lovell.info/"
                },
                {
                  "name": "d3adc0d3",
                  "url": "https://github.com/d3adc0d3"
                }
              ],
              "dependencies": {
                "sax": {
                  "_args": "[Circular]",
                  "_from": "sax@1.2.1",
                  "_id": "sax@1.2.1",
                  "_integrity": "sha1-e45lYZCyKOgaZq6nSEgNgozS03o=",
                  "_location": "/sax",
                  "_phantomChildren": "[Circular]",
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "sax@1.2.1",
                    "name": "sax",
                    "escapedName": "sax",
                    "rawSpec": "1.2.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1.2.1"
                  },
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/sax/-/sax-1.2.1.tgz",
                  "_spec": "1.2.1",
                  "_where": "/path/to/project/packages/models",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "description": "An evented streaming XML parser in JavaScript",
                  "devDependencies": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/isaacs/sax-js#readme",
                  "license": "ISC",
                  "main": "lib/sax.js",
                  "name": "sax",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.2.1",
                  "readme": "# sax js\n\nA sax-style parser for XML and HTML.\n\nDesigned with [node](http://nodejs.org/) in mind, but should work fine in\nthe browser or other CommonJS implementations.\n\n## What This Is\n\n* A very simple tool to parse through an XML string.\n* A stepping stone to a streaming HTML parser.\n* A handy way to deal with RSS and other mostly-ok-but-kinda-broken XML\n  docs.\n\n## What This Is (probably) Not\n\n* An HTML Parser - That's a fine goal, but this isn't it.  It's just\n  XML.\n* A DOM Builder - You can use it to build an object model out of XML,\n  but it doesn't do that out of the box.\n* XSLT - No DOM = no querying.\n* 100% Compliant with (some other SAX implementation) - Most SAX\n  implementations are in Java and do a lot more than this does.\n* An XML Validator - It does a little validation when in strict mode, but\n  not much.\n* A Schema-Aware XSD Thing - Schemas are an exercise in fetishistic\n  masochism.\n* A DTD-aware Thing - Fetching DTDs is a much bigger job.\n\n## Regarding `<!DOCTYPE`s and `<!ENTITY`s\n\nThe parser will handle the basic XML entities in text nodes and attribute\nvalues: `&amp; &lt; &gt; &apos; &quot;`. It's possible to define additional\nentities in XML by putting them in the DTD. This parser doesn't do anything\nwith that. If you want to listen to the `ondoctype` event, and then fetch\nthe doctypes, and read the entities and add them to `parser.ENTITIES`, then\nbe my guest.\n\nUnknown entities will fail in strict mode, and in loose mode, will pass\nthrough unmolested.\n\n## Usage\n\n```javascript\nvar sax = require(\"./lib/sax\"),\n  strict = true, // set to false for html-mode\n  parser = sax.parser(strict);\n\nparser.onerror = function (e) {\n  // an error happened.\n};\nparser.ontext = function (t) {\n  // got some text.  t is the string of text.\n};\nparser.onopentag = function (node) {\n  // opened a tag.  node has \"name\" and \"attributes\"\n};\nparser.onattribute = function (attr) {\n  // an attribute.  attr has \"name\" and \"value\"\n};\nparser.onend = function () {\n  // parser stream is done, and ready to have more stuff written to it.\n};\n\nparser.write('<xml>Hello, <who name=\"world\">world</who>!</xml>').close();\n\n// stream usage\n// takes the same options as the parser\nvar saxStream = require(\"sax\").createStream(strict, options)\nsaxStream.on(\"error\", function (e) {\n  // unhandled errors will throw, since this is a proper node\n  // event emitter.\n  console.error(\"error!\", e)\n  // clear the error\n  this._parser.error = null\n  this._parser.resume()\n})\nsaxStream.on(\"opentag\", function (node) {\n  // same object as above\n})\n// pipe is supported, and it's readable/writable\n// same chunks coming in also go out.\nfs.createReadStream(\"file.xml\")\n  .pipe(saxStream)\n  .pipe(fs.createWriteStream(\"file-copy.xml\"))\n```\n\n\n## Arguments\n\nPass the following arguments to the parser function.  All are optional.\n\n`strict` - Boolean. Whether or not to be a jerk. Default: `false`.\n\n`opt` - Object bag of settings regarding string formatting.  All default to `false`.\n\nSettings supported:\n\n* `trim` - Boolean. Whether or not to trim text and comment nodes.\n* `normalize` - Boolean. If true, then turn any whitespace into a single\n  space.\n* `lowercase` - Boolean. If true, then lowercase tag names and attribute names\n  in loose mode, rather than uppercasing them.\n* `xmlns` - Boolean. If true, then namespaces are supported.\n* `position` - Boolean. If false, then don't track line/col/position.\n* `strictEntities` - Boolean. If true, only parse [predefined XML\n  entities](http://www.w3.org/TR/REC-xml/#sec-predefined-ent)\n  (`&amp;`, `&apos;`, `&gt;`, `&lt;`, and `&quot;`)\n\n## Methods\n\n`write` - Write bytes onto the stream. You don't have to do this all at\nonce. You can keep writing as much as you want.\n\n`close` - Close the stream. Once closed, no more data may be written until\nit is done processing the buffer, which is signaled by the `end` event.\n\n`resume` - To gracefully handle errors, assign a listener to the `error`\nevent. Then, when the error is taken care of, you can call `resume` to\ncontinue parsing. Otherwise, the parser will not continue while in an error\nstate.\n\n## Members\n\nAt all times, the parser object will have the following members:\n\n`line`, `column`, `position` - Indications of the position in the XML\ndocument where the parser currently is looking.\n\n`startTagPosition` - Indicates the position where the current tag starts.\n\n`closed` - Boolean indicating whether or not the parser can be written to.\nIf it's `true`, then wait for the `ready` event to write again.\n\n`strict` - Boolean indicating whether or not the parser is a jerk.\n\n`opt` - Any options passed into the constructor.\n\n`tag` - The current tag being dealt with.\n\nAnd a bunch of other stuff that you probably shouldn't touch.\n\n## Events\n\nAll events emit with a single argument. To listen to an event, assign a\nfunction to `on<eventname>`. Functions get executed in the this-context of\nthe parser object. The list of supported events are also in the exported\n`EVENTS` array.\n\nWhen using the stream interface, assign handlers using the EventEmitter\n`on` function in the normal fashion.\n\n`error` - Indication that something bad happened. The error will be hanging\nout on `parser.error`, and must be deleted before parsing can continue. By\nlistening to this event, you can keep an eye on that kind of stuff. Note:\nthis happens *much* more in strict mode. Argument: instance of `Error`.\n\n`text` - Text node. Argument: string of text.\n\n`doctype` - The `<!DOCTYPE` declaration. Argument: doctype string.\n\n`processinginstruction` - Stuff like `<?xml foo=\"blerg\" ?>`. Argument:\nobject with `name` and `body` members. Attributes are not parsed, as\nprocessing instructions have implementation dependent semantics.\n\n`sgmldeclaration` - Random SGML declarations. Stuff like `<!ENTITY p>`\nwould trigger this kind of event. This is a weird thing to support, so it\nmight go away at some point. SAX isn't intended to be used to parse SGML,\nafter all.\n\n`opentagstart` - Emitted immediately when the tag name is available,\nbut before any attributes are encountered.  Argument: object with a\n`name` field and an empty `attributes` set.  Note that this is the\nsame object that will later be emitted in the `opentag` event.\n\n`opentag` - An opening tag. Argument: object with `name` and `attributes`.\nIn non-strict mode, tag names are uppercased, unless the `lowercase`\noption is set.  If the `xmlns` option is set, then it will contain\nnamespace binding information on the `ns` member, and will have a\n`local`, `prefix`, and `uri` member.\n\n`closetag` - A closing tag. In loose mode, tags are auto-closed if their\nparent closes. In strict mode, well-formedness is enforced. Note that\nself-closing tags will have `closeTag` emitted immediately after `openTag`.\nArgument: tag name.\n\n`attribute` - An attribute node.  Argument: object with `name` and `value`.\nIn non-strict mode, attribute names are uppercased, unless the `lowercase`\noption is set.  If the `xmlns` option is set, it will also contains namespace\ninformation.\n\n`comment` - A comment node.  Argument: the string of the comment.\n\n`opencdata` - The opening tag of a `<![CDATA[` block.\n\n`cdata` - The text of a `<![CDATA[` block. Since `<![CDATA[` blocks can get\nquite large, this event may fire multiple times for a single block, if it\nis broken up into multiple `write()`s. Argument: the string of random\ncharacter data.\n\n`closecdata` - The closing tag (`]]>`) of a `<![CDATA[` block.\n\n`opennamespace` - If the `xmlns` option is set, then this event will\nsignal the start of a new namespace binding.\n\n`closenamespace` - If the `xmlns` option is set, then this event will\nsignal the end of a namespace binding.\n\n`end` - Indication that the closed stream has ended.\n\n`ready` - Indication that the stream has reset, and is ready to be written\nto.\n\n`noscript` - In non-strict mode, `<script>` tags trigger a `\"script\"`\nevent, and their contents are not checked for special xml characters.\nIf you pass `noscript: true`, then this behavior is suppressed.\n\n## Reporting Problems\n\nIt's best to write a failing test if you find an issue.  I will always\naccept pull requests with failing tests if they demonstrate intended\nbehavior, but it is very hard to figure out what issue you're describing\nwithout a test.  Writing a test is also the best way for you yourself\nto figure out if you really understand the issue you think you have with\nsax-js.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/path/to/project/packages/models/node_modules/sax",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "sax"
                },
                "xmlbuilder": {
                  "_args": [
                    [
                      "xmlbuilder@9.0.7",
                      "/path/to/project/packages/models"
                    ],
                    [
                      "xmlbuilder@9.0.7",
                      "/path/to/project/packages/models"
                    ]
                  ],
                  "_from": "xmlbuilder@9.0.7",
                  "_id": "xmlbuilder@9.0.7",
                  "_integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0=",
                  "_location": "/xmlbuilder",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "xmlbuilder@9.0.7",
                    "name": "xmlbuilder",
                    "escapedName": "xmlbuilder",
                    "rawSpec": "9.0.7",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "9.0.7"
                  },
                  "_requiredBy": [
                    "/xml2js"
                  ],
                  "_resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
                  "_spec": "9.0.7",
                  "_where": "/path/to/project/packages/models",
                  "author": {
                    "name": "Ozgur Ozcitak",
                    "email": "oozcitak@gmail.com"
                  },
                  "bugs": {
                    "url": "http://github.com/oozcitak/xmlbuilder-js/issues"
                  },
                  "contributors": [],
                  "dependencies": {},
                  "description": "An XML builder for node.js",
                  "devDependencies": {
                    "coffee-coverage": "2.*",
                    "coffeescript": "1.*",
                    "coveralls": "*",
                    "istanbul": "*",
                    "mocha": "*"
                  },
                  "engines": {
                    "node": ">=4.0"
                  },
                  "homepage": "http://github.com/oozcitak/xmlbuilder-js",
                  "keywords": [
                    "xml",
                    "xmlbuilder"
                  ],
                  "license": "MIT",
                  "main": "./lib/index",
                  "name": "xmlbuilder",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/oozcitak/xmlbuilder-js.git"
                  },
                  "scripts": {
                    "postpublish": "rm -rf lib",
                    "prepublish": "coffee -co lib src",
                    "test": "mocha \"test/**/*.coffee\" && istanbul report text lcov"
                  },
                  "version": "9.0.7",
                  "readme": "# xmlbuilder-js\n\nAn XML builder for [node.js](https://nodejs.org/) similar to\n[java-xmlbuilder](https://github.com/jmurty/java-xmlbuilder).\n\n[![License](http://img.shields.io/npm/l/xmlbuilder.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![NPM Version](http://img.shields.io/npm/v/xmlbuilder.svg?style=flat-square)](https://npmjs.com/package/xmlbuilder)\n[![NPM Downloads](https://img.shields.io/npm/dm/xmlbuilder.svg?style=flat-square)](https://npmjs.com/package/xmlbuilder)\n\n[![Build Status](http://img.shields.io/travis/oozcitak/xmlbuilder-js.svg?style=flat-square)](http://travis-ci.org/oozcitak/xmlbuilder-js)\n[![Dev Dependency Status](http://img.shields.io/david/dev/oozcitak/xmlbuilder-js.svg?style=flat-square)](https://david-dm.org/oozcitak/xmlbuilder-js)\n[![Code Coverage](https://img.shields.io/coveralls/oozcitak/xmlbuilder-js.svg?style=flat-square)](https://coveralls.io/github/oozcitak/xmlbuilder-js)\n\n### Installation:\n\n``` sh\nnpm install xmlbuilder\n```\n\n### Usage:\n\n``` js\nvar builder = require('xmlbuilder');\nvar xml = builder.create('root')\n  .ele('xmlbuilder')\n    .ele('repo', {'type': 'git'}, 'git://github.com/oozcitak/xmlbuilder-js.git')\n  .end({ pretty: true});\n\nconsole.log(xml);\n```\n\nwill result in:\n\n``` xml\n<?xml version=\"1.0\"?>\n<root>\n  <xmlbuilder>\n    <repo type=\"git\">git://github.com/oozcitak/xmlbuilder-js.git</repo>\n  </xmlbuilder>\n</root>\n```\n\nIt is also possible to convert objects into nodes:\n\n``` js\nbuilder.create({\n  root: {\n    xmlbuilder: {\n      repo: {\n        '@type': 'git', // attributes start with @\n        '#text': 'git://github.com/oozcitak/xmlbuilder-js.git' // text node\n      }\n    }\n  }\n});\n```\n\nIf you need to do some processing:\n\n``` js\nvar root = builder.create('squares');\nroot.com('f(x) = x^2');\nfor(var i = 1; i <= 5; i++)\n{\n  var item = root.ele('data');\n  item.att('x', i);\n  item.att('y', i * i);\n}\n```\n\nThis will result in:\n\n``` xml\n<?xml version=\"1.0\"?>\n<squares>\n  <!-- f(x) = x^2 -->\n  <data x=\"1\" y=\"1\"/>\n  <data x=\"2\" y=\"4\"/>\n  <data x=\"3\" y=\"9\"/>\n  <data x=\"4\" y=\"16\"/>\n  <data x=\"5\" y=\"25\"/>\n</squares>\n```\n\nSee the [wiki](https://github.com/oozcitak/xmlbuilder-js/wiki) for details and [examples](https://github.com/oozcitak/xmlbuilder-js/wiki/Examples) for more complex examples.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/path/to/project/packages/models/node_modules/xmlbuilder",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "description": "Simple XML to JavaScript object converter.",
              "devDependencies": {
                "coffee-script": ">=1.10.0",
                "coveralls": "^2.11.2",
                "diff": ">=1.0.8",
                "docco": ">=0.6.2",
                "nyc": ">=2.2.1",
                "zap": ">=0.2.9"
              },
              "directories": {
                "lib": "./lib"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://github.com/Leonidas-from-XIV/node-xml2js",
              "keywords": [
                "xml",
                "json"
              ],
              "license": "MIT",
              "main": "./lib/xml2js",
              "name": "xml2js",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/Leonidas-from-XIV/node-xml2js.git"
              },
              "scripts": {
                "coverage": "nyc npm test && nyc report",
                "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
                "test": "zap"
              },
              "version": "0.4.19",
              "readme": "node-xml2js\n===========\n\nEver had the urge to parse XML? And wanted to access the data in some sane,\neasy way? Don't want to compile a C parser, for whatever reason? Then xml2js is\nwhat you're looking for!\n\nDescription\n===========\n\nSimple XML to JavaScript object converter. It supports bi-directional conversion.\nUses [sax-js](https://github.com/isaacs/sax-js/) and\n[xmlbuilder-js](https://github.com/oozcitak/xmlbuilder-js/).\n\nNote: If you're looking for a full DOM parser, you probably want\n[JSDom](https://github.com/tmpvar/jsdom).\n\nInstallation\n============\n\nSimplest way to install `xml2js` is to use [npm](http://npmjs.org), just `npm\ninstall xml2js` which will download xml2js and all dependencies.\n\nxml2js is also available via [Bower](http://bower.io/), just `bower install\nxml2js` which will download xml2js and all dependencies.\n\nUsage\n=====\n\nNo extensive tutorials required because you are a smart developer! The task of\nparsing XML should be an easy one, so let's make it so! Here's some examples.\n\nShoot-and-forget usage\n----------------------\n\nYou want to parse XML as simple and easy as possible? It's dangerous to go\nalone, take this:\n\n```javascript\nvar parseString = require('xml2js').parseString;\nvar xml = \"<root>Hello xml2js!</root>\"\nparseString(xml, function (err, result) {\n    console.dir(result);\n});\n```\n\nCan't get easier than this, right? This works starting with `xml2js` 0.2.3.\nWith CoffeeScript it looks like this:\n\n```coffeescript\n{parseString} = require 'xml2js'\nxml = \"<root>Hello xml2js!</root>\"\nparseString xml, (err, result) ->\n    console.dir result\n```\n\nIf you need some special options, fear not, `xml2js` supports a number of\noptions (see below), you can specify these as second argument:\n\n```javascript\nparseString(xml, {trim: true}, function (err, result) {\n});\n```\n\nSimple as pie usage\n-------------------\n\nThat's right, if you have been using xml-simple or a home-grown\nwrapper, this was added in 0.1.11 just for you:\n\n```javascript\nvar fs = require('fs'),\n    xml2js = require('xml2js');\n\nvar parser = new xml2js.Parser();\nfs.readFile(__dirname + '/foo.xml', function(err, data) {\n    parser.parseString(data, function (err, result) {\n        console.dir(result);\n        console.log('Done');\n    });\n});\n```\n\nLook ma, no event listeners!\n\nYou can also use `xml2js` from\n[CoffeeScript](https://github.com/jashkenas/coffeescript), further reducing\nthe clutter:\n\n```coffeescript\nfs = require 'fs',\nxml2js = require 'xml2js'\n\nparser = new xml2js.Parser()\nfs.readFile __dirname + '/foo.xml', (err, data) ->\n  parser.parseString data, (err, result) ->\n    console.dir result\n    console.log 'Done.'\n```\n\nBut what happens if you forget the `new` keyword to create a new `Parser`? In\nthe middle of a nightly coding session, it might get lost, after all. Worry\nnot, we got you covered! Starting with 0.2.8 you can also leave it out, in\nwhich case `xml2js` will helpfully add it for you, no bad surprises and\ninexplicable bugs!\n\nParsing multiple files\n----------------------\n\nIf you want to parse multiple files, you have multiple possibilities:\n\n  * You can create one `xml2js.Parser` per file. That's the recommended one\n    and is promised to always *just work*.\n  * You can call `reset()` on your parser object.\n  * You can hope everything goes well anyway. This behaviour is not\n    guaranteed work always, if ever. Use option #1 if possible. Thanks!\n\nSo you wanna some JSON?\n-----------------------\n\nJust wrap the `result` object in a call to `JSON.stringify` like this\n`JSON.stringify(result)`. You get a string containing the JSON representation\nof the parsed object that you can feed to JSON-hungry consumers.\n\nDisplaying results\n------------------\n\nYou might wonder why, using `console.dir` or `console.log` the output at some\nlevel is only `[Object]`. Don't worry, this is not because `xml2js` got lazy.\nThat's because Node uses `util.inspect` to convert the object into strings and\nthat function stops after `depth=2` which is a bit low for most XML.\n\nTo display the whole deal, you can use `console.log(util.inspect(result, false,\nnull))`, which displays the whole result.\n\nSo much for that, but what if you use\n[eyes](https://github.com/cloudhead/eyes.js) for nice colored output and it\ntruncates the output with `â¦`? Don't fear, there's also a solution for that,\nyou just need to increase the `maxLength` limit by creating a custom inspector\n`var inspect = require('eyes').inspector({maxLength: false})` and then you can\neasily `inspect(result)`.\n\nXML builder usage\n-----------------\n\nSince 0.4.0, objects can be also be used to build XML:\n\n```javascript\nvar fs = require('fs'),\n    xml2js = require('xml2js');\n\nvar obj = {name: \"Super\", Surname: \"Man\", age: 23};\n\nvar builder = new xml2js.Builder();\nvar xml = builder.buildObject(obj);\n```\n\nAt the moment, a one to one bi-directional conversion is guaranteed only for\ndefault configuration, except for `attrkey`, `charkey` and `explicitArray` options\nyou can redefine to your taste. Writing CDATA is supported via setting the `cdata`\noption to `true`.\n\nProcessing attribute, tag names and values\n------------------------------------------\n\nSince 0.4.1 you can optionally provide the parser with attribute name and tag name processors as well as element value processors (Since 0.4.14, you can also optionally provide the parser with attribute value processors):\n\n```javascript\n\nfunction nameToUpperCase(name){\n    return name.toUpperCase();\n}\n\n//transform all attribute and tag names and values to uppercase\nparseString(xml, {\n  tagNameProcessors: [nameToUpperCase],\n  attrNameProcessors: [nameToUpperCase],\n  valueProcessors: [nameToUpperCase],\n  attrValueProcessors: [nameToUpperCase]},\n  function (err, result) {\n    // processed data\n});\n```\n\nThe `tagNameProcessors` and `attrNameProcessors` options\naccept an `Array` of functions with the following signature:\n\n```javascript\nfunction (name){\n  //do something with `name`\n  return name\n}\n```\n\nThe `attrValueProcessors` and `valueProcessors` options\naccept an `Array` of functions with the following signature:\n\n```javascript\nfunction (value, name) {\n  //`name` will be the node name or attribute name\n  //do something with `value`, (optionally) dependent on the node/attr name\n  return value\n}\n```\n\nSome processors are provided out-of-the-box and can be found in `lib/processors.js`:\n\n- `normalize`: transforms the name to lowercase.\n(Automatically used when `options.normalize` is set to `true`)\n\n- `firstCharLowerCase`: transforms the first character to lower case.\nE.g. 'MyTagName' becomes 'myTagName'\n\n- `stripPrefix`: strips the xml namespace prefix. E.g `<foo:Bar/>` will become 'Bar'.\n(N.B.: the `xmlns` prefix is NOT stripped.)\n\n- `parseNumbers`: parses integer-like strings as integers and float-like strings as floats\nE.g. \"0\" becomes 0 and \"15.56\" becomes 15.56\n\n- `parseBooleans`: parses boolean-like strings to booleans\nE.g. \"true\" becomes true and \"False\" becomes false\n\nOptions\n=======\n\nApart from the default settings, there are a number of options that can be\nspecified for the parser. Options are specified by ``new Parser({optionName:\nvalue})``. Possible options are:\n\n  * `attrkey` (default: `$`): Prefix that is used to access the attributes.\n    Version 0.1 default was `@`.\n  * `charkey` (default: `_`): Prefix that is used to access the character\n    content. Version 0.1 default was `#`.\n  * `explicitCharkey` (default: `false`)\n  * `trim` (default: `false`): Trim the whitespace at the beginning and end of\n    text nodes.\n  * `normalizeTags` (default: `false`): Normalize all tag names to lowercase.\n  * `normalize` (default: `false`): Trim whitespaces inside text nodes.\n  * `explicitRoot` (default: `true`): Set this if you want to get the root\n    node in the resulting object.\n  * `emptyTag` (default: `''`): what will the value of empty nodes be.\n  * `explicitArray` (default: `true`): Always put child nodes in an array if\n    true; otherwise an array is created only if there is more than one.\n  * `ignoreAttrs` (default: `false`): Ignore all XML attributes and only create\n    text nodes.\n  * `mergeAttrs` (default: `false`): Merge attributes and child elements as\n    properties of the parent, instead of keying attributes off a child\n    attribute object. This option is ignored if `ignoreAttrs` is `false`.\n  * `validator` (default `null`): You can specify a callable that validates\n    the resulting structure somehow, however you want. See unit tests\n    for an example.\n  * `xmlns` (default `false`): Give each element a field usually called '$ns'\n    (the first character is the same as attrkey) that contains its local name\n    and namespace URI.\n  * `explicitChildren` (default `false`): Put child elements to separate\n    property. Doesn't work with `mergeAttrs = true`. If element has no children\n    then \"children\" won't be created. Added in 0.2.5.\n  * `childkey` (default `$$`): Prefix that is used to access child elements if\n    `explicitChildren` is set to `true`. Added in 0.2.5.\n  * `preserveChildrenOrder` (default `false`): Modifies the behavior of\n    `explicitChildren` so that the value of the \"children\" property becomes an\n    ordered array. When this is `true`, every node will also get a `#name` field\n    whose value will correspond to the XML nodeName, so that you may iterate\n    the \"children\" array and still be able to determine node names. The named\n    (and potentially unordered) properties are also retained in this\n    configuration at the same level as the ordered \"children\" array. Added in\n    0.4.9.\n  * `charsAsChildren` (default `false`): Determines whether chars should be\n    considered children if `explicitChildren` is on. Added in 0.2.5.\n  * `includeWhiteChars` (default `false`): Determines whether whitespace-only\n     text nodes should be included. Added in 0.4.17.\n  * `async` (default `false`): Should the callbacks be async? This *might* be\n    an incompatible change if your code depends on sync execution of callbacks.\n    Future versions of `xml2js` might change this default, so the recommendation\n    is to not depend on sync execution anyway. Added in 0.2.6.\n  * `strict` (default `true`): Set sax-js to strict or non-strict parsing mode.\n    Defaults to `true` which is *highly* recommended, since parsing HTML which\n    is not well-formed XML might yield just about anything. Added in 0.2.7.\n  * `attrNameProcessors` (default: `null`): Allows the addition of attribute\n    name processing functions. Accepts an `Array` of functions with following\n    signature:\n    ```javascript\n    function (name){\n        //do something with `name`\n        return name\n    }\n    ```\n    Added in 0.4.14\n  * `attrValueProcessors` (default: `null`): Allows the addition of attribute\n    value processing functions. Accepts an `Array` of functions with following\n    signature:\n    ```javascript\n    function (name){\n      //do something with `name`\n      return name\n    }\n    ```\n    Added in 0.4.1\n  * `tagNameProcessors` (default: `null`): Allows the addition of tag name\n    processing functions. Accepts an `Array` of functions with following\n    signature:\n    ```javascript\n    function (name){\n      //do something with `name`\n      return name\n    }\n    ```\n    Added in 0.4.1\n  * `valueProcessors` (default: `null`): Allows the addition of element value\n    processing functions. Accepts an `Array` of functions with following\n    signature:\n    ```javascript\n    function (name){\n      //do something with `name`\n      return name\n    }\n    ```\n    Added in 0.4.6\n\nOptions for the `Builder` class\n-------------------------------\nThese options are specified by ``new Builder({optionName: value})``.\nPossible options are:\n\n  * `rootName` (default `root` or the root key name): root element name to be used in case\n     `explicitRoot` is `false` or to override the root element name.\n  * `renderOpts` (default `{ 'pretty': true, 'indent': '  ', 'newline': '\\n' }`):\n    Rendering options for xmlbuilder-js.\n    * pretty: prettify generated XML\n    * indent: whitespace for indentation (only when pretty)\n    * newline: newline char (only when pretty)\n  * `xmldec` (default `{ 'version': '1.0', 'encoding': 'UTF-8', 'standalone': true }`:\n    XML declaration attributes.\n    * `xmldec.version` A version number string, e.g. 1.0\n    * `xmldec.encoding` Encoding declaration, e.g. UTF-8\n    * `xmldec.standalone` standalone document declaration: true or false\n  * `doctype` (default `null`): optional DTD. Eg. `{'ext': 'hello.dtd'}`\n  * `headless` (default: `false`): omit the XML header. Added in 0.4.3.\n  * `allowSurrogateChars` (default: `false`): allows using characters from the Unicode\n    surrogate blocks.\n  * `cdata` (default: `false`): wrap text nodes in `<![CDATA[ ... ]]>` instead of\n    escaping when necessary. Does not add `<![CDATA[ ... ]]>` if it is not required.\n    Added in 0.4.5.\n\n`renderOpts`, `xmldec`,`doctype` and `headless` pass through to\n[xmlbuilder-js](https://github.com/oozcitak/xmlbuilder-js).\n\nUpdating to new version\n=======================\n\nVersion 0.2 changed the default parsing settings, but version 0.1.14 introduced\nthe default settings for version 0.2, so these settings can be tried before the\nmigration.\n\n```javascript\nvar xml2js = require('xml2js');\nvar parser = new xml2js.Parser(xml2js.defaults[\"0.2\"]);\n```\n\nTo get the 0.1 defaults in version 0.2 you can just use\n`xml2js.defaults[\"0.1\"]` in the same place. This provides you with enough time\nto migrate to the saner way of parsing in `xml2js` 0.2. We try to make the\nmigration as simple and gentle as possible, but some breakage cannot be\navoided.\n\nSo, what exactly did change and why? In 0.2 we changed some defaults to parse\nthe XML in a more universal and sane way. So we disabled `normalize` and `trim`\nso `xml2js` does not cut out any text content. You can reenable this at will of\ncourse. A more important change is that we return the root tag in the resulting\nJavaScript structure via the `explicitRoot` setting, so you need to access the\nfirst element. This is useful for anybody who wants to know what the root node\nis and preserves more information. The last major change was to enable\n`explicitArray`, so everytime it is possible that one might embed more than one\nsub-tag into a tag, xml2js >= 0.2 returns an array even if the array just\nincludes one element. This is useful when dealing with APIs that return\nvariable amounts of subtags.\n\nRunning tests, development\n==========================\n\n[![Build Status](https://travis-ci.org/Leonidas-from-XIV/node-xml2js.svg?branch=master)](https://travis-ci.org/Leonidas-from-XIV/node-xml2js)\n[![Coverage Status](https://coveralls.io/repos/Leonidas-from-XIV/node-xml2js/badge.svg?branch=)](https://coveralls.io/r/Leonidas-from-XIV/node-xml2js?branch=master)\n[![Dependency Status](https://david-dm.org/Leonidas-from-XIV/node-xml2js.svg)](https://david-dm.org/Leonidas-from-XIV/node-xml2js)\n\nThe development requirements are handled by npm, you just need to install them.\nWe also have a number of unit tests, they can be run using `npm test` directly\nfrom the project root. This runs zap to discover all the tests and execute\nthem.\n\nIf you like to contribute, keep in mind that `xml2js` is written in\nCoffeeScript, so don't develop on the JavaScript files that are checked into\nthe repository for convenience reasons. Also, please write some unit test to\ncheck your behaviour and if it is some user-facing thing, add some\ndocumentation to this README, so people will know it exists. Thanks in advance!\n\nGetting support\n===============\n\nPlease, if you have a problem with the library, first make sure you read this\nREADME. If you read this far, thanks, you're good. Then, please make sure your\nproblem really is with `xml2js`. It is? Okay, then I'll look at it. Send me a\nmail and we can talk. Please don't open issues, as I don't think that is the\nproper forum for support problems. Some problems might as well really be bugs\nin `xml2js`, if so I'll let you know to open an issue instead :)\n\nBut if you know you really found a bug, feel free to open an issue instead.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "sax": ">=0.6.0",
                "xmlbuilder": "~9.0.1"
              },
              "path": "/path/to/project/packages/models/node_modules/xml2js",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "description": "AWS SDK for JavaScript",
          "devDependencies": {
            "@types/node": "6.0.92",
            "browserify": "13.1.0",
            "chai": "^3.0",
            "codecov": "^3.6.5",
            "coffeeify": "*",
            "coffeescript": "^1.12.7",
            "cucumber": "0.5.x",
            "eslint": "^5.8.0",
            "hash-test-vectors": "^1.3.2",
            "insert-module-globals": "^7.0.0",
            "istanbul": "*",
            "jasmine": "^2.5.3",
            "jasmine-core": "^2.5.2",
            "json-loader": "^0.5.4",
            "karma": "^4.1.0",
            "karma-chrome-launcher": "2.2.0",
            "karma-jasmine": "^1.1.0",
            "mocha": "^3.0.0",
            "repl.history": "*",
            "semver": "*",
            "typescript": "2.0.8",
            "uglify-js": "2.x",
            "webpack": "^1.15.0"
          },
          "directories": {
            "lib": "lib"
          },
          "engines": {
            "node": ">= 0.8.0"
          },
          "homepage": "https://github.com/aws/aws-sdk-js",
          "keywords": [
            "api",
            "amazon",
            "aws",
            "ec2",
            "simpledb",
            "s3",
            "sqs",
            "ses",
            "sns",
            "route53",
            "rds",
            "elasticache",
            "cloudfront",
            "fps",
            "cloudformation",
            "cloudwatch",
            "dynamodb",
            "iam",
            "swf",
            "autoscaling",
            "cloudsearch",
            "elb",
            "loadbalancing",
            "emr",
            "mapreduce",
            "importexport",
            "storagegateway",
            "workflow",
            "ebs",
            "vpc",
            "beanstalk",
            "glacier",
            "kinesis",
            "cloudtrail",
            "waf"
          ],
          "license": "Apache-2.0",
          "main": "lib/aws.js",
          "name": "aws-sdk",
          "react-native": {
            "fs": "./lib/empty.js",
            "./lib/node_loader.js": "./lib/react-native-loader.js",
            "./lib/browser_loader.js": "./lib/react-native-loader.js",
            "./lib/core.js": "./dist/aws-sdk-core-react-native.js",
            "xml2js": "./dist/xml2js.js"
          },
          "repository": {
            "type": "git",
            "url": "git://github.com/aws/aws-sdk-js.git"
          },
          "scripts": {
            "add-change": "node ./scripts/changelog/add-change.js",
            "browsertest": "rake browser:test && karma start",
            "build-react-native": "npm -s run-script build-react-native-deps && npm -s run-script build-react-native-core && npm -s run-script build-react-native-dist",
            "build-react-native-core": "webpack --config dist-tools/webpack.config.rn-core.js",
            "build-react-native-deps": "webpack --config dist-tools/webpack.config.rn-dep.js",
            "build-react-native-dist": "webpack --config dist-tools/webpack.config.rn.js",
            "build-typings": "node ./scripts/typings-generator.js",
            "buildertest": "mocha --require coffeescript/register -s 1000 -t 10000 dist-tools/test/*.coffee",
            "console": "./scripts/console",
            "coverage": "istanbul cover ./node_modules/mocha/bin/_mocha --reporter=lcovonly -- test test/json test/model test/protocol test/query test/services test/signers test/xml test/s3 test/cloudfront test/dynamodb test/polly test/rds test/publisher test/event-stream",
            "csm-functional-test": "mocha test/publisher/functional_test",
            "helper-test": "mocha scripts/lib/test-helper.spec.js",
            "integration": "cucumber.js",
            "lint": "eslint lib test dist-tools/*.js",
            "react-native-test": "npm -s run-script build-react-native && rake reactnative:test && karma start",
            "region-check": "node ./scripts/region-checker/index.js",
            "test": "node ./scripts/composite-test.js",
            "testfiles": "istanbul `[ $COVERAGE ] && echo 'cover _mocha' || echo 'test mocha'`",
            "translate-api-test": "mocha scripts/lib/translate-api.spec.js",
            "tstest": "npm -s run-script build-typings && tsc -p ./ts",
            "typings-generator-test": "mocha scripts/lib/prune-shapes.spec.js",
            "unit": "mocha -- test test/json test/model test/protocol test/query test/services test/signers test/xml test/s3 test/cloudfront test/dynamodb test/polly test/rds test/publisher test/event-stream"
          },
          "types": "index.d.ts",
          "typings": "index.d.ts",
          "version": "2.636.0",
          "readme": "# AWS SDK for JavaScript\n\n[![NPM version](https://img.shields.io/npm/v/aws-sdk.svg)](https://www.npmjs.com/package/aws-sdk)\n[![NPM downloads](https://img.shields.io/npm/dm/aws-sdk.svg)](https://www.npmjs.com/package/aws-sdk)\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.svg)](https://gitter.im/aws/aws-sdk-js)\n\n[![Build Status](https://travis-ci.org/aws/aws-sdk-js.svg?branch=master)](https://travis-ci.org/aws/aws-sdk-js)\n[![Coverage Status](https://codecov.io/gh/aws/aws-sdk-js/branch/master/graph/badge.svg)](https://codecov.io/gh/aws/aws-sdk-js)\n[![Known Vulnerabilities](https://snyk.io/test/github/aws/aws-sdk-js/badge.svg)](https://snyk.io/test/github/aws/aws-sdk-js)\n\nThe official AWS SDK for JavaScript, available for browsers and mobile devices,\nor Node.js backends\n\nFor release notes, see the [CHANGELOG](https://github.com/aws/aws-sdk-js/blob/master/CHANGELOG.md). Prior to v2.4.8, release notes can be found at https://aws.amazon.com/releasenotes/?tag=releasenotes%23keywords%23javascript\n\nIf you are upgrading from 1.x to 2.0 of the SDK, please see the\n[upgrading notes](https://github.com/aws/aws-sdk-js/blob/master/UPGRADING.md)\nfor information on how to migrate existing code to work with the new major\nversion.\n\n## Installing\n\n### In the Browser\n\nTo use the SDK in the browser, simply add the following script tag to your\nHTML pages:\n\n    <script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.636.0.min.js\"></script>\n\nYou can also build a custom browser SDK with your specified set of AWS services.\nThis can allow you to reduce the SDK's size, specify different API versions of\nservices, or use AWS services that don't currently support CORS if you are\nworking in an environment that does not enforce CORS. To get started:\n\nhttp://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/building-sdk-for-browsers.html\n\nThe AWS SDK is also compatible with [browserify](http://browserify.org).\n\nFor browser-based web, mobile and hybrid apps, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/?utm_source=aws-js-sdk&utm_campaign=browser) which extends the AWS SDK and provides an easier and declarative interface.\n\n### In Node.js\n\nThe preferred way to install the AWS SDK for Node.js is to use the\n[npm](http://npmjs.org) package manager for Node.js. Simply type the following\ninto a terminal window:\n\n```sh\nnpm install aws-sdk\n```\n\n### In React Native\nTo use the SDK in a react native project, first install the SDK using npm:\n\n```sh\nnpm install aws-sdk\n```\n\nThen within your application, you can reference the react native compatible version of the SDK with the following:\n\n```javascript\nvar AWS = require('aws-sdk/dist/aws-sdk-react-native');\n```\n\nAlternatively, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/media/react_native_guide?utm_source=aws-js-sdk&utm_campaign=react-native) which extends AWS SDK and provides React Native UI components and CLI support to work with AWS services.\n\n### Using Bower\n\nYou can also use [Bower](http://bower.io) to install the SDK by typing the\nfollowing into a terminal window:\n\n```sh\nbower install aws-sdk-js\n```\n\n## Usage and Getting Started\n\nYou can find a getting started guide at:\n\nhttp://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide\n\nAPI reference at:\n\nhttps://docs.aws.amazon.com/AWSJavaScriptSDK/latest/\n\n## Usage with TypeScript\nThe AWS SDK for JavaScript bundles TypeScript definition files for use in TypeScript projects and to support tools that can read `.d.ts` files.\nOur goal is to keep these TypeScript definition files updated with each release for any public api.\n\n### Pre-requisites\nBefore you can begin using these TypeScript definitions with your project, you need to make sure your project meets a few of these requirements:\n\n * Use TypeScript v2.x\n * Includes the TypeScript definitions for node. You can use npm to install this by typing the following into a terminal window:\n\n    ```sh\n    npm install --save-dev @types/node\n    ```\n\n * If you are targeting at es5 or older ECMA standards, your `tsconfig.json` has to include `'es5'` and `'es2015.promise'` under `compilerOptions.lib`.\n See [tsconfig.json](https://github.com/aws/aws-sdk-js/blob/master/ts/tsconfig.json) for an example.\n\n### In the Browser\nTo use the TypeScript definition files with the global `AWS` object in a front-end project, add the following line to the top of your JavaScript file:\n\n```javascript\n/// <reference types=\"aws-sdk\" />\n```\n\nThis will provide support for the global `AWS` object.\n\n### In Node.js\nTo use the TypeScript definition files within a Node.js project, simply import `aws-sdk` as you normally would.\n\nIn a TypeScript file:\n\n```javascript\n// import entire SDK\nimport AWS from 'aws-sdk';\n// import AWS object without services\nimport AWS from 'aws-sdk/global';\n// import individual service\nimport S3 from 'aws-sdk/clients/s3';\n```\n\nIn a JavaScript file:\n\n```javascript\n// import entire SDK\nvar AWS = require('aws-sdk');\n// import AWS object without services\nvar AWS = require('aws-sdk/global');\n// import individual service\nvar S3 = require('aws-sdk/clients/s3');\n```\n\n### With React\n\nTo create React applications with AWS SDK, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/media/react_guide?utm_source=aws-js-sdk&utm_campaign=react) which provides React components and CLI support to work with AWS services.\n\n### With Angular\nDue to the SDK's reliance on node.js typings, you may encounter compilation \n[issues](https://github.com/aws/aws-sdk-js/issues/1271) when using the\ntypings provided by the SDK in an Angular project created using the Angular CLI.\n\nTo resolve these issues, either add `\"types\": [\"node\"]` to the project's `tsconfig.app.json`\nfile, or remove the `\"types\"` field entirely.\n\n[AWS Amplify Library](https://aws.github.io/aws-amplify/media/angular_guide?utm_source=aws-js-sdk&utm_campaign=angular) provides Angular components and CLI support to work with AWS services.\n\n### Known Limitations\nThere are a few known limitations with the bundled TypeScript definitions at this time:\n\n * Service client typings reflect the latest `apiVersion`, regardless of which `apiVersion` is specified when creating a client.\n * Service-bound parameters use the `any` type.\n\n## Getting Help\nPlease use these community resources for getting help. We use the GitHub issues for tracking bugs and feature requests and have limited bandwidth to address them.\n\n * Ask a question on [StackOverflow](https://stackoverflow.com/) and tag it with `aws-sdk-js`\n * Come join the AWS JavaScript community on [gitter](https://gitter.im/aws/aws-sdk-js?source=orgpage)\n * Open a support ticket with [AWS Support](https://console.aws.amazon.com/support/home#/)\n * If it turns out that you may have found a bug, please [open an issue](https://github.com/aws/aws-sdk-js/issues/new)\n\n## Opening Issues\nIf you encounter a bug with the AWS SDK for JavaScript we would like to hear\nabout it. Search the [existing issues](https://github.com/aws/aws-sdk-js/issues)\nand try to make sure your problem doesnât already exist before opening a new\nissue. Itâs helpful if you include the version of the SDK, Node.js or browser\nenvironment and OS youâre using. Please include a stack trace and reduced repro\ncase when appropriate, too.\n\nThe GitHub issues are intended for bug reports and feature requests. For help\nand questions with using the AWS SDK for JavaScript please make use of the\nresources listed in the [Getting Help](https://github.com/aws/aws-sdk-js#getting-help)\nsection. There are limited resources available for handling issues and by\nkeeping the list of open issues lean we can respond in a timely manner.\n\n## Supported Services\n\nPlease see [SERVICES.md](https://github.com/aws/aws-sdk-js/blob/master/SERVICES.md) for a list of supported services.\n\n## License\n\nThis SDK is distributed under the\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0),\nsee LICENSE.txt and NOTICE.txt for more information.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "buffer": "4.9.1",
            "events": "1.1.1",
            "ieee754": "1.1.13",
            "jmespath": "0.15.0",
            "querystring": "0.2.0",
            "sax": "1.2.1",
            "url": "0.10.3",
            "uuid": "3.3.2",
            "xml2js": "0.4.19"
          },
          "path": "/path/to/project/packages/models/node_modules/aws-sdk",
          "error": "[Circular]",
          "extraneous": false
        },
        "uuid": {
          "_args": [
            [
              "uuid@3.4.0",
              "/path/to/project/packages/models"
            ],
            [
              "uuid@3.4.0",
              "/path/to/project/packages/models"
            ]
          ],
          "_from": "uuid@3.4.0",
          "_id": "uuid@3.4.0",
          "_integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "_location": "/dynamodels/uuid",
          "_phantomChildren": {},
          "_requested": {
            "type": "version",
            "registry": true,
            "raw": "uuid@3.4.0",
            "name": "uuid",
            "escapedName": "uuid",
            "rawSpec": "3.4.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "3.4.0"
          },
          "_requiredBy": [
            "/dynamodels"
          ],
          "_resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "_spec": "3.4.0",
          "_where": "/path/to/project/packages/models",
          "bin": {
            "uuid": "bin/uuid"
          },
          "browser": {
            "./lib/rng.js": "./lib/rng-browser.js",
            "./lib/sha1.js": "./lib/sha1-browser.js",
            "./lib/md5.js": "./lib/md5-browser.js"
          },
          "bugs": {
            "url": "https://github.com/uuidjs/uuid/issues"
          },
          "commitlint": {
            "extends": [
              "@commitlint/config-conventional"
            ]
          },
          "contributors": [
            {
              "name": "Robert Kieffer",
              "email": "robert@broofa.com"
            },
            {
              "name": "Christoph Tavan",
              "email": "dev@tavan.de"
            },
            {
              "name": "AJ ONeal",
              "email": "coolaj86@gmail.com"
            },
            {
              "name": "Vincent Voyer",
              "email": "vincent@zeroload.net"
            },
            {
              "name": "Roman Shtylman",
              "email": "shtylman@gmail.com"
            }
          ],
          "description": "RFC4122 (v1, v4, and v5) UUIDs",
          "devDependencies": {
            "@commitlint/cli": "~8.2.0",
            "@commitlint/config-conventional": "~8.2.0",
            "eslint": "~6.4.0",
            "husky": "~3.0.5",
            "mocha": "6.2.0",
            "runmd": "1.2.1",
            "standard-version": "7.0.0"
          },
          "homepage": "https://github.com/uuidjs/uuid#readme",
          "husky": {
            "hooks": {
              "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
            }
          },
          "keywords": [
            "uuid",
            "guid",
            "rfc4122"
          ],
          "license": "MIT",
          "name": "uuid",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/uuidjs/uuid.git"
          },
          "scripts": {
            "lint": "eslint .",
            "md": "runmd --watch --output=README.md README_js.md",
            "prepare": "runmd --output=README.md README_js.md",
            "release": "standard-version",
            "test": "npm run lint && mocha test/test.js"
          },
          "version": "3.4.0",
          "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://secure.travis-ci.org/kelektiv/node-uuid.svg?branch=master)](http://travis-ci.org/kelektiv/node-uuid) #\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Support for version 1, 3, 4 and 5 UUIDs\n* Cross-platform\n* Uses cryptographically-strong random number APIs (when available)\n* Zero-dependency, small footprint (... but not [this small](https://gist.github.com/982883))\n\n[**Deprecation warning**: The use of `require('uuid')` is deprecated and will not be\nsupported after version 3.x of this module.  Instead, use `require('uuid/[v1|v3|v4|v5]')` as shown in the examples below.]\n\n## Quickstart - CommonJS (Recommended)\n\n```shell\nnpm install uuid\n```\n\nThen generate your uuid version of choice ...\n\nVersion 1 (timestamp):\n\n```javascript\nconst uuidv1 = require('uuid/v1');\nuuidv1(); // â¨ '2c5ea4c0-4067-11e9-8bad-9b1deb4d3b7d'\n\n```\n\nVersion 3 (namespace):\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv3('hello.example.com', uuidv3.DNS); // â¨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv3('http://example.com/hello', uuidv3.URL); // â¨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv3('Hello, World!', MY_NAMESPACE); // â¨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n\n```\n\nVersion 4 (random):\n\n```javascript\nconst uuidv4 = require('uuid/v4');\nuuidv4(); // â¨ '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed'\n\n```\n\nVersion 5 (namespace):\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // â¨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // â¨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // â¨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\n\n```\n\n## API\n\n### Version 1\n\n```javascript\nconst uuidv1 = require('uuid/v1');\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The default [node id](https://tools.ietf.org/html/rfc4122#section-4.1.6) (the last 12 digits in the UUID) is generated once, randomly, on process startup, and then remains unchanged for the duration of the process.\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n};\nuuidv1(v1options); // â¨ '710b962e-041c-11e1-9234-0123456789ab'\n\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0);  // â¨ \n  // [\n  //    44,  94, 164, 192,  64, 103,\n  //    17, 233, 146,  52, 155,  29,\n  //   235,  77,  59, 125\n  // ]\nuuidv1(null, arr, 16); // â¨ \n  // [\n  //    44, 94, 164, 192,  64, 103, 17, 233,\n  //   146, 52, 155,  29, 235,  77, 59, 125,\n  //    44, 94, 164, 193,  64, 103, 17, 233,\n  //   146, 52, 155,  29, 235,  77, 59, 125\n  // ]\n\n```\n\n### Version 3\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v3 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE);  // â¨ '042ffd34-d989-321c-ad06-f60826172424'\n\n```\n\n### Version 4\n\n```javascript\nconst uuidv4 = require('uuid/v4')\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255)\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n};\nuuidv4(v4options); // â¨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0);  // â¨ \n  // [\n  //   155, 29, 235,  77,  59,\n  //   125, 75, 173, 155, 221,\n  //    43, 13, 123,  61, 203,\n  //   109\n  // ]\nuuidv4(null, buffer, 16); // â¨ \n  // [\n  //   155,  29, 235,  77,  59, 125,  75, 173,\n  //   155, 221,  43,  13, 123,  61, 203, 109,\n  //    27, 157, 107, 205, 187, 253,  75,  45,\n  //   155,  93, 171, 141, 251, 189,  75, 237\n  // ]\n\n```\n\n### Version 5\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v5 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE);  // â¨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n\n```\n\n## Command Line\n\nUUIDs can be generated from the command line with the `uuid` command.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n\n$ uuid v1\n02d37060-d446-11e7-a9fa-7bdae751ebe1\n```\n\nType `uuid --help` for usage details\n\n## Testing\n\n```shell\nnpm test\n```\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
          "readmeFilename": "README.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/path/to/project/packages/models/node_modules/dynamodels/node_modules/uuid",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "description": "Typescript Overlay to easily manage AWS DynamoDB entities",
      "devDependencies": {
        "@commitlint/cli": "^8.2.0",
        "@commitlint/config-conventional": "^8.2.0",
        "@types/hapi__joi": "^15.0.3",
        "@types/jest": "^24.0.18",
        "@types/node": "^12.7.3",
        "@types/uuid": "^3.4.5",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "codecov": "^3.6.1",
        "commitizen": "^4.0.3",
        "cz-conventional-changelog": "^3.0.2",
        "eslint": "^6.4.0",
        "eslint-config-airbnb-base": "^14.0.0",
        "eslint-plugin-import": "^2.18.2",
        "husky": "^3.0.5",
        "jest": "^24.9.0",
        "kill-port": "^1.5.1",
        "prettier": "^1.18.2",
        "semantic-release": "^15.13.24",
        "serverless": "^1.51.0",
        "serverless-dynamodb-local": "^0.2.38",
        "ts-jest": "^24.0.2",
        "typescript": "^3.6.2"
      },
      "homepage": "https://github.com/MarioArnt/dynamodels#readme",
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
          "pre-commit": "npm run pre:commit"
        }
      },
      "license": "MIT",
      "main": "dist/src/index.js",
      "name": "dynamodels",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/MarioArnt/dynamodels.git"
      },
      "scripts": {
        "build": "npx tsc",
        "lint": "npx eslint '{src,test}**/*'",
        "pre:commit": "npm run prettier && npm run lint",
        "pre:test": "npx sls dynamodb install",
        "prettier": "npx prettier --write '{src,test}/**/*.{js,jsx,ts,tsx,json,yml}'",
        "semantic-release": "semantic-release",
        "test": "LOCAL_DYNAMODB_PORT=8022 npx jest --runInBand --config jest.config.json --coverage --detectOpenHandles"
      },
      "version": "1.4.2",
      "readme": "# Dynamodels\n\n[![npm version](https://badge.fury.io/js/dynamodels.svg)](https://badge.fury.io/js/dynamodels)\n[![Build Status](https://travis-ci.org/MarioArnt/dynamodels.svg?branch=master)](https://travis-ci.org/MarioArnt/dynamodels)\n[![codecov](https://codecov.io/gh/MarioArnt/dynamodels/branch/master/graph/badge.svg)](https://codecov.io/gh/MarioArnt/dynamodels)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n![Logo](https://raw.githubusercontent.com/MarioArnt/dynamodels/master/logo.svg?sanitize=true)\n\nDynamodels is a dead simple typescript overlay to easily manage DynamoDB CRUD operations.\n\nIt provides helpers for pagination, filtering, sorting and more !\n\n## Installation\n\nInstall `dynamodels` package from NPM public registry.\n\n- Using npm: `npm i dynamodels`\n\n- Using yarn: `yarn add dynamodels`\n\n## Getting started\n\nThe only thing you need to do is extending base model class `Model<T>` providing a type defintion for your entity, a table name, a hashkey, and optionally, a range key.\n\nHere is an example for table with a composite key:\n\n```typescript\n// Import dynamodels Base Model\nimport Model from 'dynamodels';\n\n// Type definition for your entity\ninterface IAlbum {\n  artist: string;\n  album: string;\n  year?: number;\n  genres?: string[];\n}\n\nexport class Album extends Model<IAlbum> {\n  // DynamoDB table name\n  protected tableName = 'my_albums';\n  // The keys of the table. Here it is a composite key (artist,album)\n  protected hashkey = 'artist';\n  protected rangekey = 'album';\n\n  // Optionally override constructor\n  constructor(item?: IAlbum) {\n    super(item);\n  }\n}\n```\n\nHere is another example for a table with a simple hashkey:\n\n```typescript\nimport Model from 'dynamodels';\n\ninterface IUser {\n  email: string;\n  // ..other fields\n}\n\nexport class User extends Model<IUser> {\n  protected tableName = 'my_users';\n  protected hashkey = 'email';\n}\n```\n\n## Create an entity\n\nYou can either call the create method or the save method.\n\nThe create method will throw if the hashkey or the hashkey/rangekey pair already exists.\n\nThe save method will overwrite the existing item.\n\n```typescript\nconst classic = new Album({\n  artist: 'Pink Floyd',\n  album: 'Dark Side of the Moon',\n  year: 1973,\n  genre: ['Rock', 'Psychadelic', 'Progressive'],\n});\n\n// Item will be saved\nawait album.save();\n\n// Will throw, as item already exists\ntry {\n  await album.create();\n} catch (e) {\n  if (e.name === 'EALREADYEXISTS') {\n    // Do something\n  }\n  // Do something else\n}\n```\n\nYou can also directly pass in argument the item to save.\n\n```typescript\nconst albums = new Album();\n\nawait album.create({\n  artist: 'Bob Marley & The Wailers',\n  album: \"Burnin'\",\n  year: 1973,\n  genre: ['Reggea'],\n});\n```\n\n### Model validation\n\nYou can use Joi objects to validate the data to save.\n\nIf object don't pass Joi validation an error is thrown.\n\nDefine your Joi schema in your model.\n\n```typescript\nexport class Album extends Model<IAlbum> {\n  protected tableName = 'my_albums';\n  protected hashkey = 'artist';\n  protected rangekey = 'album';\n\n  protected schema = Joi.object().keys({\n    artist: Joi.string().required(),\n    album: Joi.string().required(),\n    year: Joi.number().required(),\n    genres: Joi.array(Joi.string()).optional(),\n  });\n}\n```\n\nModel validation is automatically enforced when creating/saving entities:\n\n```typescript\n// Will throw as year must be a number\nawait album.save({\n  artist: 'Bob Marley & The Wailers',\n  album: \"Burnin'\",\n  year: '1973',\n  genre: ['Reggea'],\n});\n```\n\n## Get an item\n\nTable has a simple hashkey:\n\n```typescript\nconst users = new User();\nconst user = await user.get('some-user@domain.com'); // {email: some-user@domain.com, ...}\n```\n\nTable has a composite key:\n\n```typescript\nconst albums = new Album();\nconst nvrmind = await album.get('Nirvana', 'Nevermind'); // {artist: 'Nirvana', album: 'Nevermind', year: 1991...}\n```\n\n_Note:_ For table with a composite key, range key is mandatory. This will throw an exception.\n\n```typescript\nawait album.get('ACDC'); // Bad Request\n```\n\nYou can also just check if an item exists:\n\n```typescript\nconst albums = new Album();\nif (await album.exists('The Fugees', 'The Score')) {\n  return 'Kill me softly';\n}\n```\n\n## Scan table\n\n_Note_: It is not advised to use scan operations as it is time-consuming.\n\nTo retrieve all the entries of a table use a DynamoDB scan operation.\n\n```typescript\nconst albums = new Album();\nconst result = await albums.scan().exec();\n```\n\nThis will return the first 1MB of matching result and the last evaluated key.\n\nIf you want to retrieve all items beyond this 1MB limit, use `execAll`;\n\n```typescript\nconst result = await albums.scan().execAll();\n```\n\n### Paginate\n\nYou can use pagination helpers to get paginated result\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .scan()\n  .paginate({ size: 50 })\n  .exec();\n```\n\nThis will return the 50 first items and the last evaluated key. To fetch the next page, simply use:\n\n```typescript\nconst nextPage = await albums.scan().paginate(result.nextPage)exec();\n```\n\n### Pagination mode\n\nNatively, dynamoDB performs filter operations after having retrieved a page of result.\n\nThis leads to inconsistent pages size. Let's say you target a page size of 50. DynamoDB fetch the first page which length is 50. After applying filters on this first page you ends up with 13 results, and maybe 32 on the seconds, 7 on the third and so on.\n\nIf you want to force page size to be same despite filtering, you can use `PaginationMode.CONSTANT_PAGE_SIZE` option.\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .scan()\n  .filter({\n    year: 1969, // Summer of love\n  })\n  .paginate({\n    mode: PaginationMode.CONSTANT_PAGE_SIZE,\n    size: 50,\n  })\n  .exec();\n```\n\nUnder the hood, dynamodels will fetch as many pages as it is necessary to fill the 50 results matching filters.\n\n### Filtering scan operations\n\nA filtering helper method is also available.\n\nFor instance to retrieve albums released after 1973 (included), use the following query:\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .scan()\n  .filter({\n    year: ge(1973),\n  })\n  .exec();\n```\n\nThe `filter` accept an object where keys are the fields on which you to filter and value can be either:\n\n1. just the target value of the field, in this case the equal `EQ` operator is used\n2. a call to a filter operator helper method.\n\n_Note_: if you want to filter on a field which is also a [Amazon reserved keyword](https://docs.aws.amazon.com/fr_fr/amazondynamodb/latest/developerguide/ReservedWords.html), dynamodels with automatically escape it :sparkles:\n\n### Filter operators\n\nAvailable filter operators are:\n\n1. Equal: `eq(value: string | number | Buffer)`\n2. Not Equal: `neq(value: string | number | Buffer)`\n3. In: `isIn(values: Array<string | number | Buffer>)`\n4. Lesser than: `lt(value: string | number | Buffer)`\n5. Lesser or equal than: `le(value: string | number | Buffer)`\n6. Greater than: `gt(value: string | number | Buffer)`\n7. Greater or equal than: `le(value: string | number | Buffer)`\n8. Between boundaries: `between(lower: string | number | Buffer, upper: string | number | Buffer)`\n9. Contains substring `contains(value: string)`\n10. Do not contains substring: `notContains(value: string)`\n11. Begin with: `contains(value: string)`\n12. Is null: `isNull()`\n13. Is not null: `notNull()`\n\nFor string, utf-8 alphabetical order is used.\n\nFor binary, unsigned byte-wise comparison is used.\n\nCheck official DynamoDB documentation for more details.\n\n### Filter Condition Builder\n\nFor complex conditions, i.e. conditions with compositions of AND/OR or NOT clauses, dynamodels provides a fluid synthax to easily write them.\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .scan()\n  .filter(attr('year').lt(1970)\n    .or(attr('year').ge(1980))\n    .and(not(attr('artist').beginsWith('Bob')))\n  .exec();\n```\n\n## Query items\n\nThe library also provides helpers to build dynamoDB queries.\n\nThe synthax is simmilar to `scan` operations.\n\n### Key conditions\n\nKey conditions can be added with the `keys` helpers method.\n\nFor instance to retrieve all the album for a given artist.\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .query()\n  .filter({\n    artist: 'The Rolling Stones',\n  })\n  .exec();\n```\n\nYou can combine key condition if your table has a composite key.\n\nIn this case both condition are applied: it is a `AND` not a `OR`.\n\n### Key condition operators\n\nAvailable key conditions operators are:\n\n1. Equal: `eq(value: string | number | Buffer)`\n2. Lesser than: `lt(value: string | number | Buffer)`\n3. Lesser or equal than: `le(value: string | number | Buffer)`\n4. Greater than: `gt(value: string | number | Buffer)`\n5. Greater or equal than: `le(value: string | number | Buffer)`\n6. Between boundaries: `between(lower: string | number | Buffer, upper: string | number | Buffer)`\n7. Begin with: `contains(value: string)`\n\n### Key condition builder\n\nYou can use, if you prefer, the same fluid sythax than for filter conditions.\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .query()\n  .keys(attr('artist').eq('Bob Dylan'))\n  .exec();\n```\n\nJust be aware that:\n\n1. Key condition on hash key is mandatory.\n2. Only `eq()` operator can be used on hash key.\n3. You can only use `and` between hash key condition and optional range key condition.\n4. Only the operators listed above can be used on range key condition.\n\nOtherwise dynamoDB will throw a ValidationException. Dynamodels will not check these prerequisites for you.\n\n### Using indexes\n\nYou can also specify the index which is used.\n\nLet's say you have the following global secondary index called `year_index` on your albums table: `pk=artist, sk=year`.\n\nYou can retrieve all the albums from Deep Purple release before 1976:\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .query('year_index')\n  .keys({\n    artist: 'Deep Purple',\n    year: lt(1976),\n  })\n  .exec();\n```\n\nThe following synthax using index method is equivalent:\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .query()\n  .index('year_index')\n  .filter({\n    artist: 'Deep Purple',\n    year: lt(1976),\n  })\n  .exec();\n```\n\n### Paginate\n\nPagination work the same way than for scan operations.\n\n```typescript\nconst albums = new Album();\nconst result = await albums\n  .query()\n  .keys({ artist: 'Dire Straits' })\n  .paginate({ size: 50 })\n  .exec();\n```\n\nThis will return the 50 first items and the last evaluated key. To fetch the next page, simply use:\n\n```typescript\nconst nextPage = albums.query().keys({ artist: 'Dire Straits' }).paginate(result.nextPage)exec();\n```\n\n### Filtering\n\nFiltering process is the same for query and scan operations. [See above](filtering-scan-operations).\n\n### Sorting\n\nYou can use `sort` helpers to sort the result based on the range key.\n\n```typescript\nconst albums = new Album();\n\n// From oldest to newest\nconst result = await albums\n  .query('year_index')\n  .filter({\n    artist: 'James brown',\n  })\n  .sort('asc')\n  .exec();\n\n// From newest to oldest\nconst result = await albums\n  .query('year_index')\n  .filter({\n    artist: 'James brown',\n  })\n  .sort('desc')\n  .exec();\n```\n\n## Batch get\n\nTo perform a batch get operations, simply give the keys in argument:\n\n```typescript\nconst albums = new Album();\nconst result = await albums.batchGet([\n  { artist: 'Janis Joplin', album: \"I Got Dem Ol' Kozmic Blues Again Mama!\" },\n  { artist: 'Creedence Clearwater Revival', album: 'Willy and the Poor Boys' },\n  { artist: 'The Beatles', album: \"Sgt. Pepper's Lonely Hearts Club Band\" },\n  { artist: 'Queen', album: 'A Night at the Opera' },\n  { artist: 'The Clash', album: ' London Calling' },\n]);\n```\n\nBatch get operations are limited to 100 items.\n\nUnder the hood, if you give more than 100 keys or keys pair, dynamodels will split the operation in chunks of 100 items.\n\nFor instance a batchGet operation with 642 keys will be automatically split in 7 batches.\n\n## Update\n\nA wrapper around `putItem` operations is provided.\n\nThe synthax is the following:\n\nIf table has a simple hashkey:\n\n```typescript\nconst users = new User();\nawait user.update('some-user@domain.com', {\n  password: put(hashSync('n3wP4ssW0rd', 10)),\n  additional_details: remove(),\n});\n```\n\nTable has a composite key:\n\n```typescript\nconst albums = new Album();\nawait album.update('Jimi Hendrix', 'Are You Experienced', {\n  year: add(1967),\n  genre: put(['Rock', 'Blues', 'Psychadelic']),\n});\n```\n\nThe three helpers method, `add`, `remove`, and `put`provide convenient synthax to easily build `DoumentClient.UpdateAttributes` objects.\n\n## Delete\n\nTable has a simple hashkey:\n\n```typescript\nconst users = new User();\nawait user.delete('some-user@domain.com');\n```\n\nTable has a composite key:\n\n```typescript\nconst albums = new Album();\nawait album.delete('Nirvana', 'Nevermind');\n```\n",
      "readmeFilename": "README.md",
      "optionalDependencies": {},
      "_dependencies": {
        "@hapi/joi": "^15.1.1",
        "aws-sdk": "^2.520.0",
        "uuid": "^3.3.3"
      },
      "path": "/path/to/project/packages/models/node_modules/dynamodels",
      "error": "[Circular]",
      "extraneous": false
    },
    "lodash.pull": {
      "_args": [
        [
          "lodash.pull@4.1.0",
          "/path/to/project/packages/models"
        ],
        [
          "lodash.pull@4.1.0",
          "/path/to/project/packages/models"
        ]
      ],
      "_from": "lodash.pull@4.1.0",
      "_id": "lodash.pull@4.1.0",
      "_integrity": "sha1-YAYMxr1iW01FZ+wn3EXNG+nuwBI=",
      "_location": "/lodash.pull",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "lodash.pull@4.1.0",
        "name": "lodash.pull",
        "escapedName": "lodash.pull",
        "rawSpec": "4.1.0",
        "saveSpec": "[Circular]",
        "fetchSpec": "4.1.0"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/lodash.pull/-/lodash.pull-4.1.0.tgz",
      "_spec": "4.1.0",
      "_where": "/path/to/project/packages/models",
      "author": {
        "name": "John-David Dalton",
        "email": "john.david.dalton@gmail.com",
        "url": "http://allyoucanleet.com/"
      },
      "bugs": {
        "url": "https://github.com/lodash/lodash/issues"
      },
      "contributors": [
        {
          "name": "John-David Dalton",
          "email": "john.david.dalton@gmail.com",
          "url": "http://allyoucanleet.com/"
        },
        {
          "name": "Blaine Bublitz",
          "email": "blaine.bublitz@gmail.com",
          "url": "https://github.com/phated"
        },
        {
          "name": "Mathias Bynens",
          "email": "mathias@qiwi.be",
          "url": "https://mathiasbynens.be/"
        }
      ],
      "description": "The lodash method `_.pull` exported as a module.",
      "homepage": "https://lodash.com/",
      "icon": "https://lodash.com/icon.svg",
      "keywords": [
        "lodash-modularized",
        "pull"
      ],
      "license": "MIT",
      "name": "lodash.pull",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/lodash/lodash.git"
      },
      "scripts": {
        "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
      },
      "version": "4.1.0",
      "readme": "# lodash.pull v4.1.0\n\nThe [lodash](https://lodash.com/) method `_.pull` exported as a [Node.js](https://nodejs.org/) module.\n\n## Installation\n\nUsing npm:\n```bash\n$ {sudo -H} npm i -g npm\n$ npm i --save lodash.pull\n```\n\nIn Node.js:\n```js\nvar pull = require('lodash.pull');\n```\n\nSee the [documentation](https://lodash.com/docs#pull) or [package source](https://github.com/lodash/lodash/blob/4.1.0-npm-packages/lodash.pull) for more details.\n",
      "readmeFilename": "README.md",
      "dependencies": {},
      "devDependencies": {},
      "optionalDependencies": {},
      "_dependencies": {},
      "path": "/path/to/project/packages/models/node_modules/lodash.pull",
      "error": "[Circular]",
      "extraneous": false
    },
    "uuid": {
      "_args": [
        [
          "uuid@7.0.3",
          "/path/to/project/packages/models"
        ],
        [
          "uuid@7.0.3",
          "/path/to/project/packages/models"
        ]
      ],
      "_from": "uuid@7.0.3",
      "_id": "uuid@7.0.3",
      "_integrity": "sha512-DPSke0pXhTZgoF/d+WSt2QaKMCFSfx7QegxEWT+JOuHF5aWrKEn0G+ztjuJg/gG8/ItK+rbPCD/yNv8yyih6Cg==",
      "_location": "/uuid",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "uuid@7.0.3",
        "name": "uuid",
        "escapedName": "uuid",
        "rawSpec": "7.0.3",
        "saveSpec": "[Circular]",
        "fetchSpec": "7.0.3"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/uuid/-/uuid-7.0.3.tgz",
      "_spec": "7.0.3",
      "_where": "/path/to/project/packages/models",
      "bin": {
        "uuid": "dist/bin/uuid"
      },
      "browser": {
        "./dist/md5.js": "./dist/md5-browser.js",
        "./dist/rng.js": "./dist/rng-browser.js",
        "./dist/sha1.js": "./dist/sha1-browser.js",
        "./dist/esm-node/index.js": "./dist/esm-browser/index.js"
      },
      "bugs": {
        "url": "https://github.com/uuidjs/uuid/issues"
      },
      "commitlint": {
        "extends": [
          "@commitlint/config-conventional"
        ]
      },
      "description": "RFC4122 (v1, v4, and v5) UUIDs",
      "devDependencies": {
        "@babel/cli": "7.8.4",
        "@babel/core": "7.8.7",
        "@babel/preset-env": "7.8.7",
        "@commitlint/cli": "8.3.5",
        "@commitlint/config-conventional": "8.3.4",
        "@rollup/plugin-node-resolve": "7.1.1",
        "@wdio/browserstack-service": "5.18.7",
        "@wdio/cli": "5.18.7",
        "@wdio/jasmine-framework": "5.18.6",
        "@wdio/local-runner": "5.18.7",
        "@wdio/spec-reporter": "5.18.7",
        "@wdio/static-server-service": "5.16.10",
        "@wdio/sync": "5.18.7",
        "babel-eslint": "10.1.0",
        "babel-plugin-add-module-exports": "1.0.2",
        "bundlewatch": "0.2.6",
        "eslint": "6.8.0",
        "eslint-config-prettier": "6.10.0",
        "eslint-plugin-prettier": "3.1.2",
        "husky": "3.0.9",
        "jest": "25.1.0",
        "lint-staged": "10.0.8",
        "npm-run-all": "4.1.5",
        "prettier": "1.19.1",
        "rollup": "1.32.0",
        "rollup-plugin-terser": "5.2.0",
        "runmd": "1.3.2",
        "standard-version": "7.1.0"
      },
      "files": [
        "CHANGELOG.md",
        "CONTRIBUTING.md",
        "LICENSE.md",
        "README.md",
        "deprecate.js",
        "dist",
        "v1.js",
        "v3.js",
        "v4.js",
        "v5.js"
      ],
      "homepage": "https://github.com/uuidjs/uuid#readme",
      "husky": {
        "hooks": {
          "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
          "pre-commit": "lint-staged"
        }
      },
      "keywords": [
        "uuid",
        "guid",
        "rfc4122"
      ],
      "license": "MIT",
      "lint-staged": {
        "*.{js,jsx,json,md}": [
          "prettier --write"
        ],
        "*.{js,jsx}": [
          "eslint --fix"
        ]
      },
      "main": "dist/index.js",
      "module": "dist/esm-node/index.js",
      "name": "uuid",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/uuidjs/uuid.git"
      },
      "scripts": {
        "build": "./scripts/build.sh",
        "bundlewatch": "( node --version | grep -vq 'v12' ) || ( npm run pretest:browser && bundlewatch --config bundlewatch.config.json )",
        "ci": "npm run lint && npm run test && npm run prettier:check && npm run docs:diff && npm run bundlewatch",
        "docs": "( node --version | grep -q 'v12' ) && ( npm run build && runmd --output=README.md README_js.md )",
        "docs:diff": "( node --version | grep -vq 'v12' ) || ( npm run docs && git diff --quiet README.md )",
        "eslint:check": "eslint src/ test/ examples/ *.js",
        "eslint:fix": "eslint --fix src/ test/ examples/ *.js",
        "examples:browser-esmodules:build": "cd examples/browser-esmodules && npm install && npm run build",
        "examples:browser-rollup:build": "cd examples/browser-rollup && npm install && npm run build",
        "examples:browser-webpack:build": "cd examples/browser-webpack && npm install && npm run build",
        "lint": "npm run eslint:check && npm run prettier:check",
        "md": "runmd --watch --output=README.md README_js.md",
        "pretest": "npm run build",
        "pretest:browser": "npm run build && npm-run-all --parallel examples:**",
        "prettier:check": "prettier --ignore-path .prettierignore --check '**/*.{js,jsx,json,md}'",
        "prettier:fix": "prettier --ignore-path .prettierignore --write '**/*.{js,jsx,json,md}'",
        "release": "standard-version --no-verify",
        "test": "BABEL_ENV=commonjs node --throw-deprecation node_modules/.bin/jest test/unit/",
        "test:browser": "wdio run ./wdio.conf.js"
      },
      "sideEffects": false,
      "standard-version": {
        "scripts": {
          "postchangelog": "prettier --write CHANGELOG.md",
          "postcommit": "npm run build"
        }
      },
      "version": "7.0.3",
      "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://github.com/uuidjs/uuid/workflows/CI/badge.svg)](https://github.com/uuidjs/uuid/actions)\n\nFor the creation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDs\n\n- **Complete** - Support for RFC4122 version 1, 3, 4, and 5 UUIDs\n- **Cross-platform** - Support for ...\n  - CommonJS, [ECMAScript Modules](#ecmascript-modules) and UMD builds\n  - Node 8, 10, 12\n  - Chrome, Safari, Firefox, Edge, IE 11 browsers\n  - Webpack and rollup.js module bundlers\n  - [React Native](#react-native)\n- **Secure** - Cryptographically-strong random values\n- **Small** - Zero-dependency, small footprint, plays nice with \"tree shaking\" packagers\n- **CLI** - Includes the [`uuid` command line](#command-line) utility\n\n**Upgrading from uuid\\@3?** Your code is probably okay, but check out [Upgrading\nFrom uuid\\@3](#upgrading-from-uuid3) for details.\n\n## Quickstart - Node.js/CommonJS\n\n```shell\nnpm install uuid\n```\n\nOnce installed, decide which type of UUID you need. RFC4122 provides for four\nversions, all of which are supported here. In order of popularity, they are:\n\n- Version 4 (random) - Created from cryptographically-strong random values\n- Version 1 (timestamp) - Created from the system clock (plus random values)\n- Version 5 (namespace, SHA-1) - Created from user-supplied name and namespace strings\n- Version 3 (namespace, MD5) - Like version 5, above, but with a poorer hash algorithm\n\n**Unsure which one to use?** Use version 4 (random) unless you have a specific need for one of the other versions. See also [this FAQ](https://github.com/tc39/proposal-uuid#faq).\n\n### Create Version 4 (Random) UUIDs\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4(); // â¨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n```\n\n### Create Version 1 (Timestamp) UUIDs\n\n```javascript\nimport { v1 as uuidv1 } from 'uuid';\nuuidv1(); // â¨ '2c5ea4c0-4067-11e9-8b2d-1b9d6bcdbbfd'\n```\n\n### Create Version 3 or Version 5 (Namespace) UUIDs\n\n&#x26a0;&#xfe0f; Version 3 and Version 5 UUIDs are basically the same, differing\nonly in the underlying hash algorithm. Note that per the RFC, \"_If backward\ncompatibility is not an issue, SHA-1 [Version 5] is preferred_.\"\n\n&#x26a0;&#xfe0f; If using a custom namespace **be sure to generate your own\nnamespace UUID**. You can grab one [here](https://www.uuidgenerator.net/).\n\n```javascript\nimport { v5 as uuidv5 } from 'uuid'; // For version 5\nimport { v3 as uuidv3 } from 'uuid'; // For version 3\n\n// Using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // â¨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\nuuidv3('hello.example.com', uuidv3.DNS); // â¨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// Using predefined URL namespace (for URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // â¨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\nuuidv3('http://example.com/hello', uuidv3.URL); // â¨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// Using a custom namespace (See note, above, about generating your own\n// namespace UUID)\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // â¨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\nuuidv3('Hello, World!', MY_NAMESPACE); // â¨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n```\n\n## API\n\n### Version 4 (Random)\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 4 UUID.\n\n- `options` - (Object) Optional uuid state to apply. Properties may include:\n  - `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values. Takes precedence over `options.rng`.\n  - `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255). Alternative to `options.random`.\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10,\n    0x91,\n    0x56,\n    0xbe,\n    0xc4,\n    0xfb,\n    0xc1,\n    0xea,\n    0x71,\n    0xb4,\n    0xef,\n    0xe1,\n    0x67,\n    0x1c,\n    0x58,\n    0x36,\n  ],\n};\nuuidv4(v4options); // â¨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0); // â¨ \n  // [\n  //   155, 29, 235,  77,  59,\n  //   125, 75, 173, 155, 221,\n  //    43, 13, 123,  61, 203,\n  //   109\n  // ]\nuuidv4(null, buffer, 16); // â¨ \n  // [\n  //   155,  29, 235,  77,  59, 125,  75, 173,\n  //   155, 221,  43,  13, 123,  61, 203, 109,\n  //    27, 157, 107, 205, 187, 253,  75,  45,\n  //   155,  93, 171, 141, 251, 189,  75, 237\n  // ]\n```\n\n### Version 1 (Timestamp)\n\n```javascript\nimport { v1 as uuidv1 } from 'uuid';\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 1 (timestamp) UUID.\n\n- `options` - (Object) Optional uuid state to apply. Properties may include:\n  - `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID. See note 1.\n  - `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence. Default: An internally maintained clockseq is used.\n  - `msecs` - (Number) Time in milliseconds since unix Epoch. Default: The current time is used.\n  - `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n  - `random` - (Number[16]) Array of 16 numbers (0-255) to use for initialization of `node` and `clockseq` as described above. Takes precedence over `options.rng`.\n  - `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255). Alternative to `options.random`.\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The default [node id](https://tools.ietf.org/html/rfc4122#section-4.1.6) (the last 12 digits in the UUID) is generated once, randomly, on process startup, and then remains unchanged for the duration of the process.\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678,\n};\nuuidv1(v1options); // â¨ '710b962e-041c-11e1-9234-0123456789ab'\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0); // â¨ \n  // [\n  //    44,  94, 164, 192,  64,\n  //   103,  17, 233, 146,  52,\n  //    27, 157, 107, 205, 187,\n  //   253\n  // ]\nuuidv1(null, arr, 16); // â¨ \n  // [\n  //    44, 94, 164, 192,  64, 103,  17, 233,\n  //   146, 52,  27, 157, 107, 205, 187, 253,\n  //    44, 94, 164, 193,  64, 103,  17, 233,\n  //   146, 52,  27, 157, 107, 205, 187, 253\n  // ]\n```\n\n### Version 5 (Namespace)\n\n```javascript\nimport { v5 as uuidv5 } from 'uuid';\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 5 UUID.\n\n- `name` - (String | Array[]) \"name\" to create UUID with\n- `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE); // â¨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n```\n\n### Version 3 (Namespace)\n\n&#x26a0;&#xfe0f; Note: Per the RFC, \"_If backward compatibility is not an issue, SHA-1 [Version 5] is preferred_.\"\n\n```javascript\nimport { v3 as uuidv3 } from 'uuid';\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 3 UUID.\n\n- `name` - (String | Array[]) \"name\" to create UUID with\n- `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE); // â¨ '042ffd34-d989-321c-ad06-f60826172424'\n```\n\n## Command Line\n\nUUIDs can be generated from the command line using `uuid`.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n```\n\nThe default is to generate version 4 UUIDS, however the other versions are supported. Type `uuid --help` for details:\n\n```\n$ uuid --help\n\nUsage:\n  uuid\n  uuid v1\n  uuid v3 <name> <namespace uuid>\n  uuid v4\n  uuid v5 <name> <namespace uuid>\n  uuid --help\n\nNote: <namespace uuid> may be \"URL\" or \"DNS\" to use the corresponding UUIDs\ndefined by RFC4122\n```\n\n## ECMAScript Modules\n\nFor usage in the browser `uuid` provides support for [ECMAScript\nModules](https://www.ecma-international.org/ecma-262/6.0/#sec-modules) (ESM) that enable\ntree-shaking for bundlers, like [rollup.js](https://rollupjs.org/guide/en/#tree-shaking)\n([example](./examples/browser-rollup/)) and [webpack](https://webpack.js.org/guides/tree-shaking/)\n([example](./examples/browser-webpack/)).\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4(); // â¨ '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed'\n```\n\nThere is experimental native ESM support for [the browser](./examples/browser-esmodules/) but it\nshould not be considered ready for production use and may change or disappear in future releases.\n\nTo run the examples you must first create a dist build of this library in the module root:\n\n```\nnpm run build\n```\n\n## UMD Builds\n\nIf you want to load a minified UMD build directly in the browser you can use one of the popular npm\nCDNs:\n\n```html\n<script src=\"https://unpkg.com/uuid@latest/dist/umd/uuidv4.min.js\"></script>\n<script>\n  alert(uuidv4());\n</script>\n```\n\nor\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/uuid@latest/dist/umd/uuidv4.min.js\"></script>\n<script>\n  alert(uuidv4());\n</script>\n```\n\nAvailable bundles:\n\n- https://unpkg.com/uuid@latest/dist/umd/\n- https://cdn.jsdelivr.net/npm/uuid@latest/dist/umd/\n\n## \"getRandomValues() not supported\"\n\nThis error occurs in environments where the standard\n[`crypto.getRandomValues()`](https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues)\nAPI is not supported. This issue can be resolved by adding an appropriate polyfill:\n\n### React Native\n\n1. Install [`react-native-get-random-values`](https://github.com/LinusU/react-native-get-random-values#readme)\n1. Import it before `uuid`:\n\n```javascript\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\n```\n\n### Web Workers / Service Workers (Edge <= 18)\n\n[In Edge <= 18, Web Crypto is not supported in Web Workers or Service\nWorkers](https://caniuse.com/#feat=cryptography) and we are not aware of a polyfill (let us know if\nyou find one, please).\n\n## Upgrading From uuid\\@3\n\n\"_Wait... what happened to uuid\\@4 - uuid\\@6?!?_\"\n\nIn order to avoid confusion with RFC [version 4](#version-4-random) and [version\n5](#version-5-namespace) UUIDs, and a possible [version\n6](http://gh.peabody.io/uuidv6/), releases 4 thru 6 of this module have been\nskipped. Hence, how we're now at uuid\\@7.\n\n### Deep Requires Now Deprecated\n\nuuid\\@3 encouraged the use of deep requires to minimize the bundle size of\nbrowser builds:\n\n```javascript\nconst uuidv4 = require('uuid/v4'); // <== NOW DEPRECATED!\nuuidv4();\n```\n\nAs of uuid\\@7 this library now provides ECMAScript modules builds, which allow\npackagers like Webpack and Rollup to do \"tree-shaking\" to remove dead code.\nInstead, use the `import` syntax:\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n```\n\n... or for CommonJS:\n\n```javascript\nconst { v4: uuidv4 } = require('uuid');\nuuidv4();\n```\n\n### Default Export Removed\n\nuuid\\@3 was exporting the Version 4 UUID method as a default export:\n\n```javascript\nconst uuid = require('uuid'); // <== REMOVED!\n```\n\nThis usage pattern was already discouraged in uuid\\@3 and has been removed in uuid\\@7.\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
      "readmeFilename": "README.md",
      "dependencies": {},
      "optionalDependencies": {},
      "_dependencies": {},
      "path": "/path/to/project/packages/models/node_modules/uuid",
      "error": "[Circular]",
      "extraneous": false
    },
    "@project/shared": {
      "requiredBy": "^0.0.1",
      "missing": true,
      "optional": false
    },
    "@project/types": {
      "requiredBy": "^0.0.1",
      "missing": true,
      "optional": false
    }
  },
  "devDependencies": {
    "@types/hapi__joi": "^16.0.10",
    "@types/lodash.pull": "^4.1.6",
    "@types/uuid": "^7.0.2"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@project/models@0.0.1",
  "_shrinkwrap": {
    "name": "@project/models",
    "version": "0.0.1",
    "lockfileVersion": 1,
    "requires": true,
    "dependencies": {
      "@hapi/address": {
        "version": "2.1.4",
        "resolved": "https://registry.npmjs.org/@hapi/address/-/address-2.1.4.tgz",
        "integrity": "sha512-QD1PhQk+s31P1ixsX0H0Suoupp3VMXzIVMSwobR3F3MSUO2YCV0B7xqLcUw/Bh8yuvd3LhpyqLQWTNcRmp6IdQ=="
      },
      "@hapi/bourne": {
        "version": "1.3.2",
        "resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
        "integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA=="
      },
      "@hapi/hoek": {
        "version": "8.5.1",
        "resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-8.5.1.tgz",
        "integrity": "sha512-yN7kbciD87WzLGc5539Tn0sApjyiGHAJgKvG9W8C7O+6c7qmoQMfVs0W4bX17eqz6C78QJqqFrtgdK5EWf6Qow=="
      },
      "@hapi/joi": {
        "version": "15.1.1",
        "resolved": "https://registry.npmjs.org/@hapi/joi/-/joi-15.1.1.tgz",
        "integrity": "sha512-entf8ZMOK8sc+8YfeOlM8pCfg3b5+WZIKBfUaaJT8UsjAAPjartzxIYm3TIbjvA4u+u++KbcXD38k682nVHDAQ==",
        "requires": {
          "@hapi/address": "2.x.x",
          "@hapi/bourne": "1.x.x",
          "@hapi/hoek": "8.x.x",
          "@hapi/topo": "3.x.x"
        }
      },
      "@hapi/topo": {
        "version": "3.1.6",
        "resolved": "https://registry.npmjs.org/@hapi/topo/-/topo-3.1.6.tgz",
        "integrity": "sha512-tAag0jEcjwH+P2quUfipd7liWCNX2F8NvYjQp2wtInsZxnMlypdw0FtAOLxtvvkO+GSRRbmNi8m/5y42PQJYCQ==",
        "requires": {
          "@hapi/hoek": "^8.3.0"
        }
      },
      "@types/hapi__joi": {
        "version": "16.0.10",
        "resolved": "https://registry.npmjs.org/@types/hapi__joi/-/hapi__joi-16.0.10.tgz",
        "integrity": "sha512-SJawJYHi9Hwh4A3u7BEVYDAkcf9HGmUU32+ruVBAl0Q30LUC2RgDK1xPi3AJbhR6/CDN3a989SjJtR7OwA7eRA==",
        "dev": true
      },
      "@types/lodash": {
        "version": "4.14.149",
        "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.149.tgz",
        "integrity": "sha512-ijGqzZt/b7BfzcK9vTrS6MFljQRPn5BFWOx8oE0GYxribu6uV+aA9zZuXI1zc/etK9E8nrgdoF2+LgUw7+9tJQ==",
        "dev": true
      },
      "@types/lodash.pull": {
        "version": "4.1.6",
        "resolved": "https://registry.npmjs.org/@types/lodash.pull/-/lodash.pull-4.1.6.tgz",
        "integrity": "sha512-pK+efqDL+Of68Gqd81LfOdBAmB5X6+SHM6kkUTTFQWqOPAomn3BWJcASLrr998SRE7aYLnDVmM5wLLbS7T159A==",
        "dev": true,
        "requires": {
          "@types/lodash": "*"
        }
      },
      "@types/uuid": {
        "version": "7.0.2",
        "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-7.0.2.tgz",
        "integrity": "sha512-8Ly3zIPTnT0/8RCU6Kg/G3uTICf9sRwYOpUzSIM3503tLIKcnJPRuinHhXngJUy2MntrEf6dlpOHXJju90Qh5w==",
        "dev": true
      },
      "aws-sdk": {
        "version": "2.636.0",
        "resolved": "https://registry.npmjs.org/aws-sdk/-/aws-sdk-2.636.0.tgz",
        "integrity": "sha512-Zd/jed8qSNCm4pT2+8BuFfveouZrqUqmsOdhzpi3ZB3GYqV5eD+dmsl8OY+qvMgIJIFCB34a1SMucsC4zdBokg==",
        "requires": {
          "buffer": "4.9.1",
          "events": "1.1.1",
          "ieee754": "1.1.13",
          "jmespath": "0.15.0",
          "querystring": "0.2.0",
          "sax": "1.2.1",
          "url": "0.10.3",
          "uuid": "3.3.2",
          "xml2js": "0.4.19"
        },
        "dependencies": {
          "uuid": {
            "version": "3.3.2",
            "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
            "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="
          }
        }
      },
      "base64-js": {
        "version": "1.3.1",
        "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
        "integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g=="
      },
      "buffer": {
        "version": "4.9.1",
        "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",
        "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",
        "requires": {
          "base64-js": "^1.0.2",
          "ieee754": "^1.1.4",
          "isarray": "^1.0.0"
        }
      },
      "dynamodels": {
        "version": "1.4.2",
        "resolved": "https://registry.npmjs.org/dynamodels/-/dynamodels-1.4.2.tgz",
        "integrity": "sha512-IkdsTiJIi5h6eetF20QnLfAILkPBtDgilVWz8+YHVaAE1cloaIVo/zUDMO1iMidEKkL+6O5jY3AQt2OwAq+QTg==",
        "requires": {
          "@hapi/joi": "^15.1.1",
          "aws-sdk": "^2.520.0",
          "uuid": "^3.3.3"
        },
        "dependencies": {
          "uuid": {
            "version": "3.4.0",
            "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
            "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
          }
        }
      },
      "events": {
        "version": "1.1.1",
        "resolved": "https://registry.npmjs.org/events/-/events-1.1.1.tgz",
        "integrity": "sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ="
      },
      "ieee754": {
        "version": "1.1.13",
        "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
        "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg=="
      },
      "isarray": {
        "version": "1.0.0",
        "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
        "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
      },
      "jmespath": {
        "version": "0.15.0",
        "resolved": "https://registry.npmjs.org/jmespath/-/jmespath-0.15.0.tgz",
        "integrity": "sha1-o/Iiqarp+Wb10nx5ZRDigJF2Qhc="
      },
      "lodash.pull": {
        "version": "4.1.0",
        "resolved": "https://registry.npmjs.org/lodash.pull/-/lodash.pull-4.1.0.tgz",
        "integrity": "sha1-YAYMxr1iW01FZ+wn3EXNG+nuwBI="
      },
      "punycode": {
        "version": "1.3.2",
        "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
        "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
      },
      "querystring": {
        "version": "0.2.0",
        "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
        "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA="
      },
      "sax": {
        "version": "1.2.1",
        "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.1.tgz",
        "integrity": "sha1-e45lYZCyKOgaZq6nSEgNgozS03o="
      },
      "url": {
        "version": "0.10.3",
        "resolved": "https://registry.npmjs.org/url/-/url-0.10.3.tgz",
        "integrity": "sha1-Ah5NnHcF8hu/N9A861h2dAJ3TGQ=",
        "requires": {
          "punycode": "1.3.2",
          "querystring": "0.2.0"
        }
      },
      "uuid": {
        "version": "7.0.3",
        "resolved": "https://registry.npmjs.org/uuid/-/uuid-7.0.3.tgz",
        "integrity": "sha512-DPSke0pXhTZgoF/d+WSt2QaKMCFSfx7QegxEWT+JOuHF5aWrKEn0G+ztjuJg/gG8/ItK+rbPCD/yNv8yyih6Cg=="
      },
      "xml2js": {
        "version": "0.4.19",
        "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.19.tgz",
        "integrity": "sha512-esZnJZJOiJR9wWKMyuvSE1y6Dq5LCuJanqhxslH2bxM6duahNZ+HMpCLhBQGZkbX6xRf8x1Y2eJlgt2q3qo49Q==",
        "requires": {
          "sax": ">=0.6.0",
          "xmlbuilder": "~9.0.1"
        }
      },
      "xmlbuilder": {
        "version": "9.0.7",
        "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
        "integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0="
      }
    }
  },
  "optionalDependencies": {},
  "_dependencies": {
    "@project/shared": "^0.0.1",
    "@project/types": "^0.0.1",
    "dynamodels": "^1.4.2",
    "lodash.pull": "^4.1.0",
    "uuid": "^7.0.3"
  },
  "path": "/path/to/project/packages/models",
  "error": "[Circular]",
  "extraneous": false
}
