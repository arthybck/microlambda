{
  "name": "example-project",
  "version": "1.0.0",
  "author": "John Doe",
  "scripts": {
    "init": "cd scripts/test/ ; ./init-local.sh",
    "start": "npm run services:install && npm run services:compile && npm run services:stop && npm run services:start",
    "test": "npx run-p \"test:int -- {@}\" \"test:unit -- {@}\"",
    "test:int": "cd scripts/test/; cross-env-shell ./test-integration.sh",
    "test:unit": "cd scripts/test/; cross-env-shell ./test-unit.sh",
    "test:generate:all": "cd scripts/test/; ./generate-test.sh",
    "install:aws": "cd scripts/test/; ./install-aws.sh",
    "push": "cd scripts/test/ ; ./push-feature.sh",
    "deploy": "cd scripts/test/ ; ./deploy.sh",
    "deploy:coverage": "cd scripts/test/; ./deploy-reports.sh",
    "install:coverage": "cd scripts/test/; ./install-reports.sh",
    "install:dynamodb": "cd scripts/test/dynamodb/; ./install-dynamoDB.sh",
    "install:seed": "cd scripts/test/dynamodb/; ./install-seed.sh",
    "debug:seed:start": "cd scripts/test/dynamodb/; ./debug-start-dynamodb.sh",
    "debug:seed:gui": "cd scripts/test/dynamodb/; ./debug-GUI.sh",
    "debug:seed:tables": "cd scripts/test/dynamodb/; node ./debug-tables.js",
    "debug:seed:data": "cd scripts/test/dynamodb/; node ./debug-data.js",
    "debug:seed:count": "cd scripts/test/dynamodb/; node ./debug-all-data.js",
    "debug:seed:list": "cd scripts/test/dynamodb/; node ./debug-list.js",
    "debug:seed:delete": "cd scripts/test/dynamodb/; node ./debug-delete.js",
    "debug:seed:dynogels": "cd scripts/test/; . env.sh ; cd dynamodb; node ./debug-dynogels.js",
    "create:seed": "cd scripts/test/; ./generate-seed.sh",
    "deploy:doc": "cd scripts/test/ ; ./deploy-doc.sh",
    "doc": "cd scripts/test/ ; ./start-doc.sh",
    "test:sonar": "$(npm bin)/sonar-scanner -Dproject.settings=./test/config/sonar-project.properties -X",
    "local:test": "$(npm bin)/pipelines run test",
    "local:dev": "$(npm bin)/pipelines run dev",
    "local:sonar": "$(npm bin)/pipelines run sonarqube",
    "services:compile": "npx lerna run tsc",
    "services:install": "npx lerna bootstrap",
    "services:stop": "npx lerna run stop --stream  --parallel",
    "services:start": "npx lerna run start --stream  --parallel",
    "services:prettier": "npx prettier --write 'services/**/!(node_modules|dist|lib|.build)/{src,test}/**/*.{ts,tsx,json,yml}'",
    "services:lint": "npx tslint -c tslint.json 'services/*/{src,test}/**/*.ts'",
    "services:pretest": "npx lerna run pre:test",
    "services:test": "npx lerna run test --concurrency 4 --stream",
    "services:test:unit": "npx lerna run test:unit --concurrency 4 --stream",
    "services:test:functional": "npx lerna run test:functional --concurrency 4 --stream",
    "services:build": "npx lerna run build --concurrency 4 --stream",
    "services:package": "npx lerna run package --concurrency 4 --stream",
    "services:predeploy": "npx ts-node -P tsconfig.json ./scripts-services/deployment/src/apply-distant-script.ts",
    "services:deploy:before": "npx lerna run deploy:before --stream",
    "services:deploy": "npx lerna run deploy --concurrency 4 --stream",
    "services:postdeploy": "npx lerna run deploy:after --concurrency 4 --stream",
    "services:migrate": "NODE_OPTIONS=--max_old_space_size=4096 /usr/bin/time -l ./scripts/migrations/v4/runner.ts",
    "pre-commit": "npm run services:prettier && npm run services:lint --fix"
  },
  "babel": {
    "presets": [
      "env"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run pre-commit"
    }
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.40",
    "@types/chai": "^4.2.7",
    "@types/joi": "^14.3.4",
    "@types/mocha": "^5.2.7",
    "@types/pino": "^5.15.3",
    "aws-lambda": "^1.0.5",
    "aws-sdk": "^2.609.0",
    "babel-loader": "^8.0.6",
    "chai": "^4.2.0",
    "eslint": "^6.8.0",
    "husky": "^4.2.1",
    "lerna": "^3.20.2",
    "mocha": "^7.0.1",
    "nyc": "^15.0.0",
    "prettier": "^1.19.1",
    "serverless": "^1.61.3",
    "serverless-offline": "^5.12.1",
    "serverless-prune-plugin": "^1.4.1",
    "serverless-webpack": "^5.3.1",
    "ts-loader": "^6.2.1",
    "typescript": "^3.7.5",
    "webpack": "^4.41.5",
    "webpack-node-externals": "^1.7.2"
  },
  "dependencies": {
    "pino": "^5.16.0",
    "pino-pretty": "^3.5.0"
  }
}
