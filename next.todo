fix(server): serve correctly front-end
ci(gitlab): fix lint, build and make a pipeline, release master and tag
feat(core): transpile everything parallel (as order does not matter)
feat(plugin): only watch service source
feat(plugin): communicate transpile status and metrics over IPC
fix(core): cancel pending start tasks on compile error
fix(core): throw if compile error in build mode
fix(core): invalidate dependent packages checksums
fix(build): checksum caching for build cmd
fix(core): allow safe recompilation preemption

feat(plugin): manage create custom domain
refactor(deploy): move yaml refactoring in core
refactor: move test execution from cli to core
refactor(client): less hacky element dimensions
feat(core): add remove stack method to service
feat(cli): add remove command
feat(client): see last published version on client
perf(client): do not use CDN to serve fonts
ci: lint and test code on push
perf(client): event log lazy-loading
test(core): full-coverage
test(cli): full-coverage
feat(generator): create base project
feat(generator): create generator using yeoman
feat(cli): create new command
feat(core): add resources usage metrics
feat(server): forward resources usage to client
feat(cli): forward resources usage to server
feat(client): display resources usage
test(server): full-coverage
test(client): full-coverage
docs: motivation
docs: getting started
docs: configuration
docs: handling guide
docs: testing guide
docs: cookbook multiple regions
docs: custom domain
refactor: extend prettier eslint default configurations
perf: optimize npm packages with .npmignore
chore: add licence in each package
docs: add per package README
ci: add coverall or codecov
ci: add code climate or sonar
docs: add badges
ci: industrialize publish process
